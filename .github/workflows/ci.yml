name: Main CI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint
  build:
    runs-on: ${{ matrix.os }}
    needs: [ lint ]
    strategy:
      matrix:
        node-version: [18.2.0]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
  run_tests:
    needs: [ lint ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18.2.0]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm test
  docker:
    runs-on: ubuntu-latest
    needs: [ build,run_tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Cloud Coding Registry
        uses: docker/login-action@v2
        with:
          registry: rg.fr-par.scw.cloud/weworkstudio
          username: nologin
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: rg.fr-par.scw.cloud/weworkstudio/api-walletshare:prod


  deploy_server:
    name: Deploy - Docker - serveur
    runs-on: ubuntu-18.04
    needs: [ docker ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Trigger API Webhook reload service
        uses: joelwmale/webhook-action@2.1.0
        with:
          url: ${{ secrets.WEBHOOK_URL }}

