var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.774,1,3.487]],["body/entities/AddressEntity.html",[0,1.647,1,3.238,2,1.403,3,0.026,4,0.031,5,0.031,6,4.474,7,3.088,8,0.099,9,0.585,10,6.689,11,4.315,12,6.689,13,2.564,14,2.779,15,1.228,16,6.013,17,7.419,18,7.419,19,7.419,20,7.419,21,2.604,22,1.491,23,6.013,24,0.378,25,0.004,26,1.19,27,3.454,28,6.13,29,7.551,30,5.667,31,6.899,32,0.237,33,3.088,34,4.789,35,2.877,36,4.862,37,4.545,38,3.757,39,4.265,40,4.145,41,3.088,42,3.088,43,3.466,44,2.784,45,4.068,46,5.908,47,3.088,48,2.784,49,4.068,50,3.088,51,2.369,52,3.088,53,3.753,54,4.862,55,1.688,56,3.088,57,3.088,58,3.088,59,3.088,60,3.088,61,2.784,62,4.068,63,3.088,64,2.841,65,4.862,66,3.088,67,4.383,68,3.088,69,0.472,70,4.282,71,2.369,72,2.414,73,3.469,74,1.478,75,2.369,76,0.87,77,2.435,78,1.594,79,5.506,80,6.735,81,0.312,82,1.478,83,0.372,84,2.315,85,0.031,86,6.5,87,0.002,88,0.002]],["title/controllers/ApiLandingPageController.html",[89,2.703,90,4.382]],["body/controllers/ApiLandingPageController.html",[3,0.043,4,0.05,5,0.05,8,0.163,24,0.287,25,0.004,26,0.982,27,2.538,32,0.174,69,0.655,81,0.326,83,0.203,85,0.05,87,0.003,88,0.003,89,2.625,90,5.89,91,2.478,92,3.55,93,5.72,94,6.364,95,5.086,96,3.51,97,2.475,98,6.364,99,1.381,100,2.138,101,6.346,102,7.854,103,4.586,104,7.039,105,5.086,106,3.441,107,5.086,108,7.039,109,5.086,110,0.342,111,0.306,112,3.658,113,1.381,114,1.949,115,5.086,116,5.086,117,5.086,118,1.987,119,3.278,120,2.574,121,3.65,122,1.402,123,6.052,124,4.586,125,8.072,126,8.072,127,3.387,128,2.799,129,6.364,130,4.586,131,3.51,132,3.814,133,2.625,134,3.814,135,2.738,136,4.586,137,5.086,138,1.682,139,0.485,140,5.086,141,7.039,142,5.086,143,5.051,144,2.272,145,5.086,146,5.086,147,5.086,148,5.086]],["title/modules/ApiLandingPageModule.html",[149,1.258,150,3.926]],["body/modules/ApiLandingPageModule.html",[3,0.037,4,0.044,5,0.044,25,0.004,69,0.711,81,0.285,83,0.299,85,0.044,87,0.002,88,0.002,90,6.274,91,3.118,92,1.955,93,4.619,94,3.503,97,3.056,122,1.225,123,6.788,124,4.006,149,1.538,150,7.702,151,2.502,152,3.603,153,4.006,154,4.006,155,4.006,156,5.502,157,6.248,158,3.351,159,5.502,160,3.889,161,2.7,162,2.7,163,4.443,164,3.889,165,3.889,166,2.959,167,5.463,168,2.502,169,4.124,170,0.994,171,2.432,172,2.959,173,4.443,174,4.592,175,1.986,176,1.924,177,1.955,178,3.596,179,5.354,180,3.503,181,2.959,182,5.354,183,3.503,184,3.189,185,5.354,186,3.503,187,3.718,188,4.124,189,3.066,190,2.864,191,1.712,192,4.006,193,3.332,194,2.959,195,2.959,196,4.993,197,4.993,198,4.833,199,3.503,200,3.503,201,3.503,202,3.718,203,3.718,204,4.443,205,4.006,206,4.006]],["title/injectables/ApiLandingPageService.html",[123,3.926,207,1.888]],["body/injectables/ApiLandingPageService.html",[3,0.046,4,0.054,5,0.054,8,0.175,24,0.262,25,0.004,26,1.017,32,0.206,69,0.648,81,0.348,83,0.294,85,0.054,87,0.003,88,0.003,92,3.939,93,5.653,94,7.06,99,1.444,100,2.181,101,6.638,102,8.073,103,6.638,110,0.494,111,0.443,112,3.507,113,1.444,114,2.003,122,1.497,123,5.52,129,4.282,130,4.896,138,1.795,139,0.702,144,1.753,170,1.215,181,3.617,187,4.545,207,2.655,208,2.646,209,5.431,210,0.348,211,3.897,212,6.659,213,6.81,214,5.431,215,5.431,216,5.431,217,5.283,218,4.282,219,5.804,220,4.282,221,1.673,222,1.769,223,3.897,224,1.636,225,3.897]],["title/modules/ApiLogModule.html",[149,1.258,156,3.182]],["body/modules/ApiLogModule.html",[3,0.05,4,0.059,5,0.059,25,0.004,69,0.686,81,0.383,83,0.238,85,0.059,87,0.003,88,0.003,91,2.906,92,2.623,97,2.097,122,1.644,149,1.884,151,3.358,152,4.413,156,6.41,158,3.669,160,4.763,161,3.625,162,3.625,164,4.763,165,4.763,166,3.972,167,5.219,168,3.358,169,5.051,170,1.334,171,2.267,174,5.624,175,2.666,176,2.582,177,2.623,178,3.242,188,5.051,190,3.844,191,2.298,194,3.972,195,3.972,196,3.972,197,3.972,198,3.844,199,4.702,200,4.702,226,5.964,227,5.964,228,5.964,229,5.964,230,4.702]],["title/injectables/ApiLogService.html",[158,1.938,207,1.888]],["body/injectables/ApiLogService.html",[3,0.044,4,0.052,5,0.052,8,0.17,24,0.293,25,0.004,32,0.204,69,0.642,81,0.34,83,0.329,85,0.052,87,0.003,88,0.003,92,3.899,99,1.42,100,2.165,110,0.554,111,0.497,113,1.42,114,1.983,118,2.071,122,1.462,138,1.753,139,0.506,149,1.274,158,2.681,170,1.186,171,3.37,172,3.531,190,3.417,207,2.612,208,2.583,210,0.34,211,3.804,212,6.611,222,1.741,223,5.197,224,2.485,231,5.301,232,7.242,233,7.242,234,5.301,235,7.242,236,6.889,237,5.301,238,5.919,239,7.242,240,7.418,241,5.301,242,4.823,243,5.43,244,6.504,245,4.18,246,2.257,247,1.988,248,5.301,249,5.301]],["title/controllers/ApiMailController.html",[89,2.703,250,4.382]],["body/controllers/ApiMailController.html",[3,0.051,4,0.06,5,0.06,8,0.194,24,0.214,25,0.004,27,2.177,32,0.149,69,0.688,81,0.387,83,0.241,85,0.06,87,0.003,88,0.003,89,3.116,91,2.941,92,3.474,96,4.165,97,2.777,99,1.549,100,1.99,110,0.405,111,0.363,112,3.317,113,1.184,114,1.767,118,2.358,119,3.89,121,4.331,122,1.664,127,4.02,128,3.321,131,4.165,132,4.526,133,3.116,134,4.526,135,3.249,136,5.442,138,1.995,139,0.576,143,4.331,222,1.451,250,6.61,251,6.228,252,6.036,253,7.122,254,5.442,255,7.841,256,6.036,257,6.036,258,5.668,259,6.601,260,5.442,261,5.442,262,6.036,263,4.526,264,6.036,265,6.036]],["title/modules/ApiMailModule.html",[149,1.258,266,3.926]],["body/modules/ApiMailModule.html",[3,0.039,4,0.045,5,0.045,25,0.004,64,1.658,69,0.719,78,2.373,81,0.295,83,0.261,85,0.045,87,0.002,88,0.002,91,3.194,92,2.022,97,3.096,122,1.267,149,1.576,151,2.588,152,3.691,156,5.565,157,6.319,158,3.389,159,5.565,160,3.984,161,2.793,162,2.793,164,3.984,165,3.984,166,3.061,167,5.088,168,2.588,169,4.225,170,1.028,171,2.492,172,3.061,174,4.704,175,2.055,176,1.99,177,2.022,178,3.161,181,3.061,184,3.298,188,4.225,189,3.172,190,2.962,191,1.771,192,4.144,193,3.446,194,3.061,195,3.061,196,4.366,197,4.366,198,4.225,199,3.624,200,3.624,201,3.624,202,3.846,203,3.846,250,6.394,251,3.624,259,6.866,260,4.144,266,7.744,267,4.144,268,4.144,269,4.596,270,4.596,271,5.486,272,4.596,273,5.486,274,4.596,275,4.596,276,3.061,277,1.538,278,3.446]],["title/injectables/ApiMailService.html",[207,1.888,259,3.926]],["body/injectables/ApiMailService.html",[3,0.05,4,0.059,5,0.059,8,0.193,24,0.28,25,0.004,32,0.195,69,0.646,81,0.386,83,0.314,85,0.059,87,0.003,88,0.003,92,3.867,99,1.546,100,1.987,110,0.529,111,0.475,113,1.18,114,1.763,122,1.659,138,1.989,139,0.752,170,1.346,181,4.008,207,2.843,208,2.932,210,0.386,211,4.318,212,6.857,213,6.987,221,1.854,222,1.446,223,4.318,224,1.813,251,6.932,253,7.108,254,7.108,255,7.834,259,5.911,261,5.426,279,6.018,280,6.018,281,6.018,282,6.215,283,6.018]],["title/controllers/AppController.html",[89,2.703,284,4.382]],["body/controllers/AppController.html",[3,0.047,4,0.055,5,0.055,8,0.179,25,0.004,26,1.031,27,2.013,32,0.138,69,0.586,81,0.358,85,0.055,87,0.003,88,0.003,89,3.871,91,2.72,97,1.962,99,1.471,113,1.095,119,3.598,122,1.539,127,3.717,128,3.072,138,1.845,139,0.533,144,1.802,263,4.185,284,6.276,285,5.582,286,8.518,287,5.582,288,7.578,289,4.437,290,9.109,291,9.109,292,5.623,293,3.072,294,5.582,295,7.5,296,7.5,297,6.078,298,5.033,299,6.276,300,5.582,301,5.582,302,4.185,303,4.671,304,5.582,305,4.185,306,4.671,307,4.671,308,5.033,309,7.636,310,5.582,311,5.582,312,3.49,313,3.49,314,4.401,315,5.582]],["title/modules/AppModule.html",[149,1.258,316,3.926]],["body/modules/AppModule.html",[3,0.03,4,0.035,5,0.035,24,0.194,25,0.004,32,0.088,38,1.574,69,0.716,81,0.23,83,0.263,85,0.035,87,0.002,88,0.002,91,2.656,93,3.069,94,2.821,99,0.702,110,0.24,111,0.215,113,0.702,122,0.987,144,1.155,149,1.909,150,6.274,151,2.015,152,3.069,156,5.085,157,5.774,158,3.097,160,3.312,161,2.175,162,2.175,164,3.312,165,3.312,166,2.383,167,4.396,168,2.015,169,3.513,170,0.801,171,2.072,172,2.383,191,1.379,194,2.383,195,2.383,196,3.63,197,3.63,198,3.513,201,2.821,251,2.821,266,6.274,276,2.383,277,1.197,284,5.524,297,6.004,298,3.227,316,7.9,317,3.227,318,3.227,319,3.227,320,6.274,321,6.274,322,6.274,323,6.274,324,6.274,325,3.579,326,3.579,327,5.45,328,7.38,329,3.579,330,3.579,331,2.307,332,5.45,333,3.579,334,4.561,335,3.579,336,3.579,337,3.227,338,3.579,339,2.995,340,3.579,341,3.227,342,3.227,343,3.579,344,3.579,345,5.533,346,2.995,347,3.579,348,6.601,349,4.561,350,3.579,351,2.995,352,3.579,353,3.579,354,3.579,355,3.579,356,3.579,357,3.579,358,3.579,359,3.579,360,3.579,361,3.579,362,3.579,363,3.579,364,6.176,365,3.579,366,0.897,367,2.469,368,2.568,369,2.568,370,2.568,371,2.568,372,4.561,373,2.995,374,2.995,375,2.821,376,3.579,377,3.579]],["title/injectables/AppService.html",[207,1.888,297,3.757]],["body/injectables/AppService.html",[3,0.062,4,0.074,5,0.074,8,0.239,25,0.004,26,1.098,32,0.184,69,0.515,81,0.478,85,0.074,87,0.003,88,0.003,99,1.769,113,1.461,122,2.054,144,2.405,207,3.252,208,3.63,286,9.088,290,6.716,291,6.716,297,6.472,378,7.449,379,7.449]],["title/controllers/AppTestE2eController.html",[89,2.703,380,4.382]],["body/controllers/AppTestE2eController.html",[3,0.036,4,0.042,5,0.042,8,0.137,22,2.215,24,0.261,25,0.004,26,0.893,27,3.087,32,0.211,64,1.541,69,0.618,81,0.274,83,0.292,85,0.042,87,0.002,88,0.002,89,3.211,91,2.082,99,1.22,106,1.822,110,0.493,111,0.442,113,1.679,114,2.189,118,1.669,119,2.754,122,1.178,138,1.413,139,0.408,144,2.763,258,3.066,297,3.066,380,5.205,381,7.475,382,7.475,383,7.501,384,4.273,385,7.262,386,5.608,387,6.22,388,8.054,389,6.22,390,9.633,391,4.273,392,4.904,393,4.273,394,3.853,395,5.949,396,4.273,397,4.273,398,4.273,399,7.043,400,4.273,401,4.273,402,4.273,403,6.22,404,5.205,405,4.273,406,4.273,407,4.273,408,2.499,409,4.273,410,4.663,411,3.853,412,3.853,413,7.475,414,3.853,415,4.273,416,3.576,417,2.949,418,3.576,419,3.576,420,3.853,421,4.273,422,4.273,423,4.273,424,4.273,425,4.273,426,3.204,427,4.273,428,4.273,429,4.273,430,6.22,431,4.273,432,4.273,433,4.273]],["title/modules/AppTestE2eModule.html",[149,1.258,434,4.128]],["body/modules/AppTestE2eModule.html",[1,4.123,3,0.036,4,0.042,5,0.042,6,4.848,25,0.004,34,3.762,64,2.233,69,0.744,81,0.272,85,0.042,87,0.002,88,0.002,91,3.017,122,1.171,149,1.488,151,2.391,152,3.486,160,3.762,161,2.58,162,2.58,164,3.762,165,3.762,276,2.827,277,1.421,316,6.683,380,6.114,381,3.553,382,3.553,383,5.243,410,6.683,411,5.582,412,3.828,418,3.553,434,7.436,435,3.828,436,4.246,437,3.828,438,4.246,439,4.246,440,4.246,441,3.571,442,3.183,443,3.183,444,4.123,445,3.183,446,3.047,447,4.123,448,3.347,449,2.58,450,3.762,451,3.553,452,4.272,453,3.347,454,4.443,455,3.99,456,3.553,457,4.123,458,3.347,459,3.047,460,4.272,461,3.553,462,4.123,463,3.183,464,2.58,465,3.871,466,3.347,467,4.123,468,3.553,469,3.017,470,3.828,471,4.272,472,3.553,473,2.767,474,3.828,475,4.272,476,3.347,477,3.183,478,4.443,479,3.347,480,3.347,481,3.762,482,3.347,483,3.99,484,3.183,485,4.272,486,3.183,487,3.347,488,3.828]],["title/injectables/AppTestE2eService.html",[207,1.888,410,3.926]],["body/injectables/AppTestE2eService.html",[1,1.593,3,0.02,4,0.024,5,0.024,6,4.404,8,0.077,11,1.716,15,0.808,22,0.593,24,0.209,25,0.004,26,0.853,32,0.173,34,1.453,38,1.052,64,0.862,69,0.693,76,0.674,81,0.153,83,0.234,84,1.793,85,0.024,87,0.001,88,0.001,99,0.776,100,2.063,110,0.395,111,0.354,112,1.004,113,1.277,114,1.855,122,0.659,139,0.93,144,1.897,207,1.426,208,1.165,210,0.254,221,3.005,222,2.398,277,0.8,381,6.21,382,6.21,383,5.325,385,5.298,386,3.566,394,3.566,395,4.334,408,2.361,410,2.966,416,2.001,417,1.65,418,2.001,441,1.38,442,1.793,443,1.793,444,1.593,445,1.793,446,1.716,447,1.593,448,1.886,449,1.453,450,1.453,451,2.001,452,1.65,453,1.886,454,2.838,455,1.541,456,2.001,457,1.593,458,1.886,459,1.716,460,1.65,461,2.001,462,1.593,463,1.793,464,1.453,465,1.495,466,1.886,467,1.593,468,2.001,469,1.165,470,2.156,471,1.65,472,2.001,473,1.069,474,2.156,475,1.65,476,1.886,477,1.793,478,1.716,479,1.886,480,1.886,481,1.453,482,1.886,483,1.541,484,1.793,485,1.65,486,1.793,487,1.886,489,2.391,490,5.876,491,3.955,492,3.955,493,1.235,494,4.111,495,5.057,496,5.057,497,5.057,498,5.057,499,5.057,500,5.057,501,5.057,502,5.057,503,5.057,504,5.057,505,5.057,506,5.057,507,3.074,508,5.057,509,2.992,510,5.057,511,5.057,512,5.057,513,5.057,514,5.057,515,5.057,516,2.391,517,1.927,518,2.391,519,2.391,520,2.391,521,3.955,522,2.391,523,3.955,524,2.391,525,0.909,526,2.729,527,1.165,528,2.391,529,2.391,530,2.391,531,2.391,532,2.391,533,2.391,534,2.391,535,2.391,536,2.391,537,2.391,538,2.391,539,2.391,540,1.453,541,2.391,542,1.415,543,2.391,544,2.391,545,2.391,546,2.391,547,2.391,548,2.391,549,2.391,550,2.391,551,1.793,552,2.391,553,2.391,554,2.391,555,2.391,556,2.156,557,2.391,558,1.65,559,2.391,560,2.156,561,2.391,562,1.593,563,2.391,564,2.156,565,2.391,566,2.156,567,2.391,568,2.156,569,2.391,570,1.716,571,2.391,572,1.541,573,2.391,574,1.004,575,2.391,576,2.001,577,2.391,578,0.851,579,2.391,580,2.001,581,2.391,582,2.156,583,2.391,584,1.793,585,2.391,586,1.716,587,2.391,588,2.391,589,2.391,590,2.391,591,1.052,592,2.391,593,2.391,594,1.124,595,2.391,596,1.793,597,1.21,598,2.391,599,2.156,600,1.65,601,2.391,602,1.716]],["title/controllers/AuthController.html",[89,2.703,603,4.382]],["body/controllers/AuthController.html",[3,0.026,4,0.031,5,0.031,8,0.099,22,0.767,24,0.293,25,0.004,26,0.733,27,2.843,32,0.195,64,2.677,69,0.67,78,1.596,81,0.198,83,0.314,85,0.031,87,0.002,88,0.002,89,1.596,91,1.507,96,2.134,99,0.955,100,2.108,110,0.53,111,0.475,113,1.546,114,1.912,118,1.208,119,1.993,120,1.565,121,2.219,122,0.853,127,2.06,128,1.702,131,2.134,133,1.596,134,2.319,135,1.665,138,1.022,139,0.464,143,2.219,144,2.545,159,3.658,168,1.742,193,2.319,221,0.953,222,1.641,224,2.056,247,2.561,258,2.219,263,2.319,312,5.917,426,2.319,603,4.073,604,3.093,605,2.134,606,4.868,607,4.868,608,3.107,609,4.868,610,4.389,611,4.868,612,3.093,613,6.53,614,3.093,615,3.093,616,5.344,617,3.093,618,3.093,619,3.093,620,3.093,621,3.093,622,3.093,623,3.093,624,3.093,625,3.093,626,2.788,627,6.216,628,3.093,629,3.093,630,4.868,631,3.093,632,2.958,633,3.39,634,3.093,635,2.788,636,2.788,637,2.788,638,4.32,639,2.588,640,2.288,641,2.219,642,4.746,643,2.588,644,3.093,645,2.788,646,2.319,647,1.993,648,2.438,649,3.093,650,3.093,651,3.093,652,4.868,653,2.438,654,2.788,655,2.788,656,1.993,657,2.788,658,3.093,659,3.093,660,3.093,661,3.093,662,1.826,663,3.093,664,1.802,665,1.571,666,2.4,667,3.093,668,3.093,669,3.093,670,3.093,671,3.093,672,3.093,673,4.868,674,3.093,675,3.093,676,3.093,677,3.093,678,3.093,679,4.868,680,4.868,681,3.838,682,4.868,683,4.868,684,5.427,685,3.093,686,3.093,687,3.093,688,3.093,689,3.093,690,4.868,691,2.788,692,3.093,693,6.019,694,3.093,695,3.093,696,3.093,697,3.093,698,3.093,699,3.093,700,3.093,701,3.093,702,3.093,703,4.868,704,3.093,705,3.093,706,3.093,707,3.093,708,2.588,709,3.093,710,2.134,711,2.588,712,2.438,713,1.83]],["title/modules/AuthModule.html",[149,1.258,320,3.926]],["body/modules/AuthModule.html",[3,0.032,4,0.038,5,0.038,22,0.95,25,0.004,64,1.382,69,0.725,78,1.978,81,0.246,83,0.274,85,0.038,87,0.002,88,0.002,91,2.796,97,2.419,122,1.056,149,1.379,151,2.158,152,3.232,156,5.22,158,3.179,159,5.22,160,3.488,161,2.329,162,2.329,164,3.488,165,3.488,166,2.552,167,5.088,168,2.158,169,3.699,170,0.857,171,2.182,172,2.552,174,4.118,175,1.713,176,1.659,177,1.685,178,3.161,188,3.699,189,2.644,190,2.47,191,1.477,193,2.873,194,2.552,195,2.552,196,4.582,197,4.582,198,4.435,199,3.021,200,3.021,201,3.021,202,3.207,203,3.207,205,3.455,206,3.455,276,2.552,277,1.282,278,2.873,320,7.757,603,5.757,608,1.978,638,7.037,639,3.207,714,3.455,715,3.455,716,3.832,717,3.455,718,6.771,719,6.771,720,6.771,721,3.832,722,5.739,723,5.739,724,2.552,725,3.832,726,3.832,727,3.832,728,3.832,729,3.207,730,4.802,731,3.207,732,4.802,733,3.832,734,3.832,735,3.832,736,3.832,737,4.525,738,3.832,739,3.021,740,4.802,741,3.832,742,3.455,743,4.525,744,3.832,745,3.455,746,3.455,747,3.832,748,3.455,749,3.832,750,3.832]],["title/injectables/AuthService.html",[207,1.888,638,3.757]],["body/injectables/AuthService.html",[3,0.027,4,0.032,5,0.032,8,0.105,22,0.813,24,0.31,25,0.004,26,1.244,32,0.208,64,1.183,69,0.645,78,1.693,81,0.21,83,0.322,85,0.032,87,0.002,88,0.002,99,1,100,2.024,110,0.543,111,0.487,113,1.585,114,1.808,120,1.66,122,0.904,138,1.084,144,2.609,170,0.734,207,1.838,208,1.598,210,0.21,212,5.819,213,5.819,221,1.571,222,1.225,224,1.883,225,3.657,247,3.031,408,2.833,591,1.443,605,3.517,608,1.693,610,4.595,626,4.595,627,6.019,633,4.91,636,2.957,637,2.957,638,3.657,640,1.542,653,2.586,654,2.957,655,2.957,656,3.285,657,2.957,662,1.23,664,1.214,665,1.059,666,1.792,684,5.636,711,2.745,712,2.586,729,2.745,739,2.586,745,5.636,748,4.595,751,3.28,752,1.604,753,7.049,754,5.097,755,5.097,756,5.097,757,3.821,758,3.28,759,8.08,760,3.28,761,3.28,762,5.097,763,3.28,764,5.097,765,5.097,766,3.28,767,5.097,768,3.28,769,3.28,770,5.097,771,5.557,772,3.28,773,3.28,774,5.285,775,2.745,776,2.745,777,2.586,778,3.28,779,2.459,780,5.097,781,2.586,782,2.586,783,2.957,784,3.28,785,3.28,786,3.28,787,3.28,788,2.957,789,2.957,790,5.231,791,5.097,792,3.28,793,3.28,794,3.28,795,7.049,796,5.557,797,7.049,798,3.28,799,4.595,800,3.28,801,3.28,802,3.28,803,3.28,804,5.097,805,3.28,806,2.745,807,3.28,808,2.957]],["title/entities/CardEntity.html",[0,1.774,441,3.02]],["body/entities/CardEntity.html",[0,1.062,2,0.826,3,0.015,4,0.018,5,0.018,6,4.51,8,0.058,9,0.498,13,1.763,14,1.911,15,0.845,21,1.791,24,0.348,25,0.004,26,1.1,27,3.503,32,0.24,35,1.855,37,3.968,38,4.397,39,5.185,40,4.542,43,3.026,51,1.528,53,1.725,55,3.103,69,0.574,70,3.641,71,2.015,72,2.053,73,2.386,74,0.869,75,2.015,76,0.512,81,0.201,82,0.869,83,0.072,85,0.018,87,0.001,88,0.001,111,0.532,293,3.342,313,1.136,441,1.809,447,4.334,449,1.104,457,3.277,459,1.304,465,3.077,467,3.277,469,2.397,473,2.909,475,3.395,477,1.362,551,2.351,562,1.21,570,3.985,572,2.021,574,2.332,578,1.752,809,1.817,810,4.135,811,3.729,812,4.135,813,4.135,814,4.135,815,4.135,816,4.135,817,4.135,818,4.135,819,3.729,820,4.135,821,4.135,822,2.386,823,2.854,824,4.135,825,4.135,826,4.135,827,5.553,828,5.475,829,6.202,830,4.135,831,4.135,832,4.135,833,4.135,834,4.788,835,1.817,836,5.553,837,1.817,838,3.171,839,4.436,840,3.135,841,5.523,842,5.604,843,1.817,844,3.135,845,1.817,846,1.817,847,1.817,848,6.77,849,6.538,850,1.817,851,4.92,852,1.817,853,1.817,854,2.827,855,3.135,856,1.817,857,1.817,858,1.638,859,2.164,860,1.817,861,1.817,862,1.254,863,3.135,864,1.817,865,3.135,866,1.817,867,1.817,868,2.021,869,2.472,870,3.135,871,1.96,872,1.817,873,1.817,874,2.25,875,3.135,876,1.817,877,1.817,878,3.135,879,1.817,880,1.817,881,3.135,882,1.817,883,1.817,884,3.135,885,1.817,886,1.817,887,3.832,888,1.817,889,1.817,890,1.817,891,1.817,892,3.729,893,1.817,894,3.729,895,1.817,896,3.729,897,1.817,898,2.472,899,2.968,900,3.579,901,2.088,902,1.171,903,1.521,904,4.135,905,1.521,906,4.135,907,1.638,908,1.817,909,1.817,910,2.351,911,3.135,912,1.433,913,1.254,914,1.638,915,1.817,916,1.433,917,1.521,918,1.817,919,1.521,920,3.415,921,5.553,922,1.817,923,0.902,924,1.817,925,1.817,926,1.817,927,1.817,928,0.92]],["title/entities/CompanyEmployeeEntity.html",[0,1.774,444,3.487]],["body/entities/CompanyEmployeeEntity.html",[0,1.56,2,2.093,3,0.039,4,0.046,5,0.046,6,4.455,8,0.148,9,0.921,11,6.576,13,3.262,14,3.535,15,1.562,21,3.313,24,0.335,25,0.004,26,0.799,27,3.401,32,0.233,34,5.068,35,3.885,38,2.888,43,4.031,51,3.199,55,2.28,69,0.577,70,2.245,71,3.728,72,3.798,73,4.413,74,2.204,75,3.728,76,1.298,77,3.632,81,0.296,85,0.046,87,0.002,88,0.002,293,2.535,444,4.373,445,7.229,473,3.728,578,3.139,597,3.872,848,5.177,849,5.177,902,2.969,920,4.549,923,2.287,928,2.331,929,4.607,930,6.566,931,4.607,932,4.607,933,4.607,934,4.607,935,6.566,936,4.607,937,6.898,938,4.607,939,4.607,940,2.881,941,4.607,942,4.607,943,1.13,944,1.877,945,1.357,946,4.607]],["title/entities/CompanyEntity.html",[0,1.774,34,3.182]],["body/entities/CompanyEntity.html",[0,1.444,1,4.134,2,1.19,3,0.022,4,0.026,5,0.026,6,4.58,8,0.084,9,0.649,10,4.858,11,3.059,12,4.858,13,2.297,14,2.49,15,1.1,21,2.333,24,0.35,25,0.004,26,1.22,27,3.552,32,0.243,34,2.59,35,1.55,37,5.048,38,4.487,39,3.882,40,4.45,43,3.221,51,2.077,55,0.91,67,4.858,69,0.507,70,4.349,71,2.625,72,2.675,73,2.459,74,1.254,75,2.625,76,0.738,81,0.168,83,0.248,84,5.123,85,0.026,87,0.002,88,0.002,111,0.609,289,3.188,444,4.877,446,1.88,465,4.826,469,3.568,473,3.273,570,4.455,822,3.108,834,6.899,838,2.747,841,4.134,842,4.284,862,2.941,874,1.88,898,3.36,899,3.059,900,3.473,901,3.588,902,1.689,913,1.808,916,2.065,920,3.635,923,1.301,928,1.326,943,0.643,944,1.322,945,0.772,947,2.62,948,4.858,949,5.388,950,4.509,951,3.108,952,5.388,953,5.388,954,5.388,955,4.858,956,5.388,957,4.858,958,2.62,959,4.262,960,2.62,961,2.62,962,3.843,963,2.62,964,2.62,965,2.62,966,2.62,967,2.62,968,2.62,969,2.62,970,4.262,971,2.62,972,2.62,973,2.62,974,2.62,975,2.62,976,4.262,977,2.62,978,2.62,979,3.843,980,2.62,981,2.62,982,2.62,983,2.62,984,2.62,985,2.362,986,2.62]],["title/entities/ConnectedCardEntity.html",[0,1.774,447,3.487]],["body/entities/ConnectedCardEntity.html",[0,2.167,2,2.019,3,0.037,4,0.044,5,0.044,6,4.413,8,0.143,9,0.903,13,3.197,14,3.465,15,1.531,21,3.246,24,0.332,25,0.004,26,0.779,27,3.365,32,0.23,35,3.786,38,1.955,39,5.129,40,5.502,43,3.982,51,3.118,69,0.519,71,3.653,72,3.722,73,4.325,74,2.126,75,3.653,76,1.252,81,0.285,83,0.177,85,0.044,87,0.002,88,0.002,441,5.767,447,4.261,448,7.529,449,2.7,450,4.985,464,2.7,556,4.006,558,6.439,862,3.066,901,4.261,920,4.495,923,2.206,928,2.249,943,1.09,944,1.84,945,1.309,987,4.443,988,7.498,989,7.498,990,6.398,991,4.443,992,6.398,993,4.443,994,4.006,995,4.443,996,4.443,997,4.443,998,4.443,999,4.443,1000,5.045]],["title/entities/ConversationEntity.html",[0,1.774,450,3.182]],["body/entities/ConversationEntity.html",[0,2.016,2,1.829,3,0.034,4,0.04,5,0.04,6,4.523,8,0.129,9,0.853,13,3.02,14,3.273,15,1.446,21,3.067,24,0.343,25,0.004,26,0.953,27,3.48,32,0.238,37,3.433,38,2.618,43,3.846,51,2.9,69,0.605,70,3.451,71,3.451,72,3.516,74,1.926,75,3.451,76,1.134,81,0.258,83,0.16,85,0.04,87,0.002,88,0.002,292,5.311,447,5.823,449,2.446,450,3.617,455,5.636,462,5.823,464,2.446,467,5.212,483,5.044,558,2.777,562,4.717,572,3.836,586,4.271,819,6.386,838,5.044,839,6.386,862,2.777,900,5.384,901,3.964,903,3.367,917,3.367,920,4.341,923,1.998,928,2.036,1001,4.024,1002,7.083,1003,5.927,1004,5.952,1005,4.024,1006,4.024,1007,4.024,1008,4.024,1009,5.952,1010,4.024,1011,4.024,1012,5.952,1013,4.024,1014,5.952,1015,4.024,1016,5.952,1017,4.024,1018,4.024,1019,3.173,1020,3.628,1021,3.628]],["title/classes/CreateLogCommand.html",[81,0.336,244,4.128]],["body/classes/CreateLogCommand.html",[3,0.027,4,0.032,5,0.032,8,0.105,9,0.614,24,0.365,25,0.004,26,1.222,27,3.566,32,0.246,37,5.655,38,4.47,69,0.433,81,0.21,83,0.131,85,0.032,87,0.002,88,0.002,92,4.416,110,0.22,111,0.615,118,2.442,128,1.805,210,0.21,244,4.018,246,1.948,302,4.687,305,4.687,313,3.908,665,2.018,681,6.874,868,3.285,887,2.263,943,1.251,944,1.873,945,0.966,1022,0.214,1023,10.04,1024,3.28,1025,5.636,1026,5.636,1027,5.636,1028,5.636,1029,4.687,1030,5.636,1031,5.636,1032,5.636,1033,5.636,1034,4.928,1035,3.28,1036,7.367,1037,3.28,1038,5.478,1039,2.957,1040,3.28,1041,3.28,1042,6.388,1043,7.861,1044,3.28,1045,4.595,1046,3.28,1047,3.28,1048,6.883,1049,3.28,1050,4.313,1051,3.28,1052,3.28,1053,3.28,1054,3.28,1055,3.28,1056,3.28,1057,3.28,1058,3.28,1059,3.28,1060,3.28,1061,3.517,1062,2.957]],["title/classes/CreateLogCommandHandler.html",[81,0.336,188,3.375]],["body/classes/CreateLogCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.144,9,0.774,24,0.322,25,0.004,26,1.001,32,0.224,69,0.647,81,0.287,83,0.3,85,0.044,87,0.002,88,0.002,92,4.112,99,1.261,100,1.701,110,0.432,111,0.387,113,0.877,114,1.438,122,1.233,139,0.965,144,1.444,168,2.519,170,1.001,188,4.144,189,6.451,190,6.166,210,0.287,221,3.145,238,3.21,244,6.487,366,1.611,743,5.069,1022,0.291,1038,5.401,1061,3.087,1062,4.033,1063,1.233,1064,3.42,1065,6.786,1066,6.786,1067,6.786,1068,5.643,1069,2.289,1070,3.527,1071,6.487,1072,4.282,1073,5.069,1074,3.527,1075,3.21,1076,3.743,1077,6.169,1078,2.921,1079,4.033,1080,3.259,1081,2.033,1082,3.527,1083,4.473,1084,3.527,1085,3.527,1086,4.473,1087,4.033,1088,5.643,1089,4.473,1090,5.38,1091,4.033,1092,4.033,1093,4.033,1094,4.033,1095,3.743,1096,4.033,1097,3.743,1098,4.033,1099,4.473,1100,4.473]],["title/classes/CreateLogDto.html",[81,0.336,236,3.613]],["body/classes/CreateLogDto.html",[3,0.027,4,0.031,5,0.031,8,0.102,9,0.598,24,0.365,25,0.004,26,1.23,27,3.573,32,0.247,37,5.616,38,4.447,69,0.423,81,0.203,83,0.126,85,0.031,87,0.002,88,0.002,92,4.42,110,0.213,111,0.627,118,2.39,128,1.745,149,1.47,210,0.203,236,3.426,246,1.907,302,4.587,305,4.587,313,3.825,665,1.975,681,6.796,868,3.2,887,2.188,943,1.218,944,1.844,945,0.934,1022,0.207,1025,5.515,1026,5.515,1027,5.515,1028,5.515,1029,4.587,1030,5.515,1031,5.515,1032,5.515,1033,5.515,1034,4.823,1036,7.396,1038,5.392,1039,2.859,1042,6.287,1043,7.772,1045,4.476,1048,6.774,1050,4.221,1061,3.426,1101,7.211,1102,2.859,1103,2.859,1104,3.171,1105,3.171,1106,3.171,1107,3.171,1108,3.171,1109,3.171,1110,3.171,1111,3.171,1112,3.171,1113,3.171,1114,3.171,1115,3.171,1116,3.171,1117,3.171,1118,3.171,1119,3.171,1120,3.171,1121,3.171,1122,3.171]],["title/classes/CreateMethodLogDto.html",[81,0.336,240,4.382]],["body/classes/CreateMethodLogDto.html",[3,0.055,4,0.064,5,0.064,8,0.209,9,0.998,24,0.341,25,0.004,26,1.235,32,0.237,81,0.417,83,0.259,85,0.064,87,0.003,88,0.003,92,4.365,110,0.437,111,0.392,118,3.565,149,2.193,210,0.417,240,6.938,246,3.254,943,2.034,944,2.435,945,1.916,1022,0.424,1101,7.122,1102,5.866,1103,5.866,1123,6.506,1124,6.506,1125,6.506]],["title/classes/CreateOccupationCommand.html",[81,0.336,1126,4.128]],["body/classes/CreateOccupationCommand.html",[3,0.058,4,0.068,5,0.068,8,0.223,9,1.039,24,0.307,25,0.004,32,0.213,69,0.48,81,0.445,83,0.276,85,0.068,87,0.003,88,0.003,110,0.466,111,0.417,139,0.897,210,0.445,242,4.618,752,1.683,943,2.118,944,2.413,1022,0.452,1126,6.804,1127,9.396,1128,5.199,1129,8.13,1130,6.252,1131,6.252,1132,5.802,1133,3.653]],["title/classes/CreateOccupationCommandHandler.html",[81,0.336,1134,4.382]],["body/classes/CreateOccupationCommandHandler.html",[3,0.036,4,0.043,5,0.043,8,0.139,24,0.223,25,0.004,32,0.155,69,0.679,76,1.222,81,0.403,82,2.076,83,0.295,85,0.043,87,0.002,88,0.002,99,1.233,100,1.672,110,0.422,111,0.379,113,0.851,114,1.407,139,0.6,144,2.03,170,0.97,175,1.939,176,1.878,177,1.908,178,1.795,210,0.403,221,1.938,222,1.511,224,2.79,247,2.774,277,1.451,366,1.575,469,4.196,494,3.083,507,3.821,525,1.649,540,2.636,574,1.821,632,3.821,662,1.627,664,2.327,665,1.4,666,2.852,710,4.339,871,3.932,1022,0.283,1063,1.196,1064,3.361,1069,2.239,1075,3.113,1078,2.857,1080,1.878,1081,1.971,1082,3.42,1126,6.395,1134,6.19,1135,7.396,1136,5.597,1137,2.889,1138,3.722,1139,3.63,1140,2.796,1141,4.339,1142,3.252,1143,3.42,1144,3.42,1145,3.42,1146,2.857,1147,4.958,1148,3.252,1149,2.796,1150,4.338,1151,3.911,1152,3.911,1153,3.911,1154,3.911,1155,3.911,1156,4.338,1157,3.911,1158,4.338,1159,4.338,1160,3.113,1161,4.338,1162,3.113,1163,3.63,1164,2.796,1165,4.338,1166,3.911,1167,2.723,1168,2.239,1169,4.338,1170,2.889,1171,3.42,1172,2.039,1173,3.252]],["title/classes/CreateOccupationDto.html",[81,0.336,1129,4.128]],["body/classes/CreateOccupationDto.html",[3,0.059,4,0.07,5,0.07,8,0.228,9,1.052,24,0.311,25,0.004,26,1.064,32,0.216,81,0.454,83,0.395,85,0.07,87,0.003,88,0.003,110,0.476,111,0.426,139,0.905,210,0.454,752,1.699,943,2.145,944,2.431,1022,0.461,1129,6.893,1133,3.731,1174,9.485,1175,6.384,1176,6.384,1177,6.384]],["title/classes/CreateOccupationEvent.html",[81,0.336,1147,4.128]],["body/classes/CreateOccupationEvent.html",[3,0.051,4,0.06,5,0.06,8,0.196,9,0.956,24,0.333,25,0.004,26,1.213,32,0.231,55,2.759,81,0.391,83,0.243,85,0.06,87,0.003,88,0.003,110,0.409,111,0.367,139,0.993,149,2.125,210,0.391,246,2.757,574,3.936,752,1.865,943,1.95,944,2.3,1022,0.397,1133,3.209,1147,6.265,1168,4.565,1178,9.722,1179,4.567,1180,4.567,1181,3.239,1182,6.265,1183,5.492,1184,4.567,1185,4.567]],["title/classes/CreateOccupationEventHandler.html",[81,0.336,1186,4.382]],["body/classes/CreateOccupationEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,574,2.512,1022,0.39,1063,1.649,1147,7.338,1148,4.485,1149,5.999,1171,4.716,1186,6.571,1187,8.766,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1196,5.982,1197,2.764,1198,2.812,1199,2.812,1200,4.485]],["title/classes/CreateOccupationRequest.html",[81,0.336,1201,4.128]],["body/classes/CreateOccupationRequest.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.394,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1201,6.878,1202,9.47,1203,6.362,1204,6.362,1205,6.362]],["title/classes/CreateProfileCommand.html",[81,0.336,1206,4.128]],["body/classes/CreateProfileCommand.html",[3,0.052,4,0.061,5,0.061,8,0.2,9,0.97,24,0.336,25,0.004,26,1.15,32,0.233,69,0.431,81,0.399,83,0.248,85,0.061,87,0.003,88,0.003,110,0.418,111,0.375,139,0.997,210,0.399,242,4.144,408,3.591,752,1.873,943,1.977,944,2.402,945,1.833,1022,0.405,1206,6.353,1207,9.788,1208,4.466,1209,7.906,1210,7.045,1211,7.265,1212,5.611,1213,5.611,1214,5.611]],["title/classes/CreateProfileCommandHandler.html",[81,0.336,1215,4.382]],["body/classes/CreateProfileCommandHandler.html",[3,0.033,4,0.039,5,0.039,8,0.126,15,1.194,22,1.732,24,0.208,25,0.004,32,0.144,64,1.417,69,0.674,76,1.107,78,2.028,81,0.375,82,1.88,83,0.233,85,0.039,87,0.002,88,0.002,99,1.147,100,1.578,110,0.393,111,0.352,113,0.771,114,1.562,139,0.738,144,1.888,170,0.879,210,0.375,221,2.384,222,1.988,224,2.779,247,3.251,277,1.315,366,1.465,469,2.849,473,2.614,494,3.647,507,4.245,509,3.46,517,3.403,525,1.494,527,1.915,540,2.388,542,2.325,578,1.399,632,2.388,662,1.474,664,2.585,665,1.269,666,2.72,822,3.373,871,4.367,913,2.712,1022,0.256,1063,1.083,1064,3.174,1069,2.082,1072,2.617,1078,2.657,1080,1.701,1081,1.786,1082,3.098,1138,3.608,1148,2.946,1160,2.82,1162,2.82,1164,2.533,1167,1.701,1168,3.019,1170,2.617,1206,6.099,1215,4.893,1216,6.984,1217,4.837,1218,2.388,1219,3.929,1220,4.367,1221,2.617,1222,2.325,1223,2.82,1224,2.617,1225,1.786,1226,2.325,1227,2.712,1228,3.098,1229,4.61,1230,2.267,1231,3.929,1232,3.098,1233,3.218,1234,2.946,1235,2.533,1236,2.614,1237,3.929,1238,3.929,1239,3.929,1240,3.543,1241,3.929,1242,3.543,1243,3.543,1244,3.929,1245,3.929,1246,3.288,1247,3.929,1248,3.929,1249,3.929,1250,2.533]],["title/classes/CreateProfileDto.html",[81,0.336,1209,4.128]],["body/classes/CreateProfileDto.html",[3,0.055,4,0.065,5,0.065,8,0.21,9,1.002,24,0.325,25,0.004,26,1.013,32,0.226,69,0.453,81,0.42,83,0.261,85,0.065,87,0.003,88,0.003,110,0.44,111,0.394,139,0.97,210,0.42,752,1.821,940,4.095,943,2.043,944,2.44,945,1.929,1022,0.427,1209,6.564,1251,9.632,1252,5.163,1253,5.899,1254,5.723,1255,7.506,1256,5.899,1257,5.48,1258,4.361]],["title/classes/CreateProfileEvent.html",[81,0.336,1229,4.128]],["body/classes/CreateProfileEvent.html",[3,0.05,4,0.059,5,0.059,8,0.192,9,0.945,24,0.331,25,0.004,26,1.133,32,0.23,55,2.726,69,0.414,81,0.384,83,0.239,85,0.059,87,0.003,88,0.003,110,0.402,111,0.36,139,0.99,149,2.107,210,0.384,246,2.732,578,3.314,752,1.859,943,1.927,944,2.372,945,1.762,1022,0.39,1181,3.201,1182,6.191,1220,6.203,1221,3.984,1229,6.191,1259,9.666,1260,4.293,1261,6.191,1262,4.716,1263,4.485]],["title/classes/CreateProfileEventHandler.html",[81,0.336,1264,4.382]],["body/classes/CreateProfileEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.189,15,1.588,22,1.461,24,0.276,25,0.004,32,0.192,69,0.602,81,0.378,83,0.31,85,0.058,87,0.003,88,0.003,97,2.072,99,1.525,100,1.967,110,0.522,111,0.468,113,1.156,114,1.739,118,2.303,138,1.949,139,0.562,149,1.417,158,3.657,170,1.318,171,2.24,191,2.271,210,0.378,222,1.417,246,1.837,366,1.948,578,2.098,1022,0.384,1063,1.625,1148,4.419,1171,4.647,1188,3.89,1189,3.476,1190,2.724,1191,2.724,1192,3.476,1193,2.635,1194,2.513,1195,2.635,1197,2.724,1198,2.771,1199,2.771,1229,7.296,1230,5.338,1264,6.507,1265,8.702,1266,5.894,1267,5.894,1268,5.894]],["title/classes/CreateProfileRequest.html",[81,0.336,1269,4.128]],["body/classes/CreateProfileRequest.html",[3,0.05,4,0.059,5,0.059,8,0.191,9,0.94,24,0.343,25,0.004,26,1.204,32,0.238,69,0.41,81,0.38,83,0.236,85,0.059,87,0.003,88,0.003,110,0.398,111,0.357,139,1.012,210,0.38,752,1.9,940,3.707,943,1.916,944,2.365,945,1.746,1022,0.386,1210,6.881,1253,5.625,1254,5.457,1256,5.625,1258,3.948,1269,6.155,1270,9.896,1271,5.345,1272,8.728,1273,7.038,1274,5.345,1275,5.345,1276,5.345]],["title/classes/CreateUserCommand.html",[81,0.336,1277,4.128]],["body/classes/CreateUserCommand.html",[3,0.059,4,0.069,5,0.069,8,0.226,9,1.048,24,0.309,25,0.004,32,0.215,69,0.486,81,0.451,83,0.28,85,0.069,87,0.003,88,0.003,110,0.472,111,0.423,139,0.902,210,0.451,242,4.682,395,7.114,417,4.852,752,1.559,1022,0.458,1277,6.863,1278,9.455,1279,5.046,1280,7.031,1281,6.339,1282,5.884,1283,3.195]],["title/classes/CreateUserCommandHandler.html",[81,0.336,1284,4.382]],["body/classes/CreateUserCommandHandler.html",[3,0.019,4,0.022,5,0.022,8,0.071,9,0.448,15,0.454,22,1.19,24,0.295,25,0.004,26,1.142,27,0.801,30,2.201,32,0.214,53,3.438,64,2.024,69,0.619,76,0.626,81,0.239,82,1.063,83,0.312,85,0.022,87,0.001,88,0.001,99,0.73,100,1.992,110,0.525,111,0.471,112,1.562,113,1.535,114,1.75,133,1.147,135,1.196,139,0.645,144,2.526,170,0.497,175,0.993,176,0.962,177,0.977,178,2.796,210,0.239,221,2.916,222,1.88,224,2.656,247,2.344,277,0.743,366,0.932,493,1.147,494,2.375,517,2.735,525,0.845,527,1.813,591,2.973,594,1.749,597,1.124,600,1.533,605,4.312,632,1.35,662,0.833,664,0.822,665,2.526,666,2.523,752,1.211,868,3.093,871,2.326,951,3.238,1022,0.145,1063,0.613,1064,2.181,1069,1.325,1078,1.69,1079,2.003,1080,0.962,1081,1.01,1082,1.752,1138,3.246,1146,3.262,1160,1.594,1162,1.594,1167,2.706,1172,3.178,1223,1.594,1224,4.501,1225,3.071,1226,3.321,1227,1.533,1228,1.752,1246,1.859,1277,4.425,1284,3.113,1285,8.816,1286,6.178,1287,4.016,1288,3.354,1289,4.327,1290,3.354,1291,3.113,1292,3.113,1293,3.113,1294,3.113,1295,3.113,1296,3.113,1297,2.222,1298,2.222,1299,3.354,1300,2.222,1301,2.222,1302,3.354,1303,2.222,1304,4.926,1305,3.113,1306,2.222,1307,3.113,1308,2.222,1309,1.859,1310,2.222,1311,3.113,1312,2.222,1313,3.113,1314,2.222,1315,1.196,1316,2.67,1317,2.478,1318,2.933,1319,2.67,1320,2.933,1321,2.789,1322,1.859,1323,1.752,1324,1.752,1325,2.789,1326,1.859,1327,2.933,1328,2.933,1329,2.222,1330,1.859,1331,2.003,1332,3.113,1333,2.003,1334,2.003,1335,3.72,1336,2.222,1337,5.229,1338,2.567,1339,2.567,1340,3.72,1341,2.222,1342,2.222,1343,3.444,1344,2.222,1345,2.222,1346,2.003,1347,2.222,1348,2.003,1349,2.003,1350,2.222,1351,2.003,1352,2.222,1353,2.222,1354,2.222,1355,2.222,1356,1.594,1357,2.222,1358,1.389,1359,1.859,1360,2.222,1361,2.222,1362,2.222,1363,4.926,1364,2.222,1365,2.222,1366,2.222,1367,3.354,1368,3.113,1369,2.003,1370,3.113,1371,3.113,1372,1.859,1373,1.859,1374,1.859,1375,3.113,1376,1.752]],["title/classes/CreateUserDto.html",[81,0.336,395,3.487]],["body/classes/CreateUserDto.html",[3,0.047,4,0.056,5,0.056,8,0.181,9,0.908,24,0.337,25,0.004,26,1.187,27,3.277,30,3.331,32,0.234,69,0.589,79,4.861,81,0.484,82,2.693,83,0.224,85,0.056,87,0.003,88,0.003,110,0.378,111,0.6,112,3.572,128,3.097,133,4.391,135,3.03,210,0.361,395,5.023,416,8.16,591,3.741,594,3.999,597,4.304,910,5.655,943,1.851,944,2.325,945,1.658,1022,0.367,1036,6.799,1377,4.71,1378,7.542,1379,5.629,1380,5.629,1381,5.629,1382,5.629,1383,5.629,1384,5.629,1385,5.655,1386,5.075,1387,6.8,1388,3.884,1389,4.71]],["title/classes/CreateUserEvent.html",[81,0.336,1390,4.382]],["body/classes/CreateUserEvent.html",[3,0.048,4,0.056,5,0.056,8,0.183,9,0.917,22,2.266,24,0.338,25,0.004,26,1.236,32,0.235,55,2.643,69,0.395,81,0.366,83,0.228,85,0.056,87,0.003,88,0.003,110,0.383,111,0.344,139,1.006,149,2.059,210,0.366,242,3.802,246,2.67,395,6.916,408,3.672,417,3.94,752,1.876,1022,0.372,1181,3.104,1182,6.003,1283,2.594,1390,6.371,1391,9.791,1392,4.097,1393,3.293,1394,7.613,1395,7.613,1396,4.097]],["title/classes/CreateUserEventHandler.html",[81,0.336,1397,4.382]],["body/classes/CreateUserEventHandler.html",[3,0.05,4,0.058,5,0.058,8,0.19,15,1.207,22,1.466,24,0.277,25,0.004,32,0.192,69,0.603,81,0.379,83,0.311,85,0.058,87,0.003,88,0.003,97,2.078,99,1.528,100,1.97,110,0.523,111,0.469,113,1.159,114,1.743,118,2.309,138,1.954,139,0.564,149,1.421,158,3.66,170,1.322,171,2.247,191,2.278,210,0.379,222,1.421,246,1.843,366,1.952,951,3.41,1022,0.385,1063,1.63,1148,4.432,1171,4.661,1188,3.896,1189,3.483,1190,2.732,1191,2.732,1192,3.483,1193,2.642,1194,2.52,1195,2.642,1197,2.732,1198,2.779,1199,2.779,1390,7.753,1397,6.52,1398,8.715,1399,5.482,1400,5.911,1401,3.81,1402,5.911]],["title/classes/CreateUserResponse.html",[81,0.336,1321,3.926]],["body/classes/CreateUserResponse.html",[3,0.045,4,0.053,5,0.053,8,0.171,9,0.875,13,3.527,15,1.689,24,0.349,25,0.004,26,1.217,32,0.243,43,3.197,69,0.369,81,0.342,83,0.213,85,0.053,87,0.003,88,0.003,110,0.358,111,0.498,112,3.473,133,4.27,135,2.869,139,1.025,210,0.342,591,3.638,597,4.186,752,1.924,943,1.784,944,2.355,945,1.57,1022,0.347,1304,6.521,1321,5.45,1388,3.678,1403,9.996,1404,5.33,1405,5.33,1406,3.996,1407,5.33,1408,5.33,1409,5.33,1410,5.33,1411,5.33,1412,5.33]],["title/injectables/CustomHealthCheckService.html",[207,1.888,1413,3.926]],["body/injectables/CustomHealthCheckService.html",[3,0.053,4,0.063,5,0.063,8,0.204,24,0.225,25,0.004,32,0.201,69,0.659,81,0.407,83,0.253,85,0.063,87,0.003,88,0.003,99,1.6,100,2.037,110,0.426,111,0.382,113,1.244,114,1.824,122,1.748,138,2.096,139,0.605,144,2.047,170,1.419,207,2.941,208,3.09,210,0.407,213,6.955,222,1.524,225,4.551,1413,6.115,1414,6.47,1415,9.016,1416,7.108,1417,6.341,1418,9.517,1419,6.341,1420,6.341,1421,6.341,1422,6.43,1423,6.341,1424,5.307,1425,4.755,1426,5.307,1427,5.307]],["title/injectables/DatabaseConfiguration.html",[207,1.888,334,4.382]],["body/injectables/DatabaseConfiguration.html",[1,3.961,2,3.071,3,0.025,4,0.03,5,0.03,8,0.098,24,0.24,25,0.004,32,0.075,34,3.615,38,3.938,64,2.145,69,0.717,81,0.195,85,0.03,87,0.002,88,0.002,99,0.941,113,0.596,122,0.837,144,2.376,198,4.356,207,1.73,208,1.48,224,0.915,277,1.016,334,4.015,341,8.993,366,0.761,383,3.443,392,5.802,441,3.431,442,2.277,443,2.277,444,3.961,445,2.277,446,2.179,447,3.961,448,2.394,449,1.845,450,3.615,451,2.541,452,4.104,453,2.394,454,3.443,455,3.834,456,2.541,457,3.961,458,2.394,459,2.179,460,4.104,461,2.541,462,3.961,463,2.277,464,1.845,465,3.719,466,2.394,467,3.961,468,2.541,469,2.898,471,4.104,472,2.541,473,2.659,475,4.104,476,2.394,477,2.277,478,4.268,479,2.394,480,2.394,481,3.615,482,2.394,483,3.834,484,2.277,485,4.104,486,2.277,487,2.394,591,2.972,594,3.177,662,1.139,664,1.124,665,1.92,666,1.067,743,3.783,796,2.394,841,3.195,859,3.311,1428,3.036,1429,6.758,1430,3.036,1431,5.948,1432,4.798,1433,3.036,1434,2.541,1435,2.738,1436,2.738,1437,3.036,1438,3.036,1439,3.036,1440,6.093,1441,4.798,1442,6.758,1443,6.758,1444,6.093,1445,3.036,1446,3.036,1447,3.036,1448,6.758,1449,3.036,1450,3.036,1451,3.036,1452,6.758,1453,4.798,1454,4.798,1455,4.798,1456,3.036,1457,6.758,1458,3.036,1459,6.093,1460,3.036,1461,4.798,1462,3.036,1463,3.036,1464,3.036,1465,3.036,1466,3.036,1467,3.036,1468,3.036,1469,3.036,1470,3.036,1471,3.036,1472,3.036,1473,3.036,1474,3.036,1475,3.036,1476,3.036,1477,3.036,1478,3.036,1479,4.798,1480,3.036,1481,3.036,1482,3.036,1483,3.036,1484,3.036,1485,3.036,1486,3.036,1487,3.036,1488,3.036,1489,3.036,1490,3.036,1491,3.036,1492,2.738,1493,3.036]],["title/classes/DeleteMailCommand.html",[81,0.336,217,3.757]],["body/classes/DeleteMailCommand.html",[3,0.058,4,0.068,5,0.068,8,0.222,9,1.037,24,0.306,25,0.004,26,1.048,32,0.213,81,0.443,83,0.276,85,0.068,87,0.003,88,0.003,92,4.127,93,5.283,110,0.464,111,0.416,112,3.939,139,0.895,210,0.443,217,6.18,752,1.681,943,2.113,944,2.479,945,2.035,1022,0.45,1494,8.458,1495,5.782,1496,6.23,1497,6.23]],["title/classes/DeleteMailCommandHandler.html",[81,0.336,179,4.382]],["body/classes/DeleteMailCommandHandler.html",[3,0.04,4,0.048,5,0.048,8,0.155,24,0.241,25,0.004,32,0.167,69,0.661,81,0.309,83,0.27,85,0.048,87,0.002,88,0.002,92,3.449,93,4.415,97,2.382,99,1.329,100,1.772,106,2.054,110,0.455,111,0.408,113,0.945,114,1.516,120,2.438,122,1.328,139,0.46,144,1.555,168,2.713,170,1.078,175,2.153,176,2.086,177,2.119,178,2.804,179,7.119,181,5.666,184,3.457,210,0.309,217,6.105,221,2.088,222,1.158,224,2.562,293,2.651,366,1.698,640,2.265,665,2.188,666,2.382,708,4.031,1022,0.314,1063,1.328,1064,3.563,1069,2.413,1070,3.798,1071,6.707,1073,5.343,1075,3.457,1078,3.079,1080,2.086,1081,2.189,1085,3.798,1138,3.839,1146,3.563,1167,2.934,1172,3.186,1358,3.012,1498,7.84,1499,2.487,1500,3.457,1501,3.798,1502,3.324,1503,4.343,1504,6.11,1505,4.031,1506,4.817,1507,4.343,1508,4.343,1509,4.817,1510,4.817,1511,4.817,1512,6.777,1513,6.11,1514,4.817,1515,4.817,1516,4.817,1517,4.343,1518,4.817,1519,4.343,1520,4.817,1521,4.817]],["title/classes/DeleteMailEvent.html",[81,0.336,1501,4.128]],["body/classes/DeleteMailEvent.html",[3,0.047,4,0.056,5,0.056,8,0.181,9,0.91,24,0.323,25,0.004,26,1.233,32,0.225,55,2.623,69,0.391,81,0.362,83,0.225,85,0.056,87,0.003,88,0.003,92,4.171,93,5.612,97,2.656,98,5.958,106,3.222,110,0.379,111,0.34,112,3.173,139,0.979,149,2.279,181,3.759,210,0.485,217,6.805,246,2.956,752,1.838,1022,0.368,1181,3.081,1500,4.051,1501,5.958,1522,9.483,1523,5.089,1524,9.096,1525,5.645,1526,5.645,1527,5.645,1528,5.089,1529,5.089]],["title/classes/DeleteMailEventHandler.html",[81,0.336,182,4.382]],["body/classes/DeleteMailEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.188,22,1.449,24,0.275,25,0.004,32,0.191,69,0.6,81,0.375,83,0.308,85,0.058,87,0.003,88,0.003,92,3.811,93,5.193,97,2.718,98,4.606,99,1.516,100,1.958,106,3.296,110,0.519,111,0.466,112,3.246,113,1.146,114,1.729,118,2.283,138,1.931,139,0.557,149,1.404,158,3.648,170,1.307,171,2.221,182,6.47,184,6.618,191,2.251,210,0.375,222,1.404,246,1.821,366,1.937,1022,0.381,1063,1.611,1188,3.873,1189,3.456,1190,2.7,1191,2.7,1192,3.456,1193,2.611,1194,2.491,1195,2.611,1197,2.7,1501,7.271,1502,4.032,1530,8.665,1531,5.842,1532,5.842]],["title/classes/DeleteOccupationCommand.html",[81,0.336,1533,4.128]],["body/classes/DeleteOccupationCommand.html",[3,0.059,4,0.07,5,0.07,8,0.228,9,1.052,24,0.311,25,0.004,26,1.064,32,0.216,81,0.454,83,0.282,85,0.07,87,0.003,88,0.003,110,0.476,111,0.426,139,0.905,210,0.454,752,1.699,943,2.145,944,2.431,1022,0.461,1128,5.309,1133,3.731,1168,4.896,1533,6.893,1534,9.485,1535,5.925,1536,5.925]],["title/classes/DeleteOccupationCommandHandler.html",[81,0.336,1537,4.382]],["body/classes/DeleteOccupationCommandHandler.html",[3,0.043,4,0.05,5,0.05,8,0.163,15,1.039,24,0.25,25,0.004,32,0.174,69,0.655,76,1.433,81,0.326,83,0.281,85,0.05,87,0.003,88,0.003,99,1.381,100,1.824,110,0.473,111,0.424,113,0.998,114,1.575,139,0.672,170,1.138,175,2.273,176,2.202,177,2.237,178,2.104,210,0.452,221,2.169,222,1.692,224,2.431,247,1.908,277,1.702,366,1.764,469,2.478,494,3.311,507,4.278,525,1.933,540,3.091,574,2.956,662,1.908,664,2.605,665,1.642,666,2.838,710,4.857,1022,0.331,1063,1.402,1064,3.668,1069,2.506,1078,3.198,1080,2.202,1081,2.311,1136,6.011,1137,3.387,1138,3.897,1140,3.278,1146,3.198,1164,3.278,1167,2.202,1170,4.688,1172,2.391,1173,3.814,1193,2.273,1233,2.799,1236,2.273,1500,3.65,1533,6.868,1537,6.755,1538,8.072,1539,3.278,1540,5.086,1541,4.01,1542,5.086,1543,3.278]],["title/classes/DeleteOccupationEvent.html",[81,0.336,1544,4.382]],["body/classes/DeleteOccupationEvent.html",[3,0.051,4,0.06,5,0.06,8,0.196,9,0.956,24,0.333,25,0.004,26,1.213,32,0.231,55,2.759,81,0.391,83,0.243,85,0.06,87,0.003,88,0.003,106,3.388,110,0.409,111,0.367,139,0.993,149,2.125,210,0.391,246,2.757,574,3.936,752,1.865,943,1.95,944,2.3,1022,0.397,1133,3.209,1168,4.565,1179,4.567,1180,4.567,1181,3.239,1184,4.567,1185,4.567,1544,6.649,1545,9.722,1546,5.097]],["title/classes/DeleteOccupationEventHandler.html",[81,0.336,1547,4.382]],["body/classes/DeleteOccupationEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,578,2.13,1022,0.39,1063,1.649,1149,5.999,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1200,4.485,1502,4.128,1543,3.855,1544,7.789,1547,6.571,1548,8.766,1549,5.982]],["title/classes/DeleteProfileCommand.html",[81,0.336,1550,3.926]],["body/classes/DeleteProfileCommand.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,15,1.934,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1208,5.063,1550,6.541,1551,9.47,1552,7.3]],["title/classes/DeleteProfileCommandHandler.html",[81,0.336,1553,4.382]],["body/classes/DeleteProfileCommandHandler.html",[3,0.044,4,0.052,5,0.052,8,0.168,15,1.068,24,0.255,25,0.004,32,0.177,69,0.66,76,1.474,81,0.336,83,0.286,85,0.052,87,0.003,88,0.003,99,1.408,100,1.851,110,0.482,111,0.432,113,1.026,114,1.606,139,0.685,170,1.17,210,0.46,221,2.212,222,1.725,224,2.468,247,1.962,277,1.751,366,1.798,473,2.339,494,3.351,509,4.247,525,1.989,542,3.096,578,1.863,662,1.962,664,2.657,665,1.689,666,2.523,1022,0.341,1063,1.443,1064,3.723,1069,2.555,1078,3.261,1080,3.108,1081,2.378,1138,3.927,1167,2.265,1193,2.339,1217,5.512,1218,3.18,1222,3.096,1230,3.018,1233,2.879,1236,2.339,1250,3.372,1500,3.755,1502,3.611,1539,3.372,1550,6.927,1553,6.006,1554,8.192,1555,5.659,1556,5.232,1557,3.611,1558,3.923,1559,3.755,1560,5.232]],["title/classes/DeleteProfileEvent.html",[81,0.336,1555,4.128]],["body/classes/DeleteProfileEvent.html",[3,0.05,4,0.059,5,0.059,8,0.192,9,0.943,24,0.33,25,0.004,26,1.132,32,0.23,55,2.721,69,0.413,81,0.383,83,0.238,85,0.059,87,0.003,88,0.003,106,3.341,110,0.401,111,0.359,139,0.989,149,2.104,210,0.383,246,2.728,578,3.31,752,1.858,943,1.923,944,2.37,945,1.756,1022,0.389,1181,3.195,1217,3.729,1260,4.28,1261,6.179,1262,4.702,1263,4.472,1500,4.28,1550,7.432,1555,6.179,1561,9.656]],["title/classes/DeleteProfileEventHandler.html",[81,0.336,1562,4.382]],["body/classes/DeleteProfileEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,578,2.13,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1230,5.369,1502,4.128,1543,3.855,1555,7.338,1562,6.571,1563,8.766,1564,3.635,1565,5.982,1566,5.982]],["title/classes/DeleteUserCommand.html",[81,0.336,1567,4.128]],["body/classes/DeleteUserCommand.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,408,3.806,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1279,5.063,1567,6.878,1568,9.47,1569,7.3]],["title/classes/DeleteUserCommandHandler.html",[81,0.336,1570,4.128]],["body/classes/DeleteUserCommandHandler.html",[3,0.043,4,0.05,5,0.05,8,0.164,9,0.849,22,1.264,24,0.287,25,0.004,32,0.2,64,1.839,69,0.684,76,1.437,81,0.327,83,0.281,85,0.05,87,0.003,88,0.003,99,1.383,100,1.827,110,0.474,111,0.425,113,1,114,1.577,170,1.141,175,2.279,176,2.208,177,2.243,178,2.11,210,0.452,221,1.571,222,1.226,224,1.536,277,1.706,366,1.767,493,2.632,494,3.315,517,3.436,525,1.938,527,2.485,662,1.913,664,1.887,665,2.276,666,1.793,752,1.448,1022,0.332,1063,1.406,1064,3.673,1069,2.51,1074,4.02,1078,3.204,1080,2.208,1081,2.317,1138,4.084,1146,3.204,1172,2.397,1224,3.396,1225,2.317,1226,3.017,1286,6.317,1315,2.744,1358,4.409,1399,3.017,1500,3.659,1502,3.519,1567,6.875,1570,6.372,1571,8.72,1572,4.597,1573,4.02,1574,4.02,1575,5.559,1576,4.597,1577,5.099,1578,5.099,1579,5.099]],["title/classes/DeleteUserEvent.html",[81,0.336,1574,4.128]],["body/classes/DeleteUserEvent.html",[3,0.052,4,0.061,5,0.061,8,0.198,9,0.964,22,2.335,24,0.335,25,0.004,26,1.257,32,0.233,55,2.781,81,0.396,83,0.246,85,0.061,87,0.003,88,0.003,106,3.415,110,0.414,111,0.371,139,0.996,149,2.138,210,0.396,246,2.773,408,3.784,752,1.849,1022,0.402,1181,3.265,1283,2.802,1392,4.425,1393,3.557,1396,4.425,1574,6.315,1580,9.76,1581,6.005,1582,4.623]],["title/classes/DeleteUserEventHandler.html",[81,0.336,1583,4.382]],["body/classes/DeleteUserEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,22,1.483,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1399,5.507,1401,3.855,1502,4.128,1543,3.855,1564,3.635,1574,7.338,1583,6.571,1584,8.766,1585,5.982]],["title/entities/DiscountCodeEntity.html",[0,1.774,452,3.613]],["body/entities/DiscountCodeEntity.html",[0,1.998,2,1.807,3,0.033,4,0.039,5,0.039,6,4.511,8,0.128,9,0.847,13,2.999,14,3.25,15,1.436,21,3.045,24,0.371,25,0.004,26,0.718,27,3.47,28,5.964,32,0.238,43,4.347,51,2.874,69,0.487,70,4.242,71,3.427,72,3.491,74,1.903,75,3.427,76,1.12,79,5.015,81,0.378,82,1.903,83,0.347,85,0.039,87,0.002,88,0.002,452,4.071,453,7.697,481,5.291,560,3.585,868,5.612,874,2.853,898,4.651,899,4.233,920,4.322,923,1.974,928,2.012,1586,3.585,1587,6.341,1588,7.033,1589,6.341,1590,6.341,1591,5.885,1592,7.033,1593,3.976,1594,3.976,1595,5.319,1596,6.341,1597,3.976,1598,5.899,1599,3.976,1600,5.319,1601,5.319,1602,3.976,1603,3.976,1604,5.319,1605,3.976,1606,3.976,1607,3.976,1608,3.976,1609,5.899,1610,3.976,1611,6.341,1612,7.015,1613,2.981,1614,5.885,1615,3.976]],["title/classes/DuplicateMailException.html",[81,0.336,1319,3.757]],["body/classes/DuplicateMailException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.182,69,0.51,81,0.473,85,0.073,87,0.003,88,0.003,120,3.728,122,2.031,210,0.619,640,4.538,713,4.359,1022,0.48,1225,4.07,1317,5.965,1319,6.428,1338,5.084,1339,5.084,1616,4.72,1617,6.642,1618,3.879,1619,6.642,1620,6.165]],["title/classes/DuplicateNameException.html",[81,0.336,1621,4.382]],["body/classes/DuplicateNameException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.514,81,0.476,83,0.296,85,0.073,87,0.003,88,0.003,122,2.046,210,0.621,640,4.553,1022,0.484,1225,4.089,1317,5.992,1616,4.741,1618,3.896,1621,7.53,1622,7.421,1623,7.421,1624,7.421,1625,7.421]],["title/classes/DuplicateUsernameException.html",[81,0.336,1316,3.757]],["body/classes/DuplicateUsernameException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.182,69,0.51,81,0.473,85,0.073,87,0.003,88,0.003,120,3.728,122,2.031,210,0.619,640,4.538,713,4.359,1022,0.48,1225,4.07,1316,6.428,1317,5.965,1338,5.084,1339,5.084,1616,4.72,1618,3.879,1626,6.642,1627,6.642,1628,7.367]],["title/modules/EntitiesToMoveModule.html",[149,1.258,321,3.926]],["body/modules/EntitiesToMoveModule.html",[0,1.672,1,4.591,3,0.041,4,0.049,5,0.049,6,2.281,11,3.542,25,0.004,34,4.19,69,0.748,77,3.892,81,0.317,85,0.049,87,0.002,88,0.002,91,2.405,122,1.361,149,1.657,151,2.779,164,3,165,3,276,3.287,277,1.652,321,5.169,342,4.45,364,7.196,441,3.977,444,4.591,446,3.542,447,4.591,449,4.19,450,4.19,452,4.757,454,4.947,455,4.443,457,4.591,459,3.542,460,4.757,462,4.591,464,4.19,465,4.31,467,4.591,469,3.359,471,4.757,473,3.081,475,4.757,477,3.701,478,4.947,480,3.892,481,4.19,483,4.443,485,4.757,488,4.45,562,3.287,902,3.181,903,4.13,913,3.406,916,3.892,917,4.13,919,4.13,985,4.45,1019,3.892,1020,4.45,1021,4.45,1613,3.701,1629,4.936,1630,4.45,1631,4.45,1632,4.45,1633,4.936,1634,4.936,1635,4.45]],["title/classes/ErrorCustomEvent.html",[81,0.336,1146,2.379]],["body/classes/ErrorCustomEvent.html",[3,0.052,4,0.062,5,0.062,8,0.201,9,0.972,24,0.336,25,0.004,26,1.222,32,0.234,81,0.4,83,0.249,85,0.062,87,0.003,88,0.003,110,0.419,111,0.376,139,0.998,176,4.242,178,3.702,210,0.4,665,2.889,752,1.874,943,1.981,944,2.404,945,1.838,1022,0.407,1146,3.669,1172,4.207,1636,8.834,1637,6.242,1638,6.242,1639,6.242,1640,6.242,1641,6.242]],["title/classes/ErrorCustomEventHandler.html",[81,0.336,174,3.757]],["body/classes/ErrorCustomEventHandler.html",[3,0.036,4,0.043,5,0.043,8,0.139,9,0.756,24,0.319,25,0.004,26,0.986,32,0.222,38,1.904,53,3.455,55,1.503,69,0.621,81,0.278,83,0.295,85,0.043,87,0.002,88,0.002,99,1.231,110,0.422,111,0.378,113,0.849,138,1.431,139,0.968,158,2.999,170,0.968,171,1.645,174,4.505,176,4.008,177,4.171,191,1.668,210,0.278,221,3.097,224,1.304,236,5.098,243,3.245,247,1.623,331,4.046,345,6.076,366,1.573,665,1.397,1022,0.282,1038,5.301,1050,2.987,1061,4.332,1063,1.193,1065,6.661,1066,6.661,1067,6.661,1068,5.539,1072,4.181,1074,3.413,1076,3.622,1088,3.245,1091,5.66,1092,3.902,1093,5.66,1094,3.902,1095,3.622,1096,3.902,1097,5.254,1101,3.106,1139,3.622,1146,3.682,1181,1.765,1188,3.302,1189,2.806,1192,2.806,1194,1.845,1195,1.935,1499,2.234,1636,8.346,1642,3.413,1643,4.95,1644,3.413,1645,3.622,1646,4.328,1647,4.328,1648,4.328,1649,4.328,1650,3.622,1651,3.902,1652,3.902,1653,3.413,1654,4.328,1655,3.413,1656,4.328,1657,3.622,1658,4.328,1659,3.413]],["title/classes/ErrorExceptionFilter.html",[81,0.336,1660,4.721]],["body/classes/ErrorExceptionFilter.html",[3,0.052,4,0.061,5,0.061,8,0.198,24,0.218,25,0.004,32,0.152,46,4.609,69,0.553,81,0.394,83,0.245,85,0.061,87,0.003,88,0.003,99,1.568,110,0.413,111,0.37,113,1.206,120,4.495,122,1.695,224,1.851,247,3.528,312,4.998,331,5.152,366,2.003,616,4.858,640,3.758,647,3.962,664,3.481,796,4.846,1022,0.4,1444,8.009,1660,7.207,1661,7.993,1662,6.147,1663,8.882,1664,7.993,1665,9.406,1666,6.147,1667,7.207,1668,5.542,1669,6.147,1670,6.147,1671,6.147,1672,6.147,1673,4.846,1674,6.147,1675,6.147,1676,6.147,1677,6.147,1678,6.147,1679,6.147]],["title/injectables/ErrorLoggingMiddleware.html",[207,1.888,351,4.382]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.036,4,0.043,5,0.043,8,0.139,9,0.757,24,0.288,25,0.004,32,0.183,69,0.641,81,0.278,83,0.251,85,0.043,87,0.002,88,0.002,99,1.233,100,1.672,110,0.422,111,0.379,113,0.851,122,1.196,138,1.434,139,0.774,144,1.4,149,1.043,158,3.002,171,1.649,191,1.671,207,2.268,208,2.114,210,0.278,221,2.279,222,1.043,224,1.307,236,5.104,243,3.252,247,3.042,293,4.07,312,5.072,345,6.082,351,5.262,366,1.087,367,2.993,368,3.113,369,6.179,370,3.113,371,3.113,372,5.262,373,3.63,374,3.63,375,3.42,616,4.93,641,3.113,642,5.832,647,2.796,662,1.627,664,1.606,665,2.03,666,1.525,1029,4.715,1050,2.993,1061,2.993,1068,5.546,1077,6.082,1084,3.42,1088,4.715,1101,3.113,1642,3.42,1643,4.958,1644,3.42,1650,3.63,1651,3.911,1653,3.42,1655,3.42,1657,3.63,1659,3.42,1680,8.111,1681,3.63,1682,4.958,1683,6.288,1684,5.262,1685,8.111,1686,4.338,1687,5.262,1688,4.958,1689,3.42,1690,3.63,1691,3.63,1692,3.63,1693,3.63,1694,3.63,1695,5.262,1696,3.63,1697,3.63,1698,3.63,1699,3.63,1700,3.63,1701,3.63,1702,3.911,1703,3.911,1704,3.911,1705,3.911,1706,3.911,1707,3.911,1708,3.911,1709,2.712,1710,3.63,1711,3.63,1712,3.63,1713,3.63,1714,3.63]],["title/classes/GenerateUserDto.html",[81,0.336,1715,4.128]],["body/classes/GenerateUserDto.html",[3,0.055,4,0.065,5,0.065,8,0.21,9,1.002,24,0.325,25,0.004,26,1.013,32,0.226,69,0.453,81,0.42,83,0.261,85,0.065,87,0.003,88,0.003,110,0.44,111,0.394,112,3.844,133,4.725,135,3.525,139,0.97,210,0.42,597,4.632,752,1.821,943,2.043,944,2.44,945,1.929,1022,0.427,1377,5.48,1388,4.519,1715,6.564,1716,9.632,1717,8.325,1718,6.548]],["title/classes/GetAllMailQuery.html",[81,0.336,219,4.128]],["body/classes/GetAllMailQuery.html",[3,0.068,4,0.08,5,0.08,25,0.004,81,0.52,85,0.08,87,0.003,88,0.003,92,3.568,93,4.568,219,7.48,1022,0.529,1719,8.112,1720,8.112]],["title/classes/GetAllMailQueryHandler.html",[81,0.336,185,4.382]],["body/classes/GetAllMailQueryHandler.html",[3,0.045,4,0.053,5,0.053,8,0.174,24,0.261,25,0.004,32,0.181,69,0.667,81,0.346,83,0.292,85,0.053,87,0.003,88,0.003,92,3.664,93,5.031,99,1.439,100,1.882,110,0.493,111,0.442,113,1.059,114,1.641,122,1.489,144,1.744,168,3.042,170,1.208,185,6.138,187,7.476,210,0.347,219,7.044,221,1.664,222,1.298,224,1.627,366,1.838,367,3.727,368,3.876,369,3.876,370,3.876,371,3.876,640,2.539,666,1.899,708,4.52,1022,0.352,1063,1.489,1069,2.612,1070,4.259,1071,7.044,1073,5.783,1075,3.876,1085,4.259,1193,2.414,1503,6.613,1504,6.613,1505,4.52,1507,4.87,1508,4.87,1519,4.87,1721,8.329,1722,4.583,1723,4.34,1724,2.972,1725,2.972,1726,3.042,1727,6.138,1728,5.401,1729,5.401,1730,5.401,1731,4.87,1732,4.87,1733,4.87,1734,5.401,1735,5.401,1736,5.401,1737,5.401]],["title/classes/GetAllOccupationQuery.html",[81,0.336,1738,4.128]],["body/classes/GetAllOccupationQuery.html",[3,0.054,4,0.064,5,0.064,8,0.207,9,0.992,24,0.323,25,0.004,26,1.165,32,0.224,55,2.861,81,0.413,83,0.257,85,0.064,87,0.003,88,0.003,110,0.433,111,0.388,139,0.966,149,2.183,210,0.413,246,2.832,574,4.02,752,1.813,943,2.022,944,2.349,1022,0.42,1133,3.395,1181,3.359,1738,6.496,1739,8.012,1740,6.443,1741,6.443,1742,6.443,1743,6.443]],["title/classes/GetAllOccupationQueryHandler.html",[81,0.336,1744,4.382]],["body/classes/GetAllOccupationQueryHandler.html",[3,0.044,4,0.052,5,0.052,8,0.169,24,0.187,25,0.004,32,0.178,69,0.678,76,1.486,81,0.338,83,0.21,85,0.052,87,0.003,88,0.003,99,1.415,100,1.859,110,0.354,111,0.318,113,1.034,114,1.614,139,0.689,144,2.656,170,1.18,175,2.357,176,2.283,177,2.32,178,2.182,210,0.463,221,2.224,222,1.734,224,2.478,277,1.765,366,1.808,469,2.57,494,3.362,507,4.386,525,2.005,540,3.205,574,2.214,665,2.33,666,1.854,822,3.042,1022,0.344,1063,1.454,1069,3.149,1137,3.512,1138,3.935,1140,3.399,1141,3.639,1142,3.954,1146,3.279,1164,3.399,1167,2.283,1172,2.479,1499,2.722,1709,3.297,1722,4.527,1725,2.902,1726,2.97,1738,4.158,1744,6.884,1745,6.884,1746,7.402,1747,3.205,1748,5.273,1749,5.273,1750,5.273,1751,5.273,1752,4.755,1753,4.755,1754,5.273,1755,3.784]],["title/classes/GetAllProfileQuery.html",[81,0.336,1756,4.128]],["body/classes/GetAllProfileQuery.html",[3,0.069,4,0.081,5,0.081,25,0.004,81,0.525,85,0.081,87,0.003,88,0.003,1022,0.533,1756,7.516,1757,6.448,1758,8.178]],["title/classes/GetAllProfileQueryHandler.html",[81,0.336,1759,4.382]],["body/classes/GetAllProfileQueryHandler.html",[3,0.045,4,0.053,5,0.053,8,0.171,24,0.189,25,0.004,32,0.18,69,0.679,76,1.502,81,0.342,83,0.213,85,0.053,87,0.003,88,0.003,99,1.426,100,1.869,110,0.358,111,0.321,113,1.045,114,1.626,139,0.694,144,1.721,170,1.192,175,2.382,176,2.308,177,2.344,178,2.205,210,0.466,221,2.24,222,1.281,224,2.189,247,1.999,277,1.783,366,1.821,473,2.382,494,3.377,509,4.301,525,2.026,542,3.153,578,2.945,662,1.999,664,1.973,665,2.67,666,1.874,1022,0.347,1063,1.469,1069,3.163,1138,3.946,1146,3.303,1167,2.308,1172,2.506,1218,3.239,1220,4.545,1221,3.549,1222,3.153,1499,2.751,1539,3.435,1709,3.332,1722,4.552,1725,2.933,1726,3.001,1756,4.202,1759,6.922,1760,6.521,1761,7.435,1762,5.33,1763,3.332,1764,5.33,1765,4.805]],["title/classes/GetOccupationByIdQuery.html",[81,0.336,1766,4.128]],["body/classes/GetOccupationByIdQuery.html",[3,0.059,4,0.069,5,0.069,8,0.225,9,1.046,24,0.309,25,0.004,26,1.057,32,0.215,81,0.449,83,0.279,85,0.069,87,0.003,88,0.003,110,0.471,111,0.422,139,0.901,210,0.449,574,3.964,752,1.691,943,2.131,944,2.422,1022,0.456,1133,3.692,1168,4.873,1739,7.9,1766,6.848,1767,5.863,1768,7.006,1769,7.006]],["title/classes/GetOccupationByIdQueryHandler.html",[81,0.336,1770,4.382]],["body/classes/GetOccupationByIdQueryHandler.html",[3,0.043,4,0.05,5,0.05,8,0.164,15,1.044,24,0.251,25,0.004,32,0.174,69,0.672,76,1.44,81,0.328,83,0.282,85,0.05,87,0.003,88,0.003,99,1.385,100,1.829,110,0.474,111,0.425,113,1.003,114,1.58,139,0.674,144,2.28,170,1.144,175,2.285,176,2.213,177,2.249,178,2.115,210,0.453,221,2.177,222,1.698,224,2.438,277,1.711,366,1.77,469,2.491,494,3.319,507,4.293,525,1.943,540,3.107,574,3.847,665,2.28,666,1.797,1022,0.333,1063,1.409,1069,2.515,1137,3.404,1138,3.903,1140,3.295,1141,3.528,1142,3.833,1146,3.21,1164,3.295,1167,2.213,1170,3.404,1172,2.403,1233,2.813,1236,2.285,1499,2.639,1709,3.196,1722,4.454,1723,4.179,1724,2.813,1725,2.813,1726,2.879,1745,6.773,1747,3.107,1752,4.609,1753,4.609,1766,6.883,1770,6.773,1771,6.024,1772,5.112,1773,5.112,1774,5.112]],["title/classes/GetOccupationWithCriteriaDto.html",[81,0.336,1775,4.128]],["body/classes/GetOccupationWithCriteriaDto.html",[3,0.055,4,0.065,5,0.065,8,0.213,9,1.008,24,0.327,25,0.004,26,1.02,32,0.227,53,4.61,81,0.424,83,0.385,85,0.065,87,0.003,88,0.003,110,0.444,111,0.398,139,0.972,210,0.424,574,4.059,752,1.825,943,2.056,944,2.372,1022,0.431,1133,3.485,1775,6.605,1776,9.666,1777,5.534,1778,6.123,1779,6.613,1780,5.963,1781,5.963]],["title/classes/GetOccupationWithCriteriaQuery.html",[81,0.336,1782,4.128]],["body/classes/GetOccupationWithCriteriaQuery.html",[3,0.057,4,0.068,5,0.068,8,0.22,9,1.03,24,0.304,25,0.004,32,0.211,69,0.473,81,0.439,83,0.273,85,0.068,87,0.003,88,0.003,110,0.459,111,0.412,139,0.891,210,0.439,574,4.109,752,1.673,943,2.1,944,2.401,1022,0.446,1133,3.603,1739,7.814,1775,7.362,1782,6.746,1783,5.723,1784,7.362,1785,6.166,1786,6.839,1787,4.908,1788,4.908]],["title/classes/GetOccupationWithCriteriaQueryHandler.html",[81,0.336,1789,4.382]],["body/classes/GetOccupationWithCriteriaQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.157,24,0.243,25,0.004,32,0.169,38,2.15,69,0.664,76,1.377,81,0.314,83,0.273,85,0.048,87,0.002,88,0.002,99,1.343,100,1.786,110,0.46,111,0.412,113,0.959,114,1.532,139,0.653,144,1.578,170,1.093,175,2.185,176,2.116,177,2.15,178,2.022,210,0.439,221,2.11,222,1.175,224,2.062,247,2.568,277,1.636,366,1.715,469,2.382,494,3.255,507,4.161,525,1.858,540,2.97,574,4.028,602,3.507,662,1.833,664,1.809,665,2.551,666,1.718,822,2.82,1022,0.318,1063,1.348,1069,2.438,1137,3.255,1138,3.855,1140,3.15,1141,4.724,1142,3.665,1146,3.111,1167,2.116,1172,2.298,1499,2.523,1709,3.056,1722,4.348,1723,4.051,1724,2.69,1725,2.69,1726,2.752,1745,6.613,1747,2.97,1782,6.75,1789,6.613,1790,5.519,1791,4.888,1792,4.09,1793,4.888,1794,4.888,1795,4.09,1796,6.846,1797,4.888,1798,6.846,1799,4.407,1800,4.888]],["title/classes/GetOccupationWithCriteriaRequest.html",[81,0.336,1801,4.128]],["body/classes/GetOccupationWithCriteriaRequest.html",[3,0.055,4,0.065,5,0.065,8,0.213,9,1.008,24,0.327,25,0.004,26,1.02,32,0.227,53,4.61,81,0.424,83,0.385,85,0.065,87,0.003,88,0.003,110,0.444,111,0.398,139,0.972,210,0.424,574,4.059,752,1.825,943,2.056,944,2.372,1022,0.431,1133,3.485,1778,6.123,1801,6.605,1802,9.666,1803,5.963,1804,6.613,1805,6.613,1806,5.963]],["title/classes/GetProfileByIdQuery.html",[81,0.336,1807,4.128]],["body/classes/GetProfileByIdQuery.html",[3,0.059,4,0.069,5,0.069,8,0.224,9,1.043,15,1.925,24,0.308,25,0.004,26,1.055,32,0.214,81,0.448,83,0.278,85,0.069,87,0.003,88,0.003,110,0.469,111,0.42,139,0.899,210,0.448,578,3.356,752,1.688,943,2.127,944,2.487,945,2.056,1022,0.455,1757,7.431,1767,5.843,1807,6.833,1808,7.814]],["title/classes/GetProfileByIdQueryHandler.html",[81,0.336,1809,4.382]],["body/classes/GetProfileByIdQueryHandler.html",[3,0.042,4,0.05,5,0.05,8,0.163,15,1.033,22,1.255,24,0.249,25,0.004,32,0.173,69,0.67,76,1.426,81,0.325,83,0.28,85,0.05,87,0.003,88,0.003,99,1.376,100,1.819,110,0.471,111,0.422,113,0.993,114,1.569,139,0.669,144,1.634,170,1.132,175,2.262,176,2.191,177,2.226,178,2.094,210,0.45,221,2.161,222,1.216,224,2.113,277,1.693,366,1.757,408,2.034,473,2.262,494,3.304,509,4.15,525,1.924,542,2.994,578,3.363,662,1.898,664,1.873,665,2.599,666,1.779,923,2.512,1022,0.33,1063,1.395,1069,2.497,1138,3.892,1146,3.187,1167,2.191,1172,2.379,1218,3.075,1220,4.386,1221,3.37,1222,2.994,1233,2.785,1499,2.612,1557,3.492,1709,3.164,1722,4.43,1723,4.15,1724,2.785,1725,2.785,1726,2.85,1747,3.075,1760,6.347,1771,5.998,1807,6.853,1809,6.736,1810,5.06,1811,4.563,1812,4.563,1813,5.06]],["title/classes/GetProfileWithCriteriaDto.html",[81,0.336,1814,4.128]],["body/classes/GetProfileWithCriteriaDto.html",[3,0.05,4,0.059,5,0.059,8,0.193,9,0.949,24,0.332,25,0.004,26,0.96,32,0.23,53,4.338,69,0.416,81,0.386,83,0.24,85,0.059,87,0.003,88,0.003,110,0.404,111,0.61,139,0.991,210,0.386,578,3.448,752,1.861,940,3.763,943,1.934,944,2.376,945,1.772,1022,0.392,1253,5.667,1254,5.497,1256,5.667,1258,4.008,1777,5.036,1778,5.855,1780,7.108,1814,6.215,1815,9.684,1816,5.426,1817,6.018]],["title/classes/GetProfileWithCriteriaQuery.html",[81,0.336,1818,4.128]],["body/classes/GetProfileWithCriteriaQuery.html",[3,0.057,4,0.067,5,0.067,8,0.219,9,1.028,24,0.303,25,0.004,32,0.211,69,0.472,81,0.437,83,0.272,85,0.067,87,0.003,88,0.003,110,0.458,111,0.41,139,0.89,210,0.437,578,3.479,752,1.67,943,2.095,944,2.469,945,2.007,1022,0.444,1757,7.351,1783,5.704,1787,4.891,1788,4.891,1814,8.095,1818,6.732,1819,7.698]],["title/classes/GetProfileWithCriteriaQueryHandler.html",[81,0.336,1820,4.382]],["body/classes/GetProfileWithCriteriaQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.157,24,0.243,25,0.004,32,0.169,38,2.15,69,0.664,76,1.377,81,0.314,83,0.273,85,0.048,87,0.002,88,0.002,99,1.343,100,1.786,110,0.46,111,0.412,113,0.959,114,1.532,139,0.653,144,1.578,170,1.093,175,2.185,176,2.116,177,2.15,178,2.022,210,0.439,221,2.11,222,1.175,224,2.062,247,2.568,277,1.636,366,1.715,473,2.185,494,3.255,509,4.051,525,1.858,542,2.892,578,3.415,602,3.507,662,1.833,664,1.809,665,2.551,666,1.718,1022,0.318,1063,1.348,1069,2.438,1138,3.855,1146,3.111,1167,2.116,1172,2.298,1218,2.97,1220,4.281,1221,3.255,1222,2.892,1254,4.281,1499,2.523,1709,3.056,1722,4.348,1723,4.051,1724,2.69,1725,2.69,1726,2.752,1747,2.97,1760,6.23,1763,3.056,1765,4.407,1790,5.519,1792,4.09,1795,4.09,1799,4.407,1818,6.75,1820,6.613,1821,4.888,1822,4.888,1823,4.888,1824,6.846,1825,4.888]],["title/classes/GetProfilesByUserIdQuery.html",[81,0.336,1826,4.128]],["body/classes/GetProfilesByUserIdQuery.html",[3,0.058,4,0.068,5,0.068,8,0.222,9,1.037,15,1.916,22,2.326,24,0.306,25,0.004,26,1.048,32,0.213,81,0.443,83,0.276,85,0.068,87,0.003,88,0.003,110,0.464,111,0.416,139,0.895,210,0.443,752,1.681,943,2.113,944,2.479,945,2.035,1022,0.45,1757,7.397,1763,5.866,1767,5.782,1808,7.764,1826,6.789]],["title/classes/GetProfilesByUserIdQueryHandler.html",[81,0.336,1827,4.382]],["body/classes/GetProfilesByUserIdQueryHandler.html",[3,0.042,4,0.05,5,0.05,8,0.162,15,1.028,22,2.259,24,0.248,25,0.004,32,0.173,64,1.816,69,0.669,76,1.419,78,2.599,81,0.323,83,0.279,85,0.05,87,0.002,88,0.002,99,1.371,100,1.814,110,0.469,111,0.421,113,0.988,114,1.564,139,0.667,144,2.256,170,1.126,210,0.448,221,2.154,222,1.21,224,2.418,247,1.889,277,1.685,366,1.751,473,2.251,494,3.676,509,4.136,517,3.912,525,1.914,527,2.453,542,2.979,578,2.489,662,1.889,664,2.587,665,1.625,666,2.457,923,2.5,1022,0.328,1063,1.388,1069,2.489,1218,3.06,1220,4.37,1221,3.353,1222,2.979,1232,3.97,1233,2.771,1235,3.245,1236,2.251,1250,3.245,1499,2.599,1573,3.97,1722,4.418,1723,4.136,1724,2.771,1725,2.771,1726,2.835,1760,6.33,1763,5.423,1771,5.985,1811,4.54,1826,6.838,1827,5.849,1828,5.035,1829,5.035]],["title/classes/GetProfilesWithCriteriaRequest.html",[81,0.336,1830,4.128]],["body/classes/GetProfilesWithCriteriaRequest.html",[3,0.05,4,0.059,5,0.059,8,0.193,9,0.949,24,0.332,25,0.004,26,0.96,32,0.23,53,4.338,69,0.416,81,0.386,83,0.24,85,0.059,87,0.003,88,0.003,110,0.404,111,0.61,139,0.991,210,0.386,752,1.861,940,3.763,943,1.934,944,2.376,945,1.772,1022,0.392,1253,5.667,1254,5.497,1256,5.667,1258,4.008,1763,6.055,1778,5.855,1803,5.426,1806,7.108,1830,6.215,1831,9.684,1832,6.018,1833,6.018]],["title/classes/GetUserByEmailQuery.html",[81,0.336,1834,4.382]],["body/classes/GetUserByEmailQuery.html",[3,0.06,4,0.07,5,0.07,8,0.228,9,1.055,22,2.356,24,0.311,25,0.004,26,1.207,32,0.216,81,0.456,83,0.283,85,0.07,87,0.003,88,0.003,110,0.477,111,0.428,139,0.906,210,0.456,752,1.57,951,5.721,1022,0.463,1283,3.229,1834,7.332,1835,6.817,1836,7.106,1837,7.106,1838,7.106,1839,7.106]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.336,1840,4.382]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.047,4,0.055,5,0.055,8,0.179,13,2.38,15,1.14,21,2.417,22,2.245,24,0.267,25,0.004,32,0.185,64,2.013,69,0.654,76,1.573,81,0.358,83,0.299,85,0.055,87,0.003,88,0.003,99,1.471,100,1.914,110,0.504,111,0.452,112,3.149,113,1.095,114,1.678,144,1.802,170,1.249,210,0.481,221,1.72,222,1.342,277,1.868,366,1.879,493,2.881,494,3.442,517,3.654,525,2.122,527,2.72,594,2.624,597,2.825,662,2.094,664,2.066,665,2.421,666,1.962,1022,0.364,1063,1.539,1069,2.67,1072,3.717,1236,2.495,1315,3.004,1564,3.392,1722,4.661,1723,4.437,1724,3.072,1725,3.072,1726,3.143,1834,7.578,1840,6.276,1841,6.078,1842,8.164,1843,5.582,1844,4.006,1845,5.582,1846,4.006,1847,4.671]],["title/classes/GetUserByUsernameQuery.html",[81,0.336,1848,4.382]],["body/classes/GetUserByUsernameQuery.html",[3,0.06,4,0.07,5,0.07,8,0.228,9,1.055,22,2.356,24,0.311,25,0.004,26,1.207,32,0.216,81,0.456,83,0.283,85,0.07,87,0.003,88,0.003,110,0.477,111,0.428,139,0.906,210,0.456,591,4.362,752,1.57,1022,0.463,1283,3.229,1835,6.817,1848,7.332,1849,7.106,1850,5.602,1851,7.106,1852,7.106]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.336,1853,4.382]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.047,4,0.055,5,0.055,8,0.179,13,2.38,15,1.14,21,2.417,22,2.245,24,0.267,25,0.004,32,0.185,64,2.013,69,0.654,76,1.573,81,0.358,83,0.299,85,0.055,87,0.003,88,0.003,99,1.471,100,1.914,110,0.504,111,0.452,113,1.095,114,1.678,144,1.802,170,1.249,210,0.481,221,1.72,222,1.342,277,1.868,366,1.879,493,2.881,494,3.442,517,3.654,525,2.122,527,2.72,591,3.299,594,2.624,597,2.825,662,2.094,664,2.066,665,2.421,666,1.962,1022,0.364,1063,1.539,1069,2.67,1072,3.717,1236,2.495,1315,3.004,1564,3.392,1722,4.661,1723,4.437,1724,3.072,1725,3.072,1726,3.143,1841,6.078,1844,4.006,1846,4.006,1847,4.671,1848,7.578,1853,6.276,1854,8.164,1855,5.582,1856,5.033]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.336,1857,4.128]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.054,4,0.064,5,0.064,8,0.207,9,0.992,22,2.374,24,0.323,25,0.004,26,1.268,32,0.224,81,0.413,83,0.257,85,0.064,87,0.003,88,0.003,110,0.433,111,0.388,139,0.966,210,0.413,408,3.976,608,4.942,633,5.391,752,1.773,1022,0.42,1283,2.928,1835,6.871,1857,6.496,1858,6.443,1859,7.549,1860,5.809,1861,6.443,1862,8.239]],["title/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[81,0.336,1863,4.382]],["body/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.157,15,1.4,22,2.429,24,0.244,25,0.004,32,0.169,64,1.767,69,0.664,76,1.381,81,0.314,83,0.273,85,0.048,87,0.002,88,0.002,99,1.345,100,1.788,110,0.461,111,0.413,112,2.057,113,0.961,114,1.534,144,1.582,170,1.096,175,2.19,176,2.121,177,2.155,178,2.027,210,0.44,221,2.113,222,1.648,224,1.476,247,2.572,277,1.64,366,1.718,493,2.529,494,3.258,517,3.342,525,1.863,526,4.733,527,2.387,591,2.155,597,2.48,600,3.381,608,4.424,633,4.826,662,1.838,664,1.814,665,2.554,1022,0.319,1063,1.351,1069,2.442,1138,3.857,1146,3.116,1167,2.121,1172,2.303,1315,2.637,1499,2.529,1722,4.354,1723,4.058,1724,2.696,1725,2.696,1726,2.759,1747,2.978,1841,5.678,1846,3.516,1857,6.758,1863,6.621,1864,7.172,1865,4.9,1866,3.863,1867,4.418,1868,6.858,1869,4.9,1870,4.9]],["title/classes/GetUserLoginQuery.html",[81,0.336,782,4.128]],["body/classes/GetUserLoginQuery.html",[3,0.055,4,0.065,5,0.065,8,0.213,9,1.008,22,2.397,24,0.327,25,0.004,26,1.275,32,0.227,81,0.424,83,0.264,85,0.065,87,0.003,88,0.003,110,0.444,111,0.398,139,0.972,210,0.424,591,4.252,752,1.787,771,7.863,782,6.605,1022,0.431,1283,3.005,1835,6.937,1850,5.214,1871,6.613,1872,6.613,1873,8.377]],["title/classes/GetUserLoginQueryHandler.html",[81,0.336,737,4.128]],["body/classes/GetUserLoginQueryHandler.html",[3,0.034,4,0.04,5,0.04,8,0.13,13,2.545,14,2.759,15,1.219,21,2.585,22,2.074,24,0.252,25,0.004,26,1.066,32,0.175,64,1.457,69,0.657,76,1.138,81,0.259,83,0.283,85,0.04,87,0.002,88,0.002,99,1.171,100,1.979,110,0.477,111,0.427,112,2.981,113,1.171,114,1.754,120,2.045,122,1.114,144,2.292,170,0.904,210,0.383,221,2.578,222,2.011,224,1.798,247,2.239,277,1.352,366,1.496,493,2.086,494,2.981,517,2.909,525,1.536,526,4.119,527,1.969,591,3.123,594,2.806,597,3.021,600,4.119,640,1.899,662,1.515,664,1.495,665,2.292,666,2.757,711,4.995,712,4.707,713,3.532,730,4.995,731,3.381,737,4.707,739,6.596,771,3.186,782,6.183,788,5.382,1022,0.263,1063,1.114,1069,2.125,1075,2.899,1138,3.641,1139,3.381,1236,2.668,1315,2.175,1358,3.733,1399,2.391,1722,3.907,1723,3.532,1724,2.223,1725,2.223,1726,2.275,1841,5.627,1846,4.284,1847,4.995,1856,5.382,1874,5.382,1875,5.382,1876,7.07,1877,4.04,1878,3.186,1879,3.643,1880,4.04,1881,8.757,1882,5.969,1883,5.969,1884,5.969,1885,3.643]],["title/classes/GetUserQuery.html",[81,0.336,779,3.926]],["body/classes/GetUserQuery.html",[3,0.06,4,0.07,5,0.07,8,0.228,9,1.055,24,0.311,25,0.004,26,1.207,32,0.216,81,0.456,83,0.283,85,0.07,87,0.003,88,0.003,110,0.477,111,0.572,139,0.906,210,0.456,408,3.986,752,1.57,779,6.57,1022,0.463,1283,3.229,1393,4.099,1406,5.328,1835,6.817,1886,7.106,1887,7.106,1888,7.106]],["title/classes/GetUserQueryHandler.html",[81,0.336,1889,4.382]],["body/classes/GetUserQueryHandler.html",[3,0.045,4,0.053,5,0.053,8,0.172,15,1.094,22,1.329,24,0.259,25,0.004,32,0.18,64,1.932,69,0.68,76,1.51,81,0.344,83,0.291,85,0.053,87,0.003,88,0.003,99,1.431,100,1.874,110,0.49,111,0.439,113,1.051,114,1.632,144,2.355,170,1.199,210,0.468,221,1.651,222,1.753,224,1.614,247,2.01,277,1.793,366,1.828,493,2.766,494,3.385,517,3.555,525,2.037,527,2.611,656,4.702,779,6.676,781,7.02,1022,0.349,1063,1.477,1069,2.597,1315,2.884,1499,2.766,1539,3.454,1722,4.564,1723,4.316,1724,2.948,1725,2.948,1726,3.017,1841,5.952,1844,3.845,1867,6.577,1889,6.105,1890,4.224,1891,7.451,1892,5.358,1893,5.358,1894,5.358,1895,5.358,1896,5.358,1897,5.358,1898,5.358]],["title/classes/GetUserWithCriteriaDto.html",[81,0.336,1899,3.926]],["body/classes/GetUserWithCriteriaDto.html",[3,0.037,4,0.043,5,0.043,8,0.14,9,0.759,22,2.495,24,0.354,25,0.004,26,1.095,32,0.246,43,4.427,53,3.471,81,0.279,83,0.174,85,0.043,87,0.002,88,0.002,110,0.293,111,0.639,112,3.114,139,1.034,210,0.279,591,3.261,752,1.942,943,1.548,944,2.117,945,1.283,1022,0.284,1777,3.646,1778,4.938,1781,3.928,1816,3.928,1899,4.729,1900,10.064,1901,7.415,1902,7.415,1903,7.415,1904,7.415,1905,5.846,1906,7.415,1907,7.415,1908,6.308,1909,4.356,1910,4.356,1911,4.356,1912,4.356,1913,4.356,1914,4.356,1915,4.356]],["title/classes/GetUserWithCriteriaQuery.html",[81,0.336,1916,4.128]],["body/classes/GetUserWithCriteriaQuery.html",[3,0.058,4,0.068,5,0.068,8,0.223,9,1.039,22,2.438,24,0.307,25,0.004,32,0.213,69,0.48,81,0.445,83,0.276,85,0.068,87,0.003,88,0.003,110,0.466,111,0.417,139,0.897,210,0.445,752,1.546,1022,0.452,1283,3.151,1783,5.802,1785,6.252,1787,4.976,1788,4.976,1819,6.252,1835,6.743,1899,7.991,1916,6.804,1917,6.934]],["title/classes/GetUserWithCriteriaQueryHandler.html",[81,0.336,1918,4.382]],["body/classes/GetUserWithCriteriaQueryHandler.html",[3,0.046,4,0.054,5,0.054,8,0.175,22,2.22,24,0.262,25,0.004,32,0.182,38,2.389,64,1.958,69,0.648,76,1.53,81,0.348,83,0.294,85,0.054,87,0.003,88,0.003,99,1.444,100,1.887,110,0.494,111,0.443,113,1.065,114,1.647,170,1.215,210,0.472,221,1.673,247,2.037,277,1.817,366,1.845,493,2.803,494,3.404,517,3.587,525,2.064,527,2.646,602,3.897,1022,0.354,1063,1.497,1069,2.621,1072,3.617,1315,2.923,1564,3.3,1722,4.596,1723,4.356,1724,2.988,1725,2.988,1726,3.058,1790,5.771,1792,4.545,1795,4.545,1841,5.993,1916,7.06,1918,6.161,1919,5.431,1920,5.431,1921,5.431,1922,7.362,1923,7.362,1924,5.431,1925,5.431,1926,5.431,1927,5.431,1928,5.431,1929,5.431,1930,5.431]],["title/entities/GroupEntity.html",[0,1.774,455,3.375]],["body/entities/GroupEntity.html",[0,1.952,2,1.751,3,0.032,4,0.038,5,0.038,6,4.413,8,0.124,9,0.831,13,2.943,14,3.19,15,1.41,21,2.989,24,0.333,25,0.004,26,0.933,27,3.382,30,2.28,32,0.232,37,5.146,38,4.366,39,4.791,40,5.575,43,3.786,51,2.808,69,0.568,70,2.808,71,3.364,72,3.427,74,1.844,75,3.364,76,1.086,81,0.37,82,1.844,83,0.306,85,0.038,87,0.002,88,0.002,450,4.656,455,3.715,457,5.102,459,2.766,464,2.342,465,5.578,558,3.977,562,3.838,570,5.498,838,3.715,841,5.102,842,3.977,854,5.197,859,5.287,862,3.977,900,4.45,901,4.598,916,3.039,920,3.804,928,1.95,950,5.777,994,3.475,1000,6.041,1389,4.823,1931,3.854,1932,6.904,1933,6.904,1934,6.904,1935,5.763,1936,5.763,1937,3.854,1938,5.763,1939,3.854,1940,3.854,1941,3.854,1942,3.854,1943,5.763,1944,3.854,1945,3.854,1946,4.321,1947,3.854,1948,5.763,1949,3.854,1950,3.854,1951,3.854]],["title/entities/GroupMembershipEntity.html",[0,1.774,457,3.487]],["body/entities/GroupMembershipEntity.html",[0,2.195,2,2.056,3,0.038,4,0.045,5,0.045,6,4.434,8,0.145,9,0.912,13,3.229,14,3.5,15,1.547,21,3.279,24,0.333,25,0.004,26,0.789,27,3.383,32,0.232,35,3.835,38,2.851,39,5.171,40,5.026,43,4.007,51,3.158,55,2.25,69,0.572,70,2.204,71,3.69,72,3.76,73,4.369,74,2.165,75,3.69,76,1.275,81,0.29,83,0.18,85,0.045,87,0.002,88,0.002,293,2.489,441,5.255,449,2.749,455,5.871,457,4.316,458,7.565,551,5.678,562,5.508,564,4.079,848,5.11,849,5.11,920,4.522,923,2.246,928,2.289,940,2.828,1019,3.567,1905,5.971,1952,4.524,1953,6.481,1954,4.524,1955,4.524,1956,4.524,1957,6.481,1958,4.524,1959,4.524,1960,6.338,1961,4.524,1962,4.524,1963,4.524,1964,4.524]],["title/controllers/HealthCheckController.html",[89,2.703,1965,4.382]],["body/controllers/HealthCheckController.html",[3,0.046,4,0.055,5,0.055,8,0.178,25,0.004,27,1.996,32,0.137,69,0.652,81,0.355,85,0.055,87,0.003,88,0.003,89,2.858,91,2.697,96,3.82,97,3.312,99,1.463,113,1.086,114,1.668,119,3.568,122,1.526,127,3.687,128,3.046,138,1.83,144,1.787,263,4.151,288,6.241,289,4.413,292,5.592,293,3.046,299,6.241,302,4.151,303,4.632,305,4.151,306,4.632,307,4.632,309,4.991,313,3.461,314,4.364,339,6.241,1413,6.324,1414,5.352,1416,7.95,1425,4.151,1426,4.632,1427,4.632,1965,6.241,1966,5.536,1967,10.494,1968,5.536,1969,9.024,1970,5.536,1971,9.024,1972,4.151,1973,4.991,1974,4.991,1975,5.536,1976,5.536,1977,5.536]],["title/modules/HealthCheckModule.html",[149,1.258,322,3.926]],["body/modules/HealthCheckModule.html",[3,0.052,4,0.061,5,0.061,25,0.004,55,2.161,69,0.694,81,0.399,85,0.061,87,0.003,88,0.003,91,3.926,122,1.716,149,1.937,151,3.504,152,4.537,160,4.897,161,3.782,162,3.782,164,4.897,165,3.782,169,5.193,170,1.392,178,3.333,322,7.519,339,5.208,364,7.908,1413,7.519,1414,4.466,1416,6.353,1424,5.208,1635,5.611,1965,7.477,1972,4.666,1973,5.611,1974,5.611,1978,5.611,1979,5.611,1980,6.223,1981,8.057,1982,6.223,1983,6.743,1984,6.223]],["title/classes/HealthCheckQuery.html",[81,0.336,1422,4.128]],["body/classes/HealthCheckQuery.html",[3,0.068,4,0.08,5,0.08,25,0.004,81,0.522,85,0.08,87,0.003,88,0.003,1022,0.531,1414,5.845,1422,7.498,1985,8.145,1986,8.145]],["title/classes/HealthCheckQueryHandler.html",[81,0.336,1983,4.382]],["body/classes/HealthCheckQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.156,24,0.172,25,0.004,32,0.168,69,0.59,81,0.31,83,0.193,85,0.048,87,0.002,88,0.002,99,1.334,100,1.776,110,0.325,111,0.291,113,0.949,114,2.083,144,1.563,170,1.083,210,0.436,221,2.768,222,1.163,224,1.458,366,1.704,743,5.361,796,3.816,1022,0.315,1063,1.335,1069,3.035,1075,3.474,1138,3.844,1414,5.641,1416,3.816,1422,3.816,1424,7.134,1425,5.098,1426,4.051,1427,4.051,1682,3.816,1722,4.325,1725,2.664,1972,3.629,1983,5.69,1987,7.86,1988,4.84,1989,9.313,1990,9.566,1991,9.566,1992,9.566,1993,4.84,1994,4.84,1995,4.84,1996,4.84,1997,4.84,1998,4.84,1999,6.8,2000,6.8,2001,6.8,2002,4.84,2003,4.84,2004,4.84,2005,8.525,2006,6.8,2007,4.84,2008,4.84,2009,4.84,2010,4.364,2011,4.84,2012,4.84,2013,4.84,2014,4.84,2015,4.364,2016,4.84,2017,4.84,2018,4.84,2019,4.84]],["title/classes/HealthCheckResponse.html",[81,0.336,1425,3.926]],["body/classes/HealthCheckResponse.html",[3,0.059,4,0.069,5,0.069,8,0.224,9,1.043,24,0.308,25,0.004,32,0.214,69,0.483,81,0.448,83,0.278,85,0.069,87,0.003,88,0.003,110,0.469,111,0.42,139,0.899,210,0.448,752,1.553,1022,0.455,1283,3.173,1414,6.764,1425,6.499,1972,5.235,2020,9.425,2021,6.982,2022,9.857,2023,6.982,2024,10.135,2025,6.982,2026,6.982]],["title/classes/IdProfileDto.html",[81,0.336,2027,4.721]],["body/classes/IdProfileDto.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,15,1.934,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1252,5.563,2027,7.865,2028,9.47,2029,8.724]],["title/classes/InvalidIdException.html",[81,0.336,1575,4.128]],["body/classes/InvalidIdException.html",[3,0.062,4,0.073,5,0.073,15,1.51,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,640,4.545,713,4.375,1022,0.482,1225,4.08,1226,5.312,1575,7.078,1616,4.73,1618,3.887,2030,7.394,2031,7.394,2032,6.667]],["title/classes/InvalidMailException.html",[81,0.336,1327,4.128]],["body/classes/InvalidMailException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,640,4.545,713,4.375,1022,0.482,1225,4.08,1226,5.312,1327,7.078,1616,4.73,1617,6.667,1618,3.887,1619,6.667,1620,6.188,2033,7.394]],["title/classes/InvalidParameterEntityException.html",[81,0.336,1223,3.757]],["body/classes/InvalidParameterEntityException.html",[3,0.052,4,0.062,5,0.062,24,0.287,25,0.004,32,0.155,69,0.56,81,0.519,82,2.996,83,0.25,85,0.062,87,0.003,88,0.003,110,0.543,111,0.377,120,3.169,122,1.727,144,2.612,210,0.402,247,2.349,313,3.915,572,4.036,640,4.213,713,4.787,1022,0.408,1223,5.805,1225,3.676,1226,4.787,1227,5.583,1343,4.494,1616,4.263,1618,3.503,2034,5.646,2035,8.09,2036,9.807,2037,6.262,2038,6.262,2039,7.294,2040,5.646,2041,4.17,2042,6.262,2043,6.262,2044,6.262,2045,6.262,2046,6.262]],["title/classes/InvalidPasswordException.html",[81,0.336,1325,3.926]],["body/classes/InvalidPasswordException.html",[3,0.059,4,0.069,5,0.069,25,0.004,32,0.174,69,0.486,81,0.451,85,0.069,87,0.003,88,0.003,120,3.558,122,1.938,210,0.607,594,4.092,640,4.445,713,4.16,868,4.532,1022,0.458,1225,3.956,1226,5.151,1325,6.527,1343,5.046,1376,5.543,1616,4.587,1618,3.769,2041,4.682,2047,6.339,2048,6.339,2049,7.031,2050,7.031,2051,9.455,2052,7.031,2053,8.705,2054,7.031]],["title/classes/InvalidUsernameException.html",[81,0.336,1328,4.128]],["body/classes/InvalidUsernameException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.182,69,0.51,81,0.473,85,0.073,87,0.003,88,0.003,120,3.728,122,2.031,210,0.619,591,3.24,640,4.538,713,4.359,1022,0.48,1225,4.07,1226,5.3,1328,7.063,1616,4.72,1618,3.879,1626,6.642,1627,6.642,1667,6.642,2032,6.642]],["title/entities/InvoicesEntity.html",[0,1.774,460,3.613]],["body/entities/InvoicesEntity.html",[0,0.883,2,1.184,3,0.022,4,0.026,5,0.026,6,4.515,8,0.084,9,0.646,13,2.289,14,2.481,15,1.096,21,2.325,24,0.379,25,0.004,26,1.189,27,3.497,28,6.603,29,7.582,30,5.69,31,6.948,32,0.24,35,1.542,37,2.448,38,1.146,43,3.213,51,2.068,55,0.905,69,0.371,70,4.595,71,2.616,72,2.665,73,2.448,74,1.247,75,2.616,76,0.734,79,5.93,80,6.73,81,0.272,82,1.247,83,0.367,85,0.026,86,6.546,87,0.002,88,0.002,111,0.256,289,4.032,313,1.63,460,2.929,481,4.44,584,4.026,811,4.841,868,5.502,887,2.929,920,3.626,923,1.294,928,1.319,1587,4.841,1595,3.827,1596,2.35,1612,6.586,1613,1.954,1614,2.181,2055,2.606,2056,6.813,2057,5.369,2058,5.369,2059,5.369,2060,5.369,2061,5.369,2062,6.813,2063,5.369,2064,5.369,2065,5.369,2066,5.369,2067,2.606,2068,4.244,2069,2.606,2070,4.244,2071,2.606,2072,4.244,2073,2.606,2074,4.244,2075,2.606,2076,4.244,2077,2.606,2078,4.244,2079,2.606,2080,2.606,2081,2.606,2082,2.606,2083,2.606,2084,6.813,2085,2.606,2086,2.606,2087,2.606,2088,4.244,2089,2.606,2090,2.606,2091,2.606,2092,4.244,2093,5.369,2094,2.606,2095,4.244,2096,2.606,2097,4.244,2098,2.606,2099,2.606,2100,4.244,2101,2.606,2102,3.827,2103,2.606,2104,2.606,2105,2.606,2106,2.606,2107,2.606,2108,2.606,2109,2.606,2110,2.606]],["title/classes/IsTestEnvironmentPipe.html",[81,0.336,413,4.382]],["body/classes/IsTestEnvironmentPipe.html",[3,0.054,4,0.064,5,0.064,8,0.207,24,0.229,25,0.004,32,0.159,69,0.446,81,0.413,83,0.257,85,0.064,87,0.003,88,0.003,99,1.616,110,0.433,111,0.388,113,1.264,120,3.261,122,1.776,144,2.08,224,1.941,366,2.064,367,4.446,368,4.624,369,4.624,370,4.624,371,4.624,383,6.519,413,6.895,414,7.429,640,3.029,666,2.265,1022,0.42,1181,3.359,1440,5.809,1731,5.809,1732,5.809,1733,5.809,2111,6.443,2112,9.084,2113,8.239,2114,8.239,2115,9.895,2116,8.19,2117,9.574,2118,6.443,2119,6.443,2120,5.809]],["title/entities/JoinedConversation.html",[0,1.774,462,3.487]],["body/entities/JoinedConversation.html",[0,2.292,2,2.184,3,0.04,4,0.047,5,0.047,6,4.504,8,0.154,9,0.943,13,3.338,14,3.618,15,1.599,21,3.39,24,0.339,25,0.004,26,1.034,27,3.443,32,0.236,35,4.003,43,4.087,51,3.297,69,0.542,70,3.815,71,3.815,72,3.887,73,4.517,74,2.3,75,3.815,76,1.354,81,0.308,83,0.192,85,0.047,87,0.002,88,0.002,450,5.165,462,4.506,463,7.308,464,2.921,473,4.153,558,6.181,568,4.333,578,2.788,902,3.097,920,4.613,923,2.386,928,2.432,1000,6.173,2121,4.806,2122,7.83,2123,4.806,2124,4.806,2125,4.806,2126,4.806,2127,4.806,2128,4.806,2129,4.806,2130,4.806,2131,4.806,2132,4.806,2133,4.806]],["title/injectables/JwtAuthenticationGuard.html",[207,1.888,2134,4.721]],["body/injectables/JwtAuthenticationGuard.html",[3,0.065,4,0.076,5,0.076,25,0.004,55,2.686,69,0.638,81,0.496,85,0.076,87,0.003,88,0.003,122,2.133,207,3.327,208,3.77,724,5.152,1618,3.35,2134,8.318,2135,6.975,2136,7.736,2137,6.474,2138,6.975]],["title/injectables/JwtRefreshGuard.html",[207,1.888,648,4.128]],["body/injectables/JwtRefreshGuard.html",[3,0.064,4,0.076,5,0.076,25,0.004,55,2.655,69,0.634,81,0.491,85,0.076,87,0.003,88,0.003,122,2.109,207,3.304,208,3.727,608,4.73,633,4.307,648,7.224,724,5.093,1618,3.311,2135,6.896,2137,6.4,2138,6.896,2139,7.648]],["title/injectables/JwtRefreshTokenStrategy.html",[207,1.888,718,4.128]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.044,4,0.052,5,0.052,8,0.168,24,0.255,25,0.004,26,0.635,32,0.177,38,2.295,69,0.688,81,0.335,83,0.286,85,0.052,87,0.003,88,0.003,99,1.405,100,1.849,110,0.481,111,0.431,113,1.024,114,1.603,122,1.439,138,1.725,139,0.498,144,2.313,159,5.795,193,3.913,207,2.584,208,2.543,210,0.335,222,1.254,247,1.957,608,4.546,613,3.601,616,5.935,632,4.354,633,2.939,645,4.705,646,3.913,647,3.364,718,5.649,724,3.475,730,5.995,731,4.367,774,6.603,775,4.367,776,4.367,790,6.846,799,4.705,806,4.367,1618,2.26,1859,4.114,2041,3.475,2140,8.181,2141,5.218,2142,5.218,2143,5.218,2144,7.164,2145,5.218,2146,4.367,2147,4.705,2148,4.367,2149,4.114,2150,5.649,2151,4.367,2152,4.705,2153,4.705,2154,6.46,2155,5.649,2156,4.705,2157,5.218,2158,5.218]],["title/injectables/JwtStrategy.html",[207,1.888,719,4.128]],["body/injectables/JwtStrategy.html",[3,0.046,4,0.054,5,0.054,8,0.176,15,1.121,24,0.264,25,0.004,26,0.668,32,0.183,64,1.98,69,0.696,76,1.547,78,2.834,81,0.352,83,0.296,85,0.054,87,0.003,88,0.003,99,1.455,100,1.898,110,0.498,111,0.447,113,1.077,114,1.659,122,1.514,139,0.524,144,2.394,207,2.675,208,2.675,210,0.476,221,1.692,222,1.32,277,1.837,493,2.834,494,3.419,517,3.614,525,2.087,527,2.675,616,5.104,632,4.507,647,3.539,719,5.847,724,3.656,746,4.95,774,6.744,775,4.594,776,4.594,790,4.594,806,4.594,1618,2.377,1844,3.94,2041,3.656,2146,4.594,2147,4.95,2148,4.594,2149,4.329,2150,4.329,2151,4.594,2152,4.95,2153,4.95,2154,4.95,2155,4.329,2156,4.95,2159,5.49,2160,5.49,2161,7.416,2162,5.49]],["title/classes/ListRolesDto.html",[81,0.336,2163,4.382]],["body/classes/ListRolesDto.html",[3,0.058,4,0.068,5,0.068,8,0.222,9,1.037,24,0.306,25,0.004,32,0.213,69,0.478,81,0.443,83,0.276,85,0.068,87,0.003,88,0.003,110,0.464,111,0.416,133,4.843,135,3.719,139,0.895,210,0.443,597,4.748,752,1.681,943,2.113,944,2.479,945,2.035,1022,0.45,1388,4.768,2163,7.206,2164,9.381,2165,6.91,2166,6.91,2167,6.91]],["title/injectables/LocalAuthenticationGuard.html",[207,1.888,643,4.382]],["body/injectables/LocalAuthenticationGuard.html",[3,0.065,4,0.077,5,0.077,25,0.004,69,0.641,81,0.5,85,0.077,87,0.003,88,0.003,122,2.15,207,3.342,208,3.799,643,7.756,724,5.192,1618,3.376,2137,6.525,2168,7.797,2169,7.797]],["title/injectables/LocalStrategy.html",[207,1.888,720,4.128]],["body/injectables/LocalStrategy.html",[3,0.05,4,0.059,5,0.059,8,0.192,24,0.279,25,0.004,26,1.206,32,0.194,64,2.151,69,0.668,78,3.079,81,0.383,83,0.312,85,0.059,87,0.003,88,0.003,99,1.537,100,1.978,110,0.526,111,0.472,113,1.17,114,1.753,122,1.644,138,1.972,144,1.925,207,2.826,208,2.906,210,0.383,594,4.54,632,4.763,638,6.671,639,4.991,720,6.179,724,3.972,757,5.876,1618,2.582,2041,3.972,2146,4.991,2148,4.991,2149,4.702,2151,4.991,2170,8.753,2171,5.964,2172,5.964,2173,5.964,2174,7.837,2175,7.837,2176,5.964,2177,5.377,2178,5.964,2179,5.964,2180,5.964]],["title/classes/LoggingTypeEnum.html",[81,0.336,1050,3.613]],["body/classes/LoggingTypeEnum.html",[3,0.053,4,0.063,5,0.063,8,0.204,9,0.982,24,0.32,25,0.004,26,1.097,32,0.223,55,3.13,81,0.407,85,0.063,87,0.003,88,0.003,92,4.186,139,1.001,312,6.156,616,5.984,665,3.179,1022,0.413,1050,5.628,1181,3.676,1644,7.504,2181,5.717,2182,9.458,2183,6.341,2184,6.341,2185,6.341]],["title/classes/LoginOfUserEvent.html",[81,0.336,1878,4.128]],["body/classes/LoginOfUserEvent.html",[3,0.052,4,0.061,5,0.061,8,0.198,9,0.964,22,2.335,24,0.335,25,0.004,26,1.257,32,0.233,55,2.781,81,0.396,83,0.246,85,0.061,87,0.003,88,0.003,110,0.414,111,0.371,139,0.996,149,2.138,210,0.396,246,2.773,591,4.142,752,1.849,757,6.005,1022,0.402,1181,3.265,1283,2.802,1392,4.425,1396,4.425,1581,6.005,1582,4.623,1850,4.861,1878,6.315,2186,9.76]],["title/classes/LoginOfUserEventHandler.html",[81,0.336,2187,4.382]],["body/classes/LoginOfUserEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,22,1.483,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,591,2.631,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1399,5.507,1564,3.635,1878,7.338,1879,5.393,2187,6.571,2188,8.766,2189,5.982,2190,5.982,2191,5.982]],["title/classes/MailDto.html",[81,0.336,255,4.128]],["body/classes/MailDto.html",[3,0.051,4,0.06,5,0.06,8,0.196,9,0.958,24,0.333,25,0.004,26,1.214,27,3.194,32,0.232,69,0.551,79,5.131,81,0.511,82,2.923,83,0.244,85,0.06,87,0.003,88,0.003,92,4.28,110,0.41,111,0.586,128,3.362,210,0.392,255,6.277,572,5.708,910,5.969,943,1.954,944,2.388,945,1.799,951,5.109,1022,0.398,1036,7.16,2192,6.109,2193,6.983,2194,6.109,2195,6.109,2196,6.109,2197,6.109,2198,6.109]],["title/classes/MailLandingPageDto.html",[81,0.336,1727,4.382]],["body/classes/MailLandingPageDto.html",[3,0.054,4,0.064,5,0.064,8,0.207,9,0.992,15,1.955,24,0.323,25,0.004,26,1.268,32,0.224,81,0.413,83,0.257,85,0.064,87,0.003,88,0.003,92,4.211,93,5.866,110,0.433,111,0.388,112,4.155,139,0.966,210,0.413,752,1.773,1022,0.42,1283,2.928,1727,6.895,2199,9.574,2200,6.443,2201,6.443,2202,6.443,2203,8.239]],["title/classes/MailRequiredException.html",[81,0.336,2204,4.382]],["body/classes/MailRequiredException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,640,4.545,713,4.375,1022,0.482,1225,4.08,1616,4.73,1618,3.887,1620,6.188,2204,7.513,2205,8.094,2206,7.394,2207,7.394,2208,5.83]],["title/classes/MailResponse.html",[81,0.336,129,4.128]],["body/classes/MailResponse.html",[3,0.059,4,0.069,5,0.069,8,0.225,9,1.046,24,0.309,25,0.004,26,1.057,32,0.215,81,0.449,83,0.279,85,0.069,87,0.003,88,0.003,92,4.152,93,5.316,110,0.471,111,0.422,112,3.964,129,6.848,139,0.901,210,0.449,752,1.691,943,2.131,944,2.422,1022,0.456,1133,3.692,2209,7.006,2210,7.006,2211,7.006]],["title/entities/MediaEntity.html",[0,1.774,465,3.274]],["body/entities/MediaEntity.html",[0,1.824,2,1.6,3,0.03,4,0.035,5,0.035,6,4.502,8,0.113,9,0.787,13,2.787,14,3.02,15,1.335,21,2.83,24,0.342,25,0.004,26,0.891,27,3.471,32,0.238,34,5.767,39,6.157,40,5.984,43,3.658,51,2.624,69,0.546,70,3.185,71,3.185,72,3.245,74,1.685,75,3.185,76,0.992,77,2.777,81,0.226,83,0.14,85,0.035,87,0.002,88,0.002,441,4.797,449,2.141,455,5.576,465,3.367,473,4.242,562,4.874,570,2.527,752,1.171,862,5.97,901,5.942,902,2.27,920,4.128,923,1.748,928,1.782,1019,2.777,2212,3.522,2213,6.536,2214,6.536,2215,6.536,2216,6.536,2217,6.536,2218,6.536,2219,6.536,2220,6.536,2221,5.384,2222,3.522,2223,5.384,2224,3.522,2225,5.384,2226,3.522,2227,3.522,2228,3.522,2229,5.384,2230,3.522,2231,5.384,2232,3.522,2233,3.522,2234,3.522,2235,5.384,2236,3.522,2237,5.384,2238,3.522,2239,3.522]],["title/entities/MessageEntity.html",[0,1.774,467,3.487]],["body/entities/MessageEntity.html",[0,2.288,2,2.178,3,0.04,4,0.047,5,0.047,6,4.501,8,0.154,9,0.941,13,3.334,14,3.614,15,1.597,21,3.386,24,0.339,25,0.004,26,1.033,27,3.44,32,0.236,35,3.996,39,4.223,40,4.105,43,4.084,51,3.291,69,0.541,70,3.81,71,3.81,72,3.882,73,4.511,74,2.294,75,3.81,76,1.351,81,0.308,83,0.191,85,0.047,87,0.002,88,0.002,292,5.863,441,5.356,449,2.914,450,5.159,464,2.914,467,4.498,558,6.176,572,3.09,752,1.663,920,4.609,923,2.38,928,2.426,2240,4.794,2241,7.05,2242,6.754,2243,4.794,2244,4.794,2245,6.754,2246,4.794,2247,4.794,2248,4.794,2249,4.794,2250,4.794]],["title/classes/NoUserTraceException.html",[81,0.336,2251,4.721]],["body/classes/NoUserTraceException.html",[3,0.061,4,0.072,5,0.072,22,2.386,25,0.004,32,0.181,69,0.506,81,0.469,85,0.072,87,0.003,88,0.003,210,0.617,712,5.766,1022,0.476,1225,4.052,1227,5.047,1616,4.699,1618,3.861,2251,8.04,2252,8.918,2253,7.313,2254,9.621,2255,7.313,2256,7.313,2257,7.313,2258,7.313]],["title/classes/NotTheOwnerException.html",[81,0.336,2259,4.382]],["body/classes/NotTheOwnerException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,640,4.545,823,5.102,1022,0.482,1225,4.08,1616,4.73,1618,3.887,2120,6.667,2259,7.513,2260,8.094,2261,7.394,2262,7.394,2263,7.394]],["title/entities/NotificationEntity.html",[0,1.774,483,3.375]],["body/entities/NotificationEntity.html",[0,1.69,2,1.45,3,0.027,4,0.032,5,0.032,6,4.405,8,0.103,9,0.739,13,2.619,14,2.838,15,1.254,21,2.659,22,1.523,24,0.374,25,0.004,26,1.051,27,3.391,28,4.984,29,6.299,30,4.727,31,4.175,32,0.232,35,3.634,37,5.239,38,3.995,39,4.995,40,4.855,43,3.514,44,2.877,45,4.175,46,5.99,48,2.877,49,4.175,51,2.431,53,3.822,55,2.411,61,2.877,62,4.175,64,2.881,69,0.553,70,3.893,71,2.431,72,2.477,73,4.006,74,1.527,75,2.431,76,0.899,78,1.647,79,3.959,80,4.843,81,0.32,82,1.527,83,0.344,85,0.032,86,5.476,87,0.002,88,0.002,289,4.459,293,1.756,450,4.855,464,1.939,473,3.571,483,3.216,558,4.239,578,2.187,586,2.29,859,3.443,869,2.516,887,4.792,902,2.057,920,3.966,923,1.584,928,1.615,1061,2.202,2193,5.942,2264,3.191,2265,6.142,2266,7.536,2267,4.989,2268,3.191,2269,3.191,2270,3.191,2271,3.191,2272,3.191,2273,4.989,2274,3.191,2275,3.191,2276,4.989,2277,3.191,2278,3.191,2279,6.795,2280,3.191,2281,3.191,2282,4.989,2283,3.191,2284,3.191,2285,3.191]],["title/controllers/OccupationController.html",[89,2.703,2286,4.382]],["body/controllers/OccupationController.html",[3,0.027,4,0.031,5,0.031,8,0.102,24,0.296,25,0.004,26,1.186,27,3.114,32,0.213,69,0.597,81,0.204,83,0.333,85,0.031,87,0.002,88,0.002,89,1.645,91,1.552,96,2.199,99,0.977,100,2.331,106,1.358,110,0.56,111,0.502,113,1.693,114,2.2,118,2.397,119,2.054,121,2.286,122,0.878,127,2.122,128,1.753,131,2.199,132,2.389,133,1.645,134,2.389,135,1.715,138,1.053,139,0.304,143,6.196,144,2.787,222,2.075,258,2.286,312,1.992,426,5.646,574,2.092,665,2.787,666,3.035,1168,4.686,1201,7.411,1356,3.576,1784,2.512,1801,5.471,2286,4.17,2287,3.186,2288,4.492,2289,4.492,2290,6.939,2291,4.492,2292,6.136,2293,4.492,2294,4.492,2295,5.532,2296,3.186,2297,3.186,2298,3.186,2299,2.873,2300,3.186,2301,3.186,2302,3.186,2303,3.186,2304,2.873,2305,2.873,2306,3.186,2307,3.186,2308,4.492,2309,2.873,2310,3.186,2311,4.983,2312,2.873,2313,3.186,2314,3.186,2315,2.873,2316,4.983,2317,3.186,2318,3.186,2319,2.873,2320,3.186,2321,3.186,2322,2.666,2323,2.666,2324,4.601,2325,2.873,2326,2.512,2327,2.873,2328,2.873,2329,2.512,2330,2.873,2331,2.873,2332,3.186,2333,3.186,2334,3.186,2335,5.532,2336,3.186,2337,2.873,2338,3.186,2339,3.186,2340,3.186,2341,2.666,2342,3.186,2343,3.186,2344,3.186,2345,2.666,2346,3.186,2347,3.186,2348,3.186,2349,3.186,2350,3.186,2351,2.873,2352,3.186,2353,3.186,2354,3.186,2355,3.186,2356,3.186]],["title/classes/OccupationDto.html",[81,0.336,1141,3.613]],["body/classes/OccupationDto.html",[3,0.049,4,0.058,5,0.058,8,0.188,9,0.932,13,3.7,14,4.01,15,1.772,21,3.757,24,0.351,25,0.004,26,1.124,32,0.244,43,4.339,81,0.376,83,0.368,85,0.058,87,0.003,88,0.003,110,0.394,111,0.522,139,1.025,210,0.376,752,1.925,943,1.901,944,2.265,1022,0.382,1133,3.087,1141,5.345,2357,5.859,2358,5.859,2359,5.859,2360,5.859,2361,5.859,2362,5.859,2363,5.859]],["title/entities/OccupationEntity.html",[0,1.774,469,2.551]],["body/entities/OccupationEntity.html",[0,1.505,2,3.407,3,0.037,4,0.044,5,0.044,8,0.143,9,0.903,13,3.197,14,3.465,15,1.531,21,3.246,24,0.339,25,0.004,26,0.998,27,3.444,30,2.629,32,0.236,34,5.502,37,2.563,38,1.955,43,3.982,51,3.118,69,0.602,70,3.118,71,3.653,72,3.722,74,2.126,75,3.653,76,1.252,81,0.41,82,2.126,83,0.299,85,0.044,87,0.002,88,0.002,441,5.223,442,3.332,443,3.332,469,3.118,473,4.047,834,3.503,859,4.415,874,5.381,899,5.886,902,2.864,920,4.495,923,2.206,928,2.249,943,1.09,944,1.84,945,1.309,1385,4.797,1618,1.924,1763,4.688,1946,4.797,2041,2.959,2364,4.443,2365,6.76,2366,6.76,2367,6.398,2368,4.443,2369,6.398,2370,4.443,2371,4.443,2372,4.443,2373,4.443,2374,4.443,2375,4.443,2376,6.398,2377,4.443,2378,4.443,2379,5.045,2380,4.443,2381,4.443]],["title/modules/OccupationModule.html",[149,1.258,323,3.926]],["body/modules/OccupationModule.html",[3,0.034,4,0.04,5,0.04,25,0.004,64,1.475,69,0.736,78,2.111,81,0.262,83,0.163,85,0.04,87,0.002,88,0.002,91,2.935,97,2.514,106,2.568,122,1.128,149,1.448,151,2.303,152,3.392,156,5.346,158,3.256,160,3.661,161,2.486,162,2.486,164,3.661,165,3.661,166,2.724,167,4.011,168,2.303,169,3.882,170,0.915,171,2.29,172,2.724,178,4.19,180,3.225,183,3.225,186,5.637,188,3.882,189,2.822,190,2.636,191,1.576,194,2.724,195,2.724,196,2.724,197,2.724,198,2.636,230,3.225,238,2.935,276,2.724,277,1.369,278,3.066,323,7.263,469,2.935,574,2.529,1080,1.771,1134,5.04,1136,5.802,1140,2.636,1149,5.42,1186,5.04,1194,1.744,1537,5.04,1547,5.04,1724,2.251,1744,5.04,1746,3.422,1770,5.04,1771,2.822,1789,5.04,1790,2.636,2286,5.983,2324,6.595,2325,3.687,2382,3.687,2383,3.687,2384,4.09,2385,4.09,2386,4.09,2387,5.04,2388,3.422,2389,5.04,2390,3.422,2391,3.422,2392,5.04,2393,3.687,2394,5.04,2395,3.422,2396,5.04,2397,3.687,2398,5.04,2399,3.422,2400,3.422,2401,5.983]],["title/classes/OccupationNotFoundException.html",[81,0.336,2402,4.382]],["body/classes/OccupationNotFoundException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.514,81,0.476,85,0.073,87,0.003,88,0.003,122,2.046,210,0.621,640,4.553,1022,0.484,1225,4.089,1236,3.317,1517,6.691,1616,4.741,1618,3.896,2402,7.53,2403,8.113,2404,6.691,2405,6.691,2406,7.421]],["title/classes/OccupationResponse.html",[81,0.336,2326,4.128]],["body/classes/OccupationResponse.html",[3,0.048,4,0.057,5,0.057,8,0.184,9,0.918,13,3.657,14,3.964,15,1.752,21,3.714,24,0.348,25,0.004,26,1.113,32,0.242,43,4.31,81,0.367,83,0.365,85,0.057,87,0.003,88,0.003,110,0.385,111,0.517,139,1.022,210,0.367,752,1.919,943,1.872,944,2.338,945,1.686,1022,0.373,2326,6.014,2407,10.002,2408,5.725,2409,5.725,2410,5.725,2411,5.725,2412,5.725,2413,5.725,2414,5.725]],["title/injectables/OccupationService.html",[207,1.888,2324,3.926]],["body/injectables/OccupationService.html",[3,0.019,4,0.023,5,0.023,8,0.074,24,0.272,25,0.004,26,1.101,32,0.196,69,0.67,81,0.148,83,0.349,85,0.023,87,0.001,88,0.001,99,0.753,100,2.217,106,0.983,110,0.514,111,0.46,113,1.5,114,2.049,122,0.636,138,0.762,139,0.366,144,2.828,170,0.516,207,1.384,208,1.124,210,0.148,211,1.655,212,4.752,213,5.038,218,1.818,220,3.886,221,0.711,222,1.838,223,4.578,224,2.917,225,1.655,242,1.536,245,1.818,312,1.442,574,3.333,662,2.868,664,2.83,665,3.147,666,3.353,1069,0.821,1126,3.026,1129,3.886,1132,3.212,1136,4.402,1141,3.965,1142,1.729,1143,5.43,1144,1.818,1145,1.818,1168,4.667,1201,4.53,1224,3.282,1225,2.24,1236,2.852,1317,1.536,1533,3.026,1621,4.125,1673,5.03,1709,4.565,1738,1.818,1746,1.93,1766,3.026,1771,1.591,1775,3.026,1778,1.536,1782,3.026,1784,3.026,1787,1.655,1788,1.655,1790,1.486,1801,4.53,2288,3.46,2289,3.46,2291,3.46,2293,3.46,2294,3.46,2295,3.46,2299,3.46,2304,3.46,2312,3.46,2315,3.46,2319,3.46,2324,2.877,2326,1.818,2327,2.079,2328,2.079,2329,1.818,2330,2.079,2331,3.46,2402,5.763,2403,2.079,2415,2.306,2416,5.745,2417,3.838,2418,2.306,2419,3.838,2420,2.306,2421,5.745,2422,2.306,2423,2.306,2424,2.306,2425,3.838,2426,2.306,2427,2.306,2428,2.306,2429,4.808,2430,2.306,2431,4.808,2432,2.079,2433,2.306,2434,1.93,2435,2.306,2436,2.306,2437,3.886,2438,1.591,2439,3.026,2440,1.93,2441,3.026,2442,1.93,2443,3.026,2444,1.93,2445,2.306,2446,3.838,2447,4.929,2448,3.46,2449,2.306,2450,2.306,2451,2.306,2452,2.306,2453,2.306,2454,3.838,2455,3.838]],["title/entities/PlanEntity.html",[0,1.774,471,3.613]],["body/entities/PlanEntity.html",[0,2.062,2,1.885,3,0.035,4,0.041,5,0.041,6,4.554,8,0.133,9,0.868,13,3.074,14,3.332,15,1.472,21,3.122,24,0.373,25,0.004,26,1.076,27,3.505,28,6.07,29,6.262,30,4.7,32,0.24,43,3.889,51,2.966,69,0.421,70,4.308,71,3.513,72,3.579,74,1.985,75,3.513,76,1.169,81,0.266,83,0.393,85,0.041,86,6.262,87,0.002,88,0.002,289,5.005,471,4.201,481,5.373,576,3.472,838,2.674,868,5.698,900,3.924,920,4.389,923,2.06,928,2.1,1591,6.034,1613,3.111,1614,5.094,2456,4.149,2457,7.21,2458,8.458,2459,8.458,2460,4.149,2461,4.149,2462,4.149,2463,6.087,2464,7.943,2465,4.149,2466,4.149,2467,4.149,2468,4.149,2469,4.149,2470,6.087,2471,4.149,2472,4.149]],["title/controllers/ProfileController.html",[89,2.703,2473,4.382]],["body/controllers/ProfileController.html",[3,0.019,4,0.023,5,0.023,8,0.074,15,1.304,22,0.952,24,0.291,25,0.004,26,1.101,27,3.032,32,0.208,69,0.567,81,0.148,83,0.343,85,0.023,87,0.001,88,0.001,89,1.192,91,1.125,96,1.593,97,0.812,99,0.753,100,2.306,106,0.984,110,0.55,111,0.493,113,1.649,114,2.167,118,2.246,119,1.488,121,1.657,122,0.637,127,1.538,128,1.271,131,1.593,132,1.731,133,1.192,134,1.731,135,1.243,138,0.763,139,0.22,143,6.033,144,2.714,222,2.021,247,1.85,258,1.657,288,3.215,289,2.273,292,2.88,299,3.215,302,1.731,303,1.932,305,1.731,307,1.932,308,2.082,313,1.444,314,1.82,408,1.544,426,4.787,578,3.263,613,6.636,641,1.657,646,1.731,665,2.714,666,2.956,681,1.82,1220,1.444,1221,1.538,1269,4.533,1356,3.54,1513,4.448,1763,4.783,1784,1.82,1830,5.433,2155,3.029,2305,2.082,2308,3.463,2309,2.082,2322,1.932,2323,1.932,2329,1.82,2335,6.213,2337,2.082,2341,3.215,2345,1.932,2473,3.215,2474,2.309,2475,3.463,2476,3.841,2477,3.463,2478,6.384,2479,3.841,2480,3.841,2481,3.463,2482,4.448,2483,3.463,2484,3.463,2485,3.463,2486,2.309,2487,2.309,2488,2.309,2489,2.309,2490,5.75,2491,3.841,2492,2.309,2493,2.309,2494,4.933,2495,2.309,2496,5.118,2497,2.309,2498,2.309,2499,2.309,2500,2.309,2501,3.463,2502,2.309,2503,2.309,2504,2.309,2505,2.309,2506,2.082,2507,3.841,2508,2.309,2509,2.309,2510,2.309,2511,2.309,2512,2.309,2513,3.841,2514,2.309,2515,2.309,2516,5.759,2517,3.463,2518,2.309,2519,2.309,2520,3.841,2521,2.309,2522,3.699,2523,2.082,2524,1.932,2525,2.082,2526,2.082,2527,3.463,2528,2.082,2529,2.309,2530,2.309,2531,2.082,2532,2.082,2533,2.309,2534,3.841,2535,2.309,2536,2.309,2537,4.933,2538,2.309,2539,2.309,2540,2.309,2541,2.309,2542,2.309,2543,2.309,2544,2.309,2545,2.309,2546,4.933,2547,2.309,2548,2.309,2549,3.841,2550,2.309,2551,2.309,2552,2.309,2553,2.309,2554,2.309,2555,2.309,2556,2.309,2557,2.309,2558,2.309,2559,2.309]],["title/entities/ProfileEntity.html",[0,1.774,473,2.34]],["body/entities/ProfileEntity.html",[0,1.376,2,3.421,3,0.021,4,0.024,5,0.024,8,0.079,9,0.623,13,2.206,14,2.391,15,1.057,21,2.241,22,1.643,24,0.335,25,0.004,26,0.73,27,3.359,32,0.23,34,4.329,35,1.462,38,4.097,39,5.947,40,5.661,43,3.133,51,1.98,55,1.411,64,2.162,69,0.58,70,2.921,71,2.521,72,2.569,73,2.344,74,1.182,75,2.521,76,0.696,78,1.276,81,0.159,83,0.3,85,0.024,87,0.001,88,0.001,111,0.561,293,3.645,441,4.343,442,1.853,443,1.853,444,3.992,445,1.853,446,1.773,462,4.744,463,1.853,464,1.502,465,4.707,466,1.948,469,2.921,473,1.816,483,3.864,484,1.853,551,5.341,570,4.302,574,2.517,578,1.842,586,2.916,822,2.985,838,4.27,841,6.334,842,6.428,862,2.804,869,1.948,874,2.916,887,4.571,898,4.08,899,3.714,900,4.591,901,3.446,913,1.705,920,3.904,923,1.227,928,1.251,940,1.545,943,0.606,944,0.997,945,0.728,950,4.33,955,4.666,962,3.664,979,3.664,1000,4.726,1003,4.33,1253,3.335,1254,3.236,1256,4.27,1258,1.646,2366,4.666,2560,2.471,2561,5.175,2562,5.175,2563,5.175,2564,5.175,2565,2.471,2566,4.063,2567,4.063,2568,2.471,2569,2.471,2570,2.471,2571,2.471,2572,4.063,2573,2.471,2574,4.063,2575,2.471,2576,4.063,2577,4.063,2578,5.995,2579,2.471,2580,4.063,2581,2.471,2582,4.063,2583,2.471,2584,2.471,2585,2.471,2586,4.063,2587,4.063,2588,2.471,2589,2.471,2590,4.063,2591,2.471,2592,2.471,2593,2.471,2594,4.063,2595,2.471,2596,2.471]],["title/modules/ProfileModule.html",[149,1.258,324,3.926]],["body/modules/ProfileModule.html",[3,0.031,4,0.037,5,0.037,22,0.917,25,0.004,64,1.333,69,0.739,78,1.909,81,0.237,83,0.147,85,0.037,87,0.002,88,0.002,91,2.722,97,2.367,106,2.382,122,1.019,149,1.343,151,2.082,152,3.146,156,5.15,158,3.136,160,3.395,161,2.247,162,2.247,164,3.395,165,3.395,166,2.462,167,3.721,168,2.082,169,3.601,170,0.827,171,2.124,172,2.462,178,4.258,180,2.915,183,2.915,186,5.916,188,3.601,189,2.551,190,2.383,191,1.425,194,2.462,195,2.462,196,2.462,197,2.462,198,2.383,230,2.915,238,2.653,276,2.462,277,1.237,278,2.772,324,7.085,469,2.722,473,2.497,578,2.672,822,3.223,913,2.551,1080,1.601,1194,1.576,1215,4.675,1217,5.298,1222,2.188,1230,4.888,1264,4.675,1553,4.675,1562,4.675,1724,2.035,1759,4.675,1761,3.094,1763,2.312,1771,3.855,1790,2.383,1809,4.675,1820,4.675,1827,4.675,2388,3.094,2390,3.094,2391,3.094,2393,3.334,2395,4.675,2397,3.334,2399,4.675,2400,3.094,2401,5.635,2473,5.635,2522,6.353,2523,3.334,2597,3.334,2598,3.697,2599,3.334,2600,3.697,2601,3.697,2602,4.675,2603,3.697,2604,3.094,2605,4.675,2606,4.675,2607,4.675,2608,4.675,2609,4.675,2610,3.697,2611,3.334,2612,4.675,2613,4.675,2614,4.675,2615,4.675]],["title/classes/ProfileResponse.html",[81,0.336,1220,3.274]],["body/classes/ProfileResponse.html",[3,0.051,4,0.06,5,0.06,8,0.196,9,0.958,15,1.809,24,0.346,25,0.004,26,1.214,32,0.24,53,4.381,81,0.392,83,0.244,85,0.06,87,0.003,88,0.003,110,0.41,111,0.533,139,1.016,210,0.392,408,3.559,752,1.908,943,1.954,944,2.388,945,1.799,1022,0.398,1220,4.978,1254,5.538,1778,5.898,2616,6.109,2617,7.961,2618,6.109,2619,6.109,2620,6.109]],["title/injectables/ProfileService.html",[207,1.888,2522,3.926]],["body/injectables/ProfileService.html",[3,0.014,4,0.017,5,0.017,8,0.054,15,1.865,22,1.645,24,0.274,25,0.004,26,1.146,32,0.195,69,0.626,81,0.108,83,0.308,85,0.017,87,0.001,88,0.001,99,0.577,100,2.225,106,0.719,110,0.518,111,0.464,113,1.513,114,2.06,122,0.465,138,0.558,139,0.281,144,2.419,170,0.377,207,1.06,208,0.822,210,0.108,211,1.211,212,4.018,213,4.321,218,1.33,220,3.687,221,0.52,222,1.983,223,4.995,224,3.058,225,1.211,245,1.33,408,2.34,574,1.641,578,3.037,662,2.893,664,2.855,666,3.448,710,5.969,822,2.254,823,3.227,871,1.838,1069,1.047,1173,6.486,1206,2.318,1209,1.33,1210,1.33,1217,3.641,1220,1.055,1221,1.123,1223,3.356,1224,3.114,1225,2.125,1226,1.74,1227,1.164,1228,1.33,1235,1.895,1236,3.753,1253,3.014,1254,2.924,1269,4.181,1550,2.204,1575,6.082,1576,1.521,1673,3.08,1756,2.318,1761,1.412,1763,1.838,1771,2.029,1778,1.123,1790,1.087,1807,3.687,1812,2.651,1814,1.33,1818,2.318,1826,2.318,1830,3.687,2259,3.27,2260,1.521,2329,1.33,2434,1.412,2440,2.46,2442,1.412,2444,1.412,2448,2.651,2475,2.651,2477,2.651,2481,2.651,2482,3.523,2483,2.651,2484,2.651,2485,2.651,2496,3.753,2506,2.651,2516,6.238,2522,2.204,2525,1.521,2526,1.521,2527,2.651,2528,1.521,2604,1.412,2621,1.687,2622,2.94,2623,2.94,2624,4.676,2625,2.94,2626,2.94,2627,1.687,2628,2.94,2629,1.687,2630,2.94,2631,1.687,2632,2.94,2633,1.687,2634,2.94,2635,1.687,2636,1.687,2637,1.687,2638,1.687,2639,1.687,2640,2.94,2641,2.94,2642,1.687,2643,2.94,2644,4.438,2645,1.687,2646,2.94,2647,1.687,2648,2.94,2649,1.687,2650,2.94,2651,1.687,2652,4.591,2653,1.412,2654,2.93,2655,2.318,2656,3.08,2657,2.318,2658,1.687,2659,1.687,2660,1.687,2661,1.687,2662,2.318,2663,1.687,2664,1.687,2665,1.687,2666,1.687,2667,7.714,2668,2.94,2669,3.907,2670,2.94,2671,2.318,2672,2.94,2673,2.94,2674,2.94,2675,1.687,2676,1.687,2677,3.907,2678,1.687,2679,1.687,2680,1.687]],["title/classes/QueryErrorException.html",[81,0.336,2431,4.382]],["body/classes/QueryErrorException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.514,81,0.476,85,0.073,87,0.003,88,0.003,122,2.046,210,0.621,640,4.553,665,2.396,1022,0.484,1225,4.089,1616,4.741,1618,3.896,2431,7.53,2432,8.113,2681,7.421,2682,7.421,2683,7.421,2684,7.421]],["title/entities/ReferralCodeEntity.html",[0,1.774,485,3.613]],["body/entities/ReferralCodeEntity.html",[0,1.266,2,1.699,3,0.031,4,0.037,5,0.037,6,4.298,8,0.12,9,0.678,13,2.89,15,1.384,21,2.935,22,1.871,24,0.357,25,0.004,26,0.919,27,3.278,30,2.212,32,0.224,37,4.353,38,3.319,43,4.168,46,4.224,51,1.822,64,3.354,69,0.56,70,3.303,71,2.745,73,3.911,74,1.789,75,2.745,76,1.054,78,1.93,80,4.442,81,0.361,82,1.789,85,0.037,87,0.002,88,0.002,128,2.057,314,4.442,481,5.172,485,3.888,486,6.973,584,5.083,596,4.224,823,4.678,859,3.888,901,3.752,912,4.442,1036,6.674,1042,7.121,1363,5.345,1368,4.715,1385,2.803,1387,5.08,1586,3.371,1613,2.803,1946,2.803,2208,5.95,2685,6.779,2686,6.779,2687,5.634,2688,5.634,2689,4.715,2690,3.739,2691,3.739,2692,3.739,2693,3.739,2694,3.739,2695,3.739,2696,3.739,2697,3.739,2698,5.634,2699,5.634,2700,5.634,2701,5.634,2702,3.739,2703,3.739,2704,3.739,2705,5.634,2706,3.739,2707,3.739,2708,3.739,2709,3.739,2710,3.739,2711,3.739,2712,5.634,2713,3.739,2714,5.634,2715,3.739,2716,3.739,2717,3.739]],["title/classes/RegisterCommand.html",[81,0.336,777,4.128]],["body/classes/RegisterCommand.html",[3,0.053,4,0.063,5,0.063,8,0.205,9,0.986,24,0.339,25,0.004,26,1.305,32,0.236,81,0.409,83,0.254,85,0.063,87,0.003,88,0.003,110,0.429,111,0.384,112,4.143,139,1.002,210,0.409,591,4.196,594,4.638,752,1.863,777,6.457,1022,0.416,1283,2.9,1850,5.032,2718,6.382,2719,6.382,2720,9.043]],["title/classes/RegisterEvent.html",[81,0.336,2721,4.128]],["body/classes/RegisterEvent.html",[3,0.061,4,0.072,5,0.072,8,0.233,9,1.069,24,0.316,25,0.004,26,1.216,32,0.219,81,0.466,83,0.289,85,0.072,87,0.003,88,0.003,110,0.488,111,0.437,139,0.915,210,0.466,408,4.015,752,1.59,1022,0.473,1283,3.299,1393,4.188,2721,7,2722,7.26,2723,7.26,2724,7.26]],["title/classes/RegisterEventHandler.html",[81,0.336,740,4.382]],["body/classes/RegisterEventHandler.html",[3,0.051,4,0.06,5,0.06,8,0.195,9,0.953,15,1.616,22,1.962,24,0.215,25,0.004,32,0.195,55,2.102,69,0.647,81,0.388,83,0.241,85,0.06,87,0.003,88,0.003,99,1.552,110,0.407,111,0.365,113,1.187,122,1.669,170,1.354,224,2.384,331,5.101,366,1.983,740,6.623,742,7.95,1022,0.394,1063,1.669,1181,2.468,1188,3.941,1189,3.538,1192,3.538,1194,2.581,1195,2.706,1401,5.101,1434,6.623,1436,5.458,1499,3.125,1564,3.679,2721,7.372,2725,8.817,2726,8.817,2727,7.914,2728,6.054,2729,5.458,2730,6.054,2731,6.054,2732,7.136,2733,6.054]],["title/classes/RegisterHandler.html",[81,0.336,732,4.382]],["body/classes/RegisterHandler.html",[3,0.021,4,0.025,5,0.025,8,0.08,9,0.492,22,1.013,24,0.29,25,0.004,26,1.159,30,1.471,32,0.213,53,3.657,64,1.473,69,0.638,76,0.701,78,1.284,81,0.262,82,1.19,83,0.326,85,0.025,87,0.001,88,0.001,99,0.801,100,2.054,110,0.564,111,0.492,112,1.715,113,1.601,114,1.826,144,2.636,170,0.556,175,1.111,176,1.077,177,1.094,178,2.956,210,0.262,221,3.006,222,1.962,224,2.738,247,2.257,277,0.832,366,1.023,493,1.284,494,2.287,517,1.99,525,0.945,526,2.818,527,1.212,591,3.143,594,2.443,596,1.864,600,1.716,605,4.93,632,1.511,665,2.306,666,2.512,732,3.418,777,4.744,868,2.632,871,1.555,951,3.471,1022,0.162,1064,2.362,1069,1.454,1078,1.856,1080,1.077,1081,1.13,1138,3.033,1146,3.43,1160,2.931,1162,1.784,1167,3.093,1172,3.359,1223,1.784,1224,4.758,1225,3.246,1226,3.56,1227,1.716,1228,1.96,1246,2.081,1287,4.349,1288,3.682,1289,4.686,1290,3.682,1291,3.418,1292,3.418,1293,3.418,1294,3.418,1295,3.418,1299,2.242,1302,3.682,1304,4.744,1305,3.418,1307,3.418,1309,2.081,1311,3.418,1313,3.418,1316,2.931,1317,2.72,1318,3.22,1319,2.931,1320,3.22,1325,3.062,1326,2.081,1327,3.22,1328,3.22,1330,2.081,1331,2.242,1332,3.418,1333,2.242,1334,2.242,1337,5.979,1338,2.818,1339,2.818,1343,4.318,1346,2.242,1348,2.242,1349,2.242,1351,2.242,1358,1.555,1363,4.098,1367,3.682,1368,3.418,1369,2.242,1370,3.418,1371,3.418,1372,2.081,1373,2.081,1374,2.081,1375,3.418,1376,1.96,2721,1.96,2729,2.242,2734,2.486,2735,4.084,2736,2.486,2737,2.486,2738,2.486,2739,2.486,2740,2.486,2741,2.486,2742,2.486,2743,2.486,2744,2.486,2745,2.486,2746,2.486,2747,2.486,2748,2.486,2749,2.486,2750,4.084,2751,2.486,2752,4.084,2753,2.486,2754,2.486,2755,4.084,2756,2.486]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.336,2757,4.128]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.06,4,0.07,5,0.07,8,0.228,9,1.055,24,0.311,25,0.004,26,1.207,32,0.216,81,0.456,83,0.283,85,0.07,87,0.003,88,0.003,110,0.477,111,0.428,139,0.906,210,0.456,408,3.986,608,4.904,752,1.57,1022,0.463,1283,3.229,1393,4.099,2757,6.908,2758,9.5,2759,6.407,2760,6.407,2761,6.407]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.336,2762,4.382]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.045,4,0.053,5,0.053,8,0.173,22,1.336,24,0.26,25,0.004,32,0.181,64,1.943,69,0.666,76,1.518,81,0.346,83,0.292,85,0.053,87,0.003,88,0.003,99,1.436,100,1.88,110,0.492,111,0.441,113,1.057,114,1.638,170,1.205,175,2.408,176,2.332,177,2.37,178,2.229,210,0.47,221,2.256,222,1.295,224,1.623,277,1.803,293,2.964,366,1.834,493,2.781,494,3.392,517,3.568,525,2.048,527,2.625,608,4.607,662,2.02,664,1.994,665,2.685,1022,0.351,1063,1.485,1064,3.779,1069,2.607,1078,3.327,1080,2.332,1081,2.448,1138,3.957,1146,3.327,1167,2.332,1172,2.533,1193,2.408,1315,2.899,1539,3.472,1866,4.247,2757,7.036,2762,6.96,2763,8.317,2764,7.036,2765,5.387,2766,5.387,2767,4.039]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.336,2768,4.382]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.051,4,0.06,5,0.06,8,0.194,9,0.951,22,1.958,24,0.332,25,0.004,26,1.251,32,0.231,55,2.742,81,0.387,83,0.241,85,0.06,87,0.003,88,0.003,110,0.405,111,0.363,139,0.992,149,2.116,210,0.387,246,2.744,408,3.753,608,5.23,633,4.448,752,1.841,1022,0.393,1181,3.22,1283,2.743,1393,3.482,2768,6.61,2769,9.694,2770,5.442,2771,7.122,2772,6.61,2773,5.442,2774,5.442]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.336,2775,4.382]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.218,24,0.279,25,0.004,32,0.194,69,0.606,81,0.383,83,0.312,85,0.059,87,0.003,88,0.003,97,2.097,99,1.537,110,0.526,111,0.472,113,1.17,118,2.33,138,1.972,139,0.569,149,1.433,158,3.669,170,1.334,171,2.267,191,2.298,210,0.383,246,1.859,331,5.051,366,1.964,608,4.985,633,3.358,1022,0.389,1063,1.644,1188,3.913,1189,3.503,1190,2.756,1191,2.756,1192,3.503,1194,2.543,1195,2.666,1197,2.756,1198,2.804,1199,2.804,1401,3.844,1564,3.625,2768,7.78,2775,6.558,2776,8.753,2777,7.78,2778,5.964,2779,5.964,2780,5.964]],["title/injectables/RequestLoggingMiddleware.html",[207,1.888,346,4.382]],["body/injectables/RequestLoggingMiddleware.html",[3,0.036,4,0.042,5,0.042,8,0.138,9,0.75,24,0.261,25,0.004,32,0.181,69,0.654,81,0.275,83,0.248,85,0.042,87,0.002,88,0.002,99,1.222,110,0.418,111,0.375,113,0.84,122,1.181,138,1.416,139,0.769,158,2.984,171,1.628,191,1.65,207,2.246,208,2.086,210,0.275,221,2.262,224,1.29,236,5.067,243,3.211,247,3.213,293,4.714,312,5.041,331,4.015,345,6.423,346,5.213,366,1.073,367,2.955,368,3.073,369,6.148,370,3.073,371,3.073,375,5.789,616,4.9,641,3.073,642,5.789,647,2.76,1029,4.671,1034,4.911,1038,3.073,1050,2.955,1061,4.299,1068,5.505,1077,6.045,1084,3.376,1088,4.671,1090,3.583,1097,3.583,1098,3.861,1101,3.073,1642,3.376,1643,4.911,1644,3.376,1645,3.583,1650,3.583,1652,3.861,1653,3.376,1655,3.376,1659,3.376,1681,3.583,1682,4.911,1684,5.213,1687,5.213,1688,4.911,1689,3.376,1690,3.583,1691,3.583,1692,3.583,1693,5.213,1694,3.583,1695,5.213,1696,3.583,1697,3.583,1698,3.583,1699,3.583,1700,3.583,1701,3.583,1702,3.861,1710,3.583,1711,3.583,1712,3.583,1713,5.213,1714,3.583,2155,3.376,2781,8.062,2782,6.229,2783,4.282,2784,3.861,2785,4.282,2786,5.616,2787,3.861,2788,3.861,2789,4.282,2790,4.282,2791,4.282,2792,4.282]],["title/interfaces/RequestUser.html",[613,3.613,2793,3.757]],["body/interfaces/RequestUser.html",[3,0.062,4,0.073,5,0.073,8,0.237,9,1.078,22,2.49,24,0.262,25,0.004,64,3.621,69,0.62,78,3.803,85,0.073,87,0.003,88,0.003,613,6.181,616,5.866,647,4.748,1618,3.879,2793,5.287,2794,5.808,2795,7.367,2796,7.367]],["title/injectables/ResponseLoggingMiddleware.html",[207,1.888,349,4.382]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.037,4,0.044,5,0.044,8,0.142,9,0.767,24,0.291,25,0.004,32,0.184,69,0.625,81,0.283,83,0.254,85,0.044,87,0.002,88,0.002,99,1.249,100,1.688,110,0.428,111,0.383,113,0.866,122,1.217,138,1.459,139,0.78,144,1.425,149,1.061,158,3.027,171,1.678,191,1.701,207,2.296,208,2.151,210,0.283,221,2.302,222,1.061,224,1.33,236,5.155,243,3.31,247,3.252,293,4.771,312,5.113,345,5.601,349,5.329,366,1.106,367,3.046,368,3.168,369,6.222,370,3.168,371,3.168,372,5.329,373,3.694,374,5.329,375,6.447,616,4.97,641,3.168,642,5.89,647,2.845,1029,4.775,1034,5.021,1068,5.601,1077,6.131,1084,3.48,1088,3.31,1090,3.694,1101,3.168,1642,3.48,1643,5.021,1653,3.48,1655,3.48,1657,3.694,1659,3.48,1681,3.694,1682,5.021,1684,5.329,1687,5.329,1688,5.021,1689,3.48,1690,3.694,1691,3.694,1692,3.694,1693,3.694,1694,3.694,1695,5.329,1696,3.694,1697,3.694,1698,3.694,1699,3.694,1700,3.694,1701,3.694,1703,3.98,1704,3.98,1705,3.98,1706,3.98,1707,3.98,1708,3.98,1710,3.694,1711,3.694,1712,3.694,1713,3.694,1714,3.694,2784,3.98,2786,5.741,2787,3.98,2788,3.98,2797,8.178,2798,6.368,2799,4.414]],["title/classes/RestoreOccupationCommand.html",[81,0.336,2443,4.128]],["body/classes/RestoreOccupationCommand.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1128,5.29,1168,4.888,1535,5.904,1536,5.904,2443,6.878,2800,9.47]],["title/classes/RestoreOccupationCommandHandler.html",[81,0.336,2387,4.382]],["body/classes/RestoreOccupationCommandHandler.html",[3,0.044,4,0.052,5,0.052,8,0.169,15,1.077,24,0.256,25,0.004,32,0.178,69,0.662,76,1.486,81,0.338,83,0.288,85,0.052,87,0.003,88,0.003,99,1.415,100,1.859,110,0.485,111,0.434,113,1.034,114,1.614,139,0.689,170,1.18,210,0.463,221,2.224,222,1.734,224,2.478,277,1.765,366,1.808,469,2.57,494,3.362,507,4.386,525,2.005,540,3.205,662,1.978,664,2.671,665,1.702,666,2.537,1022,0.344,1063,1.454,1064,3.738,1069,2.569,1078,3.279,1080,2.283,1081,2.396,1136,6.104,1137,3.512,1138,3.935,1140,3.399,1149,3.399,1164,3.399,1167,2.283,1168,2.722,1170,3.512,1193,2.357,1233,2.902,1236,2.357,1250,3.399,1539,3.399,1541,5.689,2387,6.039,2443,6.974,2801,8.226,2802,4.413,2803,5.689,2804,3.784,2805,5.273,2806,5.273]],["title/classes/RestoreOccupationEvent.html",[81,0.336,2803,4.128]],["body/classes/RestoreOccupationEvent.html",[3,0.051,4,0.06,5,0.06,8,0.195,9,0.955,24,0.333,25,0.004,26,1.212,32,0.231,55,2.753,81,0.39,83,0.242,85,0.06,87,0.003,88,0.003,110,0.408,111,0.366,139,0.993,149,2.122,210,0.39,246,2.753,574,3.931,752,1.864,943,1.946,944,2.383,945,1.788,1022,0.396,1168,4.558,1179,4.553,1180,4.553,1181,3.233,1183,5.475,1184,4.553,1185,4.553,2803,6.252,2807,9.712,2808,6.636]],["title/classes/RestoreOccupationEventHandler.html",[81,0.336,2396,4.382]],["body/classes/RestoreOccupationEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,574,2.512,1022,0.39,1063,1.649,1149,5.999,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1200,4.485,2396,6.571,2803,7.338,2804,4.293,2809,8.766,2810,5.982,2811,5.006]],["title/classes/RestoreProfileCommand.html",[81,0.336,2662,4.128]],["body/classes/RestoreProfileCommand.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1208,5.063,1211,6.362,2496,6.104,2662,6.878,2812,9.47,2813,7.056]],["title/classes/RestoreProfileCommandHandler.html",[81,0.336,2614,4.382]],["body/classes/RestoreProfileCommandHandler.html",[3,0.044,4,0.052,5,0.052,8,0.169,15,1.077,24,0.256,25,0.004,32,0.178,69,0.662,76,1.486,81,0.338,83,0.288,85,0.052,87,0.003,88,0.003,99,1.415,100,1.859,110,0.485,111,0.434,113,1.034,114,1.614,139,0.689,170,1.18,210,0.463,221,2.224,222,1.734,224,2.478,277,1.765,366,1.808,473,2.357,494,3.362,509,4.27,525,2.005,542,3.12,662,1.978,664,2.671,665,1.702,666,2.537,1022,0.344,1063,1.454,1064,3.738,1069,2.569,1078,3.279,1080,2.283,1081,2.396,1138,3.935,1167,2.283,1193,2.357,1217,5.531,1218,3.205,1222,3.12,1230,3.042,1233,2.902,1236,2.357,1250,3.399,1539,3.399,1557,3.639,1559,3.784,2496,3.399,2614,6.039,2662,6.974,2802,4.413,2804,3.784,2814,8.226,2815,5.689,2816,5.273,2817,6.506,2818,5.273]],["title/classes/RestoreProfileEvent.html",[81,0.336,2815,4.128]],["body/classes/RestoreProfileEvent.html",[3,0.051,4,0.06,5,0.06,8,0.195,9,0.955,24,0.333,25,0.004,26,1.212,32,0.231,55,2.753,81,0.39,83,0.242,85,0.06,87,0.003,88,0.003,110,0.408,111,0.366,139,0.993,149,2.122,210,0.39,246,2.753,578,3.333,752,1.864,943,1.946,944,2.383,945,1.788,1022,0.396,1181,3.233,1260,4.358,1261,4.788,2496,5.691,2808,6.636,2815,6.252,2819,9.712,2820,6.072,2821,6.072,2822,6.072]],["title/classes/RestoreProfileEventHandler.html",[81,0.336,2615,4.382]],["body/classes/RestoreProfileEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,578,2.13,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1230,5.369,2615,6.571,2804,4.293,2811,5.006,2815,7.338,2823,8.766,2824,5.982,2825,5.393]],["title/classes/RestoreUserCommand.html",[81,0.336,2826,4.128]],["body/classes/RestoreUserCommand.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,15,1.934,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.281,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1279,5.063,1569,7.3,2826,6.878,2827,9.47]],["title/classes/RestoreUserCommandHandler.html",[81,0.336,2828,4.382]],["body/classes/RestoreUserCommandHandler.html",[3,0.041,4,0.048,5,0.048,8,0.156,9,0.821,15,1.393,22,1.206,24,0.28,25,0.004,32,0.195,38,2.139,64,1.754,69,0.663,76,1.371,81,0.312,83,0.272,85,0.048,87,0.002,88,0.002,99,1.338,100,1.781,110,0.458,111,0.411,113,0.954,114,1.526,170,1.088,175,2.174,176,2.106,177,2.139,178,2.012,210,0.438,221,1.499,222,1.64,224,2.374,277,1.628,366,1.71,493,2.511,494,3.248,517,3.325,525,1.849,527,2.37,602,3.49,662,2.559,664,2.525,665,2.544,666,2.771,710,3.356,752,1.412,1022,0.317,1063,1.341,1064,3.581,1069,2.429,1072,3.239,1078,3.1,1080,2.106,1081,2.21,1138,4.045,1146,3.1,1167,2.106,1172,2.287,1235,4.398,1236,2.174,1286,6.209,1315,2.618,1358,3.041,1399,2.878,1499,2.511,1558,5.116,1747,2.956,1844,3.49,2208,3.835,2802,4.07,2804,3.49,2826,6.736,2828,6.595,2829,8.544,2830,3.835,2831,4.864,2832,4.864,2833,4.864]],["title/classes/RestoreUserEvent.html",[81,0.336,2830,4.128]],["body/classes/RestoreUserEvent.html",[3,0.052,4,0.061,5,0.061,8,0.198,9,0.964,22,2.335,24,0.335,25,0.004,26,1.257,32,0.233,55,2.781,81,0.396,83,0.246,85,0.061,87,0.003,88,0.003,110,0.414,111,0.371,139,0.996,149,2.138,210,0.396,246,2.773,408,3.784,752,1.849,1022,0.402,1181,3.265,1283,2.802,1392,4.425,1393,3.557,1396,4.425,1581,6.005,1582,4.623,2808,6.702,2830,6.315,2834,9.76]],["title/classes/RestoreUserEventHandler.html",[81,0.336,2835,4.721]],["body/classes/RestoreUserEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,22,1.483,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1399,5.507,1401,3.855,2804,4.293,2811,5.006,2830,7.338,2835,7.08,2836,8.766,2837,5.982]],["title/classes/RoleGroupMembershipEnum.html",[81,0.336,1960,4.382]],["body/classes/RoleGroupMembershipEnum.html",[3,0.052,4,0.062,5,0.062,6,4.377,8,0.201,9,0.974,24,0.318,25,0.004,26,1.091,32,0.221,55,3.111,81,0.402,85,0.062,87,0.003,88,0.003,139,0.999,562,6.308,823,6.768,1022,0.408,1181,3.654,1960,6.77,2182,9.436,2838,8.54,2839,6.262,2840,8.843,2841,9.807,2842,6.262,2843,6.262,2844,6.262]],["title/classes/SamePasswordException.html",[81,0.336,2845,4.382]],["body/classes/SamePasswordException.html",[3,0.061,4,0.072,5,0.072,25,0.004,32,0.181,69,0.506,81,0.469,85,0.072,87,0.003,88,0.003,120,3.701,122,2.016,210,0.617,594,4.193,640,4.523,713,4.327,1022,0.476,1225,4.052,1616,4.699,1618,3.861,2047,6.594,2048,6.594,2845,7.463,2846,8.04,2847,7.313,2848,6.12,2849,6.12]],["title/classes/SendMailCommand.html",[81,0.336,282,4.128]],["body/classes/SendMailCommand.html",[3,0.05,4,0.059,5,0.059,8,0.193,9,0.949,24,0.332,25,0.004,26,1.209,32,0.23,81,0.386,83,0.24,85,0.059,87,0.003,88,0.003,92,4.26,110,0.404,111,0.583,139,0.991,210,0.386,282,6.215,293,5.134,572,5.667,752,1.861,943,1.934,944,2.376,945,1.772,951,5.072,1022,0.392,1495,5.036,1496,5.426,1497,5.426,2193,6.932,2850,9.684,2851,5.426,2852,5.426]],["title/classes/SendMailCommandHandler.html",[81,0.336,271,4.382]],["body/classes/SendMailCommandHandler.html",[3,0.048,4,0.057,5,0.057,8,0.186,24,0.273,25,0.004,32,0.189,69,0.661,81,0.37,83,0.306,85,0.057,87,0.003,88,0.003,92,3.79,99,1.505,100,1.947,110,0.515,111,0.462,113,1.133,114,1.716,122,1.592,139,0.551,168,3.252,170,1.292,181,3.846,184,4.144,210,0.37,221,2.364,224,1.739,271,6.42,282,7.237,366,1.922,951,4.426,1022,0.376,1064,3.915,1069,2.731,1070,4.553,1071,7.237,1073,6.049,1078,3.486,1080,3.322,1081,2.624,1085,4.553,1087,5.207,1138,4.028,1167,2.5,1495,4.833,2851,5.207,2852,5.207,2853,8.615,2854,6.049,2855,5.207,2856,5.775,2857,5.775,2858,5.775,2859,5.775]],["title/classes/SendMailEvent.html",[81,0.336,2854,4.128]],["body/classes/SendMailEvent.html",[3,0.045,4,0.053,5,0.053,8,0.172,9,0.877,24,0.341,25,0.004,26,1.249,32,0.237,55,2.528,81,0.343,83,0.213,85,0.053,87,0.003,88,0.003,92,4.323,97,2.56,110,0.359,111,0.56,112,3.735,139,1.013,149,1.991,210,0.343,246,2.582,572,5.339,752,1.902,943,1.787,944,2.284,945,1.574,951,4.778,1022,0.348,1181,2.969,1523,4.818,1528,4.818,1529,4.818,2193,6.53,2854,5.741,2860,9.827,2861,5.344,2862,5.344,2863,5.344,2864,6.565,2865,5.344]],["title/classes/SendMailEventHandler.html",[81,0.336,273,4.382]],["body/classes/SendMailEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,92,3.856,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,112,2.512,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,184,6.679,191,2.305,210,0.384,222,1.438,246,1.865,273,6.571,366,1.967,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1564,3.635,2854,7.338,2855,5.393,2866,8.766,2867,5.982,2868,5.982,2869,5.982]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.336,2870,4.128]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.055,4,0.064,5,0.064,8,0.21,9,1,24,0.325,25,0.004,26,1.271,32,0.226,81,0.419,83,0.26,85,0.064,87,0.003,88,0.003,110,0.438,111,0.393,139,0.969,210,0.419,408,3.992,608,4.966,752,1.78,1022,0.425,1283,2.966,1859,7.585,1860,5.885,2759,5.885,2760,5.885,2761,7.491,2870,6.55,2871,9.62,2872,6.904]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.336,2873,4.382]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.044,4,0.051,5,0.051,8,0.167,22,1.291,24,0.254,25,0.004,32,0.177,64,1.877,69,0.675,76,1.467,81,0.334,83,0.285,85,0.051,87,0.003,88,0.003,99,1.403,100,1.846,110,0.48,111,0.431,113,1.021,114,1.6,170,1.164,175,2.327,176,2.254,177,2.29,178,2.153,210,0.459,221,2.204,222,1.719,224,1.568,247,1.952,277,1.742,366,1.792,493,2.687,494,3.344,517,3.485,525,1.979,526,4.935,527,2.536,596,3.903,608,4.541,662,1.952,664,1.927,665,2.638,1022,0.339,1063,1.435,1064,3.713,1069,2.546,1078,3.25,1080,2.254,1081,2.365,1138,3.922,1146,3.25,1167,2.254,1172,2.447,1315,2.802,1499,2.687,1747,3.163,1866,5.639,2764,6.936,2767,3.903,2870,6.936,2872,6.313,2873,6.837,2874,8.17,2875,5.205,2876,5.205,2877,5.205]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.336,2878,4.382]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.05,4,0.058,5,0.058,8,0.19,9,0.938,22,2.297,24,0.329,25,0.004,26,1.245,32,0.229,55,2.705,81,0.379,83,0.236,85,0.058,87,0.003,88,0.003,110,0.397,111,0.356,139,0.988,149,2.095,210,0.379,246,2.717,408,3.723,608,5.204,633,4.387,752,1.833,841,5.189,1022,0.385,1181,3.176,1283,2.686,1393,3.41,2770,5.33,2771,7.025,2773,5.33,2774,5.33,2872,6.91,2878,6.52,2879,9.628]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.336,2880,4.382]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.189,15,1.204,24,0.276,25,0.004,32,0.192,69,0.602,81,0.378,83,0.31,85,0.058,87,0.003,88,0.003,97,2.072,99,1.525,110,0.522,111,0.468,113,1.156,118,2.303,138,1.949,139,0.562,149,1.417,158,3.657,170,1.318,171,2.24,191,2.271,210,0.378,246,1.837,331,5.012,366,1.948,608,4.965,633,3.319,841,3.925,1022,0.384,1063,1.625,1188,3.89,1189,3.476,1190,2.724,1191,2.724,1192,3.476,1194,2.513,1195,2.635,1197,2.724,1198,2.771,1199,2.771,1401,3.799,1564,3.582,2777,7.744,2872,6.641,2878,7.744,2880,6.507,2881,8.702,2882,5.894,2883,5.894]],["title/classes/ShiftProfileOwnerCommand.html",[81,0.336,2657,4.128]],["body/classes/ShiftProfileOwnerCommand.html",[3,0.055,4,0.065,5,0.065,8,0.212,9,1.006,24,0.326,25,0.004,26,1.175,32,0.227,81,0.423,83,0.263,85,0.065,87,0.003,88,0.003,110,0.443,111,0.397,139,0.971,210,0.423,408,3.689,578,3.438,752,1.824,943,2.051,944,2.445,945,1.941,1022,0.429,2496,5.917,2657,6.591,2884,9.655,2885,6.592,2886,8.36,2887,6.592]],["title/classes/ShiftProfileOwnerCommandHandler.html",[81,0.336,2602,4.382]],["body/classes/ShiftProfileOwnerCommandHandler.html",[3,0.041,4,0.049,5,0.049,8,0.159,15,1.408,24,0.245,25,0.004,32,0.17,64,1.78,69,0.648,76,1.391,78,2.548,81,0.317,83,0.275,85,0.049,87,0.002,88,0.002,99,1.352,100,1.795,110,0.463,111,0.415,113,0.968,114,1.542,139,0.758,170,1.104,210,0.442,221,2.448,222,1.909,224,2.393,247,1.851,277,1.652,366,1.727,473,2.206,494,3.656,509,4.079,517,3.871,525,1.876,527,2.405,542,2.921,578,3.221,662,1.851,664,2.94,665,1.593,666,2.793,1022,0.322,1063,1.361,1064,3.61,1069,2.454,1078,3.132,1080,2.137,1081,2.243,1138,3.865,1193,2.206,1218,3,1222,2.921,1232,3.892,1233,3.793,1234,3.701,1235,3.181,1236,3.081,1250,3.181,1557,3.406,1559,3.542,1573,3.892,2602,5.769,2604,7.196,2657,6.779,2817,4.45,2888,7.944,2889,4.936,2890,4.936,2891,4.45,2892,4.936]],["title/classes/ShiftProfileOwnerEvent.html",[81,0.336,2893,4.382]],["body/classes/ShiftProfileOwnerEvent.html",[3,0.047,4,0.056,5,0.056,8,0.182,9,0.911,15,1.742,24,0.337,25,0.004,26,1.234,32,0.234,55,2.628,81,0.363,83,0.226,85,0.056,87,0.003,88,0.003,110,0.38,111,0.341,139,1.005,149,2.05,210,0.363,246,2.659,578,3.692,752,1.887,823,6.55,943,1.858,944,2.329,945,1.667,1022,0.369,1181,3.086,2893,6.335,2894,9.767,2895,5.661,2896,7.57,2897,5.661,2898,7.57,2899,5.661,2900,5.661]],["title/classes/ShiftProfileOwnerEventHandler.html",[81,0.336,2609,4.382]],["body/classes/ShiftProfileOwnerEventHandler.html",[3,0.049,4,0.057,5,0.057,8,0.186,15,1.57,22,1.436,24,0.273,25,0.004,32,0.19,69,0.597,81,0.372,83,0.306,85,0.057,87,0.003,88,0.003,97,2.036,99,1.508,100,1.95,110,0.516,111,0.463,113,1.136,114,1.719,118,2.263,138,1.915,139,0.553,149,1.392,158,3.639,170,1.296,171,2.202,191,2.232,210,0.372,222,1.392,246,1.805,366,1.926,578,3.405,1022,0.377,1063,1.597,1188,3.856,1189,3.436,1190,2.676,1191,2.676,1192,3.436,1193,2.589,1194,2.469,1195,2.589,1197,2.676,1198,2.723,1199,2.723,2609,6.432,2611,8.286,2893,7.69,2901,8.627,2902,5.792,2903,5.792,2904,5.222,2905,5.792,2906,5.792]],["title/classes/ShiftProfileOwnerRequest.html",[81,0.336,2644,4.382]],["body/classes/ShiftProfileOwnerRequest.html",[3,0.055,4,0.065,5,0.065,8,0.212,9,1.006,24,0.326,25,0.004,26,1.175,32,0.227,81,0.423,83,0.263,85,0.065,87,0.003,88,0.003,110,0.443,111,0.397,139,0.971,210,0.423,408,3.689,578,3.438,752,1.824,943,2.051,944,2.445,945,1.941,1022,0.429,2496,5.917,2644,6.996,2907,9.655,2908,6.592,2909,8.36,2910,6.592]],["title/classes/SignInDto.html",[81,0.336,2911,4.382]],["body/classes/SignInDto.html",[3,0.059,4,0.069,5,0.069,8,0.224,9,1.043,24,0.308,25,0.004,26,1.2,27,3.126,32,0.214,69,0.483,79,6.353,81,0.556,82,3.341,85,0.069,87,0.003,88,0.003,591,4.146,594,4.431,912,5.505,1022,0.455,2689,5.843,2911,7.253,2912,8.498,2913,6.982,2914,6.295,2915,6.982,2916,6.982,2917,6.295,2918,6.295]],["title/classes/SignUpDto.html",[81,0.336,627,4.128]],["body/classes/SignUpDto.html",[3,0.055,4,0.065,5,0.065,8,0.213,9,1.008,24,0.327,25,0.004,26,1.24,27,3.316,32,0.227,69,0.458,79,6.428,81,0.537,82,3.165,85,0.065,87,0.003,88,0.003,112,3.861,591,4.045,594,4.323,627,6.605,910,6.281,912,5.214,1022,0.431,2689,5.534,2912,8.716,2914,5.963,2917,5.963,2918,5.963,2919,6.613,2920,5.963,2921,6.613,2922,6.613,2923,6.613]],["title/entities/SocialNetworkEntity.html",[0,1.774,475,3.613]],["body/entities/SocialNetworkEntity.html",[0,2.834,2,1.836,3,0.034,4,0.04,5,0.04,6,4.388,8,0.13,9,0.855,13,3.343,14,3.624,15,1.709,21,3.395,24,0.33,25,0.004,26,1.207,27,3.354,32,0.23,43,4.361,51,2.909,69,0.413,70,4.414,71,3.459,72,3.524,74,1.933,75,3.459,76,1.138,81,0.383,83,0.361,85,0.04,87,0.002,88,0.002,289,3.532,441,5.052,449,2.456,475,4.899,476,7.487,580,3.381,838,2.604,900,3.848,919,8.083,920,4.347,923,2.006,928,2.045,2365,6.401,2924,4.04,2925,7.099,2926,9.659,2927,8.366,2928,8.366,2929,5.969,2930,4.04,2931,4.04,2932,4.04,2933,4.04,2934,4.04,2935,4.04,2936,4.04,2937,4.04,2938,4.04,2939,3.643,2940,4.04,2941,9.059,2942,4.04,2943,2.526,2944,4.04]],["title/classes/SoftDeleteOccupationCommand.html",[81,0.336,2441,4.128]],["body/classes/SoftDeleteOccupationCommand.html",[3,0.059,4,0.069,5,0.069,8,0.225,9,1.046,24,0.309,25,0.004,26,1.057,32,0.215,81,0.449,83,0.279,85,0.069,87,0.003,88,0.003,106,4.025,110,0.471,111,0.422,139,0.901,210,0.449,752,1.691,943,2.131,944,2.422,1022,0.456,1128,5.253,1133,3.692,1168,4.873,1535,5.863,1536,5.863,2441,6.848,2945,9.44]],["title/classes/SoftDeleteOccupationCommandHandler.html",[81,0.336,2389,4.382]],["body/classes/SoftDeleteOccupationCommandHandler.html",[3,0.041,4,0.048,5,0.048,8,0.157,15,0.996,24,0.243,25,0.004,32,0.169,69,0.663,76,1.374,81,0.313,83,0.273,85,0.048,87,0.002,88,0.002,99,1.341,100,1.783,106,3.839,110,0.459,111,0.412,113,0.956,114,1.529,139,0.652,170,1.091,175,2.179,176,2.111,177,2.145,178,2.017,210,0.438,221,2.106,222,1.643,224,2.576,247,1.829,277,1.632,366,1.712,469,2.376,494,3.251,507,4.154,525,1.853,540,2.963,574,2.87,662,1.829,664,2.53,665,1.574,666,2.403,710,3.365,1022,0.318,1063,1.344,1064,3.586,1069,2.433,1078,3.106,1080,2.111,1081,2.216,1136,5.902,1137,3.247,1138,3.852,1140,3.143,1146,3.106,1149,3.143,1164,3.143,1167,2.959,1168,2.517,1170,4.552,1172,2.292,1173,3.656,1233,2.683,1236,2.179,1499,2.517,1541,5.389,1543,3.143,1747,2.963,2389,6.604,2441,6.743,2946,7.891,2947,5.389,2948,3.499,2949,4.08,2950,4.876,2951,4.876,2952,3.499]],["title/classes/SoftDeleteOccupationEvent.html",[81,0.336,2947,4.128]],["body/classes/SoftDeleteOccupationEvent.html",[3,0.05,4,0.059,5,0.059,8,0.192,9,0.943,24,0.33,25,0.004,26,1.206,32,0.23,55,2.721,81,0.383,83,0.238,85,0.059,87,0.003,88,0.003,106,4.307,110,0.401,111,0.359,139,0.989,149,2.104,210,0.383,246,2.728,574,3.904,752,1.858,943,1.923,944,2.281,1022,0.389,1133,3.142,1168,4.518,1179,4.472,1180,4.472,1181,3.195,1184,4.472,1185,4.472,1546,4.991,2947,6.179,2952,5.624,2953,9.656]],["title/classes/SoftDeleteOccupationEventHandler.html",[81,0.336,2392,4.382]],["body/classes/SoftDeleteOccupationEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.189,15,1.204,24,0.276,25,0.004,32,0.192,69,0.602,81,0.378,83,0.31,85,0.058,87,0.003,88,0.003,97,2.072,99,1.525,100,1.967,106,3.945,110,0.522,111,0.468,113,1.156,114,1.739,118,2.303,138,1.949,139,0.562,149,1.417,158,3.657,170,1.318,171,2.24,191,2.271,210,0.378,222,1.417,246,1.837,366,1.948,574,2.475,1022,0.384,1063,1.625,1149,5.964,1188,3.89,1189,3.476,1190,2.724,1191,2.724,1192,3.476,1193,2.635,1194,2.513,1195,2.635,1197,2.724,1198,2.771,1199,2.771,1200,4.419,1543,3.799,2392,6.507,2947,7.296,2948,4.229,2952,4.229,2954,8.702,2955,5.894]],["title/classes/SoftDeleteProfileCommand.html",[81,0.336,2655,4.128]],["body/classes/SoftDeleteProfileCommand.html",[3,0.059,4,0.069,5,0.069,8,0.224,9,1.043,15,1.925,24,0.308,25,0.004,26,1.055,32,0.214,81,0.448,83,0.278,85,0.069,87,0.003,88,0.003,106,4.019,110,0.469,111,0.42,139,0.899,210,0.448,752,1.688,943,2.127,944,2.487,945,2.056,1022,0.455,1208,5.01,1552,7.253,2655,6.833,2956,9.425]],["title/classes/SoftDeleteProfileCommandHandler.html",[81,0.336,2612,4.382]],["body/classes/SoftDeleteProfileCommandHandler.html",[3,0.043,4,0.051,5,0.051,8,0.165,15,1.655,24,0.251,25,0.004,32,0.175,69,0.656,76,1.444,81,0.329,83,0.282,85,0.051,87,0.003,88,0.003,99,1.388,100,1.831,106,3.91,110,0.475,111,0.426,113,1.005,114,1.583,139,0.675,170,1.146,210,0.454,221,2.18,222,1.701,224,2.441,247,1.922,277,1.715,366,1.773,473,2.291,494,3.322,509,4.187,525,1.948,542,3.033,578,1.825,662,1.922,664,2.619,665,1.655,666,2.488,1022,0.334,1063,1.413,1064,3.683,1069,2.519,1078,3.215,1080,2.219,1081,2.329,1138,3.905,1167,2.219,1193,2.291,1217,5.464,1218,3.115,1222,3.033,1230,2.957,1233,2.82,1236,2.291,1250,3.303,1539,3.303,1557,3.537,1558,5.305,1559,3.678,2612,5.921,2655,6.89,2948,3.678,2949,4.289,2957,8.104,2958,5.579,2959,5.125,2960,5.125,2961,5.125]],["title/classes/SoftDeleteProfileEvent.html",[81,0.336,2958,4.128]],["body/classes/SoftDeleteProfileEvent.html",[3,0.05,4,0.059,5,0.059,8,0.191,9,0.942,15,1.785,24,0.33,25,0.004,26,1.205,32,0.229,55,2.716,81,0.381,83,0.237,85,0.059,87,0.003,88,0.003,106,4.304,110,0.399,111,0.358,139,0.989,149,2.101,210,0.381,246,2.725,578,3.306,752,1.857,943,1.919,944,2.367,945,1.751,1022,0.387,1181,3.189,1260,4.267,1263,5.865,2952,5.613,2958,6.167,2962,9.647,2963,5.361,2964,5.361]],["title/classes/SoftDeleteProfileEventHandler.html",[81,0.336,2608,4.382]],["body/classes/SoftDeleteProfileEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.189,15,1.204,24,0.276,25,0.004,32,0.192,69,0.602,81,0.378,83,0.31,85,0.058,87,0.003,88,0.003,97,2.072,99,1.525,100,1.967,106,3.945,110,0.522,111,0.468,113,1.156,114,1.739,118,2.303,138,1.949,139,0.562,149,1.417,158,3.657,170,1.318,171,2.24,191,2.271,210,0.378,222,1.417,246,1.837,366,1.948,578,2.098,1022,0.384,1063,1.625,1188,3.89,1189,3.476,1190,2.724,1191,2.724,1192,3.476,1193,2.635,1194,2.513,1195,2.635,1197,2.724,1198,2.771,1199,2.771,1230,5.338,1543,3.799,2608,6.507,2904,5.314,2948,4.229,2952,4.229,2958,7.296,2965,8.702,2966,5.894]],["title/classes/SoftDeleteUserCommand.html",[81,0.336,2967,4.128]],["body/classes/SoftDeleteUserCommand.html",[3,0.06,4,0.07,5,0.07,8,0.228,9,1.055,24,0.311,25,0.004,26,1.207,32,0.216,81,0.456,83,0.283,85,0.07,87,0.003,88,0.003,106,4.05,110,0.477,111,0.428,139,0.906,210,0.456,408,3.986,752,1.57,1022,0.463,1279,5.099,1283,3.229,1393,4.099,1569,5.946,2967,6.908,2968,9.5,2969,7.106]],["title/classes/SoftDeleteUserCommandHandler.html",[81,0.336,2970,4.382]],["body/classes/SoftDeleteUserCommandHandler.html",[3,0.041,4,0.048,5,0.048,8,0.157,9,0.826,15,1.4,22,1.215,24,0.281,25,0.004,32,0.195,64,1.767,69,0.664,76,1.381,81,0.314,83,0.273,85,0.048,87,0.002,88,0.002,99,1.345,100,1.788,106,3.986,110,0.461,111,0.413,113,0.961,114,1.534,170,1.096,175,2.19,176,2.121,177,2.155,178,2.027,210,0.44,221,1.51,222,1.648,224,1.476,277,1.64,366,1.718,493,2.529,494,3.258,517,3.342,525,1.863,527,2.387,599,4.418,662,1.838,664,2.538,665,2.554,666,2.411,752,1.417,1022,0.319,1063,1.351,1064,3.595,1069,2.442,1072,3.263,1078,3.116,1080,2.121,1081,2.226,1138,4.052,1146,3.116,1172,2.303,1232,3.863,1233,2.696,1234,5.142,1235,3.158,1236,2.19,1286,6.226,1315,2.637,1358,4.288,1399,2.899,1499,2.529,1570,3.863,1747,2.978,2948,3.516,2949,4.1,2967,6.758,2970,5.739,2971,8.571,2972,3.863,2973,4.9,2974,4.9]],["title/classes/SoftDeleteUserEvent.html",[81,0.336,2972,4.128]],["body/classes/SoftDeleteUserEvent.html",[3,0.05,4,0.059,5,0.059,8,0.193,9,0.947,22,2.31,24,0.331,25,0.004,26,1.249,32,0.23,55,2.732,81,0.385,83,0.239,85,0.059,87,0.003,88,0.003,106,4.125,110,0.403,111,0.361,139,0.991,149,2.11,210,0.385,246,2.736,408,3.745,608,4.061,633,4.43,752,1.839,841,5.24,1022,0.391,1181,3.208,1283,2.726,1392,4.305,1393,3.461,1396,4.305,1581,5.899,1582,4.498,2972,6.203,2975,9.675]],["title/classes/SoftDeleteUserEventHandler.html",[81,0.336,2976,4.721]],["body/classes/SoftDeleteUserEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.189,15,1.204,22,1.461,24,0.276,25,0.004,32,0.192,69,0.602,81,0.378,83,0.31,85,0.058,87,0.003,88,0.003,97,2.072,99,1.525,100,1.967,106,3.945,110,0.522,111,0.468,113,1.156,114,1.739,118,2.303,138,1.949,139,0.562,149,1.417,158,3.657,170,1.318,171,2.24,191,2.271,210,0.378,222,1.417,246,1.837,366,1.948,1022,0.384,1063,1.625,1188,3.89,1189,3.476,1190,2.724,1191,2.724,1192,3.476,1193,2.635,1194,2.513,1195,2.635,1197,2.724,1198,2.771,1199,2.771,1399,5.475,1401,3.799,1543,3.799,2948,4.229,2952,4.229,2972,7.296,2976,7.011,2977,8.702,2978,5.894]],["title/entities/StripEventEntity.html",[0,1.774,478,3.757]],["body/entities/StripEventEntity.html",[0,2.861,2,3.045,3,0.056,4,0.066,5,0.066,6,3.904,8,0.215,9,1.114,15,1.889,24,0.238,25,0.004,26,1.028,27,2.417,32,0.166,55,2.327,69,0.464,74,4.427,76,1.888,81,0.542,83,0.337,85,0.066,87,0.003,88,0.003,478,6.971,479,6.661,582,6.042,752,1.657,920,4.194,1618,2.902,2379,5.284,2939,6.042,2979,6.702,2980,6.702,2981,6.702]],["title/entities/SubscriptionEntity.html",[0,1.774,481,3.182]],["body/entities/SubscriptionEntity.html",[0,1.684,2,1.443,3,0.027,4,0.031,5,0.031,6,4.453,8,0.102,9,0.737,13,2.611,14,2.83,15,1.535,21,2.651,22,1.864,24,0.363,25,0.004,26,0.843,27,3.434,28,4.971,32,0.235,35,2.941,37,4.6,38,3.507,43,4.448,51,2.422,55,1.103,64,2.875,69,0.552,70,4.06,71,2.984,72,3.04,73,3.532,74,1.52,75,2.984,76,0.895,78,1.639,81,0.319,82,1.52,83,0.3,85,0.031,87,0.002,88,0.002,111,0.48,289,1.879,313,1.986,452,5.502,454,2.279,460,5.502,471,5.502,481,3.021,566,5.521,576,5.124,584,2.381,752,1.8,838,2.047,874,2.279,887,3.43,899,3.567,900,3.204,920,3.958,923,1.577,928,1.607,1589,5.521,1590,5.521,1600,4.481,1601,4.481,1604,4.481,1611,6.779,1630,2.864,1631,2.864,1632,2.864,1946,2.381,2982,3.176,2983,6.123,2984,6.123,2985,6.123,2986,6.123,2987,3.176,2988,3.176,2989,4.97,2990,3.176,2991,3.176,2992,3.176,2993,4.97,2994,3.176,2995,4.97,2996,3.176,2997,3.176,2998,2.864,2999,3.176,3000,4.159,3001,4.481,3002,4.97,3003,4.97,3004,4.97,3005,4.97,3006,3.176,3007,4.97,3008,3.176,3009,3.176,3010,4.97,3011,3.176,3012,4.481,3013,3.176]],["title/classes/TimestampEntityExtendEntity.html",[81,0.336,3014,4.721]],["body/classes/TimestampEntityExtendEntity.html",[3,0.04,4,0.047,5,0.047,8,0.153,9,0.809,13,3.321,14,3.6,21,3.373,24,0.329,25,0.004,27,2.809,32,0.229,43,4.075,45,5.624,46,6.945,49,5.624,62,5.624,69,0.329,70,4.123,76,1.341,81,0.305,83,0.369,85,0.047,87,0.002,88,0.002,99,1.318,113,1.528,224,2.549,331,5.97,752,1.899,842,5.84,869,6.141,1022,0.31,1618,2.91,2379,6.141,3014,6.059,3015,9.52,3016,9.52,3017,4.76,3018,8.462,3019,8.462,3020,8.462,3021,4.76,3022,4.76,3023,6.72,3024,6.72,3025,4.76,3026,4.76,3027,4.76,3028,4.76,3029,4.76,3030,8.462,3031,6.72,3032,7.789]],["title/interfaces/TokenPayload.html",[774,3.926,2793,3.757]],["body/interfaces/TokenPayload.html",[3,0.065,4,0.077,5,0.077,8,0.25,9,1.113,24,0.276,25,0.004,26,1.202,85,0.077,87,0.003,88,0.003,408,4.107,774,6.933,2793,5.573,2794,6.123,3033,7.766,3034,7.766]],["title/classes/TransferProfileToUserCommand.html",[81,0.336,3035,4.721]],["body/classes/TransferProfileToUserCommand.html",[3,0.054,4,0.064,5,0.064,8,0.208,9,0.994,24,0.323,25,0.004,26,1.005,32,0.225,69,0.447,81,0.415,83,0.258,85,0.064,87,0.003,88,0.003,110,0.434,111,0.389,139,0.967,210,0.415,408,3.656,578,3.413,752,1.815,943,2.026,944,2.43,945,1.904,1022,0.421,1279,4.639,1282,5.409,2911,7.613,3035,7.444,3036,9.585,3037,9.097,3038,8.256,3039,6.464,3040,6.464]],["title/classes/UnauthorizedRequestException.html",[81,0.336,3041,4.721]],["body/classes/UnauthorizedRequestException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,616,4.494,640,4.545,789,6.667,1022,0.482,1225,4.08,1616,4.73,1618,3.887,3041,8.094,3042,8.978,3043,7.394,3044,7.394,3045,7.394]],["title/classes/UpdateOccupationCommand.html",[81,0.336,2439,4.128]],["body/classes/UpdateOccupationCommand.html",[3,0.055,4,0.065,5,0.065,8,0.211,9,1.004,24,0.326,25,0.004,26,1.015,32,0.226,69,0.455,81,0.421,83,0.262,85,0.065,87,0.003,88,0.003,110,0.441,111,0.396,139,0.971,210,0.421,752,1.822,943,2.047,944,2.366,1022,0.428,1128,4.926,1130,5.924,1131,5.924,1132,5.498,1133,3.462,1168,4.732,2437,8.02,2438,4.534,2439,6.577,3046,9.643,3047,6.57]],["title/classes/UpdateOccupationCommandHandler.html",[81,0.336,2394,4.382]],["body/classes/UpdateOccupationCommandHandler.html",[3,0.035,4,0.042,5,0.042,8,0.136,15,0.862,24,0.219,25,0.004,32,0.152,69,0.651,76,1.189,81,0.395,82,2.019,83,0.29,85,0.042,87,0.002,88,0.002,99,1.209,100,1.645,110,0.414,111,0.371,113,0.828,114,1.378,139,0.588,144,1.362,170,0.944,175,1.886,176,1.827,177,1.856,178,1.745,210,0.395,221,1.899,222,2.047,224,2.766,247,2.731,277,1.412,366,1.544,469,4.149,494,3.043,507,3.745,525,1.604,540,2.564,574,1.772,632,3.745,662,1.582,664,2.695,665,1.362,666,2.994,710,4.252,871,3.853,1022,0.275,1063,1.163,1064,3.308,1069,2.194,1074,3.326,1078,2.8,1080,1.827,1081,1.917,1136,5.525,1137,2.81,1138,3.691,1140,2.719,1143,3.326,1144,3.326,1145,3.326,1146,2.8,1151,3.804,1152,3.804,1153,3.804,1154,3.804,1155,3.804,1157,3.804,1160,3.028,1162,3.028,1163,3.531,1164,3.972,1166,3.804,1167,2.668,1168,2.178,1170,4.104,1172,1.983,1173,3.163,1233,2.322,1236,1.886,1541,5.74,1573,3.326,2394,6.092,2439,6.714,3048,7.28,3049,2.81,3050,4.219,3051,4.219,3052,4.219,3053,6.162,3054,4.219,3055,4.219,3056,4.219,3057,2.911,3058,4.219]],["title/classes/UpdateOccupationDto.html",[81,0.336,2437,4.128]],["body/classes/UpdateOccupationDto.html",[3,0.059,4,0.07,5,0.07,8,0.228,9,1.052,24,0.311,25,0.004,26,1.064,32,0.216,81,0.454,83,0.395,85,0.07,87,0.003,88,0.003,110,0.476,111,0.426,139,0.905,210,0.454,752,1.699,943,2.145,944,2.431,1022,0.461,1133,3.731,1175,6.384,1176,6.384,1177,6.384,2437,6.893,3059,9.485]],["title/classes/UpdateOccupationEvent.html",[81,0.336,3060,4.382]],["body/classes/UpdateOccupationEvent.html",[3,0.051,4,0.06,5,0.06,8,0.196,9,0.956,24,0.333,25,0.004,26,1.213,32,0.231,55,2.759,81,0.391,83,0.243,85,0.06,87,0.003,88,0.003,110,0.409,111,0.367,139,0.993,149,2.125,210,0.391,246,2.757,574,3.936,752,1.865,943,1.95,944,2.3,1022,0.397,1133,3.209,1168,4.565,1179,4.567,1180,4.567,1181,3.239,1184,4.567,1185,4.567,1546,5.097,2943,4.968,3060,6.649,3061,9.722]],["title/classes/UpdateOccupationEventHandler.html",[81,0.336,2398,4.382]],["body/classes/UpdateOccupationEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,574,2.512,1022,0.39,1063,1.649,1149,5.999,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1200,4.485,2398,6.571,3057,4.128,3060,7.789,3062,8.766,3063,3.635,3064,5.982]],["title/classes/UpdateOccupationRequest.html",[81,0.336,2429,4.382]],["body/classes/UpdateOccupationRequest.html",[3,0.059,4,0.07,5,0.07,8,0.227,9,1.05,24,0.31,25,0.004,26,1.062,32,0.215,81,0.453,83,0.394,85,0.07,87,0.003,88,0.003,110,0.474,111,0.425,139,0.904,210,0.453,752,1.696,943,2.141,944,2.495,945,2.078,1022,0.46,1203,6.362,1204,6.362,1205,6.362,2429,7.3,3065,9.47]],["title/classes/UpdateOccupationsProfileCommand.html",[81,0.336,2656,4.128]],["body/classes/UpdateOccupationsProfileCommand.html",[3,0.055,4,0.065,5,0.065,8,0.212,9,1.006,15,1.875,24,0.326,25,0.004,26,1.175,32,0.227,81,0.423,83,0.263,85,0.065,87,0.003,88,0.003,110,0.443,111,0.397,139,0.971,210,0.423,752,1.824,822,5.966,943,2.051,944,2.445,945,1.941,1022,0.429,1208,4.73,1552,5.516,2656,6.591,3066,8.705,3067,8.36]],["title/classes/UpdateOccupationsProfileCommandHandler.html",[81,0.336,2605,4.382]],["body/classes/UpdateOccupationsProfileCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.143,15,1.311,24,0.228,25,0.004,32,0.159,69,0.646,76,1.258,81,0.286,83,0.256,85,0.044,87,0.002,88,0.002,99,1.259,100,1.699,110,0.431,111,0.386,113,0.875,114,1.681,139,0.717,144,1.441,170,0.998,210,0.412,221,2.316,222,1.976,224,2.623,247,2.819,277,1.493,366,1.608,469,3.128,473,1.995,494,3.552,507,4.568,509,3.798,525,1.697,540,2.713,542,2.641,578,1.589,662,1.674,664,2.782,665,1.441,666,2.89,822,5.515,871,2.791,913,3.08,1022,0.291,1063,1.231,1064,3.416,1069,2.285,1078,2.917,1080,1.933,1081,2.028,1138,3.755,1164,2.877,1167,1.933,1168,3.313,1170,2.972,1217,5.139,1218,2.713,1222,2.641,1230,2.575,1233,3.532,1236,3.36,1240,4.024,1242,4.024,1243,4.024,1250,2.877,1296,3.735,1499,2.304,1557,3.08,1558,4.813,1559,3.203,2496,2.877,2605,5.371,2656,6.481,3049,2.972,3063,2.713,3068,6.777,3069,5.061,3070,4.463,3071,4.463,3072,4.463,3073,4.024,3074,4.024,3075,4.463]],["title/classes/UpdateOccupationsProfileDto.html",[81,0.336,3076,4.721]],["body/classes/UpdateOccupationsProfileDto.html",[3,0.057,4,0.067,5,0.067,8,0.218,9,1.026,24,0.303,25,0.004,32,0.21,69,0.47,81,0.436,83,0.271,85,0.067,87,0.003,88,0.003,110,0.456,111,0.56,139,0.888,210,0.436,752,1.668,822,5.37,940,4.247,943,2.091,944,2.467,945,2,1022,0.443,1252,5.356,1253,6,1256,6,1257,7.13,1258,4.524,3076,7.682,3077,8.393]],["title/classes/UpdateOccupationsProfileEvent.html",[81,0.336,3069,4.128]],["body/classes/UpdateOccupationsProfileEvent.html",[3,0.047,4,0.056,5,0.056,8,0.182,9,0.911,24,0.337,25,0.004,26,1.234,32,0.234,55,2.628,81,0.363,83,0.226,85,0.056,87,0.003,88,0.003,110,0.38,111,0.341,139,1.005,149,2.05,210,0.363,246,2.659,578,3.242,752,1.887,822,5.846,943,1.858,944,2.329,945,1.667,1022,0.369,1181,3.086,1260,4.062,1262,5.969,1263,4.244,2496,5.498,2943,4.734,2963,5.104,2964,5.104,3069,5.969,3074,7.69,3078,8.806]],["title/classes/UpdateOccupationsProfileEventHandler.html",[81,0.336,2613,4.382]],["body/classes/UpdateOccupationsProfileEventHandler.html",[3,0.049,4,0.057,5,0.057,8,0.187,15,1.573,24,0.274,25,0.004,32,0.19,69,0.598,81,0.373,83,0.307,85,0.057,87,0.003,88,0.003,97,2.042,99,1.511,100,1.953,110,0.517,111,0.464,113,1.139,114,1.723,118,2.269,138,1.92,139,0.554,149,1.396,158,3.642,170,1.299,171,2.208,191,2.238,210,0.373,222,1.396,246,1.811,366,1.93,574,2.439,578,2.068,822,5.308,1022,0.378,1063,1.601,1188,3.862,1189,3.442,1190,2.684,1191,2.684,1192,3.442,1194,2.476,1195,2.596,1197,2.684,1198,2.731,1199,2.731,1230,5.308,1564,3.53,2613,6.445,2825,5.237,3057,4.008,3063,3.53,3069,7.254,3079,7.79,3080,5.808,3081,5.808]],["title/classes/UpdateProfileCommand.html",[81,0.336,2654,3.926]],["body/classes/UpdateProfileCommand.html",[3,0.055,4,0.065,5,0.065,8,0.21,9,1.002,15,1.869,24,0.325,25,0.004,26,1.013,32,0.226,69,0.453,81,0.42,83,0.261,85,0.065,87,0.003,88,0.003,110,0.44,111,0.394,139,0.97,210,0.42,752,1.821,943,2.043,944,2.44,945,1.929,1022,0.427,1208,4.699,1212,7.506,1213,5.904,1214,5.904,2438,4.519,2654,6.242,2671,8.013,3066,8.684]],["title/classes/UpdateProfileCommandHandler.html",[81,0.336,2607,4.382]],["body/classes/UpdateProfileCommandHandler.html",[3,0.044,4,0.052,5,0.052,8,0.168,15,1.066,24,0.255,25,0.004,32,0.177,69,0.66,76,1.47,81,0.335,83,0.286,85,0.052,87,0.003,88,0.003,99,1.405,100,1.849,110,0.481,111,0.431,113,1.024,114,1.603,139,0.684,170,1.167,210,0.46,221,2.208,222,1.722,224,2.464,247,1.957,277,1.746,366,1.795,473,2.333,494,3.348,509,4.239,525,1.984,542,3.088,578,1.858,662,1.957,664,2.652,665,1.685,666,2.519,1022,0.34,1063,1.439,1064,3.718,1069,2.551,1078,3.256,1080,3.102,1081,2.371,1138,3.924,1167,2.26,1193,2.333,1217,5.506,1218,3.172,1222,3.088,1230,3.01,1233,2.872,1236,2.333,1250,3.364,1539,3.364,1557,3.601,1558,3.913,1559,3.745,2607,5.995,2654,6.92,3049,3.475,3063,3.172,3068,7.377,3073,4.705,3082,5.649,3083,5.218,3084,5.218]],["title/classes/UpdateProfileDto.html",[81,0.336,2671,4.128]],["body/classes/UpdateProfileDto.html",[3,0.058,4,0.068,5,0.068,8,0.221,9,1.034,24,0.305,25,0.004,26,1.046,32,0.212,69,0.476,81,0.442,85,0.068,87,0.003,88,0.003,111,0.591,139,0.982,752,1.844,940,4.306,1022,0.449,1252,5.429,1253,6.037,1254,5.857,1255,6.209,1256,6.037,1257,5.762,1258,4.586,2671,6.775,3077,8.445]],["title/classes/UpdateProfileEvent.html",[81,0.336,3082,4.128]],["body/classes/UpdateProfileEvent.html",[3,0.05,4,0.059,5,0.059,8,0.192,9,0.943,24,0.33,25,0.004,26,1.132,32,0.23,55,2.721,69,0.413,81,0.383,83,0.238,85,0.059,87,0.003,88,0.003,110,0.401,111,0.359,139,0.989,149,2.104,210,0.383,246,2.728,578,3.31,752,1.858,943,1.923,944,2.37,945,1.756,1022,0.389,1181,3.195,1217,3.729,1260,4.28,1261,6.179,1262,4.702,1263,4.472,2654,7.432,2943,4.9,3049,3.972,3078,8.706,3082,6.179]],["title/classes/UpdateProfileEventHandler.html",[81,0.336,2606,4.382]],["body/classes/UpdateProfileEventHandler.html",[3,0.05,4,0.059,5,0.059,8,0.192,15,1.222,24,0.279,25,0.004,32,0.194,69,0.607,81,0.384,83,0.313,85,0.059,87,0.003,88,0.003,97,2.103,99,1.54,100,1.981,110,0.527,111,0.473,113,1.173,114,1.757,118,2.337,138,1.978,139,0.571,149,1.438,158,3.672,170,1.338,171,2.274,191,2.305,210,0.384,222,1.438,246,1.865,366,1.967,578,2.13,1022,0.39,1063,1.649,1188,3.918,1189,3.51,1190,2.764,1191,2.764,1192,3.51,1193,2.674,1194,2.55,1195,2.674,1197,2.764,1198,2.812,1199,2.812,1230,5.369,2606,6.571,3057,4.128,3063,3.635,3079,7.903,3082,7.338,3085,5.982,3086,5.982]],["title/classes/UpdateProfileRequest.html",[81,0.336,2516,4.128]],["body/classes/UpdateProfileRequest.html",[3,0.05,4,0.059,5,0.059,8,0.191,9,0.94,15,1.782,24,0.343,25,0.004,26,1.204,32,0.238,69,0.41,81,0.38,83,0.236,85,0.059,87,0.003,88,0.003,110,0.398,111,0.357,139,1.012,210,0.38,752,1.9,940,3.707,943,1.916,944,2.365,945,1.746,1022,0.386,1210,6.881,1253,5.625,1254,5.457,1256,5.625,1258,3.948,1271,5.345,1273,7.038,1274,5.345,1275,5.345,1276,5.345,2516,6.155,3087,9.896]],["title/classes/UpdateUserCommand.html",[81,0.336,3088,4.128]],["body/classes/UpdateUserCommand.html",[3,0.055,4,0.065,5,0.065,8,0.211,9,1.004,22,2.468,24,0.326,25,0.004,26,1.174,32,0.226,69,0.455,81,0.421,83,0.262,85,0.065,87,0.003,88,0.003,110,0.441,111,0.396,139,0.971,210,0.421,408,3.875,417,4.534,752,1.783,1022,0.428,1279,4.715,1281,5.924,1282,6.981,1283,2.985,1393,3.79,2438,4.534,3088,6.577,3089,8.07,3090,7.463]],["title/classes/UpdateUserCommandHandler.html",[81,0.336,3091,4.382]],["body/classes/UpdateUserCommandHandler.html",[3,0.021,4,0.025,5,0.025,8,0.082,9,0.504,15,0.855,22,1.316,24,0.293,25,0.004,26,1.143,32,0.204,38,1.841,53,2.92,64,2.21,69,0.614,76,0.722,81,0.269,82,1.226,83,0.318,85,0.025,87,0.001,88,0.001,99,0.821,100,2.07,110,0.536,111,0.48,112,2.573,113,1.5,114,1.846,144,2.34,170,0.573,175,1.146,176,1.11,177,1.127,178,2.196,210,0.269,221,2.925,222,2.258,224,2.403,247,2.298,277,0.858,293,1.41,366,1.049,493,1.323,494,2.329,517,2.04,525,0.974,527,1.249,591,3.509,600,3.662,602,3.004,605,2.889,632,2.544,656,2.698,662,0.961,664,0.949,665,2.34,666,2.374,752,0.951,842,4.661,871,1.602,951,3.535,1022,0.167,1063,0.707,1064,2.412,1069,1.491,1078,1.902,1080,1.11,1081,1.165,1138,3.411,1143,2.021,1144,2.021,1145,2.021,1146,2.784,1160,1.839,1162,1.839,1163,2.145,1167,2.298,1172,2.495,1224,2.788,1225,1.902,1234,3.139,1235,1.652,1236,1.146,1286,5.998,1291,3.503,1292,3.503,1293,3.503,1295,3.503,1296,2.145,1305,3.503,1307,3.503,1309,2.145,1313,3.503,1315,1.379,1316,3.004,1317,2.788,1318,2.021,1319,3.004,1320,2.021,1337,3.503,1338,2.889,1339,2.889,1358,3.318,1370,3.503,1371,3.503,1372,2.145,1373,2.145,1375,3.503,1376,2.021,1399,1.516,1543,2.698,1572,2.311,1844,1.839,1890,2.021,2767,1.922,3049,1.707,3063,1.558,3088,4.831,3091,4.441,3092,7.104,3093,4.186,3094,4.186,3095,2.311,3096,2.563,3097,2.563,3098,2.563,3099,2.563,3100,4.186,3101,2.563,3102,2.563,3103,2.563,3104,2.021,3105,2.563,3106,2.563,3107,2.563,3108,2.563,3109,2.563,3110,2.563,3111,2.563,3112,2.563,3113,2.563,3114,2.563,3115,6.127,3116,2.563,3117,4.186,3118,2.563,3119,4.186,3120,4.186,3121,2.563]],["title/classes/UpdateUserCredentialCommand.html",[81,0.336,3122,4.128]],["body/classes/UpdateUserCredentialCommand.html",[3,0.054,4,0.064,5,0.064,8,0.207,9,0.992,22,2.453,24,0.323,25,0.004,26,1.003,32,0.224,69,0.446,81,0.413,83,0.257,85,0.064,87,0.003,88,0.003,110,0.433,111,0.388,139,0.966,210,0.413,408,3.65,752,1.813,943,2.022,944,2.428,945,1.898,1022,0.42,2438,4.446,3089,8.012,3122,6.496,3123,6.443,3124,7.588,3125,8.239,3126,6.443,3127,5.392]],["title/classes/UpdateUserCredentialCommandHandler.html",[81,0.336,3128,4.382]],["body/classes/UpdateUserCredentialCommandHandler.html",[3,0.032,4,0.037,5,0.037,8,0.122,9,0.686,15,1.164,22,2.395,24,0.27,25,0.004,26,1.137,32,0.201,53,3.135,64,1.369,69,0.632,76,1.069,81,0.243,83,0.303,85,0.037,87,0.002,88,0.002,99,1.118,100,1.934,110,0.511,111,0.458,113,1.342,114,1.701,144,1.839,170,0.849,175,1.697,176,1.643,177,1.67,178,1.57,210,0.366,221,2.977,222,1.959,224,2.578,247,1.424,277,1.27,366,1.428,493,1.959,494,2.89,517,2.776,525,1.443,526,3.932,527,1.849,594,4.173,600,2.619,662,1.424,664,1.405,665,2.455,666,2.865,691,3.422,771,2.992,808,5.137,1022,0.247,1063,1.046,1064,3.109,1069,2.029,1076,4.768,1078,2.589,1080,1.643,1081,1.725,1138,3.567,1146,2.589,1167,1.643,1172,1.784,1234,2.846,1235,2.446,1236,1.697,1287,5.725,1294,4.768,1311,4.768,1315,2.043,1330,3.176,1332,3.176,1358,2.373,1374,3.176,1846,2.724,1874,5.137,1875,5.137,1876,6.856,1885,3.422,2767,2.846,2848,3.176,2849,4.768,3049,2.528,3063,2.307,3092,7.161,3095,3.422,3122,5.995,3128,5.725,3129,7.428,3130,3.795,3131,3.795,3132,2.992,3133,3.422,3134,3.795,3135,3.795,3136,5.698,3137,3.795,3138,5.698,3139,3.795,3140,3.795,3141,3.795,3142,3.795,3143,3.795]],["title/classes/UpdateUserCredentialDto.html",[81,0.336,3124,3.926]],["body/classes/UpdateUserCredentialDto.html",[3,0.052,4,0.062,5,0.062,8,0.201,9,0.972,22,2.429,24,0.336,25,0.004,26,1.222,32,0.234,81,0.4,83,0.249,85,0.062,87,0.003,88,0.003,110,0.419,111,0.376,139,0.998,210,0.4,591,3.936,594,4.207,752,1.874,943,1.981,944,2.404,945,1.838,1022,0.407,3124,6.054,3144,8.834,3145,6.242,3146,8.948,3147,8.074,3148,6.242,3149,6.242]],["title/classes/UpdateUserCredentialEvent.html",[81,0.336,3132,4.128]],["body/classes/UpdateUserCredentialEvent.html",[3,0.051,4,0.06,5,0.06,8,0.194,9,0.951,22,2.577,24,0.332,25,0.004,26,1.251,32,0.231,55,2.742,81,0.387,83,0.241,85,0.06,87,0.003,88,0.003,110,0.405,111,0.363,139,0.992,149,2.116,210,0.387,246,2.744,408,3.753,752,1.841,1022,0.393,1181,3.22,1283,2.743,1393,3.482,2943,4.939,3132,6.228,3150,8.112,3151,6.036,3152,7.899,3153,7.899,3154,6.036,3155,6.036]],["title/classes/UpdateUserCredentialEventHandler.html",[81,0.336,3156,4.721]],["body/classes/UpdateUserCredentialEventHandler.html",[3,0.05,4,0.058,5,0.058,8,0.19,15,1.207,22,2.387,24,0.277,25,0.004,32,0.192,69,0.603,81,0.379,83,0.311,85,0.058,87,0.003,88,0.003,97,2.078,99,1.528,100,1.97,110,0.523,111,0.469,113,1.159,114,1.743,118,2.309,138,1.954,139,0.564,149,1.421,158,3.66,170,1.322,171,2.247,191,2.278,210,0.379,222,1.421,246,1.843,366,1.952,1022,0.385,1063,1.63,1188,3.896,1189,3.483,1190,2.732,1191,2.732,1192,3.483,1193,2.642,1194,2.52,1195,2.642,1197,2.732,1198,2.779,1199,2.779,1401,3.81,3057,4.079,3063,3.593,3132,7.304,3133,8.353,3156,7.025,3157,7.293,3158,5.911]],["title/classes/UpdateUserDto.html",[81,0.336,3090,3.926]],["body/classes/UpdateUserDto.html",[3,0.055,4,0.065,5,0.065,8,0.211,9,1.004,24,0.326,25,0.004,26,1.238,27,3.008,30,3.887,32,0.226,69,0.455,79,5.908,81,0.535,82,3.144,85,0.065,87,0.003,88,0.003,111,0.612,112,3.849,591,4.032,594,4.31,910,6.255,1022,0.428,1377,5.498,1385,4.926,1386,5.924,1389,6.981,2920,5.924,3090,6.255,3144,8.695,3159,6.57,3160,6.57,3161,6.57]],["title/classes/UpdateUserEvent.html",[81,0.336,3104,4.128]],["body/classes/UpdateUserEvent.html",[3,0.052,4,0.061,5,0.061,8,0.198,9,0.964,22,2.335,24,0.335,25,0.004,26,1.257,32,0.233,55,2.781,81,0.396,83,0.246,85,0.061,87,0.003,88,0.003,110,0.414,111,0.371,139,0.996,149,2.138,210,0.396,246,2.773,408,3.784,752,1.849,1022,0.402,1181,3.265,1283,2.802,1392,4.425,1393,3.557,1396,4.425,1581,6.005,1582,4.623,2943,5.008,3104,6.315,3150,8.167]],["title/classes/UpdateUserEventHandler.html",[81,0.336,3162,4.382]],["body/classes/UpdateUserEventHandler.html",[3,0.051,4,0.06,5,0.06,8,0.195,15,1.236,22,1.501,24,0.281,25,0.004,32,0.195,69,0.61,81,0.388,83,0.316,85,0.06,87,0.003,88,0.003,97,2.128,99,1.552,110,0.532,111,0.477,113,1.187,118,2.365,138,2.002,139,0.578,149,1.455,158,3.684,170,1.354,171,2.301,191,2.333,210,0.388,246,1.887,331,5.101,366,1.983,1022,0.394,1063,1.669,1188,3.941,1189,3.538,1190,2.798,1191,2.798,1192,3.538,1193,2.706,1194,2.581,1195,2.706,1197,2.798,1198,2.846,1199,2.846,1399,5.533,1401,3.902,3057,4.178,3063,3.679,3104,7.372,3157,7.379,3162,6.623,3163,6.054]],["title/classes/UpdateUserRoleCommand.html",[81,0.336,3164,3.926]],["body/classes/UpdateUserRoleCommand.html",[3,0.054,4,0.064,5,0.064,8,0.208,9,0.994,22,2.377,24,0.323,25,0.004,26,1.005,32,0.225,69,0.447,81,0.415,83,0.258,85,0.064,87,0.003,88,0.003,110,0.434,111,0.389,133,4.696,135,3.479,139,0.967,210,0.415,408,3.656,597,4.604,752,1.815,943,2.026,944,2.43,945,1.904,1022,0.421,1324,5.096,3089,8.021,3164,6.191,3165,6.464,3166,8.256,3167,6.464]],["title/classes/UpdateUserRoleCommandHandler.html",[81,0.336,3168,4.382]],["body/classes/UpdateUserRoleCommandHandler.html",[3,0.044,4,0.051,5,0.051,8,0.167,22,2.362,24,0.254,25,0.004,32,0.177,64,1.877,69,0.675,76,1.467,81,0.334,83,0.285,85,0.051,87,0.003,88,0.003,99,1.403,100,1.846,110,0.48,111,0.431,113,1.021,114,1.6,170,1.164,175,2.327,176,2.254,177,2.29,178,2.153,210,0.459,221,2.204,222,1.719,224,2.154,277,1.742,366,1.792,493,2.687,494,3.344,517,3.485,525,1.979,527,2.536,597,2.634,662,1.952,664,1.927,665,2.638,666,1.83,1022,0.339,1063,1.435,1064,3.713,1069,2.546,1078,3.25,1080,2.254,1081,2.365,1138,3.922,1146,3.25,1167,2.254,1172,2.447,1315,2.802,1358,3.255,1499,2.687,1747,3.163,2767,3.903,3049,3.466,3063,3.163,3092,6.837,3164,6.596,3168,6.837,3169,6.936,3170,4.104,3171,4.693,3172,5.205,3173,5.205,3174,5.205,3175,5.205]],["title/classes/UpdateUserRoleEvent.html",[81,0.336,3170,4.128]],["body/classes/UpdateUserRoleEvent.html",[3,0.05,4,0.058,5,0.058,8,0.19,9,0.938,22,2.591,24,0.329,25,0.004,26,1.128,32,0.229,55,2.705,69,0.409,81,0.379,83,0.236,85,0.058,87,0.003,88,0.003,110,0.397,111,0.356,139,0.988,149,2.095,210,0.379,246,2.717,752,1.833,1022,0.385,1181,3.176,1283,2.686,1905,6.143,2943,4.872,3049,3.937,3150,8.057,3164,7.762,3169,4.661,3170,6.143,3176,5.911,3177,5.911,3178,7.791,3179,5.911,3180,5.911]],["title/classes/UpdateUserRoleEventHandler.html",[81,0.336,3181,4.721]],["body/classes/UpdateUserRoleEventHandler.html",[3,0.049,4,0.058,5,0.058,8,0.187,15,1.19,22,2.376,24,0.274,25,0.004,32,0.191,69,0.599,81,0.374,83,0.308,85,0.058,87,0.003,88,0.003,97,2.048,99,1.513,100,1.955,110,0.518,111,0.465,113,1.143,114,1.726,118,2.276,138,1.926,139,0.556,149,1.4,158,3.645,170,1.303,171,2.214,191,2.245,210,0.374,222,1.4,246,1.816,366,1.933,1022,0.38,1063,1.606,1188,3.868,1189,3.449,1190,2.692,1191,2.692,1192,3.449,1193,2.604,1194,2.484,1195,2.604,1197,2.692,1198,2.739,1199,2.739,1905,4.593,3057,4.02,3063,3.54,3157,7.241,3170,7.262,3171,8.305,3181,6.957,3182,5.825,3183,5.825,3184,5.825]],["title/controllers/UserController.html",[89,2.703,3185,4.382]],["body/controllers/UserController.html",[3,0.015,4,0.018,5,0.018,8,0.058,15,1.471,22,1.615,24,0.289,25,0.004,26,1.029,27,2.992,32,0.205,69,0.585,81,0.117,83,0.324,85,0.018,87,0.001,88,0.001,89,0.94,91,0.887,96,1.256,99,0.616,100,2.274,106,0.776,110,0.546,111,0.489,112,0.764,113,1.627,114,2.15,118,2.375,119,1.173,121,1.306,122,0.502,127,1.212,128,1.002,131,1.256,132,1.365,133,0.94,135,0.98,138,0.602,139,0.174,143,5.954,144,2.728,159,2.517,222,1.953,224,2.499,242,1.212,247,0.683,258,1.306,263,1.365,395,4.048,399,3.884,408,1.98,417,2.858,420,1.641,426,4.168,572,5.348,594,0.856,597,2.096,613,6.595,640,3.973,641,2.972,646,1.365,656,1.173,662,3.112,664,3.071,665,2.679,666,2.857,1321,1.365,1322,1.523,1323,1.435,1324,1.435,1356,3.535,1359,2.628,1709,5.188,1715,4.793,1787,1.306,1788,1.306,1890,1.435,1899,4.558,2163,4.123,2322,1.523,2323,1.523,2341,1.523,2345,2.628,2351,1.641,2438,2.167,2501,2.831,2517,4.442,2524,1.523,2532,1.641,2772,2.628,2943,2.589,3090,6.337,3124,5.162,3127,1.523,3185,2.628,3186,1.82,3187,2.831,3188,4.442,3189,2.831,3190,3.734,3191,2.831,3192,2.831,3193,2.831,3194,2.831,3195,4.141,3196,3.734,3197,3.14,3198,1.641,3199,1.82,3200,1.82,3201,1.82,3202,1.82,3203,4.141,3204,1.82,3205,1.82,3206,1.82,3207,1.641,3208,1.82,3209,1.82,3210,1.641,3211,1.82,3212,1.82,3213,1.641,3214,1.82,3215,1.82,3216,1.82,3217,1.641,3218,3.14,3219,1.82,3220,1.82,3221,1.82,3222,1.82,3223,1.82,3224,1.82,3225,1.82,3226,1.641,3227,1.82,3228,1.82,3229,1.82,3230,1.641,3231,1.82,3232,1.82,3233,1.82,3234,1.82,3235,1.82,3236,1.82,3237,1.82,3238,1.82,3239,1.82,3240,1.82,3241,1.641,3242,1.641,3243,1.82,3244,1.82,3245,1.82,3246,1.82,3247,1.82,3248,1.82,3249,1.82,3250,8.297,3251,1.82,3252,1.82,3253,1.82,3254,1.82,3255,1.82,3256,1.82,3257,1.82,3258,1.82,3259,1.82,3260,1.82,3261,1.82,3262,1.82,3263,1.82,3264,1.82,3265,1.82,3266,1.82,3267,1.82,3268,1.82,3269,1.82,3270,1.82,3271,1.82,3272,1.82,3273,1.82,3274,1.82,3275,1.82,3276,1.82,3277,1.82,3278,1.82,3279,1.82,3280,1.82]],["title/entities/UserEntity.html",[0,1.774,64,1.888]],["body/entities/UserEntity.html",[0,1.364,1,3.966,2,2.992,3,0.02,4,0.024,5,0.024,8,0.079,9,0.618,13,2.189,14,2.373,15,1.049,21,2.223,22,1.858,24,0.34,25,0.004,26,1.101,27,3.452,32,0.236,37,4.94,38,4.306,40,3.619,43,3.117,51,1.962,53,3.277,55,2.067,64,1.452,69,0.542,70,3.953,71,2.502,72,2.549,74,1.169,75,2.502,76,0.689,81,0.258,83,0.097,84,5.313,85,0.024,87,0.001,88,0.001,99,0.479,100,0.552,111,0.503,112,2.156,114,0.547,133,2.651,135,1.315,221,0.753,224,0.736,247,0.917,289,3.038,293,1.345,404,3.37,454,1.754,473,2.944,481,3.619,482,1.927,483,3.838,484,1.832,485,5.17,486,1.832,487,1.927,578,1.828,584,3.019,586,2.89,591,2.259,594,3.096,597,2.599,752,1.567,834,1.927,838,4.567,848,3.175,849,3.175,858,3.63,859,5.402,900,4.829,902,1.575,920,3.517,923,1.213,928,1.237,943,0.6,944,1.26,945,0.72,948,4.63,951,3.435,1003,4.297,1304,5.907,1356,1.754,1388,1.687,1459,3.63,1492,3.63,1591,4.297,1618,1.058,1763,3.211,1846,4.273,1866,4.049,1946,4.465,2010,3.63,2041,1.628,2379,3.175,2732,3.63,2891,3.63,2998,4.63,3000,4.983,3001,5.369,3281,2.444,3282,5.135,3283,5.135,3284,5.135,3285,5.135,3286,5.135,3287,4.027,3288,2.444,3289,2.444,3290,4.027,3291,2.444,3292,2.444,3293,2.444,3294,2.444,3295,5.955,3296,4.027,3297,4.027,3298,2.444,3299,5.369,3300,6.585,3301,2.444,3302,2.444,3303,4.027,3304,2.444,3305,2.444,3306,2.444,3307,2.444,3308,4.027,3309,2.444,3310,2.444,3311,4.027,3312,2.444,3313,2.444,3314,4.027,3315,2.444,3316,2.444,3317,2.444,3318,4.027,3319,2.204,3320,4.027,3321,2.444,3322,4.027,3323,2.444]],["title/interfaces/UserIdDto.html",[399,4.128,2793,3.757]],["body/interfaces/UserIdDto.html",[3,0.065,4,0.077,5,0.077,8,0.25,9,1.113,24,0.276,25,0.004,26,1.202,85,0.077,87,0.003,88,0.003,399,7.291,408,4.107,419,6.499,2793,5.573,2794,6.123,3324,7.766]],["title/classes/UserListResponse.html",[81,0.336,1891,4.382]],["body/classes/UserListResponse.html",[3,0.057,4,0.067,5,0.067,8,0.218,9,1.023,24,0.302,25,0.004,32,0.21,69,0.468,81,0.434,83,0.27,85,0.067,87,0.003,88,0.003,110,0.455,111,0.408,210,0.434,404,7.778,656,6.607,752,1.665,1022,0.441,1323,5.337,1406,5.076,1891,7.114,3325,8.38,3326,6.77,3327,9.294,3328,8.502,3329,8.502,3330,8.502]],["title/classes/UserLoginDto.html",[81,0.336,3331,4.721]],["body/classes/UserLoginDto.html",[3,0.052,4,0.061,5,0.061,8,0.199,9,0.968,24,0.317,25,0.004,26,1.283,27,2.9,32,0.22,69,0.429,81,0.398,83,0.247,85,0.061,87,0.003,88,0.003,110,0.417,111,0.374,128,3.414,139,0.956,210,0.398,419,7.899,594,4.795,752,1.795,757,7.332,1022,0.404,1036,7.017,3331,7.25,3332,6.204,3333,8.041,3334,6.204,3335,6.204,3336,6.204,3337,6.204,3338,6.204]],["title/classes/UserLoginResponse.html",[81,0.336,653,4.128]],["body/classes/UserLoginResponse.html",[3,0.041,4,0.048,5,0.048,8,0.157,9,0.823,13,3.365,15,1.612,21,3.417,24,0.353,25,0.004,26,1.226,32,0.246,43,3.762,64,1.758,69,0.473,81,0.313,83,0.194,85,0.048,87,0.002,88,0.002,110,0.327,111,0.577,133,4.074,135,2.624,139,1.014,210,0.313,591,3.471,594,3.71,597,3.994,633,4.444,653,5.389,752,1.938,943,1.677,944,2.291,945,1.436,951,4.552,1022,0.318,1388,3.365,1406,3.656,3325,9.081,3339,4.876,3340,4.876,3341,4.876,3342,4.876,3343,4.876,3344,4.876,3345,4.876,3346,4.876,3347,4.876,3348,4.876,3349,4.876]],["title/modules/UserModule.html",[149,1.258,157,3.613]],["body/modules/UserModule.html",[3,0.03,4,0.035,5,0.035,22,2.157,25,0.004,64,1.291,69,0.738,81,0.23,83,0.143,85,0.035,87,0.002,88,0.002,91,2.656,97,2.321,106,1.526,122,0.987,149,1.31,151,2.015,152,3.069,156,5.085,157,6.466,158,3.097,159,5.085,160,3.312,161,2.175,162,2.175,164,3.312,165,3.312,166,2.383,167,3.63,168,2.015,169,3.513,170,0.801,171,2.072,172,2.383,178,4.298,180,2.821,183,2.821,186,6.597,188,3.513,189,2.469,190,2.307,191,1.379,194,2.383,195,2.383,196,2.383,197,2.383,198,2.307,230,2.821,238,2.568,276,2.383,277,1.197,278,2.683,608,4.1,633,2.015,737,4.297,739,2.821,781,2.821,1080,1.549,1194,1.526,1284,4.561,1286,5.481,1315,1.926,1397,4.561,1399,4.367,1570,4.297,1583,4.561,1724,1.969,1790,2.307,1840,4.561,1842,3.227,1853,4.561,1854,3.227,1863,4.561,1864,2.995,1889,4.561,1918,4.561,2187,4.561,2388,2.995,2390,2.995,2391,2.995,2395,5.524,2399,2.995,2400,2.995,2401,5.524,2762,4.561,2764,4.297,2775,4.561,2777,4.561,2828,4.561,2872,3.911,2873,4.561,2880,4.561,2970,4.561,3091,4.561,3128,4.561,3129,2.995,3162,4.561,3168,4.561,3169,2.821,3185,5.524,3241,3.227,3350,3.579,3351,3.579,3352,3.579,3353,3.579,3354,3.579,3355,3.579,3356,3.579,3357,3.579,3358,3.579,3359,3.579]],["title/classes/UserNotFoundException.html",[81,0.336,2652,4.128]],["body/classes/UserNotFoundException.html",[3,0.062,4,0.073,5,0.073,25,0.004,32,0.183,69,0.512,81,0.474,85,0.073,87,0.003,88,0.003,120,3.742,122,2.039,210,0.62,640,4.545,713,4.375,1022,0.482,1225,4.08,1236,3.305,1616,4.73,1618,3.887,2404,6.667,2405,6.667,2652,7.078,2653,7.513,3360,7.394]],["title/classes/UserResponse.html",[81,0.336,656,3.375]],["body/classes/UserResponse.html",[3,0.049,4,0.058,5,0.058,8,0.189,9,0.936,15,1.777,24,0.342,25,0.004,26,1.203,32,0.238,69,0.408,81,0.378,83,0.235,85,0.058,87,0.003,88,0.003,110,0.396,111,0.579,112,3.654,133,4.492,135,3.172,139,1.011,210,0.378,591,3.828,597,4.404,656,5.012,752,1.898,943,1.908,944,2.424,945,1.736,1022,0.384,1388,4.067,1406,4.419,3361,5.894,3362,5.894,3363,5.894,3364,5.894,3365,5.894,3366,5.894]],["title/injectables/UserService.html",[159,3.182,207,1.888]],["body/injectables/UserService.html",[3,0.014,4,0.016,5,0.016,8,0.052,15,1.053,22,1.88,24,0.299,25,0.004,26,1.231,30,0.955,32,0.214,69,0.657,81,0.104,83,0.336,85,0.016,87,0.001,88,0.001,93,0.909,97,0.567,99,0.555,100,2.307,106,0.688,110,0.565,111,0.507,112,2.383,113,1.675,114,2.168,122,0.445,133,2.34,135,0.869,138,0.533,139,0.27,144,2.757,159,1.719,170,0.361,181,1.075,207,1.02,208,0.786,210,0.104,211,1.158,212,3.916,213,4.219,217,2.029,218,1.272,220,2.976,221,1.397,222,2.129,223,2.029,224,2.669,225,4.893,242,1.075,245,1.272,247,0.605,395,3.779,408,3.597,417,2.605,591,0.71,594,2.424,597,2.872,608,1.948,613,1.114,633,1.592,646,1.21,656,1.04,662,2.435,664,2.403,665,2.624,666,3.147,779,2.12,781,1.272,783,6.406,871,1.009,1224,3.779,1225,2.579,1226,0.955,1235,1.823,1236,2.536,1277,2.23,1286,3.558,1316,2.709,1317,1.883,1318,1.272,1319,3.253,1320,1.272,1321,1.21,1322,1.35,1323,1.272,1324,1.272,1325,2.83,1326,2.366,1338,3.128,1339,3.128,1343,2.029,1356,1.158,1359,2.366,1494,1.455,1567,2.23,1673,2.23,1709,4.601,1715,4.474,1787,1.158,1788,1.158,1790,1.04,1857,1.272,1859,1.272,1864,1.35,1890,1.272,1899,3.866,1916,2.23,2204,2.366,2205,1.455,2208,2.23,2434,1.35,2438,1.951,2440,3.159,2442,1.35,2444,1.35,2524,1.35,2652,4.821,2653,1.35,2757,1.272,2764,2.23,2772,2.366,2826,2.23,2845,2.366,2846,1.455,2848,1.35,2849,2.366,2870,1.272,2872,1.158,2943,1.768,2967,1.272,3088,1.272,3090,4.867,3122,2.23,3124,5.112,3127,1.35,3129,1.35,3164,2.12,3169,1.272,3187,2.55,3188,4.088,3189,2.55,3190,2.55,3191,2.55,3192,2.55,3193,2.55,3194,2.55,3196,2.55,3198,2.55,3207,2.55,3210,2.55,3213,2.55,3217,2.55,3226,2.55,3230,2.55,3242,1.455,3367,1.614,3368,2.828,3369,4.534,3370,2.828,3371,2.828,3372,2.828,3373,2.828,3374,1.614,3375,1.614,3376,2.828,3377,1.614,3378,1.614,3379,2.828,3380,1.614,3381,1.614,3382,1.614,3383,1.614,3384,1.614,3385,1.614,3386,2.828,3387,1.614,3388,2.828,3389,1.614,3390,2.828,3391,1.614,3392,2.828,3393,1.614,3394,1.614,3395,2.828,3396,1.614,3397,1.614,3398,2.828,3399,1.614,3400,2.828,3401,1.614,3402,1.614,3403,1.614,3404,1.614,3405,1.614,3406,1.614,3407,1.614,3408,1.614,3409,1.614,3410,1.614,3411,1.614,3412,1.614,3413,1.614,3414,2.828,3415,3.775,3416,1.614,3417,2.828,3418,1.614,3419,4.534,3420,1.614,3421,1.614,3422,1.614]],["title/changelog.html",[1755,3.126,3423,3.266,3424,4.356]],["body/changelog.html",[0,2.681,2,2.751,22,1.501,25,0.003,87,0.003,88,0.003,93,3.409,97,3.287,98,4.773,112,2.542,149,2.332,238,5.679,306,5.066,383,6.327,574,2.542,578,2.155,586,4.344,596,5.934,605,5.461,632,3.679,757,4.539,1182,4.773,1363,4.773,2531,5.458,2943,3.785,3425,5.458,3426,10.399,3427,7.914,3428,6.054,3429,10.399,3430,10.284,3431,7.914,3432,8.817,3433,6.054,3434,6.054,3435,6.054,3436,6.054,3437,6.054,3438,6.054,3439,6.054,3440,6.054,3441,8.974,3442,6.054,3443,6.054,3444,6.054,3445,6.054,3446,6.054,3447,6.054,3448,6.054,3449,6.054,3450,6.054,3451,6.054,3452,6.054,3453,5.458,3454,5.458]],["title/contributing.html",[1755,3.126,3423,3.266,3455,3.927]],["body/contributing.html",[25,0.003,87,0.003,88,0.003,3455,7.688]],["title/dependencies.html",[152,3.551,3456,3.927]],["body/dependencies.html",[25,0.004,76,1.732,81,0.513,82,2.941,87,0.003,88,0.003,122,1.695,128,3.382,152,3.461,168,3.461,170,1.375,277,2.057,337,5.542,526,4.242,647,5.152,724,4.094,729,5.144,1435,5.542,1505,5.144,1688,4.846,1972,4.609,2116,5.542,2149,7.003,2150,6.302,2177,7.207,3319,5.542,3457,8.882,3458,7.993,3459,6.147,3460,7.993,3461,6.147,3462,6.147,3463,6.147,3464,6.147,3465,6.147,3466,6.147,3467,7.993,3468,6.147,3469,6.147,3470,6.147,3471,6.147,3472,6.147,3473,6.147,3474,6.147,3475,6.147,3476,6.147,3477,6.147,3478,6.147,3479,6.147,3480,6.147,3481,6.147,3482,6.147,3483,6.147,3484,6.147,3485,6.147,3486,6.147,3487,6.147]],["title/miscellaneous/enumerations.html",[3488,2.901,3489,5.686]],["body/miscellaneous/enumerations.html",[3,0.044,6,4.179,8,0.109,11,5.149,22,0.841,25,0.004,83,0.135,87,0.002,88,0.002,92,2.808,110,0.228,133,2.7,313,3.27,551,3.921,580,4.376,591,1.492,594,1.594,665,2.316,752,0.937,823,2.34,828,4.715,829,4.715,892,4.715,894,4.715,896,4.715,905,4.376,907,4.715,914,4.715,937,4.715,951,1.956,957,4.715,1038,3.753,1077,3.921,1181,4.469,1236,2.338,1256,3.371,1338,4.405,1339,4.405,1343,3.753,1645,2.838,1668,4.715,1689,2.674,2102,4.715,2181,6.469,2279,4.715,2838,3.057,2840,5.755,3012,4.715,3488,2.258,3489,3.057,3490,3.391,3491,5.23,3492,3.391,3493,3.391,3494,5.23,3495,3.391,3496,5.23,3497,5.23,3498,5.23,3499,5.23,3500,6.383,3501,5.23,3502,5.23,3503,7.175,3504,5.23,3505,3.391,3506,8.19,3507,3.391,3508,3.391,3509,5.23,3510,3.391,3511,6.383,3512,5.23,3513,5.23,3514,5.23,3515,5.23,3516,3.391,3517,3.391,3518,3.391,3519,3.391,3520,3.391,3521,3.391,3522,3.391,3523,3.391,3524,3.391,3525,3.391,3526,3.391,3527,5.23,3528,5.23,3529,5.23,3530,5.23,3531,5.23,3532,3.391,3533,3.391,3534,3.391,3535,3.391,3536,3.391,3537,7.175,3538,5.23,3539,5.23,3540,7.175,3541,5.23,3542,7.175,3543,5.23,3544,5.23,3545,5.23,3546,5.23,3547,3.391,3548,5.23,3549,5.23,3550,5.23,3551,3.391,3552,5.23,3553,5.23,3554,3.391,3555,5.23,3556,5.23,3557,3.391,3558,5.23,3559,5.23,3560,5.23,3561,5.23,3562,6.383,3563,7.175,3564,5.23,3565,5.23,3566,5.23,3567,5.23,3568,5.23,3569,5.23]],["title/miscellaneous/functions.html",[3488,2.901,3570,5.686]],["body/miscellaneous/functions.html",[8,0.263,25,0.004,87,0.003,88,0.003,113,1.604,114,1.83,3488,5.447,3570,7.374,3571,10.09,3572,8.178,3573,8.178]],["title/index.html",[8,0.14,1755,3.126,3423,3.266]],["body/index.html",[25,0.003,87,0.003,88,0.003,97,3.329,152,4.912,289,4.175,367,4.869,392,5.563,905,5.904,3454,6.362,3574,7.056,3575,7.056,3576,7.056,3577,7.056,3578,7.056,3579,7.056,3580,7.056,3581,7.056,3582,7.056,3583,7.056,3584,7.056,3585,7.056,3586,7.056,3587,7.056,3588,10.166,3589,7.056,3590,8.724,3591,7.056,3592,7.056,3593,7.056,3594,7.056,3595,7.056,3596,7.056,3597,7.056,3598,9.47,3599,7.056,3600,7.056,3601,7.056,3602,7.056,3603,7.056,3604,8.724,3605,7.056]],["title/license.html",[1755,3.126,3423,3.266,3606,3.927]],["body/license.html",[25,0.003,87,0.003,88,0.003]],["title/modules.html",[151,4.044]],["body/modules.html",[25,0.003,87,0.003,88,0.003,150,5.199,151,3.904,156,4.214,157,4.785,266,5.199,316,5.199,320,5.199,321,5.199,322,5.199,323,5.199,324,5.199,434,5.467,2015,6.252,3607,10.73,3608,10.73,3609,10.73,3610,10.789,3611,6.934]],["title/overview.html",[3612,6.474]],["body/overview.html",[2,1.843,25,0.004,87,0.002,88,0.002,91,1.977,123,5.336,150,7.516,151,2.284,152,3.372,153,3.658,154,3.658,155,3.658,156,6.146,157,6.766,158,3.579,159,5.33,160,3.639,161,2.465,162,2.465,208,1.977,259,5.336,266,7.516,267,3.658,268,3.658,297,5.107,316,7.986,317,3.658,318,3.658,319,3.658,320,7.781,321,5.336,322,6.284,323,7.128,324,7.128,410,5.336,434,6.914,435,3.658,437,3.658,638,6.51,714,3.658,715,3.658,717,3.658,718,5.611,719,5.611,720,5.611,1022,0.264,1385,3.042,1413,5.336,1978,3.658,1979,3.658,2324,5.336,2382,3.658,2383,3.658,2522,5.336,2597,3.658,2599,3.658,2794,3.198,3612,3.658,3613,4.057,3614,4.057,3615,4.057,3616,4.057,3617,4.057]],["title/properties.html",[9,0.759,3456,3.927]],["body/properties.html",[9,0.985,25,0.004,87,0.003,88,0.003,289,4.839,1095,6.844,2241,7.374,3425,7.374,3606,7.374,3618,8.178]],["title/todo.html",[1755,3.126,3423,3.266,3619,4.356]],["body/todo.html",[25,0.003,26,0.897,76,2.076,84,5.524,87,0.003,88,0.003,97,2.59,112,3.762,312,5.601,392,5.808,605,6.661,635,6.642,842,5.084,2150,5.808,2864,6.642,3000,7.496,3299,6.642,3441,9.435,3453,6.642,3620,7.367,3621,7.367,3622,7.367,3623,7.367,3624,7.367,3625,8.958,3626,8.958,3627,7.367,3628,8.958]],["title/miscellaneous/typealiases.html",[3488,2.901,3629,6.307]],["body/miscellaneous/typealiases.html",[8,0.259,24,0.286,25,0.003,87,0.003,88,0.003,1225,3.657,1226,4.762,1227,6.516,1616,4.24,2034,8.514,2039,8.514,2040,7.256,3488,5.359,3630,8.047,3631,8.047]],["title/miscellaneous/variables.html",[3488,2.901,3632,5.686]],["body/miscellaneous/variables.html",[3,0.051,8,0.195,22,1.506,24,0.216,25,0.004,55,2.753,81,0.39,87,0.003,88,0.003,100,1.372,114,1.358,131,5.472,133,3.135,138,2.008,139,0.579,144,2.56,159,4.819,207,2.19,222,1.459,224,1.829,247,2.974,597,3.073,616,4.819,648,4.788,1181,3.233,1434,6.636,1618,2.629,2041,4.044,3488,4.044,3632,5.475,3633,6.072,3634,7.93,3635,6.072,3636,6.072,3637,6.072,3638,7.93,3639,6.072,3640,6.072,3641,6.072,3642,6.072,3643,6.072,3644,6.072,3645,6.072,3646,6.072,3647,6.072,3648,6.072,3649,6.072,3650,6.072,3651,6.072,3652,6.072,3653,6.072,3654,6.072,3655,6.072,3656,6.072,3657,6.072,3658,6.072,3659,6.072,3660,6.072,3661,6.072,3662,6.072,3663,6.072,3664,6.072,3665,6.072,3666,6.072]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":871,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["0.0.1",{"_index":306,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.2",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":2531,"title":{},"body":{"controllers/ProfileController.html":{},"changelog.html":{}}}],["0.0.9",{"_index":3425,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":3480,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3473,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":3485,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2019,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":3472,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3474,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2155,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":3476,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":3469,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":596,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{}}}],["10.0.2",{"_index":3461,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":2005,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["11",{"_index":3613,"title":{},"body":{"overview.html":{}}}],["15",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["191",{"_index":3616,"title":{},"body":{"overview.html":{}}}],["2",{"_index":2534,"title":{},"body":{"controllers/ProfileController.html":{}}}],["2.3.0",{"_index":3486,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":3458,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1385,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["20)@isnotempty",{"_index":3160,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["2023",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["20})@column({unique",{"_index":2690,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["22",{"_index":3615,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":3534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["29",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":3617,"title":{},"body":{"overview.html":{}}}],["3.0.8",{"_index":3468,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":3487,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1951,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":1945,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":2009,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":2004,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":2400,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["300mb",{"_index":2000,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":200,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":203,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":206,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":1376,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["4.0.1",{"_index":3475,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":3484,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":1735,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1517,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/OccupationNotFoundException.html":{}}}],["409",{"_index":1625,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["4210",{"_index":2700,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":3657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":3471,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2014,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["500",{"_index":2684,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["500000",{"_index":3655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1448,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1368,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{}}}],["6.2.1",{"_index":3464,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3481,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":3478,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":2716,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":2702,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":2701,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9",{"_index":3614,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":3457,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":3466,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":3460,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":3465,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":3462,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":920,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":3320,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":2688,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1366,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["accesstokencookie",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":3549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":3441,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["addprofile",{"_index":3321,"title":{},"body":{"entities/UserEntity.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":959,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":985,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":3287,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{}}}],["addresses",{"_index":948,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":515,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":2840,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1693,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":2792,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":3630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":2007,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":1362,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["already",{"_index":1338,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":2056,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":3581,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":3548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":97,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":3651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["api/occupation/domain/entities/occupation.entity",{"_index":1437,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/occupation/occupation.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["api/profile/domain/entities/profile.entity",{"_index":1438,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/profile/profile.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1439,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":750,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":195,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":201,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1065,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1066,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1067,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":204,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":307,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apigroup",{"_index":303,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apilandingpagecontroller",{"_index":90,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["apilandingpagemodule",{"_index":150,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":123,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":1643,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":156,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":158,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":250,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["apimailmodule",{"_index":266,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":259,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"overview.html":{}}}],["apiname",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apiokresponse",{"_index":125,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":1036,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1379,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@length(5",{"_index":1384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":1039,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":2687,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1048,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1042,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":299,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apisuccess",{"_index":308,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apisuccessexample",{"_index":310,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":137,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":1976,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":262,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('occupation",{"_index":2333,"title":{},"body":{"controllers/OccupationController.html":{}}}],["apitags('profile",{"_index":2530,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('user",{"_index":3247,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":1025,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":1038,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1097,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["app",{"_index":411,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":298,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":284,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":2533,"title":{},"body":{"controllers/ProfileController.html":{}}}],["appmodule",{"_index":316,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":297,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":380,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["appteste2emodule",{"_index":434,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":410,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":2117,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1665,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":3578,"title":{},"body":{"index.html":{}}}],["array",{"_index":849,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":100,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":2136,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["auth.service",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/dto/sign",{"_index":3039,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["auth/guards/role.guard",{"_index":132,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2524,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":603,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":2174,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":2137,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":2138,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":2169,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":320,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2241,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":638,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["available",{"_index":2015,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":222,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":949,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":950,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":2379,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":526,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1885,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1869,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":2877,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":2754,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":595,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":3297,"title":{},"body":{"entities/UserEntity.html":{}}}],["beforeinsert",{"_index":3318,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":2699,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":810,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/NotificationEntity.html":{},"classes/ProfileResponse.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":3571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundary",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":3576,"title":{},"body":{"index.html":{}}}],["browse",{"_index":3610,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3607,"title":{},"body":{"modules.html":{}}}],["call",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":3660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":3542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":551,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":449,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":987,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:27",{"_index":998,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":995,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":991,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":993,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":996,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":999,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":997,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":906,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":3506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":2582,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":2586,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":2595,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":441,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cardentity.connectedcardone",{"_index":990,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":992,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":1953,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":2221,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":2242,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":2367,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":2929,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":988,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":989,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":2213,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":495,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":2365,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["catch",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(async",{"_index":1753,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{}}}],["catch(exception",{"_index":1664,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1503,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1510,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":3525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":3424,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":2050,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":1365,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["check",{"_index":1967,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":1982,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1966,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller.ts:27",{"_index":1970,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":1980,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1424,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.query.ts",{"_index":1986,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check.response",{"_index":1427,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":2021,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:3",{"_index":2025,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":2026,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":1974,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1417,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:10",{"_index":1421,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1420,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":1987,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["check/cqrs/query/health",{"_index":1985,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check/custom",{"_index":1415,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/domain/response/health",{"_index":2020,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check/health",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["checkhealth",{"_index":1418,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":1145,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":2938,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":1022,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":3537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":385,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1073,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":2068,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":2070,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":2072,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":2057,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":2058,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1071,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":166,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":194,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":2059,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":153,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":155,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":154,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":226,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":227,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":228,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":267,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":269,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":268,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":435,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":436,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":437,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":714,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":715,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":716,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":717,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":1978,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":1979,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_occupationmodule",{"_index":2382,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_occupationmodule_imports",{"_index":2384,"title":{},"body":{"modules/OccupationModule.html":{}}}],["cluster_occupationmodule_providers",{"_index":2383,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":2597,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":2598,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":2599,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3350,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":3351,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3352,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1363,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"changelog.html":{}}}],["code.entity",{"_index":454,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1586,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:19",{"_index":2703,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1603,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":2692,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1599,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":2713,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1597,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":2706,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1605,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":2708,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1602,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":2697,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1610,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":2694,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":2710,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1607,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1593,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1608,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1594,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":3496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":848,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@column({unique",{"_index":3316,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":858,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":834,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":869,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":2998,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":1080,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createoccupationdto",{"_index":1159,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createoccupationdto.name",{"_index":1156,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createprofiledto",{"_index":1238,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.createuserdto",{"_index":1347,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.mail",{"_index":1340,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1335,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":2859,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command.id",{"_index":1558,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["command.mail",{"_index":2750,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.mail).pipe",{"_index":1509,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.occupationid",{"_index":1541,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["command.occupations",{"_index":3075,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupations.map(async",{"_index":3071,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupationsid.length",{"_index":1239,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.occupationsid.map(async",{"_index":1241,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.profileid",{"_index":2817,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command.roles",{"_index":3173,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["command.updateoccupationdto",{"_index":3054,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateoccupationdto.name",{"_index":3051,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateprofiledto",{"_index":3084,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["command.updateusercredentialdto.newpassword",{"_index":3138,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.updateusercredentialdto.password",{"_index":3139,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.user",{"_index":3113,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.mail",{"_index":3108,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.username",{"_index":3106,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":1234,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.username",{"_index":2752,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":1082,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1500,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":2745,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":2765,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/restore",{"_index":2802,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{}}}],["command/send",{"_index":2856,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":2875,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/shift",{"_index":2889,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command/soft",{"_index":2949,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["command/update",{"_index":3049,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["commandbus",{"_index":212,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":1081,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1086,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createoccupationcommand",{"_index":1150,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["commandhandler(createprofilecommand",{"_index":1231,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1329,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1506,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteoccupationcommand",{"_index":1540,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["commandhandler(deleteprofilecommand",{"_index":1556,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1577,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":2746,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":2766,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(restoreoccupationcommand",{"_index":2805,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["commandhandler(restoreprofilecommand",{"_index":2816,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["commandhandler(restoreusercommand",{"_index":2831,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":2857,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":2876,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(shiftprofileownercommand",{"_index":2890,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["commandhandler(softdeleteoccupationcommand",{"_index":2950,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["commandhandler(softdeleteprofilecommand",{"_index":2959,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["commandhandler(softdeleteusercommand",{"_index":2973,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["commandhandler(updateoccupationcommand",{"_index":3050,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["commandhandler(updateoccupationsprofilecommand",{"_index":3070,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["commandhandler(updateprofilecommand",{"_index":3083,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":3105,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(updateusercredentialcommand",{"_index":3134,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["commandhandler(updateuserrolecommand",{"_index":3172,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["communicate",{"_index":914,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":2366,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":930,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{}}}],["company_account",{"_index":3559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":2074,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":554,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":2076,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":2078,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":2060,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":2566,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":2567,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":444,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["companyemployeeentity.company",{"_index":970,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":497,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":2223,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":2369,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":2580,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":2225,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":2214,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":811,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":2215,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":496,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":2061,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":3591,"title":{},"body":{"index.html":{}}}],["config",{"_index":730,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":3295,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":3625,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1492,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":903,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":556,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":839,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":840,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":844,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":447,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connectedcardentity.conversation",{"_index":1004,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":812,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":498,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":813,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1099,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":247,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":2039,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":2043,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":2046,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1087,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1507,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1642,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":1190,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":2172,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":1070,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":211,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1280,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1525,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":1837,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":2035,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(getuserwithcriteriadto",{"_index":1917,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["constructor(healthcheckservice",{"_index":1988,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":2023,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":2201,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["constructor(jwtservice",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":3333,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(occupationrepository",{"_index":1137,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["constructor(partial",{"_index":943,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(profilerepository",{"_index":1218,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["constructor(public",{"_index":1283,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["constructor(querybus",{"_index":1419,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1860,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(updateuserrolecommand",{"_index":3177,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["constructor(userid",{"_index":1393,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1850,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":493,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["constructor(users",{"_index":3328,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":2142,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":2049,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{},"controllers/ProfileController.html":{}}}],["context.switchtohttp().getrequest",{"_index":3663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":3455,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":3575,"title":{},"body":{"index.html":{}}}],["controller",{"_index":89,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["controller('/auth",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/occupation",{"_index":2332,"title":{},"body":{"controllers/OccupationController.html":{}}}],["controller('api",{"_index":136,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":1975,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('profile",{"_index":2529,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('user",{"_index":3246,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":558,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":464,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":2121,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:21",{"_index":2127,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":2130,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":2129,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":2124,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":2125,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":2131,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":2126,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":1938,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":2133,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":2123,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":2245,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":450,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversationentity.notifications",{"_index":2267,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":499,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":1932,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["cqrs/command/create",{"_index":245,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":218,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":3402,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/restore",{"_index":2444,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":283,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":3403,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/shift",{"_index":2658,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cqrs/command/soft",{"_index":2442,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2440,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/event",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":230,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":180,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":3356,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/restore",{"_index":2388,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":272,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":3355,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/shift",{"_index":2603,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/command/soft",{"_index":2390,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2395,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2391,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":183,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":3359,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":3357,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/restore",{"_index":2397,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{}}}],["cqrs/handler/event/send",{"_index":274,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":3358,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/shift",{"_index":2610,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/event/soft",{"_index":2393,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{}}}],["cqrs/handler/event/update",{"_index":2399,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":186,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":1984,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":220,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1423,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":169,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1182,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":487,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":442,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["create/card.entity.ts",{"_index":809,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:100",{"_index":845,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":882,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":877,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":856,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":864,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":866,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":885,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":888,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":897,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":893,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":895,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":846,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":889,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":847,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":857,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":883,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":860,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":853,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":861,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":837,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":880,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":852,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":891,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":835,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":867,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":873,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":872,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":886,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":879,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":843,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":445,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity",{"_index":443,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity.ts",{"_index":947,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:104",{"_index":966,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":982,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":967,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":972,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":973,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":981,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":961,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":968,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":983,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":958,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":984,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":964,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":965,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":978,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":969,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":971,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":975,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":977,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":980,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":963,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":960,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":448,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity",{"_index":451,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":1001,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:24",{"_index":1011,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":1006,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":1005,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":1010,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":1015,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":1013,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":1017,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":1007,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":1018,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":1008,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":453,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{}}}],["create/entities",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":3526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":2838,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":3539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":3551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":3554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":3562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":458,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{}}}],["create/group.entity",{"_index":456,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":1931,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:24",{"_index":1942,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":1947,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":1944,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":1939,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":1949,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":1937,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":1940,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":1950,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":1941,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":461,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":2055,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:103",{"_index":2091,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":2080,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":2099,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":2082,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":2087,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":2067,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":2081,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":2089,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":2077,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":2075,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":2079,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":2071,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":2069,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":2073,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":2083,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":2094,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":2098,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":2096,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":2086,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":463,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity",{"_index":466,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity.ts",{"_index":2212,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:22",{"_index":2233,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":2234,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":2232,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":2230,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":2238,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":2236,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":2222,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":2226,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":2224,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":2227,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":2239,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":2228,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":468,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":2240,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:20",{"_index":2249,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":2244,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":2243,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":2246,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":2247,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":2250,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":2248,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":484,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":2264,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:23",{"_index":2272,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":2278,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":2271,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":2280,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":2274,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":2275,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":2283,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":2277,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":2268,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":2269,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":2281,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":2270,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/plan.entity",{"_index":472,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":2456,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:19",{"_index":2467,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":2468,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":2462,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":2469,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":2466,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":2465,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":2471,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":2460,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":2472,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":2461,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/referal",{"_index":486,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["create/social",{"_index":476,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{}}}],["create/strip",{"_index":479,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{}}}],["create/subscription.entity",{"_index":482,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":2982,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:25",{"_index":2992,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":2997,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":2991,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":2999,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":3008,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":3006,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":2996,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":3011,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":2994,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":2990,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":2987,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":3009,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":2988,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created",{"_index":1171,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createdfrom",{"_index":1901,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createdto",{"_index":1902,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createlog",{"_index":232,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":235,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":244,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["createlogcommandhandler",{"_index":188,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["createlogdto",{"_index":236,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiname",{"_index":1648,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":1652,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1649,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":1701,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1657,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1699,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1711,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1650,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1653,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1710,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1713,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1707,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1705,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1655,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1714,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1703,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":233,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":239,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":240,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{}}}],["createoccupation",{"_index":2288,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupation(@body",{"_index":2342,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(createoccupationrequest",{"_index":2296,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(occupationrequest",{"_index":2419,"title":{},"body":{"injectables/OccupationService.html":{}}}],["createoccupationcommand",{"_index":1126,"title":{"classes/CreateOccupationCommand.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["createoccupationcommandhandler",{"_index":1134,"title":{"classes/CreateOccupationCommandHandler.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationdto",{"_index":1129,"title":{"classes/CreateOccupationDto.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"injectables/OccupationService.html":{}}}],["createoccupationevent",{"_index":1147,"title":{"classes/CreateOccupationEvent.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{}}}],["createoccupationeventhandler",{"_index":1186,"title":{"classes/CreateOccupationEventHandler.html":{}},"body":{"classes/CreateOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationrequest",{"_index":1201,"title":{"classes/CreateOccupationRequest.html":{}},"body":{"classes/CreateOccupationRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupationrequest).catch(error",{"_index":2347,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createprofile",{"_index":2475,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofile(@body",{"_index":2552,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofile(createprofilerequest",{"_index":2628,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofile(profile",{"_index":2486,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofilecommand",{"_index":1206,"title":{"classes/CreateProfileCommand.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["createprofilecommandhandler",{"_index":1215,"title":{"classes/CreateProfileCommandHandler.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofiledto",{"_index":1209,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{}}}],["createprofileevent",{"_index":1229,"title":{"classes/CreateProfileEvent.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{}}}],["createprofileeventhandler",{"_index":1264,"title":{"classes/CreateProfileEventHandler.html":{}},"body":{"classes/CreateProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofilerequest",{"_index":1269,"title":{"classes/CreateProfileRequest.html":{}},"body":{"classes/CreateProfileRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofilerequest.iduser",{"_index":2665,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.occupationsid",{"_index":2666,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.roleprofile",{"_index":2664,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.usernameprofile",{"_index":2663,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createtimestamp",{"_index":3018,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1429,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1359,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":3248,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":3198,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1277,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["createusercommand(createuserdto",{"_index":3405,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1284,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["createuserdto",{"_index":395,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto.mail",{"_index":593,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":598,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":592,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1390,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{}}}],["createusereventhandler",{"_index":1397,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["createuserresponse",{"_index":1321,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusertest",{"_index":386,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":424,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":394,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":2942,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["credential",{"_index":3153,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.command",{"_index":3129,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["credential.command.ts",{"_index":3123,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:4",{"_index":3126,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:5",{"_index":3125,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.dto",{"_index":3127,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential.dto.ts",{"_index":3145,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:2",{"_index":3149,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:3",{"_index":3148,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:5",{"_index":3147,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.event",{"_index":3133,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["credential.event.ts",{"_index":3151,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:2",{"_index":3154,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:3",{"_index":3152,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:4",{"_index":3155,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credentials",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["criteria",{"_index":1784,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{}}}],["criteria')@httpcode(201)@useguards(undefined",{"_index":2309,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["criteria.dto",{"_index":1788,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["criteria.dto.ts",{"_index":1777,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:1",{"_index":1779,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["criteria.dto.ts:10",{"_index":1913,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:12",{"_index":1914,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:14",{"_index":1915,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:15",{"_index":1908,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:2",{"_index":1909,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:3",{"_index":1910,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:4",{"_index":1817,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:5",{"_index":1816,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:6",{"_index":1781,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:7",{"_index":1780,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:8",{"_index":1911,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:9",{"_index":1912,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.isdeleted",{"_index":2452,"title":{},"body":{"injectables/OccupationService.html":{}}}],["criteria.name",{"_index":2451,"title":{},"body":{"injectables/OccupationService.html":{}}}],["criteria.query",{"_index":1790,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["criteria.query.ts",{"_index":1783,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:3",{"_index":1785,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:4",{"_index":1819,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:7",{"_index":1786,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{}}}],["criteria.request",{"_index":2329,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["criteria.request.ts",{"_index":1803,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:1",{"_index":1804,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{}}}],["criteria.request.ts:4",{"_index":1833,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:5",{"_index":1832,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:6",{"_index":1806,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:7",{"_index":1805,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{}}}],["cron",{"_index":3627,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1669,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1672,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1671,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":2062,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":2872,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["current_timestamp",{"_index":3024,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1866,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":1973,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":177,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["custom.event.ts",{"_index":1637,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:1",{"_index":1638,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":1641,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":1640,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":1639,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":3003,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1413,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["data",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":392,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":334,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1601,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1678,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":3030,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":2693,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":2709,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":3579,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":3641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":3560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":2084,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":2093,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2925,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":106,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AppTestE2eController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["delete('/admin/:id",{"_index":3272,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/delete",{"_index":2490,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('/admin/delete/:id",{"_index":2348,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete('/admin/delete/:id')@httpcode(204)@useguards(undefined",{"_index":2300,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete('/admin/full",{"_index":3278,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/soft",{"_index":2316,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete('/api/test/remove",{"_index":427,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["delete('/delete",{"_index":104,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete('/public/delete",{"_index":3275,"title":{},"body":{"controllers/UserController.html":{}}}],["delete/:id",{"_index":2351,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/UserController.html":{}}}],["delete/:id')@httpcode(204)@useguards(undefined",{"_index":2317,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete/:id')@useguards(undefined",{"_index":3215,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1543,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletedfrom",{"_index":1903,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletedto",{"_index":1904,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletemail",{"_index":101,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":147,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":103,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":217,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"injectables/UserService.html":{}}}],["deletemailcommandhandler",{"_index":179,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{}}}],["deletemaildto",{"_index":1524,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1501,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deletemailevent(command",{"_index":1521,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":182,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deleteme",{"_index":3187,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteme(@req",{"_index":3276,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(requestuser",{"_index":3201,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(userid",{"_index":3376,"title":{},"body":{"injectables/UserService.html":{}}}],["deletemyprofile",{"_index":2476,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(@req",{"_index":2556,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(requestuser",{"_index":2489,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteoccupation",{"_index":2289,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupation(@param('id",{"_index":2349,"title":{},"body":{"controllers/OccupationController.html":{}}}],["deleteoccupation(occupationid",{"_index":2299,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommand",{"_index":1533,"title":{"classes/DeleteOccupationCommand.html":{}},"body":{"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommandhandler",{"_index":1537,"title":{"classes/DeleteOccupationCommandHandler.html":{}},"body":{"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteoccupationevent",{"_index":1544,"title":{"classes/DeleteOccupationEvent.html":{}},"body":{"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{}}}],["deleteoccupationeventhandler",{"_index":1547,"title":{"classes/DeleteOccupationEventHandler.html":{}},"body":{"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteprofile",{"_index":2477,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleteprofile(@param('id",{"_index":2554,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofile(id",{"_index":2630,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteprofile(profileid",{"_index":2493,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofilecommand",{"_index":1550,"title":{"classes/DeleteProfileCommand.html":{}},"body":{"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"injectables/ProfileService.html":{}}}],["deleteprofilecommandhandler",{"_index":1553,"title":{"classes/DeleteProfileCommandHandler.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["deleteprofileevent",{"_index":1555,"title":{"classes/DeleteProfileEvent.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{}}}],["deleteprofileeventhandler",{"_index":1562,"title":{"classes/DeleteProfileEventHandler.html":{}},"body":{"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["deletetimestamp",{"_index":3019,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1567,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1570,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["deleteuserevent",{"_index":1574,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{}}}],["deleteuserevent(command.userid",{"_index":1579,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1583,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{}}}],["deleteusertest",{"_index":387,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(@body",{"_index":428,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(useriddto",{"_index":398,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deletion",{"_index":2944,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":289,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1479,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1695,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":3566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":3652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1630,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1595,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":560,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1598,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1587,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":452,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discountcodeentity.subscriptions",{"_index":2989,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":500,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":2983,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":2463,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":2457,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1588,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":2011,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":1992,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":3590,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":3601,"title":{},"body":{"index.html":{}}}],["documentation:serveapplication",{"_index":3602,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":242,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/generate",{"_index":3242,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/get",{"_index":1787,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/list",{"_index":3243,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/dto/mail",{"_index":1728,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":261,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/occupation.dto",{"_index":1142,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["domain/dto/update",{"_index":2438,"title":{},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/user",{"_index":3245,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/entities/occupation.entity",{"_index":1140,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["domain/entities/profile.entity",{"_index":1222,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["domain/entities/user.entity",{"_index":1315,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["domain/enum/api",{"_index":1062,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1060,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/user",{"_index":1324,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/enum/verbose",{"_index":1083,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/request/create",{"_index":2528,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/get",{"_index":2525,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/shift",{"_index":2659,"title":{},"body":{"injectables/ProfileService.html":{}}}],["domain/request/update",{"_index":2526,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/create",{"_index":1322,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1426,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":130,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/profile.response",{"_index":1221,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/user",{"_index":1892,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["domain/response/user.response",{"_index":1890,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":3624,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate",{"_index":2455,"title":{},"body":{"injectables/OccupationService.html":{}}}],["duplicate_category_name",{"_index":3524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":3518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":3517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicatemailexception",{"_index":1319,"title":{"classes/DuplicateMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duplicatenameexception",{"_index":1621,"title":{"classes/DuplicateNameException.html":{}},"body":{"classes/DuplicateNameException.html":{},"injectables/OccupationService.html":{}}}],["duplicateusernameexception",{"_index":1316,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":2458,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e",{"_index":710,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e.message",{"_index":1173,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e2e",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":439,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":384,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:14",{"_index":393,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:20",{"_index":397,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:27",{"_index":402,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:33",{"_index":405,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:39",{"_index":407,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":438,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":412,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":489,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:105",{"_index":519,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:114",{"_index":524,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:118",{"_index":522,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:126",{"_index":520,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":516,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":518,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":851,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":2698,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":951,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/MailDto.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["email.query",{"_index":1842,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["email.query.ts",{"_index":1836,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:1",{"_index":1838,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1839,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":814,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":3535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":446,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":929,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:27",{"_index":934,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":938,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":931,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":936,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":932,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":939,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":933,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":941,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":3498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":952,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":3621,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1600,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1589,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":3349,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":321,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["entity('company_employee",{"_index":942,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":2101,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":2380,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":2715,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1228,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":2034,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":2037,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":3017,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:11",{"_index":3022,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":3026,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":3028,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":3027,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":3021,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":3025,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1468,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":3016,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity{.ts,.js",{"_index":1456,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":887,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1121,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1122,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":2284,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":940,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["enum/transferable",{"_index":918,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":909,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1388,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":904,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":3489,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":415,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":2111,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment.pipe.ts:5",{"_index":2118,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":382,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["err",{"_index":1160,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1162,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1514,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1511,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["error('duplicated",{"_index":1157,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["error('error",{"_index":1754,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["error('invalid",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('mail",{"_index":3414,"title":{},"body":{"injectables/UserService.html":{}}}],["error('new",{"_index":3140,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('node_env",{"_index":1493,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":3411,"title":{},"body":{"injectables/UserService.html":{}}}],["error('occupation",{"_index":1170,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('occupations",{"_index":3072,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('profile",{"_index":1559,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error('response",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["error('user",{"_index":1235,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["error(e",{"_index":2667,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error(error",{"_index":1250,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error(error.message",{"_index":3175,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["error.constraints",{"_index":2044,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.exception",{"_index":2433,"title":{},"body":{"injectables/OccupationService.html":{}}}],["error.exception.ts",{"_index":2681,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["error.exception.ts:3",{"_index":2682,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["error.message",{"_index":1709,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.message.split(':')[0",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.message.split(':')[1",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.status",{"_index":3250,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1146,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":174,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["errorenum",{"_index":3491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1660,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{}}}],["errorloggingmiddleware",{"_index":351,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":2038,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":2042,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":2784,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1731,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1194,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["event.createuserdto.mail",{"_index":1402,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1532,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.deleteprofilecommand.id",{"_index":1566,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["event.email",{"_index":2869,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":480,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":2979,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.entity.ts:16",{"_index":2980,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1658,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1656,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.id",{"_index":2904,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["event.listofoccupationid.join",{"_index":3081,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.localisation",{"_index":1654,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":1199,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.module",{"_index":1198,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.occupationid",{"_index":1200,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["event.owner",{"_index":2906,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event.profileid",{"_index":2825,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.profileresponse.id",{"_index":1267,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.profileresponse.userid",{"_index":1268,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.updateprofilecommand.updateprofiledto",{"_index":3086,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["event.updateuserrolecommand.roles.join",{"_index":3184,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.userid",{"_index":3183,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.userid",{"_index":1401,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":2190,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/create",{"_index":1148,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1502,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1879,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":2729,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":2778,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/restore",{"_index":2804,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["event/send",{"_index":2855,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":2882,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/shift",{"_index":2902,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event/soft",{"_index":2948,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["event/update",{"_index":3063,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventbus",{"_index":1138,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["eventshandler",{"_index":1195,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventshandler(createoccupationevent",{"_index":1196,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["eventshandler(createprofileevent",{"_index":1266,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1400,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1531,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteoccupationevent",{"_index":1549,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["eventshandler(deleteprofileevent",{"_index":1565,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1585,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1646,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":2189,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":2730,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":2779,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(restoreoccupationevent",{"_index":2810,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["eventshandler(restoreprofileevent",{"_index":2824,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["eventshandler(restoreuserevent",{"_index":2837,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":2867,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":2883,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(shiftprofileownerevent",{"_index":2903,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["eventshandler(softdeleteoccupationevent",{"_index":2955,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["eventshandler(softdeleteprofileevent",{"_index":2966,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["eventshandler(softdeleteuserevent",{"_index":2978,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["eventshandler(updateoccupationevent",{"_index":3064,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["eventshandler(updateoccupationsprofileevent",{"_index":3080,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["eventshandler(updateprofileevent",{"_index":3085,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["eventshandler(updateusercredentialevent",{"_index":3158,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":3163,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(updateuserroleevent",{"_index":3182,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["example",{"_index":314,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":2013,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1667,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/InvalidUsernameException.html":{}}}],["exception.filter.ts",{"_index":1662,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts:6",{"_index":1666,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1674,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":1317,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"injectables/OccupationService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["exception/invalid",{"_index":1226,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["exception/mail",{"_index":2205,"title":{},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["exception/no",{"_index":2252,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["exception/not",{"_index":2260,"title":{},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["exception/occupation",{"_index":2403,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["exception/query",{"_index":2432,"title":{},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{}}}],["exception/same",{"_index":2846,"title":{},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["exception/unauthorized",{"_index":3042,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["exception/user",{"_index":2653,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["exceptionfilter",{"_index":1663,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":3300,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":1069,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(command",{"_index":1078,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(new",{"_index":2449,"title":{},"body":{"injectables/OccupationService.html":{}}}],["execute(query",{"_index":1723,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["executioncontext",{"_index":3661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1516,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1339,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":3543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":2685,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":748,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1618,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"interfaces/RequestUser.html":{},"classes/SamePasswordException.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1453,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":2147,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":2153,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":3545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":859,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":2695,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":3290,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":2707,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":3628,"title":{},"body":{"todo.html":{}}}],["features",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["filename",{"_index":3650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1749,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["findall",{"_index":3188,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findme",{"_index":3368,"title":{},"body":{"injectables/UserService.html":{}}}],["findme(userid",{"_index":3379,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":3189,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":3258,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":3207,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneorfail",{"_index":1233,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["findwithcriteria",{"_index":3190,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findwithcriteria(getuserwithcriteriadto",{"_index":3210,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":815,"title":{},"body":{"entities/CardEntity.html":{}}}],["firstvaluefrom",{"_index":1504,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["fix",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":3000,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":2464,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":3638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1236,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception",{"_index":2434,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":2404,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["found.exception.ts:3",{"_index":2405,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["france",{"_index":2109,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["fulldelete",{"_index":3191,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fulldelete(@param('id",{"_index":3279,"title":{},"body":{"controllers/UserController.html":{}}}],["fulldelete(id",{"_index":3213,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["function",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["functions",{"_index":3570,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1360,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["generatecode",{"_index":1288,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatecode(length",{"_index":1299,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatepassword",{"_index":3369,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":1289,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generateuserdto",{"_index":1715,"title":{"classes/GenerateUserDto.html":{}},"body":{"classes/GenerateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserdto.mail",{"_index":3415,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserdto.roles",{"_index":3417,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserfrommail",{"_index":3192,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserfrommail(@body",{"_index":3251,"title":{},"body":{"controllers/UserController.html":{}}}],["generateuserfrommail(generateuserdto",{"_index":3217,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":1968,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":701,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/admin",{"_index":2532,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/admin/')@apiresponse({status",{"_index":2497,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/admin/')@useguards(undefined",{"_index":3205,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id",{"_index":3257,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id')@useguards(undefined",{"_index":3208,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/with",{"_index":2507,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/api/test/clear",{"_index":421,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/api/test/get",{"_index":430,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":140,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/public",{"_index":2334,"title":{},"body":{"controllers/OccupationController.html":{}}}],["get('/public/')@httpcode(201)@useguards(undefined",{"_index":2302,"title":{},"body":{"controllers/OccupationController.html":{}}}],["get('/public/:id",{"_index":2337,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["get('/public/:id')@httpcode(201)@useguards(undefined",{"_index":2305,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["get('/public/get",{"_index":2501,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/refresh",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":102,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallmailquery",{"_index":219,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getallmailqueryhandler",{"_index":185,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getalloccupation",{"_index":2416,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationquery",{"_index":1738,"title":{"classes/GetAllOccupationQuery.html":{}},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getalloccupationquery({})).then((occupationsdto",{"_index":2445,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationqueryhandler",{"_index":1744,"title":{"classes/GetAllOccupationQueryHandler.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getalloccupations",{"_index":2290,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getallprofilequery",{"_index":1756,"title":{"classes/GetAllProfileQuery.html":{}},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getallprofilequeryhandler",{"_index":1759,"title":{"classes/GetAllProfileQueryHandler.html":{}},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getallprofiles",{"_index":2478,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getallusers",{"_index":490,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getalluserstest",{"_index":388,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getcookieforlogout",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":286,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getme",{"_index":3193,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getme(@req",{"_index":3262,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(requestuser",{"_index":3221,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(userid",{"_index":3386,"title":{},"body":{"injectables/UserService.html":{}}}],["getmyprofile",{"_index":2622,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofile(userid",{"_index":2632,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofiles",{"_index":2479,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(@req",{"_index":2543,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(requestuser",{"_index":2500,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getoccupationbyid",{"_index":2291,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyid(@param('id",{"_index":2338,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationbyid(occupationid",{"_index":2304,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidquery",{"_index":1766,"title":{"classes/GetOccupationByIdQuery.html":{}},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidqueryhandler",{"_index":1770,"title":{"classes/GetOccupationByIdQueryHandler.html":{}},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationswithcriteria",{"_index":2292,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteria(getoccupationswithcriteriarequest",{"_index":2307,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteriarequest",{"_index":2311,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationwithcriteria",{"_index":2417,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteria(criteria",{"_index":2425,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriadto",{"_index":1775,"title":{"classes/GetOccupationWithCriteriaDto.html":{}},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaquery",{"_index":1782,"title":{"classes/GetOccupationWithCriteriaQuery.html":{}},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaqueryhandler",{"_index":1789,"title":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationwithcriteriarequest",{"_index":1801,"title":{"classes/GetOccupationWithCriteriaRequest.html":{}},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getprofile",{"_index":2623,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(id",{"_index":2634,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyid",{"_index":2480,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(@req",{"_index":2536,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(requestuser",{"_index":2504,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyidquery",{"_index":1807,"title":{"classes/GetProfileByIdQuery.html":{}},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyidqueryhandler",{"_index":1809,"title":{"classes/GetProfileByIdQueryHandler.html":{}},"body":{"classes/GetProfileByIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilebyuserid",{"_index":2481,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyuserid(@param('id",{"_index":2541,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyuserid(userid",{"_index":2506,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofiles",{"_index":2624,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilesbyuseridquery",{"_index":1826,"title":{"classes/GetProfilesByUserIdQuery.html":{}},"body":{"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilesbyuseridqueryhandler",{"_index":1827,"title":{"classes/GetProfilesByUserIdQueryHandler.html":{}},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofileswithcriteria",{"_index":2482,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofileswithcriteria(getprofileswithcriteriarequest",{"_index":2510,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileswithcriteria(getprofilewithcriteriarequest",{"_index":2638,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileswithcriteriarequest",{"_index":1830,"title":{"classes/GetProfilesWithCriteriaRequest.html":{}},"body":{"classes/GetProfilesWithCriteriaRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriadto",{"_index":1814,"title":{"classes/GetProfileWithCriteriaDto.html":{}},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaquery",{"_index":1818,"title":{"classes/GetProfileWithCriteriaQuery.html":{}},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaqueryhandler",{"_index":1820,"title":{"classes/GetProfileWithCriteriaQueryHandler.html":{}},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilewithcriteriarequest",{"_index":2640,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.isdeleted",{"_index":2680,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.roleprofile",{"_index":2679,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.usernameprofile",{"_index":2678,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getting",{"_index":1755,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["getuser",{"_index":491,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuser(userid",{"_index":521,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuserbyemailquery",{"_index":1834,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{}}}],["getuserbyemailqueryhandler",{"_index":1840,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserbyreferralcode",{"_index":1290,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":1302,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyusernamequery",{"_index":1848,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1853,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserfromauthtoken",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserifrefreshtokenmatches",{"_index":3370,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":3388,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1857,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":3406,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesqueryhandler",{"_index":1863,"title":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserloginquery",{"_index":782,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["getuserloginquery(username",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserloginqueryhandler",{"_index":737,"title":{"classes/GetUserLoginQueryHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserquery",{"_index":779,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserquery(id",{"_index":3409,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery(userid",{"_index":3419,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserqueryhandler",{"_index":1889,"title":{"classes/GetUserQueryHandler.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{}}}],["getusertest",{"_index":389,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(@body",{"_index":432,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(userid",{"_index":406,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getuserwithcriteriadto",{"_index":1899,"title":{"classes/GetUserWithCriteriaDto.html":{}},"body":{"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery",{"_index":1916,"title":{"classes/GetUserWithCriteriaQuery.html":{}},"body":{"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery(getuserwithcriteriadto",{"_index":3418,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithcriteriaqueryhandler",{"_index":1918,"title":{"classes/GetUserWithCriteriaQueryHandler.html":{}},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{}}}],["given",{"_index":1364,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["google",{"_index":3299,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":3611,"title":{},"body":{"modules.html":{}}}],["group",{"_index":562,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["group.bannerpicture",{"_index":2229,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":1019,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":2231,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":564,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":2216,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":455,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["groupentity.conversations",{"_index":1009,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":1957,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":854,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":855,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":1943,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":457,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupmembershiprepository",{"_index":502,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":816,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":2217,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":501,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1189,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handle(event",{"_index":1192,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handled",{"_index":3412,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":178,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":1063,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:10",{"_index":1499,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:100",{"_index":1300,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:104",{"_index":3101,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:11",{"_index":1074,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:110",{"_index":1301,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:118",{"_index":1303,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:12",{"_index":1076,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:123",{"_index":1308,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:129",{"_index":1306,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:13",{"_index":1075,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:135",{"_index":1312,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:139",{"_index":1314,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":1072,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["handler.ts:143",{"_index":1310,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:15",{"_index":1572,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1539,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["handler.ts:17",{"_index":1747,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:18",{"_index":1573,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:19",{"_index":1296,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:20",{"_index":1139,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:21",{"_index":1993,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":3095,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:23",{"_index":1079,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:24",{"_index":1297,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:25",{"_index":1219,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["handler.ts:29",{"_index":1298,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:51",{"_index":3130,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:54",{"_index":1877,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:55",{"_index":3131,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:6",{"_index":1191,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:70",{"_index":3097,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:76",{"_index":3096,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:8",{"_index":1564,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["handler.ts:82",{"_index":3103,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:86",{"_index":3102,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:9",{"_index":1193,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:91",{"_index":3099,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler/error",{"_index":176,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler/register.event",{"_index":742,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["handlers",{"_index":2401,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1876,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["headers",{"_index":1026,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1416,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheck",{"_index":1971,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":1965,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["healthcheckmodule",{"_index":322,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1422,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckqueryhandler",{"_index":1983,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckresponse",{"_index":1425,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckresult",{"_index":2024,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":1989,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":1995,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":2003,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":2022,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":290,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":3580,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":3642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1444,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1670,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":1225,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":263,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200)@post('/admin/criteria')@useguards(undefined",{"_index":3211,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(201",{"_index":2335,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["httpcode(204",{"_index":426,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/:id')@useguards(undefined",{"_index":3224,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/full",{"_index":3214,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/public/delete",{"_index":3202,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@post('/admin/restore",{"_index":3227,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@put('/admin/:id/role')@useguards(undefined",{"_index":3239,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@usepipes(new",{"_index":400,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":146,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":2119,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1515,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1519,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":711,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["httponly",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":713,"title":{},"body":{"controllers/AuthController.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.forbidden",{"_index":2120,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"classes/NotTheOwnerException.html":{}}}],["httpstatus.internal_server_error",{"_index":1675,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":1520,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpstatus.unauthorized",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":1064,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["icon",{"_index":2927,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["id.dto",{"_index":420,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{}}}],["id.dto.ts",{"_index":3324,"title":{},"body":{"interfaces/UserIdDto.html":{}}}],["id.exception",{"_index":1576,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["id.exception.ts",{"_index":2030,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.exception.ts:3",{"_index":2031,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.query",{"_index":1771,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["id.query.ts",{"_index":1767,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id.query.ts:1",{"_index":1768,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{}}}],["id.query.ts:2",{"_index":1808,"title":{},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id.query.ts:6",{"_index":1769,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{}}}],["id/:id",{"_index":2540,"title":{},"body":{"controllers/ProfileController.html":{}}}],["id/:id')@httpcode(201)@useguards(undefined",{"_index":2508,"title":{},"body":{"controllers/ProfileController.html":{}}}],["idprofiledto",{"_index":2027,"title":{"classes/IdProfileDto.html":{}},"body":{"classes/IdProfileDto.html":{}}}],["iduser",{"_index":1272,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["ieventhandler",{"_index":1188,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["ignore",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailRequiredException.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":3040,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["in.dto.ts",{"_index":2913,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:10",{"_index":2915,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":2916,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":3550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":3001,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":3644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":3645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":908,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":3513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":2105,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1085,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":525,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":548,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":528,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":530,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":529,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":531,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":532,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":533,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":534,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":535,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":536,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":537,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":538,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":539,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":546,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":540,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["injectrepository(planentity",{"_index":541,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":542,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["injectrepository(referralcodeentity",{"_index":547,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":543,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(stripevententity",{"_index":544,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":545,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":527,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["inserteduser",{"_index":2755,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":3596,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":3597,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1673,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1614,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1596,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":870,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":3623,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":2793,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}}}],["interface/request",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2794,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"overview.html":{}}}],["invalid",{"_index":1343,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":3520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":3519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":1143,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":1163,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalididexception",{"_index":1575,"title":{"classes/InvalidIdException.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"injectables/ProfileService.html":{}}}],["invalidmailexception",{"_index":1327,"title":{"classes/InvalidMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidMailException.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception",{"_index":1223,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception(err",{"_index":1246,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1325,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["invalidusernameexception",{"_index":1328,"title":{"classes/InvalidUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{}}}],["inversejoincolumn",{"_index":2578,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":3501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":2088,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":2063,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":566,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1631,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":460,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity.subscription",{"_index":2993,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":503,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":1027,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1722,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":3553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":2273,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":3552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1611,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":2714,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isdeleted",{"_index":1778,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["isduplicatedemail",{"_index":1291,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedemail(email",{"_index":1305,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername",{"_index":1292,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername(username",{"_index":1307,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail",{"_index":3093,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail(mail",{"_index":3098,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername",{"_index":3094,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername(username",{"_index":3100,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isemail",{"_index":910,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":2920,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":2195,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":3282,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":2104,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":2914,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1612,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1387,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":817,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":2265,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1868,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["isregisteredwithgoogle",{"_index":3283,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":413,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["istestenvironmentpipe())@delete('/api/test/remove",{"_index":401,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":391,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/get",{"_index":403,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":396,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":911,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidemail",{"_index":1293,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidemail(email",{"_index":1309,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidpassword",{"_index":1294,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidpassword(password",{"_index":1311,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidusername",{"_index":1295,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidusername(username",{"_index":1313,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["jest",{"_index":3593,"title":{},"body":{"index.html":{}}}],["join",{"_index":1433,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1455,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":3529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":1000,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":1020,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["joined_conversation",{"_index":568,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":462,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joinedconversation.conversation",{"_index":1012,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":2572,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":504,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":2561,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":1002,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":898,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1043,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":3647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":2150,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwtauthenticationguard",{"_index":2134,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["jwtfromrequest",{"_index":2152,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":648,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":718,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["jwtservice",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":719,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwttoken",{"_index":3284,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":2218,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":2108,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":93,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["lastname",{"_index":818,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["length(2",{"_index":2381,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["length(5",{"_index":1389,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":2717,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":2053,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":3586,"title":{},"body":{"index.html":{}}}],["license",{"_index":3606,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":2266,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1513,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"controllers/ProfileController.html":{}}}],["list.response",{"_index":1893,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["list.response.ts",{"_index":3326,"title":{},"body":{"classes/UserListResponse.html":{}}}],["list.response.ts:4",{"_index":3329,"title":{},"body":{"classes/UserListResponse.html":{}}}],["listofoccupationid",{"_index":3074,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["listrolesdto",{"_index":2163,"title":{"classes/ListRolesDto.html":{}},"body":{"classes/ListRolesDto.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":2177,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":2171,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:15",{"_index":2176,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":2173,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":643,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["localisation",{"_index":1172,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["localstrategy",{"_index":720,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":238,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":190,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log.command.ts",{"_index":1024,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:11",{"_index":1037,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1051,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":1041,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":1040,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1052,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1057,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1047,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1044,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1059,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1056,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1055,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1046,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1053,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":1035,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1054,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1058,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1049,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":243,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1102,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:1",{"_index":1123,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1104,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1111,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1106,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1105,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1112,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1118,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1109,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1107,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1113,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1120,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1117,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1116,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1108,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1103,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1114,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1115,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1119,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1110,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1125,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1124,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1084,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":3503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":248,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":172,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":229,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":191,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":231,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:10",{"_index":237,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":241,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":234,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":171,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log/cqrs/command/create",{"_index":1023,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log/cqrs/handler/command/create",{"_index":189,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log/domain/dto/create",{"_index":1101,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log/domain/enum/api",{"_index":1645,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1644,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["log/domain/enum/status",{"_index":3547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":1689,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":2191,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1434,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{},"miscellaneous/variables.html":{}}}],["logger('registereventhandler",{"_index":2727,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.config",{"_index":1436,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":3634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1489,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1488,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":2731,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1442,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":2726,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1459,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1681,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:10",{"_index":2798,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1683,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":2782,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":1686,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":2799,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":2783,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":1028,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1050,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtypeenum.error",{"_index":1651,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":2789,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":3332,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:10",{"_index":3335,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":3336,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":3334,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.query",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["login.query.ts",{"_index":1871,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:1",{"_index":1872,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1873,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":3339,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:11",{"_index":3343,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":3348,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":3342,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":3341,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":3347,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":3346,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":3345,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":3344,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":3340,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["logindto",{"_index":3037,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["loginofuserevent",{"_index":1878,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["loginofuserevent(userusername.id",{"_index":1884,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["loginofusereventhandler",{"_index":2187,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{}}}],["logout",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":2054,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":3582,"title":{},"body":{"index.html":{}}}],["mail",{"_index":112,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined",{"_index":3219,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":107,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":181,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.command.ts",{"_index":1495,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:1",{"_index":1496,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":2851,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1497,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":2852,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":275,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":252,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.controller.ts:16",{"_index":257,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":184,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["mail.event.ts",{"_index":1523,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:1",{"_index":2861,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":2865,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":2863,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1526,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1527,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1529,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1528,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":2862,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.exception",{"_index":1320,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.exception.ts",{"_index":1617,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.exception.ts:3",{"_index":1619,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.module",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":270,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":187,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["mail.query.ts",{"_index":1720,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["mail.service",{"_index":260,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":279,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:10",{"_index":281,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":280,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":251,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{}}}],["mail/cqrs/command/send",{"_index":2850,"title":{},"body":{"classes/SendMailCommand.html":{}}}],["mail/cqrs/event/send",{"_index":2860,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail/cqrs/handler/command/send",{"_index":2853,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["mail/cqrs/handler/event/send",{"_index":2866,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":2192,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":2196,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":2198,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":2197,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":2194,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":3515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":255,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{}}}],["maillandingpagedto",{"_index":1727,"title":{"classes/MailLandingPageDto.html":{}},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{}}}],["mailrequiredexception",{"_index":2204,"title":{"classes/MailRequiredException.html":{}},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["mailresponse",{"_index":129,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{}}}],["mails",{"_index":142,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":116,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":1737,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":899,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":874,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1847,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["matches.query",{"_index":1864,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":1858,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:1",{"_index":1861,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1862,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().split('.')[1",{"_index":3119,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["math.random().tostring(10).split('.')[1",{"_index":3422,"title":{},"body":{"injectables/UserService.html":{}}}],["max",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":3656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":912,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":2918,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":921,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":3654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["me')@useguards(undefined",{"_index":3203,"title":{},"body":{"controllers/UserController.html":{}}}],["media",{"_index":570,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":863,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":916,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["media.groupbannerpicture",{"_index":1935,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":1948,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":962,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":979,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":465,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediarepository",{"_index":505,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":2841,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":2939,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":1933,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":459,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":1952,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:17",{"_index":1959,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":1961,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":1954,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":1958,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":1955,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":1962,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":1956,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":1963,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":2839,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:2",{"_index":2843,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":2842,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":2844,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":2001,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":1991,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":572,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"controllers/UserController.html":{}}}],["message.author",{"_index":865,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":1014,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":917,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":467,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{}}}],["messagepatern",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":506,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":819,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":2116,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":246,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":3626,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":2689,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":2917,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":3488,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":3666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":149,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQuery.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["module:entities",{"_index":2940,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1999,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1629,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateNameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["name.exception",{"_index":2435,"title":{},"body":{"injectables/OccupationService.html":{}}}],["name.exception.ts",{"_index":1622,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["name.exception.ts:3",{"_index":1623,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["nameoccupation",{"_index":1798,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["nestjs",{"_index":3453,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":122,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":3459,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":2256,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":1144,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":170,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":168,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/SendMailCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3463,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":128,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1972,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":277,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1687,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":2926,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":477,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":2924,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:34",{"_index":2934,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":2935,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":2937,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":2933,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":2930,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":2931,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":2936,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":2932,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":2115,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":224,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":3531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":3530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":3528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newoccupationentity",{"_index":1158,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["newpassword",{"_index":3146,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["newprofile",{"_index":1237,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newprofile.occupations",{"_index":1244,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newuser",{"_index":1346,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1685,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":3521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":3564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":3587,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":3592,"title":{},"body":{"index.html":{}}}],["none",{"_index":3561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":3567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":820,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":586,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":1016,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":1021,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["notification.profile",{"_index":2574,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":3303,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":483,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationrepository",{"_index":513,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":1003,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":2279,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":2285,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nottheownerexception",{"_index":2259,"title":{"classes/NotTheOwnerException.html":{}},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["nousertraceexception",{"_index":2251,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{}}}],["npm",{"_index":3588,"title":{},"body":{"index.html":{}}}],["null",{"_index":842,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":1936,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":876,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":2577,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":868,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"classes/RegisterHandler.html":{}}}],["number(process.env.port_api_log",{"_index":199,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":202,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":205,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":821,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/ProfileController.html":{}}}],["object(log.body",{"_index":249,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":1133,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{}}}],["object.assign(this",{"_index":945,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":2045,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":574,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"changelog.html":{}}}],["occupation.cards",{"_index":875,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.command",{"_index":1136,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.command.ts",{"_index":1128,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:1",{"_index":1535,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:3",{"_index":1130,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:6",{"_index":1536,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:8",{"_index":1131,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:9",{"_index":3047,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["occupation.controller",{"_index":2386,"title":{},"body":{"modules/OccupationModule.html":{}}}],["occupation.dto",{"_index":1132,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.dto.ts",{"_index":1175,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:1",{"_index":1176,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:6",{"_index":1177,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.event",{"_index":1149,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["occupation.event.ts",{"_index":1179,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:1",{"_index":1180,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:6",{"_index":1185,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:7",{"_index":1546,"title":{},"body":{"classes/DeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:8",{"_index":1184,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:9",{"_index":1183,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{}}}],["occupation.id",{"_index":3052,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.name",{"_index":1155,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.profiles",{"_index":2576,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation.query",{"_index":1746,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{}}}],["occupation.query.ts",{"_index":1740,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:1",{"_index":1741,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:6",{"_index":1743,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:7",{"_index":1742,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.request",{"_index":2331,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["occupation.request.ts",{"_index":1203,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:1",{"_index":1204,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:6",{"_index":1205,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.service",{"_index":2325,"title":{},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupation/domain/entities/occupation.entity",{"_index":913,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupation_id",{"_index":2596,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationcontroller",{"_index":2286,"title":{"controllers/OccupationController.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupationdto",{"_index":1141,"title":{"classes/OccupationDto.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/OccupationDto.html":{},"injectables/OccupationService.html":{}}}],["occupationdto(occupation",{"_index":1752,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{}}}],["occupationentity",{"_index":469,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationentity.companies",{"_index":986,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":974,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.id",{"_index":1169,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["occupationid",{"_index":1168,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetOccupationByIdQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationlist",{"_index":1151,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.foreach(occupation",{"_index":1154,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.length",{"_index":1153,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationmodule",{"_index":323,"title":{"modules/OccupationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OccupationModule.html":{},"modules.html":{},"overview.html":{}}}],["occupationnotfoundexception",{"_index":2402,"title":{"classes/OccupationNotFoundException.html":{}},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["occupationpromises",{"_index":1240,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrepository",{"_index":507,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrequest",{"_index":2421,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationrequest.name",{"_index":2454,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationresponse",{"_index":2326,"title":{"classes/OccupationResponse.html":{}},"body":{"controllers/OccupationController.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{}}}],["occupationresponse(occupationdto",{"_index":2447,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupations",{"_index":822,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["occupations.length",{"_index":1243,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupations.map",{"_index":1800,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["occupations.map(occupation",{"_index":1751,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["occupationsdto.map(occupationdto",{"_index":2446,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationservice",{"_index":2324,"title":{"injectables/OccupationService.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"overview.html":{}}}],["occupationsid",{"_index":1210,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileRequest.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["occurred",{"_index":1490,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["old",{"_index":2849,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":2051,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":900,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":838,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":901,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":862,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":3569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":3568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":3563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":3565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":3023,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":197,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":3584,"title":{},"body":{"index.html":{}}}],["os",{"_index":1029,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":3612,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":823,"title":{},"body":{"entities/CardEntity.html":{},"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/ShiftProfileOwnerEvent.html":{},"miscellaneous/enumerations.html":{}}}],["owner.command",{"_index":2604,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["owner.command.ts",{"_index":2885,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:2",{"_index":2887,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:3",{"_index":2886,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.event",{"_index":2611,"title":{},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["owner.event.ts",{"_index":2895,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:2",{"_index":2897,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:3",{"_index":2900,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:5",{"_index":2899,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:6",{"_index":2896,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.exception",{"_index":2661,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.exception.ts",{"_index":2261,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.exception.ts:3",{"_index":2262,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.request",{"_index":2660,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.request.ts",{"_index":2908,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:2",{"_index":2910,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:3",{"_index":2909,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["ownercompanies",{"_index":2562,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":953,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":3456,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":98,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"changelog.html":{}}}],["page.controller",{"_index":173,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":95,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:17",{"_index":117,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":1729,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":2200,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:1",{"_index":2202,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":2203,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":163,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":124,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":209,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:11",{"_index":215,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:19",{"_index":216,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:8",{"_index":214,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":94,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{}}}],["page/cqrs/command/delete",{"_index":1494,"title":{},"body":{"classes/DeleteMailCommand.html":{},"injectables/UserService.html":{}}}],["page/cqrs/event/delete",{"_index":1522,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1498,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1530,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["page/cqrs/handler/query/get",{"_index":1721,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page/cqrs/query/get",{"_index":1719,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["page/domain/dto/mail",{"_index":2199,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page/domain/response/mail.response.ts",{"_index":2209,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":2210,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":2211,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2322,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":2345,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["parameter",{"_index":1227,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1482,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1464,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1447,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1473,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":944,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":2149,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2146,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2151,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2157,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":594,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["password')@useguards(undefined",{"_index":3236,"title":{},"body":{"controllers/UserController.html":{}}}],["password.exception",{"_index":1326,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["password.exception.ts",{"_index":2047,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["password.exception.ts:3",{"_index":2048,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["passwordfield",{"_index":2179,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":3034,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["payload.userid",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":2981,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":3540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":2563,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":3477,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":954,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":824,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":1934,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":1734,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":2112,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["plan",{"_index":576,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1632,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":471,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity.subscriptions",{"_index":2995,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":508,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":1030,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["post",{"_index":258,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":256,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/admin/create",{"_index":2341,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post('/admin/create')@httpcode(204)@useguards(undefined",{"_index":2297,"title":{},"body":{"controllers/OccupationController.html":{}}}],["post('/admin/create')@useguards(undefined",{"_index":3199,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/criteria",{"_index":3260,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/generate",{"_index":3218,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/get",{"_index":2308,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["post('/admin/restore",{"_index":3253,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":423,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/login",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1443,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":3494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":3589,"title":{},"body":{"index.html":{}}}],["pour",{"_index":2107,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1461,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":3538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prettier",{"_index":3595,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":3296,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":2459,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["process",{"_index":743,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["process.env.api_name",{"_index":1092,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1094,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":749,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":746,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1440,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1485,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1467,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1451,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1476,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1480,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1462,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1445,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1471,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1486,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1470,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1460,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1478,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1484,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1466,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1450,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1475,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1481,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1463,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1446,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1472,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1487,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1469,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1458,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1477,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1483,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1465,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1449,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1474,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1690,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1647,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1089,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1441,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":578,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["profile')@httpcode(201)@useguards(undefined",{"_index":2487,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile')@httpcode(204)@useguards(undefined",{"_index":2491,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile).catch(error",{"_index":2549,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.command",{"_index":1217,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.command.ts",{"_index":1208,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/RestoreProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:1",{"_index":2813,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["profile.command.ts:2",{"_index":1552,"title":{},"body":{"classes/DeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:3",{"_index":3067,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:4",{"_index":1213,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:5",{"_index":1212,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:6",{"_index":1211,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/RestoreProfileCommand.html":{}}}],["profile.companies",{"_index":935,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.controller",{"_index":2601,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1214,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.dto.ts",{"_index":1252,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/IdProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:2",{"_index":2029,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["profile.dto.ts:4",{"_index":1257,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:5",{"_index":1255,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.enum",{"_index":1258,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.enum.ts",{"_index":3499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profile.event",{"_index":1230,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["profile.event.ts",{"_index":1260,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:1",{"_index":2820,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:2",{"_index":2963,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:3",{"_index":2964,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:4",{"_index":1263,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:5",{"_index":1262,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:6",{"_index":1261,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:8",{"_index":2822,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:9",{"_index":2821,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.id",{"_index":2961,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["profile.personalcards",{"_index":878,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.query",{"_index":1761,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.query.ts",{"_index":1758,"title":{},"body":{"classes/GetAllProfileQuery.html":{}}}],["profile.request",{"_index":2527,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.request.ts",{"_index":1271,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:4",{"_index":1276,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:5",{"_index":1274,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:6",{"_index":1275,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:7",{"_index":1273,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.savedcard",{"_index":881,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.service",{"_index":2523,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile.user",{"_index":2891,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profile.user?.id",{"_index":1813,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["profile.userid",{"_index":2674,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/:id",{"_index":2546,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/:id')@httpcode(204)@useguards(undefined",{"_index":2494,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/domain/entities/profile.entity",{"_index":902,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profile_id",{"_index":2594,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profilecontroller",{"_index":2473,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profileentity",{"_index":473,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profileentity.bannerpicture",{"_index":2235,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":2132,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":2128,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":2276,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":2376,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":976,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":2237,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":2219,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":2220,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileid",{"_index":2496,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profileid).catch(error",{"_index":2539,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilemodule",{"_index":324,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepicture",{"_index":955,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":509,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["profileresponse",{"_index":1220,"title":{"classes/ProfileResponse.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["profileresponse(savedprofile",{"_index":1249,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["profiles",{"_index":1763,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/OccupationEntity.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/UserEntity.html":{}}}],["profiles')@httpcode(201)@useguards(undefined",{"_index":2502,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles.map",{"_index":1765,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["profileservice",{"_index":2522,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profileswhosavedcard",{"_index":825,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":3454,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all(occupationpromises",{"_index":1242,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":2941,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":712,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":164,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":3421,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2323,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["put('/admin/:id",{"_index":3264,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id')@useguards(undefined",{"_index":3231,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id/role",{"_index":3266,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/restore",{"_index":2513,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/restore/:id",{"_index":2354,"title":{},"body":{"controllers/OccupationController.html":{}}}],["put('/admin/restore/:id')@httpcode(204)@useguards(undefined",{"_index":2313,"title":{},"body":{"controllers/OccupationController.html":{}}}],["put('/admin/update",{"_index":2520,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/update/:id",{"_index":2344,"title":{},"body":{"controllers/OccupationController.html":{}}}],["put('/admin/update/:id')@httpcode(204)@useguards(undefined",{"_index":2320,"title":{},"body":{"controllers/OccupationController.html":{}}}],["put('/public/update",{"_index":2517,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["query",{"_index":1724,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["query.criteria.isdeleted",{"_index":1794,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.criteria.name",{"_index":1796,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.email",{"_index":1845,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.isdeleted",{"_index":1823,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.usernameprofile",{"_index":1824,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdfrom",{"_index":1922,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdto",{"_index":1924,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedfrom",{"_index":1928,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedto",{"_index":1929,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.isdeleted",{"_index":1921,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedfrom",{"_index":1925,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedto",{"_index":1926,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.id",{"_index":1811,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["query.occupationid",{"_index":1773,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["query.userid",{"_index":1867,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{}}}],["query.username",{"_index":1856,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["query/get",{"_index":1726,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query/health",{"_index":1994,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybuilder",{"_index":1792,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.createdat",{"_index":1923,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.deletedat",{"_index":1930,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.updatedat",{"_index":1927,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.getmany",{"_index":1799,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybuilder.setfindoptions",{"_index":1795,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('occupation.name",{"_index":1797,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('profile.usernameprofile",{"_index":1825,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybus",{"_index":213,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["queryerrorexception",{"_index":2431,"title":{"classes/QueryErrorException.html":{}},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{}}}],["queryhandler",{"_index":1725,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":1730,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getalloccupationquery",{"_index":1748,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["queryhandler(getallprofilequery",{"_index":1762,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["queryhandler(getoccupationbyidquery",{"_index":1772,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["queryhandler(getoccupationwithcriteriaquery",{"_index":1791,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["queryhandler(getprofilebyidquery",{"_index":1810,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["queryhandler(getprofilesbyuseridquery",{"_index":1828,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["queryhandler(getprofilewithcriteriaquery",{"_index":1821,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1843,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1855,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1865,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1880,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["queryhandler(getuserquery",{"_index":1894,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["queryhandler(getuserwithcriteriaquery",{"_index":1919,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":1996,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":1361,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["readme.md",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":2040,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":1634,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":588,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":1304,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["referralcode.owner",{"_index":3308,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":3314,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":485,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["referralcoderepository",{"_index":514,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":3285,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":3479,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["refresh(@req",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1859,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":3544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*[a",{"_index":1331,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":3135,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["regexvalidatepassword",{"_index":1287,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["register",{"_index":1337,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["registercommand",{"_index":777,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{}}}],["registercommand(signupdto.username",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2732,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":2721,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["registerevent(inserteduser.id",{"_index":2756,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":740,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["registerhandler",{"_index":732,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{}}}],["rejected",{"_index":3546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1454,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":923,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2772,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@req",{"_index":3273,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":3390,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(requestuser",{"_index":3223,"title":{},"body":{"controllers/UserController.html":{}}}],["removed",{"_index":2780,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":3371,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":3392,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":2757,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["removerefreshtokencommand(userid",{"_index":3407,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":2762,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["removerefreshtokenevent",{"_index":2768,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtokeneventhandler",{"_index":2775,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["removeuser",{"_index":492,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["removeuser(userid",{"_index":523,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["repository",{"_index":494,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["req",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1698,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1702,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1700,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":2786,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":2790,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1712,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1697,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":2791,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":3043,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts:3",{"_index":3044,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1679,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":2154,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":346,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["requestuser",{"_index":613,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestuser.user",{"_index":2537,"title":{},"body":{"controllers/ProfileController.html":{}}}],["required",{"_index":2208,"title":{},"body":{"classes/MailRequiredException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["required.exception",{"_index":3404,"title":{},"body":{"injectables/UserService.html":{}}}],["required.exception.ts",{"_index":2206,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["required.exception.ts:3",{"_index":2207,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["res",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1706,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1708,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1704,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":699,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":697,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1676,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["response.ts",{"_index":2408,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:1",{"_index":2409,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:10",{"_index":2411,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:6",{"_index":2412,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:7",{"_index":2413,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:8",{"_index":2410,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:9",{"_index":2414,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["responsebody",{"_index":1031,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":1032,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":349,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["rest",{"_index":3583,"title":{},"body":{"index.html":{}}}],["restore",{"_index":2808,"title":{},"body":{"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserEvent.html":{}}}],["restored",{"_index":2811,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreoccupation",{"_index":2293,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupation(@param('id",{"_index":2355,"title":{},"body":{"controllers/OccupationController.html":{}}}],["restoreoccupation(occupationid",{"_index":2312,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupationcommand",{"_index":2443,"title":{"classes/RestoreOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationcommandhandler",{"_index":2387,"title":{"classes/RestoreOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationevent",{"_index":2803,"title":{"classes/RestoreOccupationEvent.html":{}},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreoccupationeventhandler",{"_index":2396,"title":{"classes/RestoreOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreprofile",{"_index":2483,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["restoreprofile(@param('id",{"_index":2558,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofile(id",{"_index":2641,"title":{},"body":{"injectables/ProfileService.html":{}}}],["restoreprofile(profileid",{"_index":2512,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofilecommand",{"_index":2662,"title":{"classes/RestoreProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofilecommandhandler",{"_index":2614,"title":{"classes/RestoreProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofileevent",{"_index":2815,"title":{"classes/RestoreProfileEvent.html":{}},"body":{"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoreprofileeventhandler",{"_index":2615,"title":{"classes/RestoreProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoreuser",{"_index":3194,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreuser(@body",{"_index":3254,"title":{},"body":{"controllers/UserController.html":{}}}],["restoreuser(userid",{"_index":3226,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreusercommand",{"_index":2826,"title":{"classes/RestoreUserCommand.html":{}},"body":{"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["restoreusercommandhandler",{"_index":2828,"title":{"classes/RestoreUserCommandHandler.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["restoreuserevent",{"_index":2830,"title":{"classes/RestoreUserEvent.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreuserevent(command.id",{"_index":2833,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["restoreusereventhandler",{"_index":2835,"title":{"classes/RestoreUserEventHandler.html":{}},"body":{"classes/RestoreUserEventHandler.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1905,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"entities/GroupMembershipEntity.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.command",{"_index":3169,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["role.command.ts",{"_index":3165,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:4",{"_index":3167,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:5",{"_index":3166,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.enum",{"_index":135,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":3509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role.event",{"_index":3171,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.event.ts",{"_index":3176,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:4",{"_index":3179,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:5",{"_index":3178,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:6",{"_index":3180,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["rolecompanyemployeeenum",{"_index":937,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":946,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":1960,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["rolegroupmembershipenum.member",{"_index":1964,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":131,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":3659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleprofile",{"_index":1253,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["roleprofileenum",{"_index":1256,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{},"miscellaneous/enumerations.html":{}}}],["roleprofileenum.classic",{"_index":2593,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["roles",{"_index":597,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.dto",{"_index":3244,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.dto.ts",{"_index":2165,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:3",{"_index":2166,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:8",{"_index":2167,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.roles",{"_index":3269,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.some(role",{"_index":3664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1033,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":3603,"title":{},"body":{"index.html":{}}}],["rss",{"_index":2006,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":3598,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":2254,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1505,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["same",{"_index":2848,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["samepasswordexception",{"_index":2845,"title":{"classes/SamePasswordException.html":{}},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["save(newoccupationentity",{"_index":1165,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["saved",{"_index":2587,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":2564,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedprofile",{"_index":1247,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["saveduser",{"_index":1350,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1352,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.mail",{"_index":1354,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.referralcode",{"_index":1357,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1355,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1353,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":3605,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":1034,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":745,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":2156,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":907,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1846,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2864,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sendmail",{"_index":253,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":264,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":254,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":282,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailcommandhandler",{"_index":271,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailevent",{"_index":2854,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{}}}],["sendmaileventhandler",{"_index":273,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{}}}],["sent",{"_index":2868,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":3620,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":3622,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1635,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":841,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{}}}],["setcurrentrefreshtoken",{"_index":3372,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":3395,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":2870,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":3408,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":2873,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["setcurrentrefreshtokenevent",{"_index":2878,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":2880,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["share",{"_index":905,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shift",{"_index":2898,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["shifted",{"_index":2905,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileowner",{"_index":2625,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileowner(shiftprofileownerrequest",{"_index":2643,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownercommand",{"_index":2657,"title":{"classes/ShiftProfileOwnerCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownercommandhandler",{"_index":2602,"title":{"classes/ShiftProfileOwnerCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownerevent",{"_index":2893,"title":{"classes/ShiftProfileOwnerEvent.html":{}},"body":{"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownereventhandler",{"_index":2609,"title":{"classes/ShiftProfileOwnerEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownerrequest",{"_index":2644,"title":{"classes/ShiftProfileOwnerRequest.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerRequest.html":{}}}],["shiftprofileownerrequest.profileid",{"_index":2675,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownerrequest.userid",{"_index":2676,"title":{},"body":{"injectables/ProfileService.html":{}}}],["signin",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":2911,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/TransferProfileToUserCommand.html":{}}}],["signoptions",{"_index":747,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":627,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{}}}],["signupdto.mail",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":956,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":2787,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":2788,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":919,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":580,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":826,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":827,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":884,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":475,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["socialnetworkrepository",{"_index":510,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["socketid",{"_index":2122,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["soft",{"_index":2952,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteoccupation",{"_index":2294,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupation(@param('id",{"_index":2352,"title":{},"body":{"controllers/OccupationController.html":{}}}],["softdeleteoccupation(occupationid",{"_index":2315,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupationcommand",{"_index":2441,"title":{"classes/SoftDeleteOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationcommandhandler",{"_index":2389,"title":{"classes/SoftDeleteOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationevent",{"_index":2947,"title":{"classes/SoftDeleteOccupationEvent.html":{}},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteoccupationeventhandler",{"_index":2392,"title":{"classes/SoftDeleteOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteprofile",{"_index":2626,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofile(id",{"_index":2646,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofilecommand",{"_index":2655,"title":{"classes/SoftDeleteProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofilecommandhandler",{"_index":2612,"title":{"classes/SoftDeleteProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofileevent",{"_index":2958,"title":{"classes/SoftDeleteProfileEvent.html":{}},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteprofileeventhandler",{"_index":2608,"title":{"classes/SoftDeleteProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteusercommand",{"_index":2967,"title":{"classes/SoftDeleteUserCommand.html":{}},"body":{"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["softdeleteusercommand(id",{"_index":3413,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommand(userid",{"_index":3420,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommandhandler",{"_index":2970,"title":{"classes/SoftDeleteUserCommandHandler.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["softdeleteuserevent",{"_index":2972,"title":{"classes/SoftDeleteUserEvent.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteuserevent(command.userid",{"_index":2974,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["softdeleteusereventhandler",{"_index":2976,"title":{"classes/SoftDeleteUserEventHandler.html":{}},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":2016,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":3490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../errorenum.ts",{"_index":3492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":3631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":3572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":3493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":3495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":3497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":3635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":3500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":3505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":3507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":3508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":3510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":3511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":3633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":92,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:24",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:60",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:69",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:75",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:89",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:14",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:23",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:43",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:56",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":2718,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":2719,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":2720,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":2725,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":2722,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":2723,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":2724,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":2734,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:103",{"_index":2744,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:107",{"_index":2742,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:113",{"_index":2737,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:123",{"_index":2738,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:131",{"_index":2739,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:19",{"_index":2735,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:29",{"_index":2736,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:87",{"_index":2741,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:93",{"_index":2740,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:99",{"_index":2743,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":3532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":2912,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":2168,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["src/api/auth/guards/jwt",{"_index":2135,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":3658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":2795,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["src/api/auth/interface/token",{"_index":3033,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["src/api/auth/strategy/jwt",{"_index":2140,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":2159,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":2160,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":2162,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":2170,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1414,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["src/api/occupation/cqrs/command/create",{"_index":1127,"title":{},"body":{"classes/CreateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/delete",{"_index":1534,"title":{},"body":{"classes/DeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/restore",{"_index":2800,"title":{},"body":{"classes/RestoreOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/soft",{"_index":2945,"title":{},"body":{"classes/SoftDeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/update",{"_index":3046,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/event/create",{"_index":1178,"title":{},"body":{"classes/CreateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/delete",{"_index":1545,"title":{},"body":{"classes/DeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/restore",{"_index":2807,"title":{},"body":{"classes/RestoreOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/soft",{"_index":2953,"title":{},"body":{"classes/SoftDeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/update",{"_index":3061,"title":{},"body":{"classes/UpdateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/handler/command/create",{"_index":1135,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/delete",{"_index":1538,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/restore",{"_index":2801,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/soft",{"_index":2946,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/update",{"_index":3048,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/create",{"_index":1187,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/delete",{"_index":1548,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/restore",{"_index":2809,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/soft",{"_index":2954,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/update",{"_index":3062,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/query/get",{"_index":1745,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["src/api/occupation/cqrs/query/get",{"_index":1739,"title":{},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaQuery.html":{}}}],["src/api/occupation/domain/dto/create",{"_index":1174,"title":{},"body":{"classes/CreateOccupationDto.html":{}}}],["src/api/occupation/domain/dto/get",{"_index":1776,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts",{"_index":2357,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:1",{"_index":2358,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:10",{"_index":2360,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:6",{"_index":2361,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:7",{"_index":2362,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:8",{"_index":2359,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:9",{"_index":2363,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/update",{"_index":3059,"title":{},"body":{"classes/UpdateOccupationDto.html":{}}}],["src/api/occupation/domain/entities/occupation.entity",{"_index":470,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts",{"_index":2364,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:29",{"_index":2373,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:33",{"_index":2375,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:40",{"_index":2377,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:43",{"_index":2370,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:46",{"_index":2368,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:53",{"_index":2371,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:56",{"_index":2378,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:59",{"_index":2372,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/occupation.controller.ts",{"_index":2287,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:18",{"_index":2303,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:27",{"_index":2306,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:36",{"_index":2310,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:47",{"_index":2298,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:56",{"_index":2321,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:68",{"_index":2301,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:77",{"_index":2318,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:86",{"_index":2314,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.module.ts",{"_index":2385,"title":{},"body":{"modules/OccupationModule.html":{}}}],["src/api/occupation/occupation.service.ts",{"_index":2415,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:108",{"_index":2422,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:122",{"_index":2428,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:136",{"_index":2427,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:25",{"_index":2418,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:28",{"_index":2423,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:40",{"_index":2424,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:53",{"_index":2426,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:74",{"_index":2420,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:90",{"_index":2430,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/web/request/create",{"_index":1202,"title":{},"body":{"classes/CreateOccupationRequest.html":{}}}],["src/api/occupation/web/request/get",{"_index":1802,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{}}}],["src/api/occupation/web/request/update",{"_index":3065,"title":{},"body":{"classes/UpdateOccupationRequest.html":{}}}],["src/api/occupation/web/response/occupation",{"_index":2407,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["src/api/profile/cqrs/command/create",{"_index":1207,"title":{},"body":{"classes/CreateProfileCommand.html":{}}}],["src/api/profile/cqrs/command/delete",{"_index":1551,"title":{},"body":{"classes/DeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/restore",{"_index":2812,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["src/api/profile/cqrs/command/shift",{"_index":2884,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["src/api/profile/cqrs/command/soft",{"_index":2956,"title":{},"body":{"classes/SoftDeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/transfer",{"_index":3036,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["src/api/profile/cqrs/command/update",{"_index":3066,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["src/api/profile/cqrs/event/create",{"_index":1259,"title":{},"body":{"classes/CreateProfileEvent.html":{}}}],["src/api/profile/cqrs/event/delete",{"_index":1561,"title":{},"body":{"classes/DeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/restore",{"_index":2819,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["src/api/profile/cqrs/event/shift",{"_index":2894,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["src/api/profile/cqrs/event/soft",{"_index":2962,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/update",{"_index":3078,"title":{},"body":{"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["src/api/profile/cqrs/handler/command/create",{"_index":1216,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/delete",{"_index":1554,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/restore",{"_index":2814,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/shift",{"_index":2888,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/soft",{"_index":2957,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/update",{"_index":3068,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/event/create",{"_index":1265,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/delete",{"_index":1563,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/restore",{"_index":2823,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/shift",{"_index":2901,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/soft",{"_index":2965,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/update",{"_index":3079,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/query/get",{"_index":1760,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["src/api/profile/cqrs/query/get",{"_index":1757,"title":{},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["src/api/profile/domain/dto/create",{"_index":1251,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["src/api/profile/domain/dto/get",{"_index":1815,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["src/api/profile/domain/dto/id",{"_index":2028,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["src/api/profile/domain/dto/update",{"_index":3077,"title":{},"body":{"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/api/profile/domain/entities/profile.entity",{"_index":474,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts",{"_index":2560,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:100",{"_index":2565,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:106",{"_index":2573,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:112",{"_index":2581,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:118",{"_index":2575,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:125",{"_index":2569,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:128",{"_index":2589,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:131",{"_index":2570,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:31",{"_index":2571,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:34",{"_index":2592,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:40",{"_index":2585,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:47",{"_index":2591,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:53",{"_index":2583,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:68",{"_index":2588,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:82",{"_index":2579,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:88",{"_index":2568,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:94",{"_index":2584,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/enum/role",{"_index":3536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/profile/domain/request/create",{"_index":1270,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["src/api/profile/domain/request/get",{"_index":1831,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["src/api/profile/domain/request/shift",{"_index":2907,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["src/api/profile/domain/request/update",{"_index":3087,"title":{},"body":{"classes/UpdateProfileRequest.html":{}}}],["src/api/profile/domain/response/profile.response.ts",{"_index":2616,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:2",{"_index":2618,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:3",{"_index":2619,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:4",{"_index":2620,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:6",{"_index":2617,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/profile.controller.ts",{"_index":2474,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:108",{"_index":2488,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:117",{"_index":2495,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:126",{"_index":2492,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:135",{"_index":2514,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:40",{"_index":2499,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:49",{"_index":2505,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:59",{"_index":2509,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:68",{"_index":2503,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:78",{"_index":2511,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:89",{"_index":2521,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:98",{"_index":2518,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.module.ts",{"_index":2600,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/api/profile/profile.service.ts",{"_index":2621,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:102",{"_index":2649,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:142",{"_index":2645,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:158",{"_index":2635,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:171",{"_index":2637,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:179",{"_index":2639,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:197",{"_index":2636,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:210",{"_index":2633,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:231",{"_index":2642,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:25",{"_index":2627,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:28",{"_index":2629,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:48",{"_index":2631,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:61",{"_index":2647,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:74",{"_index":2651,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1278,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1568,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":2758,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/restore",{"_index":2827,"title":{},"body":{"classes/RestoreUserCommand.html":{}}}],["src/api/user/cqrs/command/set",{"_index":2871,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/soft",{"_index":2968,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/update",{"_index":3089,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserRoleCommand.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1391,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1580,"title":{},"body":{"classes/DeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/login",{"_index":2186,"title":{},"body":{"classes/LoginOfUserEvent.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":2769,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/restore",{"_index":2834,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["src/api/user/cqrs/event/set",{"_index":2879,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/soft",{"_index":2975,"title":{},"body":{"classes/SoftDeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/update",{"_index":3150,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1285,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1571,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":2763,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/restore",{"_index":2829,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":2874,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/soft",{"_index":2971,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":3092,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1398,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1584,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":2188,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":2776,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/restore",{"_index":2836,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":2881,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/soft",{"_index":2977,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":3157,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1841,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1835,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["src/api/user/domain/dto/create",{"_index":416,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{}}}],["src/api/user/domain/dto/generate",{"_index":1716,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["src/api/user/domain/dto/get",{"_index":1900,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["src/api/user/domain/dto/list",{"_index":2164,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["src/api/user/domain/dto/update",{"_index":3144,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{}}}],["src/api/user/domain/dto/user",{"_index":419,"title":{},"body":{"controllers/AppTestE2eController.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":418,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":3281,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:101",{"_index":3304,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:106",{"_index":3288,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:112",{"_index":3289,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:115",{"_index":3313,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:118",{"_index":3292,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:34",{"_index":3293,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:37",{"_index":3302,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:41",{"_index":3317,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:49",{"_index":3305,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:57",{"_index":3294,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:64",{"_index":3291,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:67",{"_index":3301,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:70",{"_index":3307,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:77",{"_index":3298,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:80",{"_index":3310,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:87",{"_index":3306,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:90",{"_index":3312,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:93",{"_index":3309,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:96",{"_index":3315,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":3557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1403,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["src/api/user/domain/response/user",{"_index":3325,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":3361,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":3363,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":3365,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":3366,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":3364,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":3362,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.module.ts",{"_index":3353,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":3367,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:111",{"_index":3394,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:120",{"_index":3382,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:124",{"_index":3387,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:128",{"_index":3401,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:136",{"_index":3399,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:150",{"_index":3377,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:155",{"_index":3380,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:160",{"_index":3384,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:164",{"_index":3383,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:33",{"_index":3374,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:36",{"_index":3375,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:40",{"_index":3389,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:44",{"_index":3393,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:48",{"_index":3396,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:52",{"_index":3378,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:56",{"_index":3381,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:64",{"_index":3397,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:77",{"_index":3391,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:86",{"_index":3385,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/web/user.controller.ts",{"_index":3186,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:112",{"_index":3212,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:129",{"_index":3222,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:145",{"_index":3232,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:164",{"_index":3240,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:179",{"_index":3234,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:197",{"_index":3237,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:216",{"_index":3225,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:232",{"_index":3204,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:248",{"_index":3216,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:36",{"_index":3200,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:51",{"_index":3220,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:67",{"_index":3229,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:81",{"_index":3206,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:96",{"_index":3209,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app.controller.ts",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:31",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":440,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:52",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":378,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":379,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":3573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1680,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["src/middleware/request",{"_index":2781,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["src/middleware/response",{"_index":2797,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1428,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1430,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":3636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1616,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1636,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["src/util/exception/errorenum.ts",{"_index":3516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1661,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["src/util/global/extend",{"_index":3015,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["src/util/pipe/is",{"_index":414,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["ssl",{"_index":1452,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1604,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1590,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":3423,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":3599,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["static",{"_index":2182,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":313,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"controllers/ProfileController.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1677,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":2102,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":2103,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":3502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":3012,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":3013,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":2012,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":2148,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":736,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":725,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["strip",{"_index":1633,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":582,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":2984,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":3002,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":478,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{}}}],["stripeventrepository",{"_index":511,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":584,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1613,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":3504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":3311,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":481,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscriptionentity.discountcodes",{"_index":1615,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1606,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":2110,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":2090,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":2470,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":512,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1591,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":141,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":2041,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('duplicate",{"_index":1624,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["super('invalid",{"_index":2032,"title":{},"body":{"classes/InvalidIdException.html":{},"classes/InvalidUsernameException.html":{}}}],["super('mail",{"_index":1620,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"classes/MailRequiredException.html":{}}}],["super('new",{"_index":2847,"title":{},"body":{"classes/SamePasswordException.html":{}}}],["super('not",{"_index":2263,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["super('occupation",{"_index":2406,"title":{},"body":{"classes/OccupationNotFoundException.html":{}}}],["super('query",{"_index":2683,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["super('unauthorized",{"_index":3045,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":3360,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1628,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":2257,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":3662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":3558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":3594,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":2106,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":3608,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":3609,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3482,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1457,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["tax_rate",{"_index":2092,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":2064,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":1981,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":383,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{}}}],["test/test",{"_index":381,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["testapi",{"_index":3600,"title":{},"body":{"index.html":{}}}],["text",{"_index":1045,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":309,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":1736,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["then((occupationdto",{"_index":2450,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then((occupationsdto",{"_index":2453,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then(async",{"_index":3058,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["then(occupation",{"_index":1774,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["then(occupationentity",{"_index":1166,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["then(occupations",{"_index":1750,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["then(profile",{"_index":1812,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["thibaud",{"_index":3577,"title":{},"body":{"index.html":{}}}],["things",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["this.addressrepository.query('delete",{"_index":589,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1091,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1096,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1093,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":148,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":145,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1659,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":1197,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":265,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":422,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":425,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.getallusers",{"_index":431,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":315,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getuser(userid",{"_index":433,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.removeuser(useriddto.userid",{"_index":429,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.authenticationservice.login(login",{"_index":2180,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":709,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":550,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit('create",{"_index":1100,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":2858,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1508,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":223,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":553,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":552,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":555,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":557,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":3029,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":1977,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":3032,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":559,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":2017,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":1167,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1358,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":1367,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.generatepassword",{"_index":3416,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateuniquereferralcode",{"_index":1348,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.getuserbyreferralcode(code",{"_index":1369,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":563,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":561,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":1997,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":565,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.createuserdto.mail",{"_index":1341,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedemail(command.mail",{"_index":2748,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedemail(command.user.mail",{"_index":3109,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.createuserdto.username",{"_index":1336,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.user.username",{"_index":3107,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":2747,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicateofdeletedmail(command.user.mail",{"_index":3111,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicateofdeletedusername(command.user.username",{"_index":3110,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isvalidemail(command.createuserdto.mail",{"_index":1344,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidemail(command.mail",{"_index":2751,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.createuserdto.password",{"_index":1342,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":2749,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.updateusercredentialdto.newpassword",{"_index":3141,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.isvalidusername(command.createuserdto.username",{"_index":1345,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidusername(command.username",{"_index":2753,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":567,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger_console.log('new",{"_index":2733,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":3337,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":569,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":2002,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":2008,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":571,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":585,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository",{"_index":1164,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["this.occupationrepository.createquerybuilder('occupation",{"_index":1793,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["this.occupationrepository.delete(occupation.id).catch",{"_index":1542,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["this.occupationrepository.find",{"_index":1152,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["this.occupationrepository.query('delete",{"_index":573,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.restore(command.occupationid",{"_index":2806,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["this.occupationrepository.softdelete(occupation.id).catch",{"_index":2951,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["this.occupationservice.createoccupation(createoccupationrequest).catch(error",{"_index":2343,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.deleteoccupation(occupationid).catch(error",{"_index":2350,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getalloccupation().catch(error",{"_index":2336,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationbyid(occupationid).catch(error",{"_index":2339,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationwithcriteria(getoccupationswithcriteriarequest).catch(error",{"_index":2340,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.restoreoccupation(occupationid).catch(error",{"_index":2356,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.softdeleteoccupation(occupationid).catch(error",{"_index":2353,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.updateoccupation(occupationid",{"_index":2346,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.password",{"_index":3338,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":575,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository",{"_index":1557,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profilerepository.createquerybuilder('profile",{"_index":1822,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["this.profilerepository.find",{"_index":1764,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["this.profilerepository.query('delete",{"_index":577,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.remove(profile",{"_index":1560,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["this.profilerepository.restore(command.profileid",{"_index":2818,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["this.profilerepository.save(newprofile).then(profile",{"_index":1248,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["this.profilerepository.save(profile",{"_index":2892,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["this.profilerepository.softdelete",{"_index":2960,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["this.profilerepository.update(profile.id",{"_index":3073,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profiles",{"_index":3322,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profiles.push(profile",{"_index":3323,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profileservice.createprofile(profile).catch(error",{"_index":2553,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(profileid).catch(error",{"_index":2555,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(requestuser.user.id).catch(error",{"_index":2557,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getmyprofile(id",{"_index":2538,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(id).catch(error",{"_index":2544,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(userid).catch(error",{"_index":2542,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofiles().catch(error",{"_index":2535,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofileswithcriteria(getprofileswithcriteriarequest).catch(error",{"_index":2545,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.restoreprofile(profileid).catch(error",{"_index":2559,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(id",{"_index":2551,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(profileid",{"_index":2548,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.querybus",{"_index":2448,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{}}}],["this.querybus.execute",{"_index":2677,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.querybus.execute(new",{"_index":225,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":587,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1330,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1374,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":579,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.stripeventrepository.query('delete",{"_index":581,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":583,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1998,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":3031,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":3330,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository",{"_index":1232,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":1920,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1578,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find",{"_index":601,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.find().then(userlist",{"_index":1895,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1370,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":600,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1844,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":549,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.restore(command.id",{"_index":2832,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["this.userrepository.save",{"_index":590,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1351,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.softdelete",{"_index":599,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":2767,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.userrepository.update(verifyduplicatemailwithdeleted.id",{"_index":3117,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":3249,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteme(requestuser.user.id",{"_index":3277,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":3256,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findme(user.id",{"_index":3263,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":3259,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findwithcriteria(getuserwithcriteriadto",{"_index":3261,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.fulldelete(id",{"_index":3280,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generateuserfrommail(generateuserdto",{"_index":3252,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":2158,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":3274,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.restoreuser(userid.userid",{"_index":3255,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(requestuser.user.id",{"_index":3270,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":3265,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(requestuser.user.id",{"_index":3271,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateroles(id",{"_index":3268,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1088,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(command.updateusercredentialdto.password",{"_index":3142,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1882,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["thresholdpercent",{"_index":2018,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":3014,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["timestamps",{"_index":928,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":2193,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":3619,"title":{"todo.html":{}},"body":{}}],["token",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command",{"_index":2764,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command.ts",{"_index":2759,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:1",{"_index":2760,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":2761,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":2777,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["token.event.ts",{"_index":2770,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:2",{"_index":2773,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":2771,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":2774,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":2139,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["token.strategy",{"_index":735,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":2141,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:12",{"_index":2143,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":2145,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":774,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{}}}],["total_amount",{"_index":2095,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":2097,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":2065,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":2066,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":2258,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":2253,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts:3",{"_index":2255,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":828,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":922,"title":{},"body":{"entities/CardEntity.html":{}}}],["transferprofiletousercommand",{"_index":3035,"title":{"classes/TransferProfileToUserCommand.html":{}},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["transform",{"_index":2113,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":2114,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":3319,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":196,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":3648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":3004,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":3007,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":2985,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":2986,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":3005,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":2085,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":2696,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":2691,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":994,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@length(2",{"_index":2374,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["true})@maxlength(255",{"_index":836,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1491,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1061,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":2181,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":2184,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":2185,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":2183,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":3629,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":829,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":924,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":1990,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":276,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":488,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":278,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1431,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1432,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":2785,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":3467,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":3470,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1691,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1696,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1694,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":3483,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":3041,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{}}}],["undefined",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["undefined})@httpcode(201)@useguards(undefined",{"_index":2498,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@isemail",{"_index":850,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":890,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":108,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":1946,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":3533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":1668,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":3618,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1518,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":1732,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":2919,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:14",{"_index":2922,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":2923,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":2921,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":2943,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(command.occupationid",{"_index":3056,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["update(userid",{"_index":3230,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":3057,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatedfrom",{"_index":1906,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updatedoccupationentity",{"_index":3053,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["updatedto",{"_index":1907,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updateme",{"_index":3195,"title":{},"body":{"controllers/UserController.html":{}}}],["updateme(requestuser",{"_index":3233,"title":{},"body":{"controllers/UserController.html":{}}}],["updatemyprofile",{"_index":2484,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updatemyprofile(@req",{"_index":2550,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatemyprofile(id",{"_index":2648,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatemyprofile(requestuser",{"_index":2515,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateoccupation",{"_index":2295,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupation(occupationid",{"_index":2319,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupationcommand",{"_index":2439,"title":{"classes/UpdateOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationcommandhandler",{"_index":2394,"title":{"classes/UpdateOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationdto",{"_index":2437,"title":{"classes/UpdateOccupationDto.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{}}}],["updateoccupationevent",{"_index":3060,"title":{"classes/UpdateOccupationEvent.html":{}},"body":{"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationeventhandler",{"_index":2398,"title":{"classes/UpdateOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationrequest",{"_index":2429,"title":{"classes/UpdateOccupationRequest.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationRequest.html":{}}}],["updateoccupationsprofilecommand",{"_index":2656,"title":{"classes/UpdateOccupationsProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofilecommandhandler",{"_index":2605,"title":{"classes/UpdateOccupationsProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofiledto",{"_index":3076,"title":{"classes/UpdateOccupationsProfileDto.html":{}},"body":{"classes/UpdateOccupationsProfileDto.html":{}}}],["updateoccupationsprofileevent",{"_index":3069,"title":{"classes/UpdateOccupationsProfileEvent.html":{}},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updateoccupationsprofileeventhandler",{"_index":2613,"title":{"classes/UpdateOccupationsProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updatepassword",{"_index":3196,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(requestuser",{"_index":3235,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(userid",{"_index":3398,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile",{"_index":2485,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updateprofile(@param('id",{"_index":2547,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":2650,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofile(profileid",{"_index":2519,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofilecommand",{"_index":2654,"title":{"classes/UpdateProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["updateprofilecommandhandler",{"_index":2607,"title":{"classes/UpdateProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["updateprofiledto",{"_index":2671,"title":{"classes/UpdateProfileDto.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{}}}],["updateprofileevent",{"_index":3082,"title":{"classes/UpdateProfileEvent.html":{}},"body":{"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofileeventhandler",{"_index":2606,"title":{"classes/UpdateProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofilerequest",{"_index":2516,"title":{"classes/UpdateProfileRequest.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["updateprofilerequest.id",{"_index":2669,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid",{"_index":2670,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid.length",{"_index":2668,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.roleprofile",{"_index":2673,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.usernameprofile",{"_index":2672,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updaterole",{"_index":3197,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(@param('id",{"_index":3267,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(id",{"_index":3238,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroles",{"_index":3373,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(userid",{"_index":3400,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetimestamp",{"_index":3020,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":3088,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercommand(userid",{"_index":3410,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":3091,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialcommand",{"_index":3122,"title":{"classes/UpdateUserCredentialCommand.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercredentialcommandhandler",{"_index":3128,"title":{"classes/UpdateUserCredentialCommandHandler.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialdto",{"_index":3124,"title":{"classes/UpdateUserCredentialDto.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateusercredentialevent",{"_index":3132,"title":{"classes/UpdateUserCredentialEvent.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateusercredentialevent(command.userid",{"_index":3143,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["updateusercredentialeventhandler",{"_index":3156,"title":{"classes/UpdateUserCredentialEventHandler.html":{}},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateuserdto",{"_index":3090,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserevent",{"_index":3104,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{}}}],["updateuserevent(command.userid",{"_index":3114,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateuserevent(verifyduplicatemailwithdeleted.id",{"_index":3120,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":3162,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["updateuserrolecommand",{"_index":3164,"title":{"classes/UpdateUserRoleCommand.html":{}},"body":{"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"injectables/UserService.html":{}}}],["updateuserrolecommandhandler",{"_index":3168,"title":{"classes/UpdateUserRoleCommandHandler.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateuserroleevent",{"_index":3170,"title":{"classes/UpdateUserRoleEvent.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updateuserroleevent(command",{"_index":3174,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["updateuserroleeventhandler",{"_index":3181,"title":{"classes/UpdateUserRoleEventHandler.html":{}},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["uppercase",{"_index":2052,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":2928,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":830,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1609,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1592,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1682,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1684,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2010,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":2686,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":3286,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":143,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":409,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":390,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@useguards(undefined",{"_index":3228,"title":{},"body":{"controllers/UserController.html":{}}}],["user.command",{"_index":1286,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":1279,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:1",{"_index":2969,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1569,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1281,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1282,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:5",{"_index":3038,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["user.currenthashedrefreshtoken",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":417,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1377,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenerateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:10",{"_index":3161,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1386,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1382,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1378,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1718,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1717,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:6",{"_index":3159,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1380,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":1399,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["user.event.ts",{"_index":1392,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:2",{"_index":1582,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1581,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1396,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1394,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1395,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.id",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":2796,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["user.jwttoken",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.mail",{"_index":1373,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user.password",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["user.profiles",{"_index":2590,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.profiles.map(profile",{"_index":1829,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["user.query",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":1886,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:1",{"_index":1887,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":1888,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":2705,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1323,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1404,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:10",{"_index":1408,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:11",{"_index":1412,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1409,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1407,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1411,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:16",{"_index":1410,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:3",{"_index":1405,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":3241,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":2712,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1372,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":738,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":134,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{}}}],["user/domain/response/user",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/domain/response/user.response",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":192,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":193,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1870,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["user?.roles.includes(role",{"_index":3665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":3523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1688,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1692,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":3185,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":2282,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":3010,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":2704,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":2711,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userid",{"_index":408,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"injectables/UserService.html":{}}}],["useriddto",{"_index":399,"title":{"interfaces/UserIdDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{}}}],["userlist",{"_index":3327,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":1896,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse",{"_index":1891,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"classes/UserListResponse.html":{}}}],["userlistresponse.userlist",{"_index":1898,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":1897,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlogindto",{"_index":3331,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{}}}],["userloginresponse",{"_index":653,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{}}}],["usermodule",{"_index":157,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":591,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/InvalidUsernameException.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1318,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["username.exception.ts",{"_index":1626,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.exception.ts:3",{"_index":1627,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.length",{"_index":1375,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["username.query",{"_index":1854,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["username.query.ts",{"_index":1849,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:1",{"_index":1851,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1852,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":2178,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1254,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["usernotfoundexception",{"_index":2652,"title":{"classes/UserNotFoundException.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":517,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["userresponse",{"_index":656,"title":{"classes/UserResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["userroleenum",{"_index":133,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1356,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["users",{"_index":404,"title":{},"body":{"controllers/AppTestE2eController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1371,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["usersenderid",{"_index":3522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userusername",{"_index":1881,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["userusername.password",{"_index":1883,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["util/config/database.configuration",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":2728,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1224,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["util/exception/error",{"_index":175,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["v_0.0.4",{"_index":3604,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":3556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":2033,"title":{},"body":{"classes/InvalidMailException.html":{}}}],["validate",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(command.user",{"_index":3112,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validate(login",{"_index":2175,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newoccupationentity",{"_index":1161,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["validate(newprofile",{"_index":1245,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["validate(newuser",{"_index":1349,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":2161,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":2144,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updatedoccupationentity",{"_index":3055,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["validated",{"_index":3541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":2100,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":2036,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":1181,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variables",{"_index":3632,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1733,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1068,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1077,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1098,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1090,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["verifyduplicatemailwithdeleted",{"_index":3115,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.deletedat",{"_index":3116,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.mail",{"_index":3118,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.username",{"_index":3121,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1874,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1875,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["version",{"_index":1095,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["void",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1512,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":3574,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":3555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":3514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":1969,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":3585,"title":{},"body":{"index.html":{}}}],["warning",{"_index":3527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web/request/create",{"_index":2330,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["web/request/get",{"_index":2328,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["web/request/update",{"_index":2436,"title":{},"body":{"injectables/OccupationService.html":{}}}],["web/response/occupation",{"_index":2327,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["web/user.controller",{"_index":3354,"title":{},"body":{"modules/UserModule.html":{}}}],["website",{"_index":957,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":894,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":927,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":892,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":926,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":831,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":832,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":896,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":925,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":833,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1435,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":3637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":3639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":3643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":3640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":3649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":915,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":3512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdeleted",{"_index":602,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["world",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":3646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1406,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z\\\\d@$!%*#?&]{6",{"_index":1334,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z])(?=.*[a",{"_index":3136,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["z])(?=.*\\\\d)(?=.*[@$!%*#?&])[a",{"_index":1333,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":3137,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["za",{"_index":1332,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_imports\n\n\n\ncluster_ApiLogModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_ApiMailModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            OccupationModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from './api/api-landing-page/api-landing-page.module';\nimport { ProfileModule } from './api/profile/profile.module';\nimport { OccupationModule } from './api/occupation/occupation.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    CqrsModule,\n    // ________ Module ________\n    ApiMailModule,\n    ApiLogModule,\n    HealthCheckModule,\n    ApiLandingPageModule,\n\n    // ________ Module Application ________\n    UserModule,\n    AuthModule,\n    ProfileModule,\n    OccupationModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                            \n                                deleteUserTest\n                            \n                            \n                                getAllUsersTest\n                            \n                            \n                                getUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserTest\n                        \n                    \n                \n            \n            \n                \ndeleteUserTest(userIdDto: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UsePipes(new IsTestEnvironmentPipe())@Delete('/api/test/remove-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdDto\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersTest\n                        \n                    \n                \n            \n            \n                \ngetAllUsersTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-all-users-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTest\n                        \n                    \n                \n            \n            \n                \ngetUserTest(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { UserIdDto } from '../../src/api/user/domain/dto/user-id.dto';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n\n  @HttpCode(204)\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Delete('/api/test/remove-user-test')\n  deleteUserTest(@Body() userIdDto: UserIdDto): Promise {\n    return this.appService.removeUser(userIdDto.userId);\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-all-users-test')\n  getAllUsersTest(): Promise {\n    return this.appService.getAllUsers();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-user-test')\n  getUserTest(@Body() userId: string): Promise {\n    return this.appService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      mail: createUserDto.mail,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n\n  async removeUser(userId: string): Promise {\n    await this.userRepository.softDelete({ id: userId });\n  }\n\n  async getUser(userId: string): Promise {\n    return await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return await this.userRepository.find({\n      withDeleted: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    try {\n      return await this.authService.signup(signUpDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        400,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    try {\n      return await this.authService.getUserFromAuthToken(data);\n    } catch (e) {\n      throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginQueryHandler } from '../user/cqrs/handler/query/get-user-login.query-handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginQueryHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto): Promise {\n    return new UserResponse({\n      ...(await this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.mail, signUpDto.password))),\n    });\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new Error('Invalid token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommand.html":{"url":"classes/CreateOccupationCommand.html","title":"class - CreateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/create-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateOccupationDto } from '../../domain/dto/create-occupation.dto';\n\nexport class CreateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly createOccupationDto: CreateOccupationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommandHandler.html":{"url":"classes/CreateOccupationCommandHandler.html","title":"class - CreateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateOccupationCommand } from '../../command/create-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\n\n@CommandHandler(CreateOccupationCommand)\nexport class CreateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.createOccupationDto.name) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n      const newOccupationEntity: OccupationEntity = new OccupationEntity({\n        ...command.createOccupationDto,\n      });\n      const err = await validate(newOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      return this.occupationRepository\n        .save(newOccupationEntity)\n        .then(occupationEntity => {\n          this.eventBus.publish(\n            new CreateOccupationEvent({\n              occupationId: occupationEntity.id,\n            }),\n          );\n          return new OccupationDto({\n            ...occupationEntity,\n          });\n        })\n        .catch(() => {\n          throw new Error('Occupation not created');\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationDto.html":{"url":"classes/CreateOccupationDto.html","title":"class - CreateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/create-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEvent.html":{"url":"classes/CreateOccupationEvent.html","title":"class - CreateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/create-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'create-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEventHandler.html":{"url":"classes/CreateOccupationEventHandler.html","title":"class - CreateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateOccupationEvent)\nexport class CreateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been created',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationRequest.html":{"url":"classes/CreateOccupationRequest.html","title":"class - CreateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/create-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommand.html":{"url":"classes/CreateProfileCommand.html","title":"class - CreateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/create-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createProfileDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateProfileDto } from '../../domain/dto/create-profile.dto';\n\nexport class CreateProfileCommand {\n  public readonly userId: string;\n  public readonly occupationsId: string[];\n  public readonly createProfileDto: CreateProfileDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommandHandler.html":{"url":"classes/CreateProfileCommandHandler.html","title":"class - CreateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/create-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { CreateProfileCommand } from '../../command/create-profile.command';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(CreateProfileCommand)\nexport class CreateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateProfileCommand): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      const newProfile = new ProfileEntity({\n        user: user,\n        ...command.createProfileDto,\n      });\n\n      if (command.occupationsId.length > 0) {\n        const occupationPromises: Promise[] = command.occupationsId.map(async occupationId => {\n          return await this.occupationRepository\n            .findOneOrFail({\n              where: [{ id: occupationId }],\n            })\n            .catch(() => {\n              throw new Error('Occupation not found');\n            });\n        });\n        const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n        if (occupations.length > 0) {\n          newProfile.occupations = occupations;\n        }\n      }\n\n      const err = await validate(newProfile);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedProfile = await this.profileRepository.save(newProfile).then(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n      this.eventBus.publish(\n        new CreateProfileEvent({\n          profileResponse: new ProfileResponse(savedProfile),\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileDto {\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEvent.html":{"url":"classes/CreateProfileEvent.html","title":"class - CreateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/create-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProfileResponse } from '../../domain/response/profile.response';\n\nexport class CreateProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'create-profile';\n  public readonly profileResponse: ProfileResponse;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEventHandler.html":{"url":"classes/CreateProfileEventHandler.html","title":"class - CreateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/create-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateProfileEvent)\nexport class CreateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' + event.profileResponse.id + ' created for user with id: ' + event.profileResponse.userId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileRequest.html":{"url":"classes/CreateProfileRequest.html","title":"class - CreateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/create-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                idUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileRequest {\n  public readonly usernameProfile: string;\n  public readonly idUser: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventBus\n                            \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n    public readonly eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      if (command.createUserDto.username) {\n        if (await this.isDuplicatedUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.createUserDto.mail) {\n        if (await this.isDuplicatedEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n\n      if (!this.isValidPassword(command.createUserDto.password)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n        );\n        throw new InvalidPasswordException();\n      }\n\n      if (command.createUserDto.mail) {\n        if (!this.isValidEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n          );\n          throw new InvalidMailException();\n        }\n      }\n\n      if (command.createUserDto.username) {\n        if (!this.isValidUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n          );\n          throw new InvalidUsernameException();\n        }\n      }\n\n      const newUser: UserEntity = new UserEntity({\n        ...command.createUserDto,\n        referralCode: await this.generateUniqueReferralCode(),\n      });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        mail: savedUser.mail,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n        referralCode: savedUser.referralCode,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'CreateUser', error: error }));\n      throw error;\n    }\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  mail?: string;\n\n  @ApiProperty()\n  @Length(5, 20)\n  username?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'create-user';\n  constructor(public readonly userId: string, public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                referralCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly mail: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n\n  public readonly referralCode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, HttpStatus, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status !== undefined) {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', HttpStatus.SERVICE_UNAVAILABLE);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommand.html":{"url":"classes/DeleteOccupationCommand.html","title":"class - DeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommandHandler.html":{"url":"classes/DeleteOccupationCommandHandler.html","title":"class - DeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { DeleteOccupationCommand } from '../../command/delete-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteOccupationCommand)\nexport class DeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.delete(occupation.id).catch(() => {\n        throw new Error('Occupation not deleted');\n      });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'DeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEvent.html":{"url":"classes/DeleteOccupationEvent.html","title":"class - DeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEventHandler.html":{"url":"classes/DeleteOccupationEventHandler.html","title":"class - DeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteOccupationEvent } from '../../event/delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteOccupationEvent)\nexport class DeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.occupationId + ' have been deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommand.html":{"url":"classes/DeleteProfileCommand.html","title":"class - DeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommandHandler.html":{"url":"classes/DeleteProfileCommandHandler.html","title":"class - DeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteProfileCommand } from '../../command/delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(DeleteProfileCommand)\nexport class DeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.remove(profile);\n      this.eventBus.publish(\n        new DeleteProfileEvent({\n          deleteProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEvent.html":{"url":"classes/DeleteProfileEvent.html","title":"class - DeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteProfileCommand\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteProfileCommand } from '../command/delete-profile.command';\n\nexport class DeleteProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'delete-profile';\n  public readonly deleteProfileCommand: DeleteProfileCommand;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEventHandler.html":{"url":"classes/DeleteProfileEventHandler.html","title":"class - DeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\n\n@EventsHandler(DeleteProfileEvent)\nexport class DeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.deleteProfileCommand.id + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { InvalidIdException } from '../../../../../util/exception/custom-http-exception/invalid-id.exception';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw new InvalidIdException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'delete-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateMailException.html":{"url":"classes/DuplicateMailException.html","title":"class - DuplicateMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateMailException extends HttpException {\n  constructor() {\n    super('Mail already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateNameException.html":{"url":"classes/DuplicateNameException.html","title":"class - DuplicateNameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateNameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-name.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-name.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class DuplicateNameException extends HttpException {\n  constructor() {\n    super('Duplicate name', 409);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateUserDto.html":{"url":"classes/GenerateUserDto.html","title":"class - GenerateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/generate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class GenerateUserDto {\n  public readonly mail: string;\n  public readonly roles: UserRoleEnum[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQuery.html":{"url":"classes/GetAllOccupationQuery.html","title":"class - GetAllOccupationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-all-occupation.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get-all-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllOccupationQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'get-all-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQueryHandler.html":{"url":"classes/GetAllOccupationQueryHandler.html","title":"class - GetAllOccupationQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from '../../query/get-all-occupation.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllOccupationQuery)\nexport class GetAllOccupationQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    return await this.occupationRepository\n      .find()\n      .then(occupations => {\n        return occupations.map(occupation => {\n          return new OccupationDto(occupation);\n        });\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetAllOccupationQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Error while getting all occupations');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQuery.html":{"url":"classes/GetAllProfileQuery.html","title":"class - GetAllProfileQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-all-profile.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllProfileQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQueryHandler.html":{"url":"classes/GetAllProfileQueryHandler.html","title":"class - GetAllProfileQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllProfileQuery } from '../../query/get-all-profile.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\n\n@QueryHandler(GetAllProfileQuery)\nexport class GetAllProfileQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    try {\n      const profiles = await this.profileRepository.find();\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetAllProfileQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQuery.html":{"url":"classes/GetOccupationByIdQuery.html","title":"class - GetOccupationByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQueryHandler.html":{"url":"classes/GetOccupationByIdQueryHandler.html","title":"class - GetOccupationByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetOccupationByIdQuery } from '../../query/get-occupation-by-id.query';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationByIdQuery)\nexport class GetOccupationByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationByIdQuery): Promise {\n    return await this.occupationRepository\n      .findOneOrFail({\n        where: [{ id: query.occupationId }],\n      })\n      .then(occupation => {\n        return new OccupationDto(occupation);\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetOccupationByIdQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Occupation not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaDto.html":{"url":"classes/GetOccupationWithCriteriaDto.html","title":"class - GetOccupationWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQuery.html":{"url":"classes/GetOccupationWithCriteriaQuery.html","title":"class - GetOccupationWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                criteria\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        criteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetOccupationWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetOccupationWithCriteriaDto } from '../../domain/dto/get-occupation-with-criteria.dto';\n\nexport class GetOccupationWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n  public readonly criteria: GetOccupationWithCriteriaDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQueryHandler.html":{"url":"classes/GetOccupationWithCriteriaQueryHandler.html","title":"class - GetOccupationWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { GetOccupationWithCriteriaQuery } from '../../query/get-occupation-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationWithCriteriaQuery)\nexport class GetOccupationWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.occupationRepository.createQueryBuilder('occupation');\n\n      if (query.criteria.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.criteria.name) {\n        queryBuilder.where('occupation.name = :nameOccupation', {\n          nameOccupation: query.criteria.name,\n        });\n      }\n\n      const occupations = await queryBuilder.getMany();\n\n      return occupations.map(\n        occupation =>\n          new OccupationDto({\n            ...occupation,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'occupation',\n          handler: 'GetOccupationWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaRequest.html":{"url":"classes/GetOccupationWithCriteriaRequest.html","title":"class - GetOccupationWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/get-occupation-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQuery.html":{"url":"classes/GetProfileByIdQuery.html","title":"class - GetProfileByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfileByIdQuery {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQueryHandler.html":{"url":"classes/GetProfileByIdQueryHandler.html","title":"class - GetProfileByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileByIdQuery } from '../../query/get-profile-by-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetProfileByIdQuery)\nexport class GetProfileByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileByIdQuery): Promise {\n    try {\n      return await this.profileRepository\n        .findOneOrFail({\n          relations: ['user'],\n          where: [\n            {\n              id: query.id,\n            },\n          ],\n        })\n        .then(profile => new ProfileResponse({ ...profile, userId: profile.user?.id }));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileByIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaDto.html":{"url":"classes/GetProfileWithCriteriaDto.html","title":"class - GetProfileWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/get-profile-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfileWithCriteriaDto {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQuery.html":{"url":"classes/GetProfileWithCriteriaQuery.html","title":"class - GetProfileWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getProfileWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getProfileWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetProfileWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetProfileWithCriteriaDto } from '../../domain/dto/get-profile-with-criteria.dto';\n\nexport class GetProfileWithCriteriaQuery {\n  public readonly getProfileWithCriteriaDto: GetProfileWithCriteriaDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQueryHandler.html":{"url":"classes/GetProfileWithCriteriaQueryHandler.html","title":"class - GetProfileWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileWithCriteriaQuery } from '../../query/get-profile-with-criteria.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetProfileWithCriteriaQuery)\nexport class GetProfileWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.profileRepository.createQueryBuilder('profile');\n\n      if (query.getProfileWithCriteriaDto.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.getProfileWithCriteriaDto.usernameProfile) {\n        queryBuilder.where('profile.usernameProfile = :usernameProfile', {\n          usernameProfile: query.getProfileWithCriteriaDto.usernameProfile,\n        });\n      }\n\n      const profiles = await queryBuilder.getMany();\n\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQuery.html":{"url":"classes/GetProfilesByUserIdQuery.html","title":"class - GetProfilesByUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfilesByUserIdQuery {\n  public readonly id: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQueryHandler.html":{"url":"classes/GetProfilesByUserIdQueryHandler.html","title":"class - GetProfilesByUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfilesByUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfilesByUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfilesByUserIdQuery } from '../../query/get-profiles-by-user-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\n\n@QueryHandler(GetProfilesByUserIdQuery)\nexport class GetProfilesByUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async execute(query: GetProfilesByUserIdQuery): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: query.id }],\n          relations: ['profile'],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      return user.profiles.map(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesWithCriteriaRequest.html":{"url":"classes/GetProfilesWithCriteriaRequest.html","title":"class - GetProfilesWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/get-profiles-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfilesWithCriteriaRequest {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ mail: query.email }],\n        select: ['id', 'mail', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesQueryHandler.html","title":"class - GetUserIfRefreshTokenMatchesQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'mail', 'currentHashedRefreshToken', 'roles'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'GetUserIfRefreshTokenMatchesQueryHandler',\n          error: error,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQueryHandler.html":{"url":"classes/GetUserLoginQueryHandler.html","title":"class - GetUserLoginQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ mail: query.username }],\n          select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQueryHandler.html":{"url":"classes/GetUserQueryHandler.html","title":"class - GetUserQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaDto.html":{"url":"classes/GetUserWithCriteriaDto.html","title":"class - GetUserWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/get-user-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserWithCriteriaDto {\n  public readonly createdFrom?: Date;\n  public readonly createdTo?: Date;\n\n  public readonly updatedFrom?: Date;\n  public readonly updatedTo?: Date;\n\n  public readonly deletedFrom?: Date;\n  public readonly deletedTo?: Date;\n  public readonly isDeleted?: boolean;\n\n  public readonly role?: string;\n\n  public readonly username?: string;\n  public readonly mail?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQuery.html":{"url":"classes/GetUserWithCriteriaQuery.html","title":"class - GetUserWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getUserWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getUserWithCriteriaDto\n                                                  \n                                                        \n                                                                        GetUserWithCriteriaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getUserWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetUserWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetUserWithCriteriaDto } from '../../domain/dto/get-user-with-criteria.dto';\n\nexport class GetUserWithCriteriaQuery {\n  constructor(public readonly getUserWithCriteriaDto: GetUserWithCriteriaDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQueryHandler.html":{"url":"classes/GetUserWithCriteriaQueryHandler.html","title":"class - GetUserWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserWithCriteriaQuery } from '../../query/get-user-with-criteria.query';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetUserWithCriteriaQuery)\nexport class GetUserWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserWithCriteriaQuery): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (query.getUserWithCriteriaDto.isDeleted) {\n      queryBuilder.setFindOptions({ withDeleted: true });\n    }\n\n    if (query.getUserWithCriteriaDto.createdFrom) {\n      queryBuilder.andWhere('user.createdAt >= :from', { from: query.getUserWithCriteriaDto.createdFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.createdTo) {\n      queryBuilder.andWhere('user.createdAt = :from', { from: query.getUserWithCriteriaDto.updatedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.updatedTo) {\n      queryBuilder.andWhere('user.updatedAt = :from', { from: query.getUserWithCriteriaDto.deletedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.deletedTo) {\n      queryBuilder.andWhere('user.deletedAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdProfileDto.html":{"url":"classes/IdProfileDto.html","title":"class - IdProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/id-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdProfileDto {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIdException.html":{"url":"classes/InvalidIdException.html","title":"class - InvalidIdException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIdException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-id.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-id.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidIdException extends HttpException {\n  constructor() {\n    super('Invalid Id', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidMailException.html":{"url":"classes/InvalidMailException.html","title":"class - InvalidMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidMailException extends HttpException {\n  constructor() {\n    super('Mail is not valid', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUsernameException.html":{"url":"classes/InvalidUsernameException.html","title":"class - InvalidUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidUsernameException extends HttpException {\n  constructor() {\n    super('Invalid username exception', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListRolesDto.html":{"url":"classes/ListRolesDto.html","title":"class - ListRolesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListRolesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/list-roles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class ListRolesDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n      passwordField: 'password',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'login-user';\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailRequiredException.html":{"url":"classes/MailRequiredException.html","title":"class - MailRequiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailRequiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/mail-required.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/mail-required.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class MailRequiredException extends HttpException {\n  constructor() {\n    super('Mail is required', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotTheOwnerException.html":{"url":"classes/NotTheOwnerException.html","title":"class - NotTheOwnerException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotTheOwnerException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/not-the-owner.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/not-the-owner.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class NotTheOwnerException extends HttpException {\n  constructor() {\n    super('Not the owner', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OccupationController.html":{"url":"controllers/OccupationController.html","title":"controller - OccupationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OccupationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /occupation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupations\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationsWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationsWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationsWithCriteria(getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getOccupationsWithCriteriaRequest\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/soft-delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { OccupationService } from './occupation.service';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\n\n@Controller('/occupation')\n@ApiTags('Occupation')\nexport class OccupationController {\n  constructor(private readonly occupationService: OccupationService) {}\n\n  @Get('/public/')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getAllOccupations(): Promise {\n    return await this.occupationService.getAllOccupation().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getOccupationById(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.getOccupationById(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getOccupationsWithCriteria(\n    @Body() getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest,\n  ): Promise {\n    return await this.occupationService.getOccupationWithCriteria(getOccupationsWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createOccupation(@Body() createOccupationRequest: CreateOccupationRequest): Promise {\n    return await this.occupationService.createOccupation(createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateOccupation(\n    @Param('id') occupationId: string,\n    @Body() createOccupationRequest: CreateOccupationRequest,\n  ): Promise {\n    return await this.occupationService.updateOccupation(occupationId, createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.deleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/soft-delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async softDeleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.softDeleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.restoreOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationDto.html":{"url":"classes/OccupationDto.html","title":"class - OccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/entities/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})@Length(2, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { Length } from 'class-validator';\n\n@Entity('occupation')\nexport class OccupationEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  @Length(2, 20)\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OccupationModule.html":{"url":"modules/OccupationModule.html","title":"module - OccupationModule","body":"\n                   \n\n\n\n\n    Modules\n    OccupationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_providers\n\n\n\ncluster_OccupationModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/occupation/occupation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            OccupationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OccupationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from './domain/entities/occupation.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { OccupationController } from './occupation.controller';\nimport { OccupationService } from './occupation.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { RestoreOccupationCommandHandler } from './cqrs/handler/command/restore-occupation.command-handler';\nimport { SoftDeleteOccupationCommandHandler } from './cqrs/handler/command/soft-delete-occupation.command-handler';\nimport { GetAllOccupationQueryHandler } from './cqrs/handler/query/get-all-occupation.query-handler';\nimport { GetOccupationByIdQueryHandler } from './cqrs/handler/query/get-occupation-by-id.query-handler';\nimport { GetOccupationWithCriteriaQueryHandler } from './cqrs/handler/query/get-occupation-with-criteria.query-handler';\nimport { CreateOccupationEventHandler } from './cqrs/handler/event/create-occupation.event-handler';\nimport { SoftDeleteOccupationEventHandler } from './cqrs/handler/event/soft-delete-occupation.event-handler';\nimport { CreateOccupationCommandHandler } from './cqrs/handler/command/create-occupation.command-handler';\nimport { UpdateOccupationCommandHandler } from './cqrs/handler/command/update-occupation.command-handler';\nimport { RestoreOccupationEventHandler } from './cqrs/handler/event/restore-occupation.event-handler';\nimport { DeleteOccupationCommandHandler } from './cqrs/handler/command/delete-occupation.command-handler';\nimport { UpdateOccupationEventHandler } from './cqrs/handler/event/update-occupation.event-handler';\nimport { DeleteOccupationEventHandler } from './cqrs/handler/event/delete-occupation.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [OccupationController],\n  providers: [\n    OccupationService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateOccupationCommandHandler,\n    DeleteOccupationCommandHandler,\n    RestoreOccupationCommandHandler,\n    SoftDeleteOccupationCommandHandler,\n    UpdateOccupationCommandHandler,\n    // Query handlers\n    GetAllOccupationQueryHandler,\n    GetOccupationByIdQueryHandler,\n    GetOccupationWithCriteriaQueryHandler,\n    // Event handlers\n    CreateOccupationEventHandler,\n    DeleteOccupationEventHandler,\n    SoftDeleteOccupationEventHandler,\n    UpdateOccupationEventHandler,\n    RestoreOccupationEventHandler,\n  ],\n})\nexport class OccupationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationNotFoundException.html":{"url":"classes/OccupationNotFoundException.html","title":"class - OccupationNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/occupation-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/occupation-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class OccupationNotFoundException extends HttpException {\n  constructor() {\n    super('Occupation not found', 404);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationResponse.html":{"url":"classes/OccupationResponse.html","title":"class - OccupationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/response/occupation-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/response/occupation-response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationResponse {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OccupationService.html":{"url":"injectables/OccupationService.html","title":"injectable - OccupationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OccupationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupation\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/occupation.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(occupationRequest: CreateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupation()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    occupationRequest\n                                    \n                                                UpdateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from './cqrs/query/get-all-occupation.query';\nimport { QueryErrorException } from '../../util/exception/custom-http-exception/query-error.exception';\nimport { OccupationDto } from './domain/dto/occupation.dto';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { OccupationNotFoundException } from '../../util/exception/custom-http-exception/occupation-not-found.exception';\nimport { GetOccupationByIdQuery } from './cqrs/query/get-occupation-by-id.query';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { GetOccupationWithCriteriaQuery } from './cqrs/query/get-occupation-with-criteria.query';\nimport { GetOccupationWithCriteriaDto } from './domain/dto/get-occupation-with-criteria.dto';\nimport { CreateOccupationCommand } from './cqrs/command/create-occupation.command';\nimport { CreateOccupationDto } from './domain/dto/create-occupation.dto';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { DuplicateNameException } from '../../util/exception/custom-http-exception/duplicate-name.exception';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\nimport { UpdateOccupationRequest } from './web/request/update-occupation.request';\nimport { UpdateOccupationDto } from './domain/dto/update-occupation.dto';\nimport { UpdateOccupationCommand } from './cqrs/command/update-occupation.command';\nimport { DeleteOccupationCommand } from './cqrs/command/delete-occupation.command';\nimport { SoftDeleteOccupationCommand } from './cqrs/command/soft-delete-occupation.command';\nimport { RestoreOccupationCommand } from './cqrs/command/restore-occupation.command';\n\n@Injectable()\nexport class OccupationService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async getAllOccupation(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllOccupationQuery({})).then((occupationsDto: OccupationDto[]) => {\n        return occupationsDto.map(occupationDto => {\n          return new OccupationResponse(occupationDto);\n        });\n      });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationById(occupationId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetOccupationByIdQuery({ occupationId: occupationId }))\n        .then((occupationDto: OccupationDto) => {\n          return new OccupationResponse(occupationDto);\n        });\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetOccupationWithCriteriaQuery({\n            criteria: new GetOccupationWithCriteriaDto({\n              name: criteria.name,\n              isDeleted: criteria.isDeleted,\n            }),\n          }),\n        )\n        .then((occupationsDto: OccupationDto[]) => {\n          return occupationsDto.map(occupationDto => {\n            return new OccupationResponse(occupationDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async createOccupation(occupationRequest: CreateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateOccupationCommand({\n          createOccupationDto: new CreateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateOccupationCommand({\n          occupationId: occupationId,\n          updateOccupationDto: new UpdateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async deleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async softDeleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async restoreOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteMyProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getAllProfiles\n                            \n                            \n                                    Async\n                                getMyProfiles\n                            \n                            \n                                    Async\n                                getProfileById\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(profile: CreateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create-profile')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyProfile(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@ApiResponse({status: 200, description: 'List of profiles', content: undefined})@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfiles(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-my-profiles')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileById(requestUser: RequestUser, profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/with-user-id/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfilesWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(requestUser: RequestUser, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(profileId: string, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProfileService } from './profile.service';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\n\n@Controller('profile')\n@ApiTags('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * @api {get} /profile Get all profiles\n   * @apiName GetallProfiles\n   * @apiGroup Profile\n   * @apiVersion 0.0.8\n   * @apiDescription Get all profiles\n   * @apiSuccess {Object[]} profiles List of profiles\n   */\n  @Get('/admin/')\n  @ApiResponse({\n    status: 200,\n    description: 'List of profiles',\n    content: {\n      'application/json': {\n        example: [\n          { id: 1, name: 'Profile 1' },\n          { id: 2, name: 'Profile 2' },\n        ],\n      },\n    },\n  })\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAllProfiles(): Promise {\n    return await this.profileService.getProfiles().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getProfileById(@Req() requestUser: RequestUser, @Param('id') profileId: string): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getMyProfile(id, profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/admin/with-user-id/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfileByUserId(@Param('id') userId: string): Promise {\n    return await this.profileService.getProfileByUserId(userId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/get-my-profiles')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMyProfiles(@Req() requestUser: RequestUser): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getProfileByUserId(id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfilesWithCriteria(\n    @Body() getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    return await this.profileService.getProfilesWithCriteria(getProfilesWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateProfile(@Param('id') profileId: string, @Body() profile: UpdateProfileRequest): Promise {\n    return await this.profileService.updateProfile(profileId, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/public/update-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMyProfile(@Req() requestUser: RequestUser, @Body() profile: UpdateProfileRequest): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.updateProfile(id, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create-profile')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createProfile(@Body() profile: CreateProfileRequest): Promise {\n    return await this.profileService.createProfile(profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.deleteProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMyProfile(@Req() requestUser: RequestUser): Promise {\n    return await this.profileService.deleteProfile(requestUser.user.id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.restoreProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                roleProfile\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: RoleProfileEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../../../user/domain/entities/user.entity';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\nimport { OccupationEntity } from '../../../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from '../../../entities-to-create/company-employee.entity';\nimport { MediaEntity } from '../../../entities-to-create/media.entity';\nimport { JoinedConversation } from '../../../entities-to-create/joined-conversation.entity';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { RoleProfileEnum } from '../enum/role-profile.enum';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n  @Column({ type: 'enum', enum: RoleProfileEnum, default: RoleProfileEnum.CLASSIC })\n  roleProfile: RoleProfileEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { ProfileEntity } from './domain/entities/profile.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { CreateProfileCommandHandler } from './cqrs/handler/command/create-profile.command-handler';\nimport { ShiftProfileOwnerCommandHandler } from './cqrs/handler/command/shift-profile-owner.command-handler';\nimport { UpdateOccupationsProfileCommandHandler } from './cqrs/handler/command/update-occupations-profile.command-handler';\nimport { GetProfilesByUserIdQueryHandler } from './cqrs/handler/query/get-profiles-by-user-id.query-handler';\nimport { GetAllProfileQueryHandler } from './cqrs/handler/query/get-all-profile.query-handler';\nimport { GetProfileWithCriteriaQueryHandler } from './cqrs/handler/query/get-profile-with-criteria.query-handler';\nimport { DeleteProfileEventHandler } from './cqrs/handler/event/delete-profile.event-handler';\nimport { UpdateProfileEventHandler } from './cqrs/handler/event/update-profile.event-handler';\nimport { DeleteProfileCommandHandler } from './cqrs/handler/command/delete-profile.command-handler';\nimport { GetProfileByIdQueryHandler } from './cqrs/handler/query/get-profile-by-id.query-handler';\nimport { UpdateProfileCommandHandler } from './cqrs/handler/command/update-profile.command-handler';\nimport { SoftDeleteProfileEventHandler } from './cqrs/handler/event/soft-delete-profile.event-handler';\nimport { CreateProfileEventHandler } from './cqrs/handler/event/create-profile.event-handler';\nimport { ShiftProfileOwnerEventHandler } from './cqrs/handler/event/shift-profile-owner.event-handler';\nimport { SoftDeleteProfileCommandHandler } from './cqrs/handler/command/soft-delete-profile.command-handler';\nimport { UpdateOccupationsProfileEventHandler } from './cqrs/handler/event/update-occupations-profile.event-handler';\nimport { RestoreProfileCommandHandler } from './cqrs/handler/command/restore-profile.command-handler';\nimport { RestoreProfileEventHandler } from './cqrs/handler/event/restore-profile.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, ProfileEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [ProfileController],\n  providers: [\n    ProfileService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateProfileCommandHandler,\n    DeleteProfileCommandHandler,\n    ShiftProfileOwnerCommandHandler,\n    SoftDeleteProfileCommandHandler,\n    UpdateProfileCommandHandler,\n    UpdateOccupationsProfileCommandHandler,\n    RestoreProfileCommandHandler,\n    // Query handlers\n    GetProfileByIdQueryHandler,\n    GetProfilesByUserIdQueryHandler,\n    GetAllProfileQueryHandler,\n    GetProfileWithCriteriaQueryHandler,\n    // Event handlers\n    CreateProfileEventHandler,\n    DeleteProfileEventHandler,\n    ShiftProfileOwnerEventHandler,\n    SoftDeleteProfileEventHandler,\n    UpdateProfileEventHandler,\n    UpdateOccupationsProfileEventHandler,\n    RestoreProfileEventHandler,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileResponse.html":{"url":"classes/ProfileResponse.html","title":"class - ProfileResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/response/profile.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProfileResponse {\n  public readonly id: string;\n  public readonly userId: string;\n  public readonly usernameProfile: string;\n\n  public readonly isDeleted?: boolean;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getMyProfile\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfiles\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                shiftProfileOwner\n                            \n                            \n                                    Async\n                                softDeleteProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/profile.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(createProfileRequest: CreateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileRequest\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfile(userId: string, profileId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfileWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        shiftProfileOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shiftProfileOwnerRequest\n                                    \n                                                ShiftProfileOwnerRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { CreateProfileCommand } from './cqrs/command/create-profile.command';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { InvalidParameterEntityException } from '../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { DeleteProfileCommand } from './cqrs/command/delete-profile.command';\nimport { UpdateProfileCommand } from './cqrs/command/update-profile.command';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\nimport { SoftDeleteProfileCommand } from './cqrs/command/soft-delete-profile.command';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { UpdateOccupationsProfileCommand } from './cqrs/command/update-occupations-profile.command';\nimport { ShiftProfileOwnerCommand } from './cqrs/command/shift-profile-owner.command';\nimport { ShiftProfileOwnerRequest } from './domain/request/shift-profile-owner.request';\nimport { GetProfileByIdQuery } from './cqrs/query/get-profile-by-id.query';\nimport { GetAllProfileQuery } from './cqrs/query/get-all-profile.query';\nimport { GetProfileWithCriteriaQuery } from './cqrs/query/get-profile-with-criteria.query';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { GetProfilesByUserIdQuery } from './cqrs/query/get-profiles-by-user-id.query';\nimport { NotTheOwnerException } from '../../util/exception/custom-http-exception/not-the-owner.exception';\nimport { RestoreProfileCommand } from './cqrs/command/restore-profile.command';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createProfile(createProfileRequest: CreateProfileRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateProfileCommand({\n          createProfileDto: {\n            usernameProfile: createProfileRequest.usernameProfile,\n            roleProfile: createProfileRequest.roleProfile,\n          },\n          userId: createProfileRequest.idUser,\n          occupationsId: createProfileRequest.occupationsId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async deleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async softDeleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: updateProfileRequest.id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: updateProfileRequest.id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: updateProfileRequest.id,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== id) {\n            throw new Error('User is not he owner of the profile');\n          }\n        });\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new ShiftProfileOwnerCommand({\n          profileId: shiftProfileOwnerRequest.profileId,\n          userId: shiftProfileOwnerRequest.userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else throw new Error(e);\n    }\n  }\n\n  // Get\n  async getProfile(id: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileByIdQuery({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async getProfiles(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllProfileQuery());\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfilesWithCriteria(\n    getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileWithCriteriaQuery({\n          getProfileWithCriteriaDto: {\n            usernameProfile: getProfileWithCriteriaRequest.usernameProfile,\n            roleProfile: getProfileWithCriteriaRequest.roleProfile,\n            isDeleted: getProfileWithCriteriaRequest.isDeleted,\n          },\n        }),\n      );\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfileByUserId(userId: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfilesByUserIdQuery({\n          id: userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      throw new Error(e);\n    }\n  }\n\n  async getMyProfile(userId: string, profileId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: profileId,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== userId) {\n            throw new Error('User is not he owner of the profile');\n          }\n          return profile;\n        });\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async restoreProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreProfileCommand({\n          profileId: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryErrorException.html":{"url":"classes/QueryErrorException.html","title":"class - QueryErrorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryErrorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/query-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/query-error.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class QueryErrorException extends HttpException {\n  constructor() {\n    super('Query Error', 500);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 20})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 20 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, mail: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly mail: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): void {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n      );\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.mail)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n      );\n      throw new DuplicateMailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n      );\n      throw new InvalidPasswordException();\n    }\n\n    if (command.mail) {\n      if (!this.isValidEmail(command.mail)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n        );\n        throw new InvalidMailException();\n      }\n    }\n\n    if (command.username) {\n      if (!this.isValidUsername(command.username)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n        );\n        throw new InvalidUsernameException();\n      }\n    }\n\n    const newUser = new UserEntity({\n      mail: command.mail,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n      referralCode: await this.generateUniqueReferralCode(),\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid parameters :' + err }),\n      );\n      throw new InvalidParameterEntityException(err);\n    }\n\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return insertedUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RemoveRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'remove-refresh-token';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommand.html":{"url":"classes/RestoreOccupationCommand.html","title":"class - RestoreOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/restore-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommandHandler.html":{"url":"classes/RestoreOccupationCommandHandler.html","title":"class - RestoreOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Repository } from 'typeorm';\nimport { RestoreOccupationCommand } from '../../command/restore-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(RestoreOccupationCommand)\nexport class RestoreOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreOccupationCommand): Promise {\n    try {\n      await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n\n      await this.occupationRepository.restore(command.occupationId);\n      this.eventBus.publish(\n        new RestoreOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEvent.html":{"url":"classes/RestoreOccupationEvent.html","title":"class - RestoreOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/restore-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'restore-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEventHandler.html":{"url":"classes/RestoreOccupationEventHandler.html","title":"class - RestoreOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreOccupationEvent)\nexport class RestoreOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommand.html":{"url":"classes/RestoreProfileCommand.html","title":"class - RestoreProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/restore-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommandHandler.html":{"url":"classes/RestoreProfileCommandHandler.html","title":"class - RestoreProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreProfileCommand } from '../../command/restore-profile.command';\n\n@CommandHandler(RestoreProfileCommand)\nexport class RestoreProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreProfileCommand): Promise {\n    try {\n      await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.restore(command.profileId);\n      this.eventBus.publish(\n        new RestoreProfileEvent({\n          profileId: command.profileId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEvent.html":{"url":"classes/RestoreProfileEvent.html","title":"class - RestoreProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/restore-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'restore-profile';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEventHandler.html":{"url":"classes/RestoreProfileEventHandler.html","title":"class - RestoreProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\n\n@EventsHandler(RestoreProfileEvent)\nexport class RestoreProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.profileId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommand.html":{"url":"classes/RestoreUserCommand.html","title":"class - RestoreUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/restore-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommandHandler.html":{"url":"classes/RestoreUserCommandHandler.html","title":"class - RestoreUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreUserCommand } from '../../command/restore-user.command';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RestoreUserCommand)\nexport class RestoreUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreUserCommand): Promise {\n    try {\n      if (!command.id) throw new Error('User id is required');\n      try {\n        await this.userRepository.findOneOrFail({ where: [{ id: command.id }], withDeleted: true });\n      } catch (e) {\n        throw new Error('User not found');\n      }\n      await this.userRepository.restore(command.id);\n      this.eventBus.publish(new RestoreUserEvent(command.id));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RestoreUserCommandHandler', error }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEvent.html":{"url":"classes/RestoreUserEvent.html","title":"class - RestoreUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/restore-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'restore-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEventHandler.html":{"url":"classes/RestoreUserEventHandler.html","title":"class - RestoreUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreUserEvent)\nexport class RestoreUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SamePasswordException.html":{"url":"classes/SamePasswordException.html","title":"class - SamePasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SamePasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/same-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/same-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class SamePasswordException extends HttpException {\n  constructor() {\n    super('New password is the same as old password', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'SetCurrentRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommand.html":{"url":"classes/ShiftProfileOwnerCommand.html","title":"class - ShiftProfileOwnerCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/shift-profile-owner.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerCommand {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommandHandler.html":{"url":"classes/ShiftProfileOwnerCommandHandler.html","title":"class - ShiftProfileOwnerCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: ShiftProfileOwnerCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                ShiftProfileOwnerCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerCommand } from '../../command/shift-profile-owner.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\n\n@CommandHandler(ShiftProfileOwnerCommand)\nexport class ShiftProfileOwnerCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: ShiftProfileOwnerCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      profile.user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n      await this.profileRepository.save(profile);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEvent.html":{"url":"classes/ShiftProfileOwnerEvent.html","title":"class - ShiftProfileOwnerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/shift-profile-owner.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'shift-profile-owner'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerEvent {\n  public readonly id: string;\n  public readonly owner: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'shift-profile-owner';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEventHandler.html":{"url":"classes/ShiftProfileOwnerEventHandler.html","title":"class - ShiftProfileOwnerEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: ShiftProfileOwnerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ShiftProfileOwnerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerEvent } from '../../event/shift-profile-owner.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(ShiftProfileOwnerEvent)\nexport class ShiftProfileOwnerEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: ShiftProfileOwnerEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' have been shifted to user with id: ' + event.owner + '',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerRequest.html":{"url":"classes/ShiftProfileOwnerRequest.html","title":"class - ShiftProfileOwnerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/shift-profile-owner.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerRequest {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  mail: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommand.html":{"url":"classes/SoftDeleteOccupationCommand.html","title":"class - SoftDeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/soft-delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommandHandler.html":{"url":"classes/SoftDeleteOccupationCommandHandler.html","title":"class - SoftDeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { SoftDeleteOccupationCommand } from '../../command/soft-delete-occupation.command';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(SoftDeleteOccupationCommand)\nexport class SoftDeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.softDelete(occupation.id).catch(() => {\n        throw new Error('Occupation not soft deleted');\n      });\n      this.eventBus.publish(\n        new SoftDeleteOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'SoftDeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEvent.html":{"url":"classes/SoftDeleteOccupationEvent.html","title":"class - SoftDeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/soft-delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'soft-delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEventHandler.html":{"url":"classes/SoftDeleteOccupationEventHandler.html","title":"class - SoftDeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteOccupationEvent)\nexport class SoftDeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommand.html":{"url":"classes/SoftDeleteProfileCommand.html","title":"class - SoftDeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/soft-delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommandHandler.html":{"url":"classes/SoftDeleteProfileCommandHandler.html","title":"class - SoftDeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileCommand } from '../../command/soft-delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\n\n@CommandHandler(SoftDeleteProfileCommand)\nexport class SoftDeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.softDelete({\n        id: profile.id,\n      });\n      this.eventBus.publish(\n        new SoftDeleteProfileEvent({\n          id: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEvent.html":{"url":"classes/SoftDeleteProfileEvent.html","title":"class - SoftDeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/soft-delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileEvent {\n  public readonly id: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'soft-delete-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEventHandler.html":{"url":"classes/SoftDeleteProfileEventHandler.html","title":"class - SoftDeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteProfileEvent)\nexport class SoftDeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommand.html":{"url":"classes/SoftDeleteUserCommand.html","title":"class - SoftDeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/soft-delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommandHandler.html":{"url":"classes/SoftDeleteUserCommandHandler.html","title":"class - SoftDeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserCommand } from '../../command/soft-delete-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\n\n@CommandHandler(SoftDeleteUserCommand)\nexport class SoftDeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteUserCommand): Promise {\n    try {\n      await this.userRepository\n        .findOneOrFail({\n          where: { id: command.userId },\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      await this.userRepository.softDelete({\n        id: command.userId,\n      });\n      this.eventBus.publish(new SoftDeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEvent.html":{"url":"classes/SoftDeleteUserEvent.html","title":"class - SoftDeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/soft-delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEventHandler.html":{"url":"classes/SoftDeleteUserEventHandler.html","title":"class - SoftDeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteUserEvent)\nexport class SoftDeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferProfileToUserCommand.html":{"url":"classes/TransferProfileToUserCommand.html","title":"class - TransferProfileToUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferProfileToUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/transfer-profile-to-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loginDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignInDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SignInDto } from '../../../auth/dto/sign-in.dto';\n\nexport class TransferProfileToUserCommand {\n  public readonly userId: string;\n  public readonly loginDto: SignInDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommand.html":{"url":"classes/UpdateOccupationCommand.html","title":"class - UpdateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/update-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateOccupationDto } from '../../domain/dto/update-occupation.dto';\n\nexport class UpdateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly updateOccupationDto: UpdateOccupationDto;\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommandHandler.html":{"url":"classes/UpdateOccupationCommandHandler.html","title":"class - UpdateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UpdateOccupationCommand } from '../../command/update-occupation.command';\n\n@CommandHandler(UpdateOccupationCommand)\nexport class UpdateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.updateOccupationDto.name && occupation.id !== command.occupationId) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n\n      const updatedOccupationEntity: OccupationEntity = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        })\n        .then(occupationEntity => {\n          return new OccupationEntity({\n            ...occupationEntity,\n            ...command.updateOccupationDto,\n          });\n        });\n      const err = await validate(updatedOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      await this.occupationRepository\n        .update(command.occupationId, updatedOccupationEntity)\n        .catch(() => {\n          throw new Error('Occupation not updated');\n        })\n        .then(async () => {\n          await this.eventBus.publish(\n            new UpdateOccupationCommand({\n              occupationId: command.occupationId,\n            }),\n          );\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'UpdateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationDto.html":{"url":"classes/UpdateOccupationDto.html","title":"class - UpdateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/update-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEvent.html":{"url":"classes/UpdateOccupationEvent.html","title":"class - UpdateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/update-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'update-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEventHandler.html":{"url":"classes/UpdateOccupationEventHandler.html","title":"class - UpdateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationEvent } from '../../event/update-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationEvent)\nexport class UpdateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationRequest.html":{"url":"classes/UpdateOccupationRequest.html","title":"class - UpdateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/update-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommand.html":{"url":"classes/UpdateOccupationsProfileCommand.html","title":"class - UpdateOccupationsProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-occupations-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileCommand {\n  public readonly id: string;\n  public readonly occupations: string[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommandHandler.html":{"url":"classes/UpdateOccupationsProfileCommandHandler.html","title":"class - UpdateOccupationsProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationsProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationsProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileCommand } from '../../command/update-occupations-profile.command';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(UpdateOccupationsProfileCommand)\nexport class UpdateOccupationsProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationsProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      const occupationPromises: Promise[] = command.occupations.map(async occupationId => {\n        return await this.occupationRepository\n          .findOneOrFail({\n            where: [{ id: occupationId }],\n          })\n          .catch(() => {\n            throw new Error('Occupation not found');\n          });\n      });\n      const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n      if (occupations.length == 0) {\n        throw new Error('Occupations not found');\n      }\n\n      await this.profileRepository.update(profile.id, {\n        occupations: occupations,\n      });\n      this.eventBus.publish(\n        new UpdateOccupationsProfileEvent({\n          listOfOccupationId: command.occupations,\n          profileId: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileDto.html":{"url":"classes/UpdateOccupationsProfileDto.html","title":"class - UpdateOccupationsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-occupations-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateOccupationsProfileDto {\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEvent.html":{"url":"classes/UpdateOccupationsProfileEvent.html","title":"class - UpdateOccupationsProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-occupations-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                listOfOccupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        listOfOccupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupations-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileEvent {\n  public readonly listOfOccupationId: string[];\n  public readonly profileId: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-occupations-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEventHandler.html":{"url":"classes/UpdateOccupationsProfileEventHandler.html","title":"class - UpdateOccupationsProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationsProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationsProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationsProfileEvent)\nexport class UpdateOccupationsProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: UpdateOccupationsProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' +\n        event.profileId +\n        ' occupation have been updated with id: ' +\n        event.listOfOccupationId.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommand.html":{"url":"classes/UpdateProfileCommand.html","title":"class - UpdateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileDto } from '../../domain/dto/update-profile.dto';\n\nexport class UpdateProfileCommand {\n  public readonly id: string;\n  public readonly updateProfileDto: UpdateProfileDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommandHandler.html":{"url":"classes/UpdateProfileCommandHandler.html","title":"class - UpdateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { UpdateProfileCommand } from '../../command/update-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateProfileCommand)\nexport class UpdateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      await this.profileRepository.update(profile.id, command.updateProfileDto);\n      this.eventBus.publish(\n        new UpdateProfileEvent({\n          updateProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileDto {\n  public readonly usernameProfile?: string;\n  public readonly roleProfile?: RoleProfileEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEvent.html":{"url":"classes/UpdateProfileEvent.html","title":"class - UpdateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileCommand } from '../command/update-profile.command';\n\nexport class UpdateProfileEvent {\n  public readonly updateProfileCommand: UpdateProfileCommand;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEventHandler.html":{"url":"classes/UpdateProfileEventHandler.html","title":"class - UpdateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateProfileEvent)\nexport class UpdateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.updateProfileCommand.updateProfileDto + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileRequest.html":{"url":"classes/UpdateProfileRequest.html","title":"class - UpdateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/update-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileRequest {\n  public readonly id: string;\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedMail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      if (command.user.username) {\n        if (await this.isDuplicatedUsername(command.user.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.user.mail) {\n        if (await this.isDuplicatedEmail(command.user.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n      if ((await this.userRepository.findOne({ where: [{ id: command.userId }] })) === undefined) {\n        throw new Error('User not found');\n      }\n\n      await this.isDuplicateOfDeletedUsername(command.user.username || '');\n      await this.isDuplicateOfDeletedMail(command.user.mail || '');\n\n      const err = await validate(command.user);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'UpdateUserCommandHandler',\n          error: error,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ mail: mail }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null && verifyDuplicateMailWithDeleted.deletedAt !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        mail: 'deleted' + verifyDuplicateMailWithDeleted.mail + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n\n  private async isDuplicateOfDeletedUsername(username: string): Promise {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ username: username }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        username: 'deleted' + verifyDuplicateMailWithDeleted.username + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommand.html":{"url":"classes/UpdateUserCredentialCommand.html","title":"class - UpdateUserCredentialCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-credential.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                updateUserCredentialDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserCredentialDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserCredentialDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserCredentialDto } from '../../domain/dto/update-user-credential.dto';\n\nexport class UpdateUserCredentialCommand {\n  public readonly userId: string;\n  public readonly updateUserCredentialDto: UpdateUserCredentialDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommandHandler.html":{"url":"classes/UpdateUserCredentialCommandHandler.html","title":"class - UpdateUserCredentialCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCredentialCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCredentialCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCredentialCommand } from '../../command/update-user-credential.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(UpdateUserCredentialCommand)\nexport class UpdateUserCredentialCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: UpdateUserCredentialCommand): Promise {\n    try {\n      if (command.updateUserCredentialDto.newPassword == command.updateUserCredentialDto.password) {\n        throw new Error('New password is the same as old password');\n      }\n      if (!this.isValidPassword(command.updateUserCredentialDto.newPassword)) {\n        throw new Error('Invalid password');\n      }\n      const user = await this.userRepository.findOne({\n        where: { id: command.userId },\n        select: ['id', 'password'],\n      });\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      if (!(await this.verifyPassword(command.updateUserCredentialDto.password, user.password))) {\n        throw new Error('Invalid old password');\n      }\n\n      await this.userRepository.update(command.userId, { password: command.updateUserCredentialDto.newPassword });\n      await this.eventBus.publish(new UpdateUserCredentialEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserCredentialCommandHandler', error: error }),\n      );\n      throw error;\n    }\n  }\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialDto.html":{"url":"classes/UpdateUserCredentialDto.html","title":"class - UpdateUserCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialDto {\n  public readonly username: string;\n  public readonly password: string;\n\n  public readonly newPassword: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEvent.html":{"url":"classes/UpdateUserCredentialEvent.html","title":"class - UpdateUserCredentialEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-credential.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-credential'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-credential';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEventHandler.html":{"url":"classes/UpdateUserCredentialEventHandler.html","title":"class - UpdateUserCredentialEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserCredentialEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserCredentialEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\n\n@EventsHandler(UpdateUserCredentialEvent)\nexport class UpdateUserCredentialEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserCredentialEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  mail?: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username?: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommand.html":{"url":"classes/UpdateUserRoleCommand.html","title":"class - UpdateUserRoleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-role.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../domain/enum/user-role.enum';\n\nexport class UpdateUserRoleCommand {\n  public readonly userId: string;\n  public readonly roles: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommandHandler.html":{"url":"classes/UpdateUserRoleCommandHandler.html","title":"class - UpdateUserRoleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserRoleCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserRoleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleCommand } from '../../command/update-user-role.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateUserRoleCommand)\nexport class UpdateUserRoleCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserRoleCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, { roles: command.roles });\n      await this.eventBus.publish(new UpdateUserRoleEvent(command));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserRoleCommandHandler', error: error }),\n      );\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEvent.html":{"url":"classes/UpdateUserRoleEvent.html","title":"class - UpdateUserRoleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-role.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateUserRoleCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateUserRoleCommand: UpdateUserRoleCommand)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateUserRoleCommand\n                                                  \n                                                        \n                                                                        UpdateUserRoleCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-role'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserRoleCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserRoleCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserRoleCommand } from '../command/update-user-role.command';\n\nexport class UpdateUserRoleEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-role';\n  constructor(public readonly updateUserRoleCommand: UpdateUserRoleCommand) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEventHandler.html":{"url":"classes/UpdateUserRoleEventHandler.html","title":"class - UpdateUserRoleEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserRoleEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserRoleEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserRoleEvent)\nexport class UpdateUserRoleEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserRoleEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'User with id: ' +\n        event.updateUserRoleCommand.userId +\n        ' updated role with ' +\n        event.updateUserRoleCommand.roles.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/web/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMe\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/public/delete-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@Post('/admin/criteria')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/full-delete/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/generate-user-from-mail')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(requestUser: RequestUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Post('/admin/restore-user')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMe(requestUser: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(requestUser: RequestUser, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-password')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: string, roles: ListRolesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Put('/admin/:id/role')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                ListRolesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from '../user.service';\nimport { CreateUserDto } from '../domain/dto/create-user.dto';\nimport { CreateUserResponse } from '../domain/response/create-user.response';\nimport { UpdateUserDto } from '../domain/dto/update-user.dto';\nimport { RequestUser } from '../../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from '../domain/response/user.response';\nimport { RoleGuard } from '../../auth/guards/role.guard';\nimport { UserRoleEnum } from '../domain/enum/user-role.enum';\nimport { GetUserWithCriteriaDto } from '../domain/dto/get-user-with-criteria.dto';\nimport { UpdateUserCredentialDto } from '../domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from '../domain/dto/generate-user.dto';\nimport { ListRolesDto } from '../domain/dto/list-roles.dto';\nimport { UserIdDto } from '../domain/dto/user-id.dto';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/admin/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/admin/generate-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async generateUserFromMail(@Body() generateUserDto: GenerateUserDto): Promise {\n    try {\n      return await this.userService.generateUserFromMail(generateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Post('/admin/restore-user')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreUser(@Body() userId: UserIdDto): Promise {\n    try {\n      return await this.userService.restoreUser(userId.userId);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n  @Get('/admin/')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findAll(): Promise {\n    try {\n      return await this.userService.findAll();\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findOne(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.findOne(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @Post('/admin/criteria')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findWithCriteria(\n    @Body() getUserWithCriteriaDto: GetUserWithCriteriaDto,\n  ): Promise {\n    try {\n      return await this.userService.findWithCriteria(getUserWithCriteriaDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/public/get-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      const { user } = requestUser;\n      return await this.userService.findMe(user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async update(\n    @Param('id') userId: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(userId, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Put('/admin/:id/role')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateRole(@Param('id') id: string, @Body() roles: ListRolesDto): Promise {\n    try {\n      return await this.userService.updateRoles(id, roles.roles);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMe(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(requestUser.user.id, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-password')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updatePassword(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserCredentialDto: UpdateUserCredentialDto,\n  ): Promise {\n    try {\n      return await this.userService.updatePassword(requestUser.user.id, updateUserCredentialDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  remove(@Req() requestUser: RequestUser, @Param('id') id: string): Promise {\n    try {\n      return this.userService.remove(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/public/delete-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async deleteMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      return await this.userService.deleteMe(requestUser.user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/full-delete/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async fullDelete(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.fullDelete(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                    Public\n                                    Optional\n                                referralCode\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:57\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:77\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:49\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true, nullable: true })\n  mail?: string;\n\n  @Column()\n  @Column({ unique: true, nullable: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  @Column({ unique: true, nullable: true })\n  public referralCode?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  // ______________________________________________________\n  // Methods\n  // ______________________________________________________\n  @BeforeInsert()\n  private async addProfile(): Promise {\n    if (!this.profiles) {\n      this.profiles = [];\n    }\n    const profile = new ProfileEntity({});\n    this.profiles.push(profile);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdDto.html":{"url":"interfaces/UserIdDto.html","title":"interface - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-id.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserIdDto {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './web/user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginQueryHandler } from './cqrs/handler/query/get-user-login.query-handler';\nimport { GetUserIfRefreshTokenMatchesQueryHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.query-handler';\nimport { GetUserQueryHandler } from './cqrs/handler/query/get-user.query-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { SoftDeleteUserCommandHandler } from './cqrs/handler/command/soft-delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetUserWithCriteriaQueryHandler } from './cqrs/handler/query/get-user-with-criteria.query-handler';\nimport { UpdateUserCredentialCommandHandler } from './cqrs/handler/command/update-user-credential.command-handler';\nimport { UpdateUserRoleCommandHandler } from './cqrs/handler/command/update-user-role.command-handler';\nimport { RestoreUserCommandHandler } from './cqrs/handler/command/restore-user.command-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    SoftDeleteUserCommandHandler,\n    UpdateUserCredentialCommandHandler,\n    UpdateUserRoleCommandHandler,\n    RestoreUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginQueryHandler,\n    GetUserIfRefreshTokenMatchesQueryHandler,\n    GetUserQueryHandler,\n    GetUserWithCriteriaQueryHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly mail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Private\n                                generatePassword\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoles(userId: string, roles: UserRoleEnum[])\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                UserRoleEnum[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\nimport { SoftDeleteUserCommand } from './cqrs/command/soft-delete-user.command';\nimport { GetUserWithCriteriaQuery } from './cqrs/query/get-user-with-criteria.query';\nimport { GetUserWithCriteriaDto } from './domain/dto/get-user-with-criteria.dto';\nimport { RestoreUserCommand } from './cqrs/command/restore-user.command';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\nimport { UpdateUserRoleCommand } from './cqrs/command/update-user-role.command';\nimport { UpdateUserCredentialCommand } from './cqrs/command/update-user-credential.command';\nimport { UpdateUserCredentialDto } from './domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from './domain/dto/generate-user.dto';\nimport { DeleteMailCommand } from '../api-landing-page/cqrs/command/delete-mail.command';\nimport { DuplicateMailException } from '../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { MailRequiredException } from '../../util/exception/custom-http-exception/mail-required.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { SamePasswordException } from '../../util/exception/custom-http-exception/same-password.exception';\nimport { InvalidPasswordException } from '../../util/exception/custom-http-exception/invalid-password.exception';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string): Promise {\n    return await this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string): Promise {\n    return await this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string): Promise {\n    return await this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return await this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserQuery(id));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserCommand(userId, updateUserDto));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Mail already exists' || error instanceof DuplicateMailException)\n        throw new DuplicateMailException();\n      else if (error instanceof DuplicateUsernameException || error.message === 'Username already exists') {\n        throw new DuplicateUsernameException();\n      } else throw Error('not handled error');\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.commandBus.execute(new SoftDeleteUserCommand(id));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async generateUserFromMail(generateUserDto: GenerateUserDto): Promise {\n    try {\n      if (!generateUserDto) throw new Error('Mail is required');\n      if ((await this.queryBus.execute(new GetUserWithCriteriaQuery({ mail: generateUserDto.mail }))).length > 0)\n        throw new Error('Mail already exists');\n      const user = await this.commandBus.execute(\n        new CreateUserCommand(\n          new CreateUserDto({\n            mail: generateUserDto.mail,\n            password: this.generatePassword(),\n            roles: generateUserDto.roles ? generateUserDto.roles : [UserRoleEnum.PUBLIC],\n          }),\n        ),\n      );\n      try {\n        await this.commandBus.execute(new DeleteMailCommand({ mail: generateUserDto.mail }));\n      } catch (error) {}\n      return user;\n    } catch (error) {\n      if (error.message === 'Mail is required') throw new MailRequiredException();\n      else if (error.message === 'Mail already exists') throw new DuplicateMailException();\n      else throw error;\n    }\n  }\n\n  async restoreUser(userId: string): Promise {\n    try {\n      return await this.commandBus.execute(new RestoreUserCommand({ id: userId }));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto): Promise {\n    return await this.queryBus.execute(new GetUserWithCriteriaQuery(getUserWithCriteriaDto));\n  }\n\n  async getMe(userId: string): Promise {\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  async updateRoles(userId: string, roles: UserRoleEnum[]): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserRoleCommand({ userId: userId, roles: roles }));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateUserCredentialCommand({ userId: userId, updateUserCredentialDto: updateUserCredentialDto }),\n      );\n    } catch (error) {\n      if (error.message === 'New password is the same as old password') throw new SamePasswordException();\n      else if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Invalid password') throw new InvalidPasswordException();\n      else if (error.message === 'Invalid old password') throw new InvalidPasswordException();\n      else throw error;\n    }\n  }\n\n  async deleteMe(userId: string): Promise {\n    if (!!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.commandBus.execute(new SoftDeleteUserCommand(userId));\n  }\n\n  async findMe(userId: string): Promise {\n    if (!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  private generatePassword(): string {\n    return 'Pt' + Math.random().toString(10).split('.')[1] + '!';\n  }\n\n  async fullDelete(id: string): Promise {\n    return await this.commandBus.execute(new DeleteUserCommand({ userId: id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.9 - 2023-04-02\nFeatures\n\nmodule occupation\n\n0.0.8 - 2023-03-29\nFeatures\n\nmodule profile\nno test e2e\n\n0.0.7 - 2023-03-29\nFeatures\n\nmodule user\ntest e2e\n\n0.0.6 - 2023-03-18\nFeatures\n\napi-mail module\napi-landing-page module\nrefactor api-log\nfix things\n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            RoleProfileEnum   (src/.../role-profile.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/profile/domain/enum/role-profile.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleProfileEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 COMPANY\n                            \n                        \n                        \n                            \n                                Value : COMPANY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OccupationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    191 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.9\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-mail-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      return roles.some(role => user?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
