var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.775,1,1.985]],["body/controllers/AppController.html",[0,1.938,1,2.167,2,1.309,3,0.294,4,0.294,5,0.294,6,1.917,7,0.509,8,1.314,9,3.989,10,1.657,11,0.035,12,2.311,13,4.505,14,2.454,15,4.439,16,4.439,17,3.422,18,2.311,19,0.416,20,2.311,21,3.422,22,3.422,23,0.81,24,2.923,25,0.658,26,2.311,27,0.416,28,1.886,29,1.917,30,3.422,31,2.311,32,1.917,33,2.311,34,0.332,35,0.077,36,1.917,37,1.657,38,2.311,39,2.311,40,2.311,41,2.311,42,2.311,43,1.917,44,2.311,45,2.311,46,4.075,47,2.311,48,2.311,49,1.917,50,2.311,51,1.917,52,2.311,53,1.069,54,2.311,55,0.019,56,0.019]],["title/modules/AppModule.html",[57,1.985,58,1.775]],["body/modules/AppModule.html",[1,2.902,2,2.252,3,0.362,4,0.362,5,0.362,11,0.035,25,0.872,27,0.512,28,2.502,29,2.362,34,0.41,35,0.094,55,0.022,56,0.022,57,2.519,58,3.062,59,1.613,60,2.252,61,2.362,62,2.362,63,2.852,64,2.042,65,2.042,66,2.848,67,3.299,68,2.848,69,2.519,70,2.848,71,2.362,72,2.042,73,2.848,74,2.362,75,2.362,76,2.848,77,2.848,78,2.848,79,2.848,80,2.362]],["title/injectables/AppService.html",[28,1.45,81,1.45]],["body/injectables/AppService.html",[3,0.465,4,0.465,5,0.465,7,0.807,8,1.806,9,4.555,11,0.034,15,3.035,16,3.035,19,0.658,23,1.282,24,3.375,25,0.591,27,0.658,28,2.178,34,0.526,35,0.121,53,1.693,55,0.026,56,0.026,81,2.178,82,2.317,83,3.035,84,3.659]],["title/controllers/AppTestE2eController.html",[0,1.775,85,1.985]],["body/controllers/AppTestE2eController.html",[0,2.303,2,1.666,3,0.374,4,0.374,5,0.374,7,0.648,8,1.561,10,2.109,11,0.034,19,0.529,23,1.031,25,0.752,27,0.529,28,1.361,34,0.423,35,0.098,36,2.44,37,2.109,53,1.361,55,0.023,56,0.023,85,2.576,86,2.576,87,2.576,88,2.527,89,2.44,90,4.172,91,4.067,92,2.941,93,3.374,94,2.941,95,2.917,96,2.941,97,2.076,98,2.109,99,2.44,100,2.576,101,2.109,102,2.941,103,2.941,104,2.941]],["title/modules/AppTestE2eModule.html",[57,1.985,105,1.985]],["body/modules/AppTestE2eModule.html",[2,2.228,3,0.356,4,0.356,5,0.356,11,0.034,25,0.837,27,0.504,34,0.403,35,0.093,55,0.022,56,0.022,57,2.491,58,3.046,59,1.588,60,2.228,63,2.821,64,2.011,65,2.011,67,3.263,71,2.325,72,2.011,75,3.263,85,2.878,86,1.775,87,1.775,88,2.103,97,2.746,98,2.821,99,2.325,105,3.571,106,2.325,107,2.325,108,2.804,109,2.804,110,2.804,111,2.804,112,2.804]],["title/injectables/AppTestE2eService.html",[81,1.45,97,1.6]],["body/injectables/AppTestE2eService.html",[3,0.444,4,0.444,5,0.444,7,0.77,8,1.753,11,0.034,19,0.629,23,1.224,25,0.564,27,0.629,34,0.502,35,0.116,53,1.617,55,0.026,56,0.026,81,2.113,82,2.212,86,2.892,87,2.892,88,2.113,90,4.475,95,3.275,97,2.331,113,2.898,114,5.087,115,3.494]],["title/injectables/DatabaseConfiguration.html",[69,1.985,81,1.45]],["body/injectables/DatabaseConfiguration.html",[3,0.19,4,0.19,5,0.19,7,0.329,8,0.934,11,0.035,19,0.269,23,0.523,25,0.632,27,0.269,34,0.215,35,0.05,53,1.812,55,0.014,56,0.014,69,1.541,72,1.07,80,4.075,81,1.126,82,0.945,88,1.126,93,3.248,116,1.238,117,3.555,118,1.492,119,3.082,120,2.434,121,1.238,122,1.238,123,2.434,124,0.945,125,1.238,126,1.238,127,0.945,128,1.492,129,2.949,130,2.434,131,3.555,132,1.365,133,3.555,134,2.949,135,1.492,136,3.555,137,1.492,138,1.492,139,3.555,140,2.949,141,1.492,142,2.549,143,1.492,144,1.492,145,3.555,146,2.434,147,2.434,148,2.434,149,3.555,150,3.555,151,3.082,152,3.555,153,1.492,154,3.555,155,1.492,156,2.434,157,1.492,158,1.492,159,1.492,160,1.492,161,1.492,162,1.492,163,1.492,164,1.492,165,1.492,166,1.492,167,1.492,168,1.492,169,1.492,170,1.492,171,1.492,172,1.492,173,2.434,174,1.492,175,1.492,176,1.492,177,1.492,178,1.492,179,1.492,180,1.492,181,1.492,182,1.492,183,1.492,184,2.434,185,1.238,186,2.21,187,1.492,188,1.492,189,1.492,190,1.492,191,1.238,192,0.691,193,1.492]],["title/classes/DuplicateEmailException.html",[35,0.104,194,2.247]],["body/classes/DuplicateEmailException.html",[3,0.462,4,0.462,5,0.462,11,0.034,19,0.654,25,0.587,27,0.654,34,0.523,35,0.121,55,0.026,56,0.026,194,3.36,195,0.969,196,1.799,197,3.36,198,3.015,199,1.972,200,2.183,201,2.183,202,3.635,203,1.53,204,3.635,205,2.607,206,2.607,207,2.302]],["title/classes/DuplicateUsernameException.html",[35,0.104,208,2.247]],["body/classes/DuplicateUsernameException.html",[3,0.462,4,0.462,5,0.462,11,0.034,19,0.654,25,0.587,27,0.654,34,0.523,35,0.121,55,0.026,56,0.026,195,0.969,196,1.799,197,3.36,199,1.972,200,2.183,201,2.183,203,1.53,205,2.607,206,2.607,207,2.302,208,3.36,209,3.015,210,3.635,211,3.635]],["title/classes/ErrorCustomEvent.html",[35,0.104,212,1.985]],["body/classes/ErrorCustomEvent.html",[3,0.378,4,0.378,5,0.378,7,0.655,11,0.032,19,0.844,24,4.103,34,0.428,35,0.099,37,3.93,55,0.023,56,0.023,132,1.8,186,3.802,195,0.793,201,1.252,212,2.595,213,3.624,214,3.624,215,2.466,216,2.595,217,4.397,218,5.054,219,2.974,220,2.974,221,1.518,222,1.376,223,1.684,224,4.098,225,2.974]],["title/classes/ErrorCustomEventHandler.html",[35,0.104,226,2.247]],["body/classes/ErrorCustomEventHandler.html",[3,0.364,4,0.364,5,0.364,7,0.631,8,1.532,11,0.034,19,0.515,23,1.003,25,0.802,27,0.515,34,0.412,35,0.095,55,0.022,56,0.022,124,2.528,126,2.375,127,2.528,132,1.099,186,2.053,192,1.325,195,0.763,212,3.149,213,2.863,214,2.863,221,1.462,222,1.325,223,1.621,226,2.863,227,3.812,228,2.375,229,4.596,230,3.992,231,3.992,232,2.863,233,2.863,234,2.863,235,2.863,236,2.375,237,2.863,238,2.863,239,2.053,240,2.863,241,2.863,242,2.863,243,2.863]],["title/classes/ErrorExceptionFilter.html",[35,0.104,244,2.247]],["body/classes/ErrorExceptionFilter.html",[3,0.335,4,0.335,5,0.335,7,0.582,8,1.447,11,0.034,19,0.475,23,0.925,25,0.608,27,0.475,34,0.379,35,0.088,49,3.126,55,0.021,56,0.021,122,2.189,127,2.387,132,1.013,134,3.647,185,3.978,192,1.221,195,0.703,200,1.587,203,1.851,221,1.347,222,1.221,223,1.494,234,2.703,239,3.439,244,2.703,245,3.126,246,2.189,247,4.396,248,3.769,249,4.795,250,2.639,251,3.769,252,3.126,253,2.189,254,2.639,255,2.639,256,2.639,257,2.639,258,2.639,259,2.639,260,2.639,261,2.639,262,2.639,263,2.639,264,2.189,265,2.639,266,2.639]],["title/classes/InvalidParameterEntityException.html",[35,0.104,267,2.247]],["body/classes/InvalidParameterEntityException.html",[3,0.349,4,0.349,5,0.349,11,0.035,19,0.494,25,0.626,27,0.494,34,0.395,35,0.129,51,2.278,53,1.794,55,0.022,56,0.022,132,1.488,195,0.732,196,1.488,199,1.632,200,1.892,201,1.156,203,1.156,207,2.455,221,1.979,222,1.271,223,1.555,239,1.97,267,2.781,268,2.455,269,2.455,270,1.97,271,3.877,272,5.149,273,2.746,274,2.746,275,2.278,276,3.216,277,2.278,278,2.278,279,2.746,280,1.97,281,2.746,282,2.746,283,2.746,284,2.746,285,2.746]],["title/classes/InvalidPasswordException.html",[35,0.104,286,2.247]],["body/classes/InvalidPasswordException.html",[3,0.425,4,0.425,5,0.425,11,0.033,19,0.601,25,0.539,27,0.601,34,0.481,35,0.111,55,0.025,56,0.025,142,3.181,195,0.891,196,1.702,199,1.867,200,2.096,201,2.096,203,1.407,207,2.116,268,2.809,278,2.772,280,2.397,286,3.181,287,2.772,288,3.342,289,3.342,290,3.342,291,3.342,292,4.978,293,3.342,294,4.435,295,3.342,296,3.342]],["title/classes/IsTestEnvironmentPipe.html",[35,0.104,100,1.985]],["body/classes/IsTestEnvironmentPipe.html",[3,0.362,4,0.362,5,0.362,7,0.628,8,1.527,11,0.034,19,0.512,23,0.998,25,0.46,27,0.512,34,0.41,35,0.094,53,1.318,55,0.022,56,0.022,88,2.121,100,2.519,101,2.852,127,2.519,129,2.362,132,1.093,191,2.362,192,1.318,195,0.759,200,1.199,203,1.199,221,1.454,222,1.318,223,1.613,297,2.362,298,4.583,299,3.977,300,3.977,301,5.219,302,3.802,303,4.961,304,2.848,305,2.852,306,2.848,307,2.848,308,2.848,309,2.848,310,2.362,311,2.848,312,2.848,313,2.848,314,2.848,315,2.848]],["title/classes/NoUserTraceException.html",[35,0.104,316,2.247]],["body/classes/NoUserTraceException.html",[3,0.456,4,0.456,5,0.456,11,0.033,19,0.645,25,0.579,34,0.516,35,0.119,55,0.026,56,0.026,195,0.956,196,1.783,199,1.955,201,2.169,269,2.271,316,3.331,317,3.853,318,3.695,319,2.975,320,5.152,321,3.586,322,3.586,323,3.586,324,3.586,325,3.586]],["title/classes/TimestampEntityExtendEntity.html",[35,0.104,326,2.247]],["body/classes/TimestampEntityExtendEntity.html",[3,0.229,4,0.229,5,0.229,7,0.397,8,1.086,10,2.506,11,0.034,19,0.822,23,1.225,25,0.291,34,0.259,35,0.06,55,0.016,56,0.016,132,1.753,192,1.832,195,0.48,199,1.191,216,1.792,217,4.763,222,2.113,234,3.275,264,3.788,326,2.029,327,3.962,328,3.962,329,1.494,330,3.494,331,3.494,332,3.494,333,3.494,334,3.959,335,3.959,336,3.959,337,4.567,338,3.494,339,2.83,340,1.802,341,3.959,342,2.83,343,1.802,344,2.83,345,2.83,346,2.83,347,1.802,348,1.802,349,1.802,350,1.802,351,3.959,352,1.494,353,1.802,354,3.959,355,2.83,356,3.494]],["title/classes/UnauthorizedRequestException.html",[35,0.104,357,2.247]],["body/classes/UnauthorizedRequestException.html",[3,0.465,4,0.465,5,0.465,11,0.034,19,0.658,25,0.591,27,0.658,34,0.526,35,0.121,55,0.026,56,0.026,195,0.975,196,1.806,199,1.981,200,2.19,201,2.19,203,1.541,252,3.035,357,3.375,358,3.903,359,3.035,360,3.659,361,3.659,362,3.659]],["title/classes/UserNotFoundException.html",[35,0.104,363,2.247]],["body/classes/UserNotFoundException.html",[3,0.465,4,0.465,5,0.465,11,0.034,19,0.658,25,0.591,27,0.658,34,0.526,35,0.121,55,0.026,56,0.026,195,0.975,196,1.806,199,1.981,200,2.19,201,2.19,203,1.541,363,3.375,364,3.903,365,3.035,366,3.659,367,3.659,368,3.035,369,3.659]],["title/coverage.html",[370,3.046]],["body/coverage.html",[0,1.744,1,1.273,5,0.255,6,1.667,11,0.033,28,0.93,35,0.184,55,0.017,56,0.017,69,1.273,81,1.733,83,1.667,85,1.273,86,1.951,87,1.951,88,1.733,89,1.667,97,1.026,100,1.273,101,1.441,113,1.667,116,1.667,124,1.273,132,0.771,192,0.93,194,1.441,196,1.908,197,2.209,198,1.667,208,1.441,209,1.667,212,1.273,213,2.209,214,2.209,215,1.667,226,1.441,227,1.667,228,1.667,244,1.441,245,1.667,246,1.667,267,1.441,268,1.951,269,1.273,270,1.441,286,1.441,287,1.667,297,1.667,316,1.441,317,1.667,318,1.441,319,1.667,326,1.441,327,1.667,328,1.667,329,1.667,357,1.441,358,1.667,359,1.667,363,1.441,364,1.667,365,1.667,370,1.441,371,2.01,372,2.01,373,2.01,374,2.01,375,2.01,376,5.85,377,5.668,378,1.667,379,2.01,380,1.667,381,3.08,382,1.667,383,1.667,384,2.01,385,2.01,386,2.01,387,2.01,388,2.01]],["title/dependencies.html",[60,2.13,389,2.183]],["body/dependencies.html",[11,0.035,27,0.605,32,2.789,35,0.112,55,0.025,56,0.025,60,1.904,74,2.789,125,2.789,236,2.789,253,3.694,275,2.789,302,2.789,352,2.789,390,3.363,391,3.363,392,4.993,393,3.363,394,3.363,395,3.363,396,3.363,397,3.363,398,3.363,399,3.363,400,3.363,401,3.363,402,3.363,403,3.363,404,3.363,405,3.363,406,3.363,407,3.363,408,3.363,409,3.363]],["title/miscellaneous/enumerations.html",[410,1.108,411,3.12]],["body/miscellaneous/enumerations.html",[7,0.751,11,0.033,55,0.025,56,0.025,140,2.825,142,2.442,205,3.603,206,3.603,221,1.738,222,1.576,280,3.22,305,4.169,318,2.442,368,3.725,410,1.434,411,2.825,412,4.49,413,3.405,414,3.405,415,3.405,416,3.405,417,3.405,418,3.405,419,3.405,420,3.405,421,3.405,422,3.405,423,3.405,424,3.405]],["title/miscellaneous/functions.html",[410,1.108,425,3.12]],["body/miscellaneous/functions.html",[7,0.964,11,0.032,23,1.532,55,0.029,56,0.029,95,3.135,378,3.626,380,4.676,410,1.84,425,3.626,426,4.371]],["title/index.html",[7,0.58,427,2.631,428,2.631]],["body/index.html",[4,0.335,11,0.034,14,1.893,55,0.021,56,0.021,88,1.744,98,1.893,121,2.189,310,2.189,370,1.893,429,2.639,430,2.639,431,3.769,432,2.639,433,2.639,434,2.639,435,2.639,436,2.639,437,2.639,438,4.396,439,2.639,440,2.639,441,2.639,442,5.429,443,2.639,444,2.639,445,5.274,446,2.639,447,2.639,448,3.769,449,2.639,450,2.639,451,2.639,452,2.639,453,3.769,454,2.639,455,2.639,456,2.639,457,3.769,458,3.769,459,2.639,460,2.639,461,2.639,462,2.639,463,2.639,464,2.189,465,2.639,466,2.639,467,2.639,468,2.639,469,2.639,470,2.639,471,2.639,472,2.639,473,2.639,474,2.189,475,2.639,476,2.639,477,2.639,478,2.639,479,2.639,480,2.639,481,2.189]],["title/modules.html",[59,2.405]],["body/modules.html",[11,0.029,55,0.029,56,0.029,58,2.475,59,2.475,105,2.768,464,4.36,482,5.256,483,5.256,484,5.256]],["title/overview.html",[485,3.523]],["body/overview.html",[2,2.018,11,0.032,28,2.377,55,0.026,56,0.026,58,3.19,59,2.018,60,2.619,61,2.955,62,2.955,63,3.317,64,2.555,65,2.555,82,2.256,97,2.622,105,3.656,106,2.955,107,2.955,195,0.95,485,2.955,486,4.625,487,3.563,488,3.563]],["title/properties.html",[216,2.382,389,2.183]],["body/properties.html",[11,0.034,14,3.135,43,3.626,55,0.029,56,0.029,216,2.768,474,3.626,481,3.626,489,4.371,490,4.371]],["title/miscellaneous/typealiases.html",[410,1.108,491,3.761]],["body/miscellaneous/typealiases.html",[7,0.941,11,0.029,55,0.029,56,0.029,132,1.638,196,1.638,268,2.702,269,3.281,270,3.715,276,4.297,277,3.54,410,1.797,492,4.267,493,4.267]],["title/miscellaneous/variables.html",[410,1.108,494,3.12]],["body/miscellaneous/variables.html",[3,0.436,7,0.755,11,0.034,55,0.025,56,0.025,124,2.856,192,1.586,305,2.458,382,2.843,383,3.74,410,1.443,494,2.843,495,3.427,496,3.427,497,3.427,498,4.509,499,3.427,500,3.427,501,3.427,502,3.427,503,3.427,504,3.427,505,3.427,506,3.427,507,3.427,508,3.427,509,3.427,510,3.427,511,3.427,512,3.427,513,3.427,514,3.427,515,3.427,516,3.427,517,3.427]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["0.1.13",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["1.1.19",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":488,"title":{},"body":{"overview.html":{}}}],["2",{"_index":486,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["3",{"_index":487,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":290,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["4.6.2",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["500000",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":139,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6.2.1",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":492,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":205,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":465,"title":{},"body":{"index.html":{}}}],["api",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["api.log",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apidescription",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["apigroup",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["apiname",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["apiresponse",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccess",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('helloworld",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apiversion",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":98,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"index.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":437,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":58,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":85,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":105,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":97,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":303,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":249,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["async",{"_index":114,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["author",{"_index":474,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":466,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":330,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["bootstrap",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":484,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":482,"title":{},"body":{"modules.html":{}}}],["building",{"_index":432,"title":{},"body":{"index.html":{}}}],["catch",{"_index":185,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":248,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["category",{"_index":424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["characters",{"_index":291,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["class",{"_index":35,"title":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":195,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"overview.html":{}}}],["cleardatabasetest",{"_index":90,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":106,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":108,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":107,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["column",{"_index":351,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["column({type",{"_index":338,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["compodoc/compodoc",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["config/winston",{"_index":237,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":190,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["const",{"_index":239,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{}}}],["constraintmap",{"_index":276,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":282,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":285,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["constructor(errors",{"_index":271,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(localisation",{"_index":219,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{}}}],["constructor(public",{"_index":225,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["contain",{"_index":289,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["coverage",{"_index":370,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":339,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":331,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtimestamp",{"_index":334,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":117,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ctx",{"_index":255,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":258,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":257,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["current_timestamp",{"_index":346,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["custom.event",{"_index":227,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":215,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":220,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:2",{"_index":224,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["database",{"_index":93,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{}}}],["databaseconfiguration",{"_index":69,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":337,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date().toisostring",{"_index":265,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":354,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["dd/mm/yyyy",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["default",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["deleted_at",{"_index":342,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":332,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletetimestamp",{"_index":335,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["dependencies",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":173,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["development",{"_index":444,"title":{},"body":{"index.html":{}}}],["dirname",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":307,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["documentation",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["duplicate_category_name",{"_index":423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicateemailexception",{"_index":194,"title":{"classes/DuplicateEmailException.html":{}},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":208,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["e2e",{"_index":454,"title":{},"body":{"index.html":{}}}],["e2e.controller",{"_index":110,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":89,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:11",{"_index":94,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":109,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":99,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":113,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:5",{"_index":115,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["efficient",{"_index":433,"title":{},"body":{"index.html":{}}}],["email",{"_index":417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["email.exception.ts",{"_index":198,"title":{},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["email.exception.ts:3",{"_index":202,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["entities",{"_index":149,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity.exception.ts",{"_index":270,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":273,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":329,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":343,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":348,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":350,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":349,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":340,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":347,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":180,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":328,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":151,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enumerations",{"_index":411,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":102,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":297,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":304,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":87,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["error",{"_index":186,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["error('node_env",{"_index":193,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error.constraints",{"_index":283,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errorcustomevent",{"_index":212,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorcustomeventhandler",{"_index":226,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":244,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errors",{"_index":274,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":281,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":306,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["eslint/no",{"_index":311,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":233,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler",{"_index":235,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":238,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["example",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["exception",{"_index":251,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":246,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":250,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":260,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":197,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":268,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/no",{"_index":317,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":358,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":364,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":247,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exists",{"_index":206,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["express",{"_index":253,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":199,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["extra",{"_index":146,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["false",{"_index":148,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["filename",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":368,"title":{},"body":{"classes/UserNotFoundException.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception.ts",{"_index":365,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":366,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["framework",{"_index":431,"title":{},"body":{"index.html":{}}}],["function",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":425,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/api/test/clear",{"_index":103,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":427,"title":{"index.html":{}},"body":{}}],["grow",{"_index":461,"title":{},"body":{"index.html":{}}}],["handle",{"_index":230,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handle(event",{"_index":231,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts",{"_index":228,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["handler.ts:8",{"_index":232,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler/error",{"_index":214,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["hello",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["here",{"_index":471,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":134,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":256,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http/1.1",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode(200",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception",{"_index":200,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":314,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["https://nestjs.com",{"_index":478,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":203,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":207,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["httpstatus.forbidden",{"_index":315,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":261,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":369,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["httpstatus.unauthorized",{"_index":362,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["identifier",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":229,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["implements",{"_index":127,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":81,"title":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["injectables",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"overview.html":{}}}],["installation",{"_index":441,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":443,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":259,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["invalid",{"_index":280,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidparameterentityexception",{"_index":267,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{}}}],["invalidpasswordexception",{"_index":286,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["isglobal",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["istestenvironmentpipe",{"_index":100,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":92,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["join",{"_index":121,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"index.html":{}}}],["join(__dirname",{"_index":150,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["json.stringify(info.message",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":475,"title":{},"body":{"index.html":{}}}],["letter",{"_index":294,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["license",{"_index":481,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":458,"title":{},"body":{"index.html":{}}}],["line",{"_index":309,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["localisation",{"_index":218,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["logger",{"_index":124,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger(event.localisation",{"_index":241,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.config",{"_index":126,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["logger.config.ts",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":187,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":183,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error(event",{"_index":243,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.info('node_env",{"_index":131,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":240,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger_console.error(event.error",{"_index":242,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logging",{"_index":154,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logs",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowercase",{"_index":295,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["matching",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":279,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["metadata",{"_index":302,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["miscellaneous",{"_index":410,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":457,"title":{},"body":{"index.html":{}}}],["mode",{"_index":448,"title":{},"body":{"index.html":{}}}],["module",{"_index":57,"title":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{}}}],["modules",{"_index":59,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":470,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":476,"title":{},"body":{"index.html":{}}}],["name",{"_index":222,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"miscellaneous/enumerations.html":{}}}],["nest",{"_index":438,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":480,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":322,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/cqrs",{"_index":236,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["never",{"_index":301,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":192,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":308,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["no_user_trace",{"_index":420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":430,"title":{},"body":{"index.html":{}}}],["nousertraceexception",{"_index":316,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":442,"title":{},"body":{"index.html":{}}}],["null",{"_index":341,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["object.keys(constraints).map(key",{"_index":284,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occurred",{"_index":188,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["one",{"_index":292,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onupdate",{"_index":345,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["open",{"_index":459,"title":{},"body":{"index.html":{}}}],["optional",{"_index":223,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["overview",{"_index":485,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":389,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameter",{"_index":269,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":221,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":176,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":159,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":138,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":167,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["password",{"_index":142,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/InvalidPasswordException.html":{},"miscellaneous/enumerations.html":{}}}],["password.exception.ts",{"_index":287,"title":{},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":288,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["path",{"_index":122,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["pg",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["pipetransform",{"_index":298,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["please",{"_index":468,"title":{},"body":{"index.html":{}}}],["port",{"_index":136,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgres",{"_index":133,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["pprod",{"_index":156,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process",{"_index":123,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.node_env",{"_index":129,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":179,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":162,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":144,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":170,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":174,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":157,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":135,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":165,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":181,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":164,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":155,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":172,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":178,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":161,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":143,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":169,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":175,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":158,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":137,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":166,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":182,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":163,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":153,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":171,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":177,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":160,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":141,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":168,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prod",{"_index":130,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["production",{"_index":450,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":429,"title":{},"body":{"index.html":{}}}],["project",{"_index":460,"title":{},"body":{"index.html":{}}}],["promise",{"_index":95,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":216,"title":{"properties.html":{}},"body":{"classes/ErrorCustomEvent.html":{},"classes/TimestampEntityExtendEntity.html":{},"properties.html":{}}}],["provided",{"_index":325,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{}}}],["public",{"_index":217,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["read",{"_index":469,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"classes/ErrorCustomEvent.html":{}}}],["record",{"_index":277,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["reflect",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["rejectunauthorized",{"_index":147,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["repository",{"_index":440,"title":{},"body":{"index.html":{}}}],["request",{"_index":252,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts",{"_index":359,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":360,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.url",{"_index":266,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["response",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"classes/ErrorExceptionFilter.html":{}}}],["response.status(httpstatus).json",{"_index":262,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["results",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"miscellaneous/functions.html":{}}}],["run",{"_index":445,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":320,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":434,"title":{},"body":{"index.html":{}}}],["server",{"_index":435,"title":{},"body":{"index.html":{}}}],["set",{"_index":184,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["side",{"_index":436,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"index.html":{}}}],["sponsors",{"_index":463,"title":{},"body":{"index.html":{}}}],["src/.../errorenum.ts",{"_index":413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":493,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../winston",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:28",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":111,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/util/config/database.configuration.ts",{"_index":116,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:9",{"_index":118,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":196,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":213,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":245,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":327,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/pipe/is",{"_index":101,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":145,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start",{"_index":446,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":449,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":451,"title":{},"body":{"index.html":{}}}],["started",{"_index":428,"title":{"index.html":{}},"body":{}}],["starter",{"_index":439,"title":{},"body":{"index.html":{}}}],["statements",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"classes/InvalidParameterEntityException.html":{}}}],["statuscode",{"_index":263,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["stay",{"_index":472,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ErrorCustomEvent.html":{}}}],["success",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["super",{"_index":278,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["super('email",{"_index":204,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["super('unauthorized",{"_index":361,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":367,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":211,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":323,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["support",{"_index":464,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":483,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":152,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":88,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{},"index.html":{}}}],["test/test",{"_index":86,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["test:covsupport",{"_index":456,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":455,"title":{},"body":{"index.html":{}}}],["tests",{"_index":453,"title":{},"body":{"index.html":{}}}],["text/html",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["thanks",{"_index":462,"title":{},"body":{"index.html":{}}}],["this.appservice.cleardatabasetest",{"_index":104,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["this.createdat",{"_index":353,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.deletedat",{"_index":356,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.updatedat",{"_index":355,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["throw",{"_index":191,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["timestamp",{"_index":264,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":326,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["touch",{"_index":473,"title":{},"body":{"index.html":{}}}],["trace",{"_index":324,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":319,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":321,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transform",{"_index":299,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":300,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transports",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["try",{"_index":128,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["trying",{"_index":189,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["twitter",{"_index":479,"title":{},"body":{"index.html":{}}}],["type",{"_index":132,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":491,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":352,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{}}}],["typeormmodule.forfeature",{"_index":112,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["typeormmodule.forrootasync",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":119,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":120,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typescript",{"_index":310,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"index.html":{}}}],["ui",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":357,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":452,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":254,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["unlicensed",{"_index":490,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":312,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["updated_at",{"_index":344,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":333,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updatetimestamp",{"_index":336,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["uppercase",{"_index":293,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["useclass",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":96,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":91,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":318,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user_not_found",{"_index":422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["username",{"_index":140,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception.ts",{"_index":209,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":210,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["usernotfoundexception",{"_index":363,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["usersenderid",{"_index":421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util/config/database.configuration",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["validationerror",{"_index":272,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":275,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"dependencies.html":{}}}],["value",{"_index":305,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":494,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":313,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["version",{"_index":489,"title":{},"body":{"properties.html":{}}}],["void",{"_index":234,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["watch",{"_index":447,"title":{},"body":{"index.html":{}}}],["website",{"_index":477,"title":{},"body":{"index.html":{}}}],["winston",{"_index":125,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":467,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:28\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ConfigModule.forRoot({ isGlobal: true }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\n\n@Module({\n  imports: [AppModule, TypeOrmModule.forFeature([])],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppTestE2eService {\n  async clearDatabaseTest(): Promise {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateEmailException.html":{"url":"classes/DuplicateEmailException.html","title":"class - DuplicateEmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateEmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/duplicate-email.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/duplicate-email.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateEmailException extends HttpException {\n  constructor() {\n    super('Email already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localisation: string, error: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localisation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(public readonly localisation: string, public readonly error: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { logger } from '../../config/winston-logger.config';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  handle(event: ErrorCustomEvent): void {\n    const logger_console = new Logger(event.localisation);\n    logger_console.error(event.error);\n\n    logger.error(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/duplicate-email.exception.ts\n            \n            class\n            DuplicateEmailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
