var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddConnectedCardCommand.html",[0,0.356,1,4.697]],["body/classes/AddConnectedCardCommand.html",[0,0.449,1,7.508,2,0.312,3,0.04,4,0.047,5,0.047,6,8.675,7,6.31,8,4.524,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,14,6.68,15,0.312,16,1.726,17,2.059,18,0.182,19,4.792,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,26,4.792,27,5.343,28,0.047,29,1.649,30,0.002,31,0.002]],["title/classes/AddConnectedCardCommandHandler.html",[0,0.356,32,4.697]],["body/classes/AddConnectedCardCommandHandler.html",[0,0.27,1,6.983,2,0.188,3,0.024,4,0.028,5,0.028,7,6.047,9,0.104,12,0.501,14,2.885,15,0.279,18,0.117,20,0.291,21,0.003,22,0.175,23,0.165,24,0.264,28,0.028,30,0.002,31,0.002,32,6.309,33,6.309,34,5.339,35,0.971,36,1.348,37,3.034,38,1.114,39,1.472,40,1.903,41,2.334,42,3.069,43,6.309,44,3.182,45,3.089,46,3.403,47,2.544,48,3.217,49,1.605,50,0.75,51,1.225,52,0.774,53,1.713,54,0.819,55,3.561,56,1.351,57,1.219,58,3.384,59,2.291,60,2.359,61,1.572,62,1.541,63,1.556,64,1.097,65,4.044,66,3.818,67,2.8,68,5.004,69,3.089,70,2.251,71,4.208,72,2.291,73,2.055,74,3.561,75,1.4,76,2.243,77,5.67,78,1.538,79,3.76,80,2.664,81,2.73,82,5.289,83,1.218,84,3.37,85,2.625,86,2.766,87,2.665,88,5.339,89,3.818,90,2.335,91,6.249,92,3.818,93,3.818,94,4.208,95,6.249,96,6.249,97,4.158,98,4.208,99,3.818,100,4.208,101,3.561,102,3.561,103,4.208,104,2.265,105,4.208,106,4.208,107,2.8,108,3.818,109,2.158,110,2.177,111,1.622,112,1.44,113,1.962]],["title/classes/AddConnectedCardEvent.html",[0,0.356,68,4.444]],["body/classes/AddConnectedCardEvent.html",[0,0.385,2,0.268,3,0.034,4,0.04,5,0.04,7,6.624,9,0.148,10,0.911,11,1.748,12,0.751,14,6.204,15,0.268,16,1.562,17,1.96,18,0.188,20,0.279,21,0.003,22,0.168,23,0.266,24,0.253,25,1.201,28,0.04,29,1.415,30,0.002,31,0.002,68,6.429,83,1.478,109,3.338,114,8.775,115,3.882,116,2.475,117,1.996,118,3.882,119,3.991,120,3.882,121,2.6,122,2.91,123,6.137,124,4.404,125,3.882]],["title/classes/AddConnectedCardEventHandler.html",[0,0.356,126,4.697]],["body/classes/AddConnectedCardEventHandler.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,7,6.267,9,0.153,12,0.416,15,0.277,18,0.153,20,0.382,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.428,36,1.769,38,1.462,39,1.815,50,1.104,51,1.607,52,0.725,54,1.205,68,7.837,69,4.546,70,5.236,78,1.278,83,1.011,109,2.832,116,1.694,117,1.366,126,6.94,127,7.781,128,3.7,129,3.3,130,2.549,131,3.613,132,2.549,133,3.3,134,2.313,135,2.361,136,2.492,137,2.099,138,2.18,139,2.201,140,6.191,141,1.97,142,2.549,143,2.578,144,2.578,145,2.244,146,4.244,147,5.618]],["title/classes/AddConnectedCardRequest.html",[0,0.356,148,5.035]],["body/classes/AddConnectedCardRequest.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,7,6.31,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,14,6.68,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,148,8.049,149,9.3,150,5.132,151,5.598,152,5.598,153,5.132]],["title/classes/AddSavedCardCommand.html",[0,0.356,154,4.697]],["body/classes/AddSavedCardCommand.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,6,8.675,8,4.524,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,15,0.312,16,1.726,17,2.059,18,0.182,19,4.792,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,26,4.792,27,5.343,28,0.047,29,1.649,30,0.002,31,0.002,154,7.508,155,6.034,156,4.884]],["title/classes/AddSavedCardCommandHandler.html",[0,0.356,157,4.697]],["body/classes/AddSavedCardCommandHandler.html",[0,0.288,2,0.2,3,0.025,4,0.03,5,0.03,9,0.111,12,0.52,13,2.091,15,0.293,18,0.122,20,0.305,21,0.003,22,0.184,23,0.173,24,0.277,28,0.03,30,0.002,31,0.002,33,6.548,34,5.506,35,1.034,36,1.413,37,3.149,38,1.168,39,1.528,40,1.995,41,2.487,42,3.132,44,3.247,45,3.292,46,3.566,47,2.666,48,3.428,49,1.71,50,0.8,51,1.284,52,0.788,53,1.825,54,0.873,55,3.796,56,1.439,57,1.299,58,2.036,59,2.442,60,2.472,61,1.675,62,1.642,63,1.658,64,1.17,69,3.292,70,2.399,72,2.442,73,2.133,75,1.492,76,1.61,78,1.596,79,3.94,80,2.792,81,1.959,83,1.07,84,5.245,85,2.706,86,2.548,87,2.564,88,4.239,90,2.447,97,2.984,104,2.374,107,2.984,109,1.549,110,1.31,111,1.728,112,1.534,154,7.2,155,5.563,157,6.548,158,4.213,159,5.245,160,3.38,161,2.535,162,4.484,163,2.442,164,2.698,165,3.428,166,2.761,167,5.245,168,4.069,169,4.484,170,3.591,171,4.484,172,4.069,173,4.069,174,4.069,175,3.176,176,2.828,177,2.984]],["title/classes/AddSavedCardEvent.html",[0,0.356,159,4.444]],["body/classes/AddSavedCardEvent.html",[0,0.383,2,0.267,3,0.034,4,0.04,5,0.04,9,0.147,10,0.907,11,1.746,12,0.751,13,4.207,15,0.267,16,1.556,17,1.957,18,0.188,20,0.278,21,0.003,22,0.167,23,0.265,24,0.252,25,1.2,28,0.04,29,1.407,30,0.002,31,0.002,109,3.33,112,2.736,114,8.761,115,3.86,116,2.468,117,1.99,118,3.86,119,3.969,120,3.86,121,2.59,122,2.899,123,6.114,124,4.379,125,3.86,155,6.326,156,4.522,159,6.405]],["title/classes/AddSavedCardEventHandler.html",[0,0.356,178,4.697]],["body/classes/AddSavedCardEventHandler.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,9,0.153,12,0.416,15,0.277,18,0.153,20,0.382,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.428,36,1.769,38,1.462,39,1.815,50,1.104,51,1.607,52,0.725,54,1.205,69,4.546,70,5.236,78,1.278,83,1.011,109,2.138,116,1.694,117,1.366,127,7.781,128,3.7,129,3.3,130,2.549,131,3.613,132,2.549,133,3.3,134,2.313,135,2.361,136,2.492,137,2.099,138,2.18,139,2.201,141,1.97,142,2.549,143,2.578,144,2.578,145,2.244,155,5.994,159,7.837,178,6.94,179,6.191,180,4.244,181,2.201,182,4.958]],["title/classes/AddSavedCardRequest.html",[0,0.356,183,5.035]],["body/classes/AddSavedCardRequest.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,149,9.3,150,5.132,151,5.598,152,5.598,153,5.132,155,6.034,156,4.884,183,8.049]],["title/classes/AddViewCountCardCommand.html",[0,0.356,184,4.697]],["body/classes/AddViewCountCardCommand.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,6,8.429,8,4.743,9,0.181,10,1.037,11,1.556,12,0.669,13,4.643,15,0.328,16,1.778,17,2.088,18,0.171,19,5.024,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,25,1.02,26,5.024,28,0.049,29,1.729,30,0.002,31,0.002,184,7.735,185,7.613,186,7.613]],["title/classes/AddViewCountCardCommandHandler.html",[0,0.356,187,4.697]],["body/classes/AddViewCountCardCommandHandler.html",[0,0.318,2,0.222,3,0.028,4,0.033,5,0.033,9,0.122,12,0.473,13,2.311,15,0.315,18,0.131,20,0.328,21,0.003,22,0.198,23,0.186,24,0.297,28,0.033,30,0.002,31,0.002,33,6.928,34,5.767,35,1.144,36,1.518,37,3.332,38,1.255,39,1.616,40,2.144,41,2.75,42,2.86,44,3.346,46,3.833,47,2.865,49,1.891,50,0.884,51,1.38,52,0.792,53,2.018,54,0.965,55,4.196,56,1.591,57,1.436,58,2.25,59,2.7,60,2.657,61,1.852,62,1.815,63,1.833,64,1.293,69,3.64,70,2.652,72,2.7,73,1.941,75,1.65,78,1.453,79,4.235,80,2.114,83,0.81,84,5.637,85,2.604,86,2.108,87,2.418,88,3.209,90,1.852,104,2.552,107,3.299,109,1.712,110,1.448,111,1.911,112,1.696,168,4.498,172,4.498,174,4.498,175,3.511,176,3.127,177,3.299,184,7.542,185,7.194,186,7.194,187,6.928,188,2.25,189,2.652,190,5.637,191,4.958,192,3.64,193,4.958]],["title/classes/AddViewCountCardEvent.html",[0,0.356,190,4.444]],["body/classes/AddViewCountCardEvent.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,10,0.932,11,1.715,12,0.737,13,4.292,15,0.278,16,1.599,17,1.983,18,0.183,20,0.289,21,0.003,22,0.174,23,0.258,24,0.262,25,1.169,28,0.041,29,1.465,30,0.002,31,0.002,109,2.838,114,8.625,115,4.019,116,2.518,117,2.031,118,4.019,120,4.019,121,2.661,122,2.978,123,6.28,124,4.559,125,4.019,185,8.164,186,8.164,190,6.579]],["title/classes/AddViewCountCardEventHandler.html",[0,0.356,194,4.697]],["body/classes/AddViewCountCardEventHandler.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,9,0.153,12,0.416,15,0.277,18,0.153,20,0.382,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.428,36,1.769,38,1.462,39,1.815,50,1.104,51,1.607,52,0.725,54,1.205,69,4.546,70,5.236,78,1.278,83,1.011,109,2.138,116,1.694,117,1.366,127,7.781,128,3.7,129,3.3,130,2.549,131,3.613,132,2.549,133,3.3,135,2.361,136,2.492,138,2.18,139,2.201,141,1.97,142,2.549,143,2.578,144,2.578,145,2.244,180,4.244,185,7.481,186,7.481,190,7.837,194,6.94,195,3.725,196,2.848,197,6.191,198,6.191]],["title/entities/AddressEntity.html",[199,2.073,200,3.804]],["body/entities/AddressEntity.html",[0,0.33,3,0.019,4,0.022,5,0.022,9,0.081,10,0.584,18,0.19,21,0.003,22,0.278,23,0.298,25,1.158,28,0.022,30,0.001,31,0.001,52,0.57,64,0.852,83,1.04,121,1.667,199,1.923,200,3.528,201,1.565,202,5.231,203,3.265,204,7.135,205,4.676,206,7.135,207,2.749,208,2.969,209,6.369,210,7.864,211,7.864,212,7.864,213,7.864,214,2.783,215,1.728,216,6.369,217,4.002,218,6.651,219,8.139,220,6.257,221,7.4,222,3.265,223,5.269,224,3.168,225,5.146,226,5.026,227,3.817,228,4.678,229,4.559,230,3.265,231,3.265,232,3.52,233,2.963,234,4.356,235,6.386,236,3.265,237,2.963,238,4.356,239,3.265,240,2.662,241,3.265,242,3.568,243,5.146,244,3.265,245,3.265,246,3.265,247,3.265,248,3.265,249,2.963,250,4.356,251,3.265,252,3.186,253,5.146,254,3.265,255,4.67,256,3.265,257,4.822,258,2.662,259,2.707,260,3.832,261,1.662,262,2.662,263,2.615,264,1.662,265,6.028,266,7.255,267,1.612,268,2.313,269,7.002]],["title/controllers/ApiLandingPageController.html",[270,2.919,271,4.697]],["body/controllers/ApiLandingPageController.html",[0,0.346,3,0.031,4,0.036,5,0.036,9,0.133,12,0.362,18,0.139,20,0.251,21,0.003,22,0.151,23,0.226,24,0.227,25,0.956,28,0.036,30,0.002,31,0.002,38,1.33,39,1.982,50,1.33,51,1.812,52,0.791,137,2.529,141,1.714,145,1.953,196,3.938,217,2.938,270,2.833,271,6.316,272,2.659,273,6.349,274,6.856,275,5.387,276,3.693,277,6.856,278,6.771,279,8.385,280,4.888,281,7.462,282,5.387,283,3.371,284,5.387,285,7.462,286,5.387,287,4.195,288,5.387,289,5.387,290,5.387,291,3.487,292,2.882,293,3.815,294,1.627,295,6.544,296,4.888,297,8.561,298,8.561,299,3.584,300,3.045,301,6.856,302,4.888,303,3.693,304,3.955,305,2.882,306,3.955,307,2.988,308,4.888,309,5.387,310,5.387,311,7.462,312,5.387,313,5.285,314,2.353,315,5.387,316,5.387,317,5.387,318,5.387]],["title/modules/ApiLandingPageModule.html",[117,1.224,319,4.242]],["body/modules/ApiLandingPageModule.html",[0,0.302,3,0.027,4,0.031,5,0.031,21,0.003,22,0.223,28,0.031,30,0.002,31,0.002,52,0.859,54,0.915,61,1.757,62,1.722,63,1.74,112,3.155,117,1.495,131,3.318,137,3.126,138,2.387,139,1.672,196,2.164,271,6.728,272,3.347,273,5.122,274,3.767,294,1.421,295,7.343,296,4.268,319,8.336,320,2.659,321,3.833,322,4.268,323,4.268,324,4.268,325,5.78,326,6.803,327,6.059,328,4.079,329,2.83,330,2.83,331,4.704,332,4.079,333,4.079,334,3.045,335,5.631,336,2.659,337,4.276,338,3.045,339,4.704,340,4.978,341,5.738,342,3.453,343,3.225,344,5.738,345,3.453,346,3.453,347,5.738,348,3.453,349,3.981,350,4.276,351,3.13,352,2.967,353,4.268,354,3.596,355,3.045,356,3.045,357,5.145,358,5.145,359,5.014,360,3.767,361,3.767,362,3.767,363,3.981,364,3.981,365,4.704,366,4.268,367,4.268]],["title/injectables/ApiLandingPageService.html",[295,4.242,368,2.162]],["body/injectables/ApiLandingPageService.html",[0,0.369,3,0.033,4,0.038,5,0.038,9,0.142,12,0.524,15,0.257,18,0.165,20,0.364,21,0.003,22,0.219,23,0.206,24,0.33,25,0.989,28,0.038,30,0.002,31,0.002,38,1.392,39,2.022,50,1.392,51,1.862,52,0.783,54,1.12,73,1.586,78,1.611,87,1.561,141,1.83,196,4.37,273,6.274,274,7.609,278,7.083,279,8.621,280,7.083,287,4.022,294,1.738,295,5.967,301,4.608,302,5.221,314,1.814,343,3.944,349,4.87,368,3.041,369,2.929,370,5.753,371,4.075,372,7.021,373,7.181,374,5.753,375,5.753,376,5.753,377,5.731,378,4.398,379,6.251,380,4.398,381,4.075,382,4.224]],["title/modules/ApiLogModule.html",[117,1.224,325,3.339]],["body/modules/ApiLogModule.html",[0,0.406,3,0.036,4,0.042,5,0.042,21,0.003,22,0.177,28,0.042,30,0.002,31,0.002,52,0.829,54,1.23,61,2.362,62,2.314,63,2.338,112,2.844,117,1.833,131,3.634,137,2.143,138,2.225,139,2.247,196,2.907,272,3.12,294,1.909,320,3.573,321,4.699,325,6.738,328,5.001,329,3.803,330,3.803,332,5.001,333,5.001,334,4.091,335,5.38,336,3.573,337,5.243,340,6.103,350,5.243,352,3.987,355,4.091,356,4.091,357,4.091,358,4.091,359,3.987,360,5.062,361,5.062,383,6.321,384,6.321,385,6.321,386,6.321,387,4.641]],["title/injectables/ApiLogService.html",[131,1.917,368,2.162]],["body/injectables/ApiLogService.html",[0,0.36,3,0.032,4,0.038,5,0.038,9,0.139,12,0.377,15,0.251,18,0.163,20,0.407,21,0.003,22,0.246,23,0.231,24,0.369,28,0.038,30,0.002,31,0.002,38,1.369,39,2.008,50,1.369,51,1.844,52,0.776,54,1.093,76,2.016,78,1.584,87,2.374,116,2.1,117,1.239,131,2.652,138,3.311,141,1.787,145,2.036,196,4.326,294,1.696,338,3.635,352,3.542,368,2.991,369,2.859,371,3.977,372,6.971,381,5.438,388,5.616,389,7.678,390,7.678,391,5.616,392,7.678,393,7.506,394,5.616,395,5.998,396,7.678,397,7.961,398,5.616,399,5.264,400,5.87,401,7.007,402,4.293,403,5.616,404,5.616]],["title/controllers/ApiMailController.html",[270,2.919,405,4.697]],["body/controllers/ApiMailController.html",[0,0.411,3,0.036,4,0.043,5,0.043,9,0.158,12,0.43,18,0.119,20,0.298,21,0.003,22,0.18,23,0.169,24,0.27,28,0.043,30,0.002,31,0.002,38,1.494,39,1.845,50,1.141,51,1.642,52,0.832,78,1.32,137,2.84,141,2.035,145,2.319,196,3.854,217,2.519,270,3.365,272,3.158,276,4.386,287,3.803,291,4.141,293,4.531,294,1.932,299,4.257,300,3.616,303,4.386,304,4.697,305,3.423,306,4.697,307,3.548,308,5.805,313,4.531,405,7.091,406,6.71,407,6.398,408,7.602,409,5.805,410,8.455,411,6.398,412,6.398,413,5.934,414,7.142,415,5.805,416,5.805,417,6.398,418,4.891,419,6.398,420,6.398]],["title/modules/ApiMailModule.html",[117,1.224,421,4.242]],["body/modules/ApiMailModule.html",[0,0.312,3,0.028,4,0.033,5,0.033,21,0.003,22,0.195,28,0.033,30,0.002,31,0.002,52,0.87,54,0.947,57,1.409,61,1.818,62,1.782,63,1.8,112,2.772,117,1.532,131,3.356,137,3.167,138,2.446,139,1.73,196,2.238,252,1.856,264,2.477,272,3.429,294,1.47,320,2.751,321,3.927,325,5.846,326,6.881,327,6.129,328,4.18,329,2.928,330,2.928,332,4.18,333,4.18,334,3.15,335,5.244,336,2.751,337,4.382,338,3.15,340,5.1,343,3.336,346,3.573,350,4.382,351,3.238,352,3.069,353,4.416,354,3.72,355,3.15,356,3.15,357,4.496,358,4.496,359,4.382,360,3.897,361,3.897,362,3.897,363,4.119,364,4.119,405,6.857,406,3.897,414,7.428,415,4.416,421,8.383,422,4.416,423,4.416,424,4.866,425,4.866,426,5.88,427,4.866,428,5.88,429,4.866,430,4.866,431,3.15,432,3.446]],["title/injectables/ApiMailService.html",[368,2.162,414,4.242]],["body/injectables/ApiMailService.html",[0,0.409,3,0.036,4,0.043,5,0.043,9,0.158,12,0.562,15,0.285,18,0.156,20,0.389,21,0.003,22,0.235,23,0.221,24,0.353,28,0.043,30,0.002,31,0.002,38,1.491,39,1.842,50,1.137,51,1.639,52,0.78,54,1.241,73,1.759,78,1.316,87,1.731,141,2.029,196,4.291,294,1.926,343,4.373,368,3.257,369,3.247,371,4.517,372,7.231,373,7.369,381,4.517,406,7.471,408,7.587,409,7.587,410,8.448,414,6.392,416,5.788,433,6.378,434,6.378,435,6.378,436,6.696,437,6.378]],["title/controllers/AppController.html",[270,2.919,438,4.697]],["body/controllers/AppController.html",[0,0.38,3,0.034,4,0.04,5,0.04,9,0.146,12,0.397,18,0.11,21,0.003,25,1.003,28,0.04,30,0.002,31,0.002,38,1.418,50,1.055,52,0.708,137,2.005,141,1.882,217,2.329,270,4.183,272,2.919,291,3.828,294,1.786,299,3.935,300,3.343,314,1.865,418,4.521,438,6.731,439,5.914,440,9.098,441,5.914,442,8.133,443,4.896,444,9.732,445,9.732,446,6.08,447,3.221,448,5.914,449,7.953,450,7.953,451,6.597,452,5.367,453,6.731,454,5.914,455,5.914,456,4.521,457,5.006,458,5.914,459,4.521,460,5.006,461,5.006,462,5.367,463,8.153,464,5.914,465,5.914,466,3.73,467,3.28,468,4.736,469,5.914]],["title/modules/AppModule.html",[117,1.224,470,4.242]],["body/modules/AppModule.html",[0,0.237,3,0.021,4,0.025,5,0.025,18,0.069,20,0.172,21,0.003,22,0.193,23,0.149,24,0.156,28,0.025,30,0.001,31,0.001,36,0.795,38,0.657,50,0.657,52,0.866,54,0.717,57,1.068,117,1.835,131,3.033,138,1.991,139,1.311,227,1.553,272,2.792,273,3.329,274,2.953,294,1.113,314,1.163,319,6.713,320,2.084,321,3.197,325,5.284,326,6.219,328,3.403,329,2.218,330,2.218,332,3.403,333,3.403,334,2.386,335,4.453,336,2.084,337,3.567,338,2.386,355,2.386,356,2.386,357,3.66,358,3.66,359,3.567,362,2.953,406,2.953,421,6.713,431,2.386,438,5.823,451,6.447,452,3.345,470,8.575,471,3.345,472,3.345,473,3.345,474,6.713,475,6.713,476,6.713,477,6.713,478,6.713,479,6.713,480,3.687,481,3.687,482,5.655,483,7.715,484,3.687,485,3.687,486,2.453,487,5.655,488,3.687,489,4.787,490,3.687,491,3.687,492,3.345,493,3.687,494,3.121,495,3.687,496,3.345,497,3.345,498,3.687,499,3.687,500,5.898,501,3.121,502,3.687,503,6.88,504,4.787,505,3.687,506,3.121,507,3.687,508,3.687,509,3.687,510,3.687,511,3.687,512,3.687,513,3.345,514,2.953,515,3.687,516,3.687,517,3.687,518,3.687,519,3.687,520,3.687,521,3.687,522,6.53,523,3.687,524,2.611,525,2.707,526,2.707,527,2.707,528,2.707,529,4.787,530,3.121,531,3.121,532,2.953,533,3.687,534,3.687]],["title/injectables/AppService.html",[368,2.162,451,4.074]],["body/injectables/AppService.html",[0,0.507,3,0.045,4,0.053,5,0.053,9,0.195,18,0.148,21,0.003,25,1.069,28,0.053,30,0.002,31,0.002,38,1.707,50,1.409,52,0.623,294,2.387,314,2.493,368,3.729,369,4.024,440,9.712,444,7.172,445,7.172,451,7.028,535,7.904,536,7.904]],["title/controllers/AppTestE2eController.html",[270,2.919,537,4.697]],["body/controllers/AppTestE2eController.html",[0,0.29,3,0.026,4,0.03,5,0.03,9,0.112,12,0.304,18,0.169,20,0.362,21,0.003,22,0.218,23,0.205,24,0.328,25,0.868,28,0.03,30,0.002,31,0.002,38,1.175,50,1.619,51,2.036,52,0.747,141,1.439,145,1.64,175,4.667,215,2.571,217,3.575,252,1.725,270,3.466,272,2.233,283,1.781,291,2.927,294,1.366,314,2.863,413,3.203,451,3.32,537,5.577,538,8.021,539,8.021,540,8.148,541,4.523,542,7.75,543,5.979,544,6.59,545,8.541,546,6.59,547,10.223,548,4.523,549,4.523,550,4.104,551,6.497,552,4.523,553,4.523,554,4.523,555,7.589,556,4.523,557,4.523,558,4.523,559,6.59,560,5.577,561,4.523,562,4.523,563,4.523,564,2.744,565,4.523,566,5.038,567,4.104,568,4.104,569,8.021,570,4.104,571,4.523,572,3.828,573,3.203,574,3.828,575,3.828,576,4.104,577,4.523,578,4.523,579,4.523,580,4.523,581,4.523,582,3.32,583,4.523,584,4.523,585,4.523,586,6.59,587,4.523,588,4.523,589,4.523]],["title/modules/AppTestE2eModule.html",[117,1.224,590,4.444]],["body/modules/AppTestE2eModule.html",[0,0.29,3,0.026,4,0.03,5,0.03,21,0.003,28,0.03,30,0.002,31,0.002,52,0.9,57,1.307,58,2.986,65,4.258,67,3.003,117,1.451,160,2.875,200,4.51,202,5.588,223,4.15,252,2.509,272,3.248,294,1.363,320,2.551,321,3.719,328,3.959,329,2.715,330,2.715,332,3.959,333,3.959,431,2.921,470,7.239,537,6.572,538,3.82,539,3.82,540,5.7,566,7.239,567,5.97,568,4.095,574,3.82,590,8.024,591,4.095,592,4.095,593,4.513,594,4.513,595,4.513,596,4.513,597,3.45,598,4.51,599,3.45,600,3.313,601,3.82,602,4.15,603,3.614,604,4.66,605,3.614,606,4.83,607,4.378,608,3.82,609,4.51,610,3.45,611,3.313,612,4.66,613,3.82,614,4.51,615,3.45,616,2.921,617,4.258,618,3.45,619,4.51,620,3.614,621,3.248,622,4.095,623,4.66,624,3.82,625,4.095,626,3.52,627,1.88,628,3.003,629,2.503,630,4.83,631,3.614,632,3.614,633,4.15,634,3.614,635,4.378,636,3.45,637,4.66,638,3.45,639,3.614,640,4.513,641,4.095]],["title/injectables/AppTestE2eService.html",[368,2.162,566,4.242]],["body/injectables/AppTestE2eService.html",[0,0.162,3,0.014,4,0.017,5,0.017,9,0.062,12,0.695,15,0.187,18,0.139,20,0.29,21,0.003,22,0.175,23,0.164,24,0.263,25,0.83,28,0.017,30,0.001,31,0.001,38,0.747,39,1.913,42,3.686,43,4.535,46,2.917,50,1.23,51,1.724,52,0.838,56,0.812,57,0.733,58,1.149,64,0.66,65,1.638,67,1.684,72,1.378,73,2.854,74,2.142,78,2.185,83,0.684,109,0.874,158,2.917,160,1.106,163,1.378,181,0.9,200,1.735,202,5.05,205,1.858,215,0.687,223,1.596,227,1.066,252,0.965,268,1.792,287,1.149,294,0.764,314,1.964,368,1.631,369,1.288,538,6.66,539,6.66,540,5.777,542,5.65,543,3.8,550,3.8,551,4.729,564,2.593,566,3.202,572,2.142,573,1.792,574,2.142,597,1.935,598,1.735,599,1.935,600,1.858,601,2.142,602,1.596,603,2.027,604,1.792,605,2.027,606,3.075,607,1.684,608,2.142,609,1.735,610,1.935,611,1.858,612,1.792,613,2.142,614,1.735,615,1.935,616,1.638,617,1.638,618,1.935,619,1.735,620,2.027,621,1.249,622,2.296,623,1.792,624,2.142,625,2.296,626,1.354,627,1.054,628,1.684,629,1.404,630,1.858,631,2.027,632,2.027,633,1.596,634,2.027,635,1.684,636,1.935,637,1.792,638,1.935,639,2.027,642,2.531,643,6.227,644,4.188,645,4.188,646,1.378,647,5.358,648,5.358,649,5.358,650,5.358,651,5.358,652,5.358,653,5.358,654,5.358,655,5.358,656,5.358,657,3.224,658,5.358,659,3.379,660,5.358,661,5.358,662,5.358,663,5.358,664,5.358,665,2.531,666,2.099,667,2.531,668,2.531,669,2.531,670,4.188,671,2.531,672,4.188,673,2.531,674,2.531,675,2.966,676,1.268,677,2.531,678,2.531,679,2.531,680,2.531,681,2.531,682,2.531,683,2.531,684,2.531,685,2.531,686,2.531,687,1.523,688,2.531,689,1.596,690,2.531,691,2.531,692,2.531,693,2.531,694,2.531,695,2.531,696,2.531,697,2.531,698,2.531,699,2.531,700,2.531,701,2.296,702,2.531,703,1.792,704,2.531,705,2.296,706,2.531,707,1.792,708,2.531,709,2.296,710,2.531,711,2.296,712,2.531,713,2.296,714,2.531,715,1.858,716,2.531,717,1.558,718,2.531,719,1.042,720,2.531,721,2.142,722,2.531,723,2.531,724,2.142,725,2.531,726,2.296,727,2.531,728,1.935,729,2.531,730,1.858,731,2.531,732,2.531,733,2.531,734,2.531,735,1.196,736,2.531,737,2.531,738,1.268,739,2.531,740,1.935,741,1.354,742,2.531,743,2.296,744,1.792,745,2.531,746,1.49]],["title/controllers/AuthController.html",[270,2.919,747,4.697]],["body/controllers/AuthController.html",[0,0.21,3,0.019,4,0.022,5,0.022,9,0.081,12,0.346,18,0.156,20,0.389,21,0.003,22,0.235,23,0.231,24,0.353,25,0.712,28,0.022,30,0.001,31,0.001,38,0.919,39,1.955,50,1.49,51,1.777,52,0.81,73,0.902,75,1.715,76,2.597,78,1.493,85,1.639,86,2.166,87,1.963,110,1.505,141,1.041,145,1.186,176,2.063,215,0.887,217,3.292,252,3.001,264,1.665,270,1.72,272,1.614,276,2.242,291,2.117,292,1.75,293,2.316,294,0.988,299,2.176,300,1.849,303,2.242,305,1.75,306,2.401,307,1.814,313,2.316,314,2.636,327,4.021,336,1.849,354,2.5,413,2.316,418,2.5,466,6.334,582,2.401,747,4.361,748,3.271,749,2.316,750,5.152,751,5.152,752,3.472,753,5.152,754,4.675,755,5.152,756,3.271,757,7.112,758,3.271,759,3.271,760,5.883,761,3.271,762,3.271,763,3.271,764,3.271,765,3.271,766,3.271,767,3.271,768,3.271,769,3.271,770,2.968,771,6.694,772,3.271,773,3.271,774,5.152,775,3.271,776,3.1,777,3.753,778,3.271,779,2.968,780,2.968,781,2.968,782,4.681,783,2.768,784,2.506,785,2.401,786,5.106,787,2.768,788,3.271,789,2.968,790,2.5,791,2.176,792,2.619,793,3.271,794,3.271,795,3.271,796,5.152,797,2.619,798,2.968,799,2.968,800,2.176,801,2.968,802,3.271,803,3.271,804,3.271,805,3.271,806,3.271,807,3.271,808,3.271,809,3.271,810,3.271,811,3.271,812,3.271,813,5.152,814,3.271,815,3.271,816,3.271,817,3.271,818,2.968,819,5.152,820,5.152,821,4.126,822,5.152,823,5.152,824,5.785,825,3.271,826,3.271,827,3.271,828,3.271,829,3.271,830,5.152,831,2.968,832,3.271,833,6.375,834,3.271,835,3.271,836,3.271,837,3.271,838,3.271,839,3.271,840,3.271,841,3.271,842,3.271,843,5.152,844,3.271,845,3.271,846,3.271,847,3.271,848,2.768,849,3.271,850,2.768,851,2.5,852,2.013]],["title/modules/AuthModule.html",[117,1.224,474,4.242]],["body/modules/AuthModule.html",[0,0.26,3,0.023,4,0.027,5,0.027,21,0.003,22,0.205,28,0.027,30,0.001,31,0.001,52,0.877,54,0.789,57,1.174,61,1.515,62,1.484,63,1.499,112,2.771,117,1.341,131,3.146,137,2.472,138,2.14,139,1.441,215,1.1,252,1.546,264,2.064,272,3,294,1.225,320,2.292,321,3.436,325,5.481,327,5.746,328,3.657,329,2.439,330,2.439,332,3.657,333,3.657,334,2.624,335,5.242,336,2.292,337,3.834,338,2.624,340,4.462,350,3.834,351,2.698,352,2.557,354,3.099,355,2.624,356,2.624,357,4.719,358,4.719,359,4.599,360,3.247,361,3.247,362,3.247,363,3.432,364,3.432,366,3.679,367,3.679,431,2.624,432,2.871,474,8.396,747,6.171,752,2.208,782,7.64,783,3.432,853,3.679,854,3.679,855,3.679,856,4.054,857,7.295,858,7.295,859,7.295,860,4.054,861,6.078,862,6.078,863,2.779,864,4.054,865,4.054,866,4.054,867,4.054,868,3.432,869,5.145,870,3.432,871,5.145,872,4.054,873,4.054,874,4.054,875,4.054,876,4.868,877,4.054,878,3.247,879,5.145,880,4.054,881,3.679,882,4.868,883,4.054,884,3.679,885,3.679,886,4.054,887,3.679,888,4.054,889,4.054]],["title/injectables/AuthService.html",[368,2.162,782,4.074]],["body/injectables/AuthService.html",[0,0.223,3,0.02,4,0.023,5,0.023,9,0.086,11,1.485,15,0.155,18,0.167,20,0.399,21,0.003,22,0.24,23,0.244,24,0.362,25,1.211,28,0.023,30,0.001,31,0.001,38,0.962,39,1.876,50,1.528,51,1.68,52,0.779,54,0.675,73,1.488,75,1.154,76,3.075,78,1.113,85,1.104,86,1.616,87,1.797,110,1.013,141,1.104,215,0.941,252,1.323,264,1.766,292,1.856,294,1.048,314,2.702,368,2.102,369,1.766,372,6.131,373,6.131,382,3.961,564,3.111,735,1.64,749,3.821,752,1.889,754,4.896,770,4.896,771,6.481,777,5.444,780,3.148,781,3.148,782,3.961,784,1.687,797,2.778,798,3.148,799,3.148,800,3.59,801,3.148,824,6.008,850,2.936,851,2.652,868,2.936,878,2.778,884,6.008,887,4.896,890,3.469,891,7.47,892,5.396,893,5.396,894,5.396,895,4.125,896,3.469,897,8.568,898,3.469,899,3.469,900,5.396,901,3.469,902,5.396,903,5.396,904,3.469,905,5.396,906,3.469,907,3.469,908,5.396,909,5.982,910,3.469,911,3.469,912,5.711,913,2.936,914,2.936,915,2.778,916,3.469,917,2.652,918,5.396,919,2.778,920,2.778,921,3.148,922,3.469,923,3.469,924,3.469,925,3.469,926,3.148,927,3.148,928,5.604,929,5.396,930,3.469,931,3.469,932,3.469,933,7.47,934,5.982,935,7.47,936,3.469,937,4.896,938,3.469,939,3.469,940,3.469,941,3.469,942,5.396,943,3.469,944,2.936,945,3.469,946,3.148]],["title/classes/CardDto.html",[0,0.356,947,5.035]],["body/classes/CardDto.html",[0,0.226,2,0.158,3,0.02,4,0.024,5,0.024,9,0.087,10,0.62,15,0.158,16,1.064,17,1.587,18,0.209,20,0.164,21,0.003,22,0.099,23,0.295,24,0.488,25,1.259,28,0.024,29,0.832,30,0.001,31,0.001,52,0.643,83,1.093,109,1.218,192,4.913,207,2.888,208,3.12,214,2.924,232,3.918,242,2.698,467,1.956,947,4.959,948,3.527,949,4.739,950,4.331,951,5.664,952,5.115,953,4.452,954,5.664,955,4.739,956,4.452,957,5.359,958,5.359,959,5.115,960,4.452,961,3.303,962,5.115,963,5.664,964,4.739,965,5.664,966,5.914,967,5.441,968,5.115,969,6.109,970,4.739,971,4.739,972,3.527,973,3.527,974,3.527,975,3.527,976,3.527,977,3.527,978,3.527,979,3.527,980,3.527,981,3.527,982,3.527,983,3.527,984,3.527,985,4.535,986,3.527,987,3.527,988,3.527,989,3.527,990,3.527,991,3.527,992,3.527,993,3.527,994,3.527,995,3.527,996,3.527,997,3.527,998,3.527,999,3.527,1000,4.739,1001,3.527,1002,4.739,1003,3.527,1004,3.2,1005,4.452,1006,6.072,1007,2.418,1008,2.498,1009,2.589,1010,2.498,1011,2.589,1012,3.2]],["title/entities/CardEntity.html",[58,2.519,199,2.073]],["body/entities/CardEntity.html",[0,0.219,3,0.011,4,0.013,5,0.013,7,1.223,9,0.049,10,0.509,16,0.387,17,0.664,18,0.193,21,0.003,22,0.056,23,0.275,24,0.388,25,1.055,28,0.013,29,0.469,30,0.001,31,0.001,52,0.701,58,1.55,64,0.518,65,4.54,67,1.322,81,0.868,83,0.733,109,1.179,121,3.097,160,3.065,161,1.123,167,3.595,181,1.894,192,3.296,199,1.275,201,2.555,207,1.937,208,2.093,214,1.961,217,4.063,224,2.102,226,4.221,227,4.478,228,5.754,229,5.066,232,3.12,240,1.766,242,1.685,257,4.004,258,2.322,259,2.361,260,2.701,261,1.011,262,2.322,267,0.98,447,3.569,467,1.102,609,3.653,610,1.518,611,1.458,617,3.449,618,1.518,619,3.653,620,1.591,621,2.63,626,2.851,628,1.322,629,1.102,715,4.406,717,2.102,719,1.405,949,3.179,950,2.906,952,3.432,953,2.987,955,3.179,956,2.987,959,3.432,961,2.216,962,3.432,964,3.179,966,4.493,967,4.671,968,3.432,969,4.642,970,3.179,971,3.179,985,2.054,1000,3.179,1002,3.179,1004,1.802,1005,2.987,1006,4.074,1007,1.362,1008,1.407,1009,1.458,1010,1.407,1011,1.458,1012,1.802,1013,1.986,1014,4.489,1015,4.489,1016,4.074,1017,4.074,1018,2.538,1019,2.963,1020,4.807,1021,1.986,1022,5.329,1023,1.986,1024,3.546,1025,4.835,1026,3.414,1027,6.095,1028,6.17,1029,1.986,1030,3.414,1031,1.986,1032,1.986,1033,1.986,1034,7.366,1035,7.12,1036,1.986,1037,5.329,1038,1.986,1039,1.986,1040,3.098,1041,3.414,1042,1.986,1043,1.986,1044,1.802,1045,2.21,1046,1.986,1047,1.986,1048,1.407,1049,3.414,1050,1.986,1051,3.414,1052,1.986,1053,1.986,1054,2.734,1055,3.414,1056,2.102,1057,1.986,1058,2.506,1059,3.414,1060,1.986,1061,1.986,1062,3.414,1063,1.986,1064,1.986,1065,3.414,1066,1.986,1067,1.986,1068,3.414,1069,1.986,1070,1.986,1071,4.251,1072,1.986,1073,1.986,1074,1.986,1075,1.986,1076,1.986,1077,1.986,1078,1.986,1079,2.418,1080,2.734,1081,3.296,1082,3.994,1083,2.34,1084,0.799,1085,2.61,1086,3.414,1087,1.591,1088,1.286,1089,0.868,1090,1.195,1091,3.895,1092,5.329,1093,1.802,1094,1.986,1095,1.986,1096,1.986,1097,1.986,1098,1.063]],["title/modules/CardModule.html",[117,1.224,1099,4.444]],["body/modules/CardModule.html",[0,0.21,3,0.019,4,0.022,5,0.022,7,4.453,21,0.003,22,0.092,28,0.022,30,0.001,31,0.001,32,4.361,34,6.036,49,1.247,52,0.897,54,0.636,57,0.947,58,2.339,59,1.781,70,4.99,109,3.021,112,3.786,117,1.136,126,4.361,131,2.887,135,1.247,137,2.161,138,1.814,139,1.163,155,4.259,157,4.361,160,2.251,161,1.849,178,4.361,181,2.266,185,3.939,186,3.939,187,4.361,194,4.361,215,1.963,252,1.247,264,1.665,272,2.543,283,2.029,294,0.988,320,1.849,321,2.913,325,5.029,328,3.1,329,1.968,330,1.968,332,3.1,333,3.1,334,2.117,335,3.335,336,1.849,337,3.25,338,2.117,342,2.401,345,2.401,348,6.423,350,3.25,351,2.176,352,2.063,355,2.117,356,2.117,357,2.117,358,2.117,359,2.063,387,2.401,395,2.242,431,2.117,432,2.316,621,2.543,626,2.757,628,2.176,629,1.814,961,2.543,1084,1.316,1088,2.117,1099,7.646,1100,2.968,1101,2.968,1102,3.271,1103,7.585,1104,3.271,1105,6.375,1106,3.271,1107,3.271,1108,6.375,1109,4.361,1110,4.361,1111,4.361,1112,2.968,1113,4.361,1114,2.5,1115,4.361,1116,2.5,1117,4.361,1118,4.764,1119,4.361,1120,4.361,1121,1.925,1122,4.361,1123,4.361,1124,4.361,1125,5.152,1126,4.361,1127,4.361,1128,2.5,1129,4.361,1130,2.968,1131,4.361,1132,6.375,1133,4.361,1134,2.5,1135,4.361,1136,4.361,1137,2.968,1138,4.361,1139,2.619,1140,4.361,1141,2.619,1142,4.361,1143,2.5,1144,2.5,1145,4.874,1146,1.546]],["title/classes/CardResponse.html",[0,0.356,1147,5.035]],["body/classes/CardResponse.html",[0,0.219,2,0.153,3,0.019,4,0.023,5,0.023,9,0.084,10,0.605,15,0.153,16,1.038,17,1.564,18,0.208,20,0.159,21,0.003,22,0.096,23,0.294,24,0.484,25,1.202,28,0.023,29,0.807,30,0.001,31,0.001,52,0.745,82,5.552,83,1.071,109,1.181,192,4.816,201,1.639,207,2.831,208,3.058,214,2.866,232,3.878,242,2.633,466,2.156,467,1.896,949,4.646,950,4.246,952,5.015,953,4.365,955,4.646,956,4.365,957,5.253,958,5.253,959,5.015,961,3.238,962,5.015,964,4.646,966,5.838,967,5.372,968,5.015,969,6.031,970,4.646,971,4.646,985,4.459,1000,4.646,1002,4.646,1005,4.365,1007,2.344,1008,2.421,1009,2.51,1010,2.421,1011,2.51,1016,5.952,1018,3.708,1019,3.238,1084,1.376,1147,6.725,1148,3.419,1149,6.56,1150,3.419,1151,3.419,1152,3.419,1153,3.419,1154,3.419,1155,3.419,1156,3.419,1157,3.419,1158,5.552,1159,3.419,1160,3.419,1161,3.419,1162,3.419,1163,3.419,1164,3.419,1165,3.419,1166,3.419,1167,5.015,1168,3.419,1169,5.069,1170,3.419,1171,3.419,1172,3.419,1173,3.419,1174,5.015,1175,3.419,1176,3.419,1177,3.419,1178,3.419,1179,3.419,1180,3.419,1181,3.419,1182,3.419,1183,3.419,1184,3.419,1185,2.421,1186,5.253,1187,2.738,1188,3.102,1189,2.893,1190,3.102,1191,3.419]],["title/classes/CommandErrorException.html",[0,0.356,1192,4.697]],["body/classes/CommandErrorException.html",[0,0.491,2,0.342,3,0.043,4,0.051,5,0.051,15,0.454,18,0.143,21,0.003,28,0.051,30,0.002,31,0.002,49,2.917,52,0.603,294,2.31,467,4.241,717,4.708,784,4.937,1089,4.099,1090,4.601,1192,7.941,1193,5.019,1194,4.374,1195,8.513,1196,6.939,1197,6.939,1198,7.941,1199,7.647,1200,6.472]],["title/entities/CompanyEmployeeEntity.html",[199,2.073,598,3.804]],["body/entities/CompanyEmployeeEntity.html",[0,0.313,3,0.028,4,0.033,5,0.033,9,0.12,10,0.92,16,0.949,17,1.579,18,0.187,21,0.003,23,0.264,25,0.777,28,0.033,29,1.151,30,0.002,31,0.002,52,0.697,64,1.272,81,2.131,83,1.325,121,2.253,160,3.864,161,2.757,181,3.324,199,1.822,201,2.338,202,5.209,205,7.139,207,3.501,208,3.782,214,3.544,217,3.941,223,5.579,224,4.284,227,2.932,232,4.097,240,3.6,257,2.523,258,4.196,259,4.266,260,4.881,261,2.483,262,4.196,263,3.906,447,2.656,598,4.77,599,7.822,741,4.34,1034,5.572,1035,5.572,1091,5.114,1098,2.609,1201,4.877,1202,6.958,1203,4.877,1204,4.877,1205,4.877,1206,4.877,1207,6.958,1208,4.877,1209,7.361,1210,4.877,1211,4.877,1212,3.157,1213,4.877,1214,4.877,1215,4.877]],["title/entities/CompanyEntity.html",[199,2.073,223,3.5]],["body/entities/CompanyEntity.html",[0,0.178,3,0.016,4,0.019,5,0.019,9,0.068,10,0.647,16,0.539,17,1.11,18,0.195,21,0.003,22,0.185,23,0.276,24,0.453,25,1.187,28,0.019,29,0.653,30,0.001,31,0.001,52,0.612,64,0.722,81,1.21,83,0.932,121,0.897,160,3.391,161,1.565,199,1.685,200,4.508,201,1.328,202,5.355,204,5.176,205,3.311,206,5.176,207,2.462,208,2.66,214,2.492,217,4.116,223,2.844,224,1.705,226,5.585,227,4.562,228,4.256,229,4.895,232,3.27,240,2.333,255,5.176,257,4.897,258,2.951,259,3,260,2.713,261,1.41,262,2.951,268,5.127,443,3.512,598,5.32,600,2.033,617,5.296,621,3.831,715,4.828,1018,3.225,1020,7.433,1024,3.001,1027,4.508,1028,4.657,1048,3.194,1058,2.033,1080,3.611,1081,3.311,1082,3.796,1083,3.911,1088,1.792,1091,4.082,1098,1.482,1216,2.769,1217,5.176,1218,5.705,1219,4.828,1220,3.289,1221,5.705,1222,5.705,1223,4.828,1224,5.176,1225,5.705,1226,5.176,1227,2.769,1228,4.51,1229,2.769,1230,2.769,1231,4.092,1232,2.769,1233,2.769,1234,2.769,1235,2.769,1236,2.769,1237,2.769,1238,2.769,1239,4.51,1240,2.769,1241,2.769,1242,2.769,1243,2.769,1244,2.769,1245,4.51,1246,2.769,1247,2.769,1248,4.092,1249,2.769,1250,2.769,1251,2.769,1252,2.769,1253,2.769,1254,2.344,1255,2.513,1256,2.769]],["title/entities/ConnectedCardEntity.html",[65,3.592,199,2.073]],["body/entities/ConnectedCardEntity.html",[0,0.304,3,0.027,4,0.032,5,0.032,9,0.117,10,0.905,16,0.922,17,1.553,18,0.185,21,0.003,22,0.133,23,0.262,25,0.761,28,0.032,29,1.117,30,0.002,31,0.002,52,0.629,58,4.823,64,1.235,65,4.409,67,3.151,81,2.069,83,1.303,101,6.754,102,6.754,199,2.545,201,3.266,207,3.444,208,3.72,214,3.486,217,3.906,224,4.194,227,1.995,228,5.648,229,6.073,232,4.057,240,3.524,258,4.128,259,4.197,260,4.801,261,2.411,262,4.128,601,8.593,602,5.504,603,3.792,701,4.297,703,7.026,1048,3.354,1079,4.825,1083,4.67,1089,2.069,1090,2.849,1091,5.064,1098,2.534,1257,4.735,1258,6.813,1259,4.735,1260,6.813,1261,4.735,1262,4.297,1263,4.735,1264,4.735,1265,4.735,1266,4.735,1267,4.735,1268,5.456]],["title/entities/ConversationEntity.html",[199,2.073,602,3.5]],["body/entities/ConversationEntity.html",[0,0.273,3,0.024,4,0.028,5,0.028,9,0.105,10,0.852,18,0.191,21,0.003,22,0.12,23,0.27,25,0.926,28,0.028,30,0.002,31,0.002,52,0.731,64,1.111,65,6.004,67,2.834,81,1.861,83,1.226,199,2.355,201,2.042,202,5.288,207,3.24,208,3.5,214,3.28,217,4.033,226,3.793,227,2.657,232,3.909,240,3.261,257,3.883,258,3.883,259,3.948,261,2.168,262,3.883,446,5.739,602,3.977,607,6.172,614,6.359,616,2.756,619,5.689,635,5.521,703,3.016,707,5.317,717,3.881,730,4.629,1017,6.812,1024,5.521,1025,6.812,1048,3.016,1082,5.894,1083,4.322,1091,4.879,1098,2.278,1269,4.259,1270,7.507,1271,6.354,1272,6.305,1273,4.259,1274,4.259,1275,4.259,1276,4.259,1277,6.305,1278,4.259,1279,4.259,1280,6.305,1281,4.259,1282,6.305,1283,4.259,1284,6.305,1285,4.259,1286,4.259,1287,3.864,1288,3.41,1289,3.864,1290,3.864,1291,3.864]],["title/classes/CreateCardCommand.html",[0,0.356,1292,4.697]],["body/classes/CreateCardCommand.html",[0,0.218,2,0.152,3,0.019,4,0.023,5,0.023,8,2.202,9,0.084,10,0.603,11,1.811,12,0.778,15,0.152,16,1.034,17,1.56,18,0.2,20,0.158,21,0.003,22,0.095,23,0.282,24,0.475,25,1.224,27,2.601,28,0.023,29,0.803,30,0.001,31,0.001,52,0.632,109,1.175,156,3.278,232,2.239,268,4.632,467,1.887,949,4.632,950,4.233,953,4.351,956,4.351,960,4.351,964,4.632,966,5.827,967,5.361,969,4.632,970,4.632,971,4.632,1000,4.632,1002,4.632,1005,4.351,1007,2.332,1008,2.409,1009,2.498,1010,2.409,1011,2.498,1185,2.409,1186,5.237,1187,2.725,1220,3.771,1223,5.535,1292,4.498,1293,10.755,1294,5.934,1295,5.237,1296,4.233,1297,5.934,1298,3.087,1299,3.087,1300,3.087,1301,3.087,1302,3.087,1303,3.087,1304,3.087,1305,3.087,1306,3.087,1307,3.087,1308,3.087,1309,3.087,1310,3.402,1311,3.087,1312,3.087,1313,3.402,1314,3.402,1315,3.087]],["title/classes/CreateCardCommandHandler.html",[0,0.356,1109,4.697]],["body/classes/CreateCardCommandHandler.html",[0,0.257,2,0.179,3,0.023,4,0.027,5,0.027,9,0.099,12,0.58,13,1.865,15,0.269,18,0.112,20,0.28,21,0.003,22,0.169,23,0.159,24,0.254,28,0.027,30,0.001,31,0.001,34,5.207,35,0.923,36,1.298,37,2.944,38,1.073,39,1.428,40,1.833,41,2.219,42,3.368,44,3.129,46,3.277,47,2.449,49,2.295,50,0.713,51,1.18,52,0.807,53,1.628,54,0.779,56,1.284,57,1.159,58,2.732,59,2.179,60,2.271,61,1.495,62,1.465,63,1.48,64,1.043,70,2.14,72,2.179,73,2.379,75,1.331,76,2.596,78,1.78,79,2.407,80,3.084,83,1.181,85,2.745,86,2.584,87,2.552,90,2.702,104,2.181,107,2.662,108,3.63,109,2.078,110,2.112,111,1.542,112,1.369,113,1.865,158,3.939,160,1.748,161,2.262,163,2.179,164,2.407,165,3.058,166,2.463,447,2.179,621,1.975,626,2.14,628,2.662,629,2.219,657,4.352,659,4.562,687,2.407,689,2.523,719,1.647,967,2.523,1005,2.662,1084,1.61,1088,2.589,1093,3.63,1109,6.122,1185,2.833,1292,6.81,1316,7.233,1317,2.589,1318,3.63,1319,2.937,1320,4.819,1321,2.662,1322,4.001,1323,4.001,1324,4.001,1325,4.001,1326,4.001,1327,2.662,1328,3.63,1329,3.63,1330,2.219,1331,5.46,1332,3.165,1333,2.523,1334,2.589,1335,4.001,1336,4.001,1337,4.001]],["title/classes/CreateCardEvent.html",[0,0.356,1320,4.444]],["body/classes/CreateCardEvent.html",[0,0.394,2,0.274,3,0.035,4,0.041,5,0.041,9,0.152,10,0.925,11,1.754,12,0.754,13,4.268,15,0.274,16,1.586,17,1.976,18,0.19,20,0.286,21,0.003,22,0.172,23,0.268,24,0.259,25,1.207,28,0.041,29,1.448,30,0.002,31,0.002,109,3.368,115,3.972,116,2.504,117,2.019,118,3.972,119,4.084,120,3.972,121,2.64,122,2.955,124,4.506,125,3.972,156,4.588,1320,6.529,1338,10.436,1339,5.985]],["title/classes/CreateCardEventHandler.html",[0,0.356,1133,4.697]],["body/classes/CreateCardEventHandler.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,12,0.421,15,0.28,18,0.154,20,0.385,21,0.003,22,0.232,23,0.218,24,0.349,28,0.042,30,0.002,31,0.002,35,1.445,36,1.782,38,1.473,39,1.826,50,1.117,51,1.62,52,0.729,54,1.219,70,5.26,78,1.293,83,1.023,109,2.164,116,1.714,117,1.382,128,3.722,129,3.326,130,2.579,131,3.625,132,2.579,133,3.326,134,2.341,135,2.389,136,2.522,137,2.124,138,2.205,139,2.227,141,1.993,142,2.579,143,2.609,144,2.609,145,2.271,180,4.295,181,2.227,182,5.017,1133,6.994,1320,7.874,1321,4.168,1340,9.247,1341,6.265,1342,4.295]],["title/classes/CreateCardRequest.html",[0,0.356,1343,5.035]],["body/classes/CreateCardRequest.html",[0,0.233,2,0.162,3,0.021,4,0.024,5,0.024,9,0.089,10,0.633,15,0.162,16,1.086,17,1.607,18,0.207,20,0.169,21,0.003,22,0.102,23,0.293,24,0.486,25,1.256,28,0.024,29,0.855,30,0.001,31,0.001,52,0.651,109,1.252,150,2.66,153,2.66,192,4.997,232,2.352,242,2.755,467,2.01,949,4.82,950,4.405,951,5.761,952,5.203,953,4.529,954,5.761,955,4.82,956,4.529,957,5.451,958,5.451,959,5.203,960,4.529,961,3.36,962,5.203,963,5.761,964,4.82,965,5.761,966,5.979,967,5.501,968,5.203,969,6.177,970,4.82,971,4.82,985,4.6,1000,4.82,1002,4.82,1005,4.529,1007,2.484,1008,2.566,1009,2.66,1010,2.566,1011,2.66,1185,2.566,1186,5.451,1187,2.902,1343,5.064,1344,11.13,1345,3.288,1346,3.288,1347,3.288,1348,3.288,1349,3.288,1350,3.288,1351,3.288,1352,3.288,1353,3.288,1354,3.288,1355,3.288,1356,3.288,1357,3.288,1358,3.288,1359,3.288,1360,3.288,1361,3.288,1362,3.288,1363,3.288,1364,3.288,1365,3.288,1366,3.288,1367,3.288,1368,3.288]],["title/classes/CreateLogCommand.html",[0,0.356,401,4.444]],["body/classes/CreateLogCommand.html",[0,0.223,2,0.155,3,0.02,4,0.023,5,0.023,9,0.086,10,0.612,15,0.155,16,1.05,17,1.575,18,0.198,20,0.162,21,0.003,22,0.097,23,0.287,24,0.458,25,1.19,28,0.023,29,0.819,30,0.001,31,0.001,52,0.522,110,1.934,116,1.811,145,2.4,196,4.902,217,4.133,226,6.259,227,4.546,300,1.961,401,4.321,456,5.062,459,5.062,467,3.672,821,7.406,985,3.246,1071,2.457,1369,10.656,1370,3.469,1371,6.008,1372,6.008,1373,6.008,1374,6.008,1375,5.062,1376,6.008,1377,6.008,1378,6.008,1379,6.008,1380,5.303,1381,3.469,1382,8.001,1383,3.469,1384,5.941,1385,3.148,1386,3.469,1387,3.469,1388,6.849,1389,8.391,1390,3.469,1391,4.896,1392,3.469,1393,3.469,1394,7.343,1395,3.469,1396,4.69,1397,3.469,1398,3.469,1399,3.469,1400,3.469,1401,3.469,1402,3.469,1403,3.469,1404,3.469,1405,3.469,1406,3.469,1407,3.821,1408,3.148]],["title/classes/CreateLogCommandHandler.html",[0,0.356,350,3.5]],["body/classes/CreateLogCommandHandler.html",[0,0.304,2,0.212,3,0.027,4,0.032,5,0.032,9,0.117,10,0.773,12,0.721,15,0.212,18,0.18,20,0.317,21,0.003,22,0.224,23,0.254,24,0.288,25,0.974,28,0.032,30,0.002,31,0.002,35,1.092,36,1.469,37,3.248,38,1.215,39,1.576,40,2.075,45,3.477,47,2.773,49,3.043,50,0.844,51,1.335,52,0.782,53,1.928,54,0.922,73,2.987,196,4.563,294,1.43,314,1.493,336,2.677,350,4.297,351,6.601,352,6.403,395,3.246,401,6.988,882,5.456,1317,4.409,1319,3.477,1384,5.858,1407,3.354,1408,4.297,1409,7.24,1410,7.24,1411,7.24,1412,6.1,1413,3.792,1414,6.988,1415,5.456,1416,3.477,1417,3.792,1418,6.671,1419,4.297,1420,4.735,1421,3.792,1422,3.792,1423,4.735,1424,4.297,1425,6.1,1426,4.735,1427,5.766,1428,4.297,1429,4.297,1430,4.297,1431,4.297,1432,4.008,1433,4.297,1434,4.008,1435,4.297,1436,4.735,1437,4.735]],["title/classes/CreateLogDto.html",[0,0.356,393,3.93]],["body/classes/CreateLogDto.html",[0,0.215,2,0.15,3,0.019,4,0.022,5,0.022,9,0.083,10,0.596,15,0.15,16,1.023,17,1.55,18,0.198,20,0.156,21,0.003,22,0.094,23,0.287,24,0.467,25,1.198,28,0.022,29,0.791,30,0.001,31,0.001,52,0.511,110,1.892,116,1.772,117,1.429,145,2.349,196,4.906,217,4.141,226,6.216,227,4.521,300,1.896,393,3.722,456,4.953,459,4.953,467,3.594,821,7.322,985,3.162,1071,2.375,1371,5.879,1372,5.879,1373,5.879,1374,5.879,1375,4.953,1376,5.879,1377,5.879,1378,5.879,1379,5.879,1380,5.189,1382,8.033,1384,5.847,1385,3.043,1388,6.741,1389,8.296,1391,4.768,1394,7.227,1396,4.589,1407,3.722,1438,7.83,1439,3.043,1440,3.043,1441,3.354,1442,3.354,1443,3.354,1444,3.354,1445,3.354,1446,3.354,1447,3.354,1448,3.354,1449,3.354,1450,3.354,1451,3.354,1452,3.354,1453,3.354,1454,3.354,1455,3.354,1456,3.354,1457,3.354,1458,3.354,1459,3.354]],["title/classes/CreateMethodLogDto.html",[0,0.356,397,4.697]],["body/classes/CreateMethodLogDto.html",[0,0.443,2,0.308,3,0.039,4,0.046,5,0.046,9,0.17,10,0.998,15,0.308,16,1.712,17,2.05,18,0.19,20,0.321,21,0.003,22,0.194,23,0.269,24,0.291,25,1.203,28,0.046,29,1.628,30,0.002,31,0.002,116,3.032,117,2.136,145,3.511,196,4.846,397,7.445,1438,7.735,1439,6.26,1440,6.26,1460,6.898,1461,6.898,1462,6.898]],["title/classes/CreateOccupationCommand.html",[0,0.356,1463,4.444]],["body/classes/CreateOccupationCommand.html",[0,0.472,2,0.329,3,0.042,4,0.049,5,0.049,9,0.182,10,1.039,11,1.559,12,0.67,15,0.329,16,1.782,17,2.031,18,0.171,20,0.342,21,0.003,22,0.206,23,0.242,24,0.311,28,0.049,30,0.002,31,0.002,52,0.58,399,5.042,1463,7.334,1464,9.974,1465,5.622,1466,8.768,1467,6.673,1468,6.673,1469,6.225,1470,3.526]],["title/classes/CreateOccupationCommandHandler.html",[0,0.356,1471,4.697]],["body/classes/CreateOccupationCommandHandler.html",[0,0.428,2,0.205,3,0.026,4,0.031,5,0.031,9,0.113,12,0.448,15,0.298,18,0.124,20,0.31,21,0.003,22,0.22,23,0.176,24,0.281,28,0.031,30,0.002,31,0.002,35,1.059,36,1.437,37,3.192,38,1.188,39,1.548,40,2.029,42,2.761,44,3.271,47,2.712,48,3.51,49,1.751,50,0.819,51,1.306,52,0.821,53,1.869,54,0.894,56,1.474,57,1.33,60,2.515,61,1.715,62,1.681,63,1.698,64,1.197,73,1.837,75,1.528,76,2.815,78,1.375,85,2.12,86,2.576,87,2.667,104,2.415,110,1.341,111,1.77,112,1.571,176,4.202,177,3.055,267,2.267,314,2.101,621,4.509,657,4.009,687,2.763,719,1.89,776,4.009,1056,4.101,1319,3.371,1321,3.055,1332,2.415,1333,2.896,1334,2.972,1342,3.148,1416,3.371,1463,6.889,1471,6.637,1472,7.841,1473,6.092,1474,3.148,1475,3.055,1476,4.718,1477,3.51,1478,3.371,1479,3.371,1480,3.371,1481,5.335,1482,3.055,1483,4.592,1484,4.166,1485,4.166,1486,4.166,1487,4.166,1488,4.166,1489,4.592,1490,3.886,1491,4.592,1492,4.592,1493,3.148,1494,4.592,1495,3.148,1496,3.677,1497,4.592,1498,4.166,1499,4.592]],["title/classes/CreateOccupationDto.html",[0,0.356,1466,4.444]],["body/classes/CreateOccupationDto.html",[0,0.482,2,0.336,3,0.043,4,0.05,5,0.05,9,0.185,10,1.053,11,1.574,12,0.676,15,0.336,16,1.806,17,2.047,18,0.173,20,0.35,21,0.003,22,0.295,23,0.245,24,0.317,25,1.036,28,0.05,30,0.002,31,0.002,1466,7.431,1470,3.601,1500,10.069,1501,6.816,1502,6.816,1503,6.816]],["title/classes/CreateOccupationEvent.html",[0,0.356,1481,4.444]],["body/classes/CreateOccupationEvent.html",[0,0.414,2,0.289,3,0.037,4,0.043,5,0.043,9,0.159,10,0.956,11,1.728,12,0.743,15,0.289,16,1.64,17,1.936,18,0.186,20,0.301,21,0.003,22,0.181,23,0.262,24,0.273,25,1.182,28,0.043,30,0.002,31,0.002,116,2.567,117,2.07,121,2.73,122,3.055,719,4.095,1332,4.935,1339,6.188,1470,3.095,1481,6.75,1504,10.32,1505,4.935,1506,4.935,1507,5.858,1508,4.935,1509,4.935]],["title/classes/CreateOccupationEventHandler.html",[0,0.356,1510,4.697]],["body/classes/CreateOccupationEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,719,2.61,1321,4.218,1342,4.346,1481,7.911,1482,6.573,1510,7.049,1511,9.301,1512,6.34,1513,4.847]],["title/classes/CreateOccupationRequest.html",[0,0.356,1514,4.444]],["body/classes/CreateOccupationRequest.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.295,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,1514,7.415,1515,10.053,1516,6.791,1517,6.791,1518,6.791]],["title/classes/CreateProfileCommand.html",[0,0.356,1519,4.444]],["body/classes/CreateProfileCommand.html",[0,0.423,2,0.295,3,0.037,4,0.044,5,0.044,9,0.163,10,0.97,11,1.735,12,0.746,15,0.295,16,1.663,17,2.022,18,0.187,20,0.307,21,0.003,22,0.185,23,0.265,24,0.279,25,1.12,28,0.044,29,1.557,30,0.002,31,0.002,52,0.52,399,4.523,564,3.949,960,6.309,1519,6.845,1520,10.391,1521,4.843,1522,8.526,1523,7.756,1524,5.986,1525,5.986,1526,5.986]],["title/classes/CreateProfileCommandHandler.html",[0,0.356,1527,4.697]],["body/classes/CreateProfileCommandHandler.html",[0,0.398,2,0.186,3,0.024,4,0.028,5,0.028,9,0.103,12,0.551,15,0.277,18,0.116,20,0.288,21,0.003,22,0.174,23,0.163,24,0.262,28,0.028,30,0.002,31,0.002,35,0.959,36,1.336,37,3.013,38,1.104,39,1.462,40,1.887,42,3.268,44,3.17,47,2.521,49,1.586,50,0.741,51,1.451,52,0.814,53,1.693,54,0.809,56,1.335,57,1.204,64,1.084,73,2.261,75,1.384,76,3.301,78,1.81,80,2.641,83,1.012,85,2.355,86,2.456,87,2.656,90,2.314,104,1.507,110,1.214,158,3.373,160,2.706,163,2.264,181,1.478,215,2.008,252,1.586,264,2.117,267,2.053,314,1.953,621,3.057,657,4.454,666,3.71,676,2.084,687,2.502,776,2.502,1018,3.501,1056,4.557,1088,2.691,1169,4.669,1194,1.939,1317,2.691,1319,3.053,1321,2.767,1332,3.258,1333,2.623,1334,2.691,1493,2.851,1495,2.851,1519,6.568,1527,5.243,1528,7.402,1529,5.308,1530,2.56,1531,4.158,1532,2.851,1533,2.56,1534,3.053,1535,2.767,1536,2.502,1537,2.945,1538,3.33,1539,4.96,1540,2.502,1541,4.158,1542,3.179,1543,3.179,1544,2.691,1545,4.158,1546,4.158,1547,4.158,1548,3.773,1549,4.158,1550,3.773,1551,3.773,1552,4.158,1553,4.158,1554,3.519,1555,4.158,1556,4.158,1557,4.158,1558,2.56]],["title/classes/CreateProfileDto.html",[0,0.356,1522,4.444]],["body/classes/CreateProfileDto.html",[0,0.446,2,0.31,3,0.039,4,0.046,5,0.046,9,0.171,10,1.002,11,1.687,12,0.725,15,0.31,16,1.719,17,2.054,18,0.181,20,0.323,21,0.003,22,0.195,23,0.256,24,0.293,25,0.986,28,0.046,29,1.638,30,0.002,31,0.002,52,0.547,1212,4.494,1522,7.074,1559,10.224,1560,5.561,1561,6.464,1562,6.287,1563,8.015,1564,6.464,1565,5.877,1566,4.76]],["title/classes/CreateProfileEvent.html",[0,0.356,1539,4.444]],["body/classes/CreateProfileEvent.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,10,0.945,11,1.722,12,0.74,15,0.283,16,1.621,17,1.997,18,0.184,20,0.295,21,0.003,22,0.178,23,0.261,24,0.268,25,1.103,28,0.042,29,1.496,30,0.002,31,0.002,52,0.5,116,2.544,117,2.051,121,2.697,122,3.019,181,3.511,1169,6.642,1339,6.115,1532,4.346,1539,6.67,1567,10.26,1568,4.655,1569,6.67,1570,5.077,1571,4.847]],["title/classes/CreateProfileEventHandler.html",[0,0.356,1572,4.697]],["body/classes/CreateProfileEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,39,1.823,50,1.114,51,1.617,52,0.728,54,1.216,78,1.289,83,1.347,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,134,2.334,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,181,2.22,215,1.695,1321,4.156,1342,4.282,1539,7.865,1540,5.909,1572,6.981,1573,9.234,1574,6.246,1575,6.246,1576,6.246]],["title/classes/CreateProfileRequest.html",[0,0.356,1577,4.444]],["body/classes/CreateProfileRequest.html",[0,0.403,2,0.281,3,0.036,4,0.042,5,0.042,9,0.155,10,0.939,11,1.76,12,0.757,15,0.281,16,1.611,17,1.991,18,0.191,20,0.293,21,0.003,22,0.176,23,0.27,24,0.265,25,1.173,28,0.042,29,1.483,30,0.002,31,0.002,52,0.495,960,6.162,1212,4.067,1561,6.162,1562,5.994,1564,6.162,1566,4.308,1577,6.631,1578,10.505,1579,5.702,1580,9.261,1581,7.513,1582,5.702,1583,5.702,1584,5.702]],["title/classes/CreateSocialNetworkCommand.html",[0,0.356,1585,4.444]],["body/classes/CreateSocialNetworkCommand.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,9,0.153,10,0.93,11,1.756,12,0.755,15,0.277,16,1.596,17,1.905,18,0.19,20,0.288,21,0.003,22,0.275,23,0.268,24,0.261,25,1.21,28,0.041,30,0.002,31,0.002,627,4.357,1084,4.211,1296,5.95,1470,2.968,1585,6.566,1586,10.462,1587,4.733,1588,6.511,1589,6.302,1590,4.733,1591,5.618,1592,5.618,1593,4.733,1594,5.618]],["title/classes/CreateSocialNetworkCommandHandler.html",[0,0.356,1595,4.697]],["body/classes/CreateSocialNetworkCommandHandler.html",[0,0.432,2,0.208,3,0.026,4,0.031,5,0.031,9,0.115,12,0.452,15,0.301,18,0.126,20,0.313,21,0.003,22,0.222,23,0.177,24,0.284,28,0.031,30,0.002,31,0.002,35,1.073,36,1.451,37,3.215,38,1.199,39,1.56,40,2.049,42,2.778,44,3.284,47,2.738,49,2.565,50,0.829,51,1.318,52,0.811,53,1.894,54,0.905,56,1.493,57,1.347,60,2.539,61,1.738,62,1.703,63,1.72,64,1.213,73,1.855,75,1.548,76,2.836,78,1.388,85,2.14,86,2.592,87,2.597,104,1.686,110,1.358,111,1.793,112,1.592,176,2.934,177,3.095,267,2.296,626,4.226,627,3.29,629,2.58,659,4.242,689,2.934,776,4.047,1019,3.32,1056,4.141,1084,3.696,1319,3.415,1321,3.095,1327,3.095,1342,4.611,1417,3.726,1478,3.415,1479,3.415,1480,3.415,1490,3.938,1493,3.189,1495,3.189,1496,3.726,1585,6.931,1595,6.686,1596,7.9,1597,6.13,1598,3.189,1599,3.095,1600,3.095,1601,3.726,1602,2.934,1603,4.652,1604,4.652,1605,4.652,1606,4.652,1607,4.652,1608,4.652,1609,4.652,1610,4.652,1611,4.652,1612,4.652,1613,2.683,1614,4.652,1615,4.938]],["title/classes/CreateSocialNetworkEvent.html",[0,0.356,1601,4.444]],["body/classes/CreateSocialNetworkEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.213,28,0.042,30,0.002,31,0.002,83,1.606,116,2.529,117,2.039,121,2.676,122,2.996,627,4.256,1084,4.424,1330,5.453,1339,6.067,1601,6.618,1616,10.22,1617,4.789,1618,4.599,1619,6.317,1620,4.789,1621,4.789,1622,2.844]],["title/classes/CreateSocialNetworkEventHandler.html",[0,0.356,1623,4.697]],["body/classes/CreateSocialNetworkEventHandler.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,12,0.417,15,0.278,18,0.153,20,0.383,21,0.003,22,0.231,23,0.217,24,0.347,28,0.041,30,0.002,31,0.002,35,1.432,36,1.772,38,1.465,39,1.818,50,1.107,51,1.61,52,0.726,54,1.208,78,1.281,83,1.014,116,1.698,117,1.37,128,3.706,129,3.307,130,2.556,131,3.616,132,2.556,133,3.307,134,2.32,135,2.368,136,2.499,137,2.105,138,2.186,139,2.207,141,1.976,142,2.556,143,2.586,144,2.586,145,2.251,146,4.257,627,3.834,1019,3.065,1084,3.944,1321,4.132,1342,4.257,1601,7.847,1602,6.18,1623,6.954,1624,9.207,1625,6.21]],["title/classes/CreateSocialNetworkRequest.html",[0,0.356,1626,4.444]],["body/classes/CreateSocialNetworkRequest.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,9,0.153,10,0.93,11,1.756,12,0.755,15,0.277,16,1.596,17,1.905,18,0.19,20,0.288,21,0.003,22,0.275,23,0.268,24,0.261,25,1.21,28,0.041,30,0.002,31,0.002,627,4.357,1084,4.211,1296,5.95,1470,2.968,1588,6.511,1589,6.302,1626,6.566,1627,10.462,1628,5.618,1629,5.618,1630,5.618,1631,5.618,1632,5.618,1633,5.618]],["title/classes/CreateUserCommand.html",[0,0.356,1634,4.444]],["body/classes/CreateUserCommand.html",[0,0.479,2,0.333,3,0.042,4,0.05,5,0.05,9,0.184,10,1.048,11,1.444,12,0.674,15,0.333,18,0.172,20,0.347,21,0.003,22,0.209,23,0.244,24,0.315,28,0.05,30,0.002,31,0.002,52,0.588,399,5.113,551,7.777,573,5.282,1622,3.385,1634,7.399,1635,10.037,1636,5.476,1637,7.458,1638,6.767,1639,6.313]],["title/classes/CreateUserCommandHandler.html",[0,0.356,1640,4.697]],["body/classes/CreateUserCommandHandler.html",[0,0.253,2,0.105,3,0.013,4,0.016,5,0.016,9,0.058,10,0.446,11,1.119,12,0.481,15,0.176,18,0.172,20,0.386,21,0.003,22,0.233,23,0.232,24,0.35,25,1.111,28,0.016,30,0.001,31,0.001,35,0.542,36,0.849,37,2.067,38,0.702,39,1.847,40,1.199,42,2.124,44,2.85,47,1.602,49,0.896,50,1.479,51,1.626,52,0.748,53,0.956,54,0.457,56,0.754,57,0.68,60,2.871,61,0.877,62,0.86,63,0.868,64,0.612,73,2.769,75,0.781,76,2.376,78,1.711,83,0.384,85,0.747,86,2.278,87,2.537,97,2.618,104,2.399,110,2.422,111,2.76,112,2.45,215,1.378,217,0.925,220,2.422,242,3.267,252,2.267,267,1.159,287,1.786,305,1.256,307,1.302,314,2.616,646,1.279,666,2.978,676,1.972,735,3.385,738,1.972,741,1.256,744,1.663,749,4.687,776,1.413,985,3.056,1056,2.422,1194,3.338,1220,3.427,1319,1.724,1419,2.131,1493,1.61,1495,1.61,1534,1.724,1535,4.765,1536,3.576,1537,1.663,1538,1.88,1554,1.987,1599,2.618,1613,1.354,1634,4.759,1640,3.33,1641,9.351,1642,6.726,1643,4.299,1644,3.57,1645,4.608,1646,3.57,1647,3.33,1648,3.33,1649,3.33,1650,3.33,1651,3.33,1652,2.348,1653,2.348,1654,3.57,1655,2.348,1656,2.348,1657,3.57,1658,2.348,1659,5.3,1660,3.33,1661,2.348,1662,3.33,1663,2.348,1664,1.987,1665,2.348,1666,3.33,1667,2.348,1668,3.33,1669,2.348,1670,1.327,1671,2.889,1672,2.618,1673,3.151,1674,2.889,1675,3.151,1676,3.008,1677,1.987,1678,1.88,1679,1.88,1680,3.008,1681,1.987,1682,3.151,1683,3.151,1684,2.348,1685,1.987,1686,2.131,1687,3.33,1688,2.131,1689,2.131,1690,3.935,1691,2.348,1692,5.602,1693,2.787,1694,3.935,1695,2.348,1696,2.348,1697,3.729,1698,2.348,1699,2.348,1700,2.131,1701,2.348,1702,2.131,1703,2.131,1704,2.348,1705,2.131,1706,2.348,1707,2.348,1708,2.348,1709,2.348,1710,1.663,1711,2.348,1712,1.987,1713,2.348,1714,2.348,1715,2.348,1716,5.3,1717,2.348,1718,2.348,1719,2.348,1720,3.57,1721,3.33,1722,2.131,1723,3.33,1724,3.33,1725,1.987,1726,1.987,1727,1.987,1728,3.33,1729,1.88]],["title/classes/CreateUserDto.html",[0,0.356,551,3.804]],["body/classes/CreateUserDto.html",[0,0.513,2,0.267,3,0.034,4,0.04,5,0.04,9,0.147,10,0.907,15,0.267,16,1.556,17,1.957,18,0.188,20,0.278,21,0.003,22,0.167,23,0.265,24,0.446,25,1.155,28,0.04,29,1.407,30,0.002,31,0.002,52,0.711,217,3.797,220,3.672,265,5.322,267,2.944,287,4.096,300,3.372,305,4.828,307,3.308,551,5.483,572,8.761,735,4.265,738,4.522,741,4.828,1085,6.114,1382,7.382,1730,5.048,1731,7.998,1732,5.964,1733,5.964,1734,5.964,1735,5.964,1736,5.964,1737,5.964,1738,6.405,1739,5.412,1740,7.257,1741,4.224,1742,5.048]],["title/classes/CreateUserEvent.html",[0,0.356,1743,4.697]],["body/classes/CreateUserEvent.html",[0,0.388,2,0.27,3,0.034,4,0.04,5,0.04,9,0.149,10,0.916,11,1.738,12,0.752,15,0.27,18,0.189,20,0.282,21,0.003,22,0.17,23,0.266,24,0.255,25,1.203,28,0.04,30,0.002,31,0.002,52,0.477,116,2.486,117,2.004,121,2.615,122,2.927,215,2.631,399,4.147,551,7.559,564,4.038,573,4.285,1339,5.928,1622,2.746,1743,6.834,1744,10.393,1745,4.442,1746,3.64,1747,8.074,1748,8.074,1749,4.442]],["title/classes/CreateUserEventHandler.html",[0,0.356,1750,4.697]],["body/classes/CreateUserEventHandler.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,12,0.421,15,0.28,18,0.154,20,0.385,21,0.003,22,0.232,23,0.218,24,0.349,28,0.042,30,0.002,31,0.002,35,1.445,36,1.782,38,1.473,39,1.826,50,1.117,51,1.62,52,0.729,54,1.219,78,1.293,83,1.023,116,1.714,117,1.382,128,3.722,129,3.326,130,2.579,131,3.625,132,2.579,133,3.326,134,2.341,135,2.389,136,2.522,137,2.124,138,2.205,139,2.227,141,1.993,142,2.579,143,2.609,144,2.609,145,2.271,215,1.7,1220,3.612,1321,4.168,1342,4.295,1743,8.322,1750,6.994,1751,9.247,1752,6.053,1753,6.265,1754,4.168,1755,6.265]],["title/classes/CreateUserResponse.html",[0,0.356,1676,4.242]],["body/classes/CreateUserResponse.html",[0,0.362,2,0.252,3,0.032,4,0.038,5,0.038,9,0.139,10,0.874,11,1.783,12,0.766,15,0.252,16,1.5,17,1.982,18,0.195,20,0.263,21,0.003,22,0.158,23,0.275,24,0.37,25,1.185,28,0.038,29,1.332,30,0.002,31,0.002,52,0.445,83,1.433,207,3.787,232,3.247,287,3.983,305,4.694,307,3.131,735,4.147,741,4.694,1659,7.026,1676,5.891,1741,3.999,1756,10.611,1757,5.646,1758,5.646,1759,4.145,1760,5.646,1761,5.646,1762,5.646,1763,5.646,1764,5.646,1765,5.646]],["title/injectables/CustomHealthCheckService.html",[368,2.162,1766,4.242]],["body/injectables/CustomHealthCheckService.html",[0,0.432,3,0.038,4,0.045,5,0.045,9,0.166,12,0.452,15,0.3,18,0.162,20,0.313,21,0.003,22,0.189,23,0.177,24,0.284,28,0.045,30,0.002,31,0.002,38,1.543,39,1.889,50,1.199,51,1.696,52,0.796,54,1.308,78,1.387,141,2.139,294,2.03,314,2.12,368,3.371,369,3.422,373,7.335,382,4.936,1766,6.614,1767,7.024,1768,9.568,1769,7.662,1770,6.723,1771,10.102,1772,6.723,1773,6.723,1774,6.723,1775,6.929,1776,6.723,1777,5.69,1778,5.139,1779,5.69,1780,5.69]],["title/injectables/DatabaseConfiguration.html",[368,2.162,489,4.697]],["body/injectables/DatabaseConfiguration.html",[0,0.207,3,0.018,4,0.022,5,0.022,9,0.08,18,0.06,21,0.003,23,0.189,28,0.022,30,0.001,31,0.001,36,0.695,38,0.908,50,0.574,52,0.867,57,0.933,58,2.865,65,4.085,67,2.143,75,1.072,85,1.025,86,0.964,87,0.874,110,1.843,160,2.758,175,5.532,200,4.327,201,3.438,223,3.981,227,4.005,252,2.407,294,0.973,314,2.463,359,4.524,368,1.983,369,1.64,489,4.309,496,9.388,513,2.922,540,3.737,597,2.462,598,4.327,599,2.462,600,2.365,602,3.981,603,2.579,604,4.47,605,2.579,606,3.737,607,4.2,608,2.726,609,4.327,610,2.462,611,2.365,612,4.47,613,2.726,614,4.327,615,2.462,616,2.085,617,4.085,618,2.462,619,4.327,620,2.579,621,3.116,623,4.47,624,2.726,626,3.377,628,2.143,629,1.786,630,4.634,631,2.579,632,2.579,633,3.981,634,2.579,635,4.2,636,2.462,637,4.47,638,2.462,639,2.579,735,3.39,738,3.595,882,4.077,934,2.579,1027,3.49,1045,3.295,1781,3.221,1782,7.172,1783,3.221,1784,6.312,1785,5.09,1786,3.221,1787,2.726,1788,2.922,1789,2.922,1790,3.221,1791,3.221,1792,3.221,1793,3.221,1794,3.221,1795,6.508,1796,5.09,1797,7.172,1798,7.172,1799,6.508,1800,3.221,1801,3.221,1802,3.221,1803,7.172,1804,3.221,1805,3.221,1806,3.221,1807,7.172,1808,5.09,1809,5.09,1810,5.09,1811,3.221,1812,7.172,1813,3.221,1814,6.508,1815,3.221,1816,4.619,1817,3.221,1818,3.221,1819,3.221,1820,3.221,1821,3.221,1822,3.221,1823,3.221,1824,3.221,1825,3.221,1826,3.221,1827,3.221,1828,3.221,1829,3.221,1830,3.221,1831,3.221,1832,3.221,1833,3.221,1834,5.09,1835,3.221,1836,3.221,1837,3.221,1838,3.221,1839,3.221,1840,3.221,1841,3.221,1842,3.221,1843,3.221,1844,3.221,1845,3.221,1846,3.221,1847,2.922,1848,3.221]],["title/classes/DeleteCardCommand.html",[0,0.356,1849,4.697]],["body/classes/DeleteCardCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,8,4.844,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,19,5.131,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,26,5.131,28,0.05,29,1.766,30,0.002,31,0.002,83,1.642,1849,7.837,1850,10.053]],["title/classes/DeleteCardCommandHandler.html",[0,0.356,1110,4.697]],["body/classes/DeleteCardCommandHandler.html",[0,0.319,2,0.222,3,0.028,4,0.033,5,0.033,9,0.123,12,0.474,13,2.317,15,0.315,18,0.132,20,0.328,21,0.003,22,0.198,23,0.186,24,0.298,28,0.033,30,0.002,31,0.002,34,5.773,35,1.146,36,1.521,37,3.336,38,1.257,39,1.618,40,2.148,41,2.756,42,2.863,44,3.348,46,3.84,47,2.87,49,1.895,50,0.886,51,1.382,52,0.793,53,2.023,54,0.967,56,1.595,57,1.439,58,2.256,59,2.706,60,2.662,61,1.857,62,1.819,63,1.838,64,1.296,70,2.659,72,2.706,73,1.944,75,1.654,78,1.455,79,4.242,80,2.119,83,1.152,85,2.607,86,2.671,87,2.556,88,4.564,90,1.857,104,2.556,107,3.306,109,2.435,110,1.451,111,1.915,112,1.7,175,3.519,176,4.447,177,3.306,188,2.256,189,2.659,227,2.094,746,2.925,851,3.799,1110,6.937,1849,7.55,1851,8.196,1852,3.407,1853,5.647,1854,3.134,1855,4.969,1856,4.931,1857,3.648,1858,4.969,1859,4.509]],["title/classes/DeleteCardEvent.html",[0,0.356,1853,4.444]],["body/classes/DeleteCardEvent.html",[0,0.413,2,0.288,3,0.037,4,0.043,5,0.043,9,0.159,10,0.954,11,1.727,12,0.742,13,4.368,15,0.288,16,1.637,17,2.006,18,0.185,20,0.3,21,0.003,22,0.181,23,0.262,24,0.272,25,1.181,28,0.043,29,1.519,30,0.002,31,0.002,109,3.432,115,4.166,116,2.563,117,2.067,118,4.166,119,4.283,120,4.166,121,2.724,122,3.049,125,4.166,283,3.312,1853,6.736,1860,10.31]],["title/classes/DeleteCardEventHandler.html",[0,0.356,1135,4.697]],["body/classes/DeleteCardEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,70,5.285,78,1.308,83,1.036,109,2.19,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,180,4.346,195,3.815,1135,7.049,1853,7.911,1854,3.999,1861,9.301,1862,6.34,1863,3.656]],["title/classes/DeleteMailCommand.html",[0,0.356,377,4.074]],["body/classes/DeleteMailCommand.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,9,0.181,10,1.037,11,1.556,12,0.669,15,0.328,16,1.778,17,2.088,18,0.171,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,25,1.02,28,0.049,29,1.729,30,0.002,31,0.002,196,4.58,273,5.863,287,4.52,377,6.709,1864,9.036,1865,6.203,1866,6.65,1867,6.65]],["title/classes/DeleteMailCommandHandler.html",[0,0.356,341,4.697]],["body/classes/DeleteMailCommandHandler.html",[0,0.327,2,0.228,3,0.029,4,0.034,5,0.034,9,0.126,12,0.343,15,0.228,18,0.134,20,0.335,21,0.003,22,0.202,23,0.189,24,0.303,28,0.034,30,0.002,31,0.002,35,1.177,36,1.549,37,3.384,38,1.281,39,1.642,40,2.188,44,3.374,47,2.924,49,1.946,50,0.91,51,1.408,52,0.799,53,2.076,54,0.993,60,3.138,61,1.906,62,1.868,63,1.887,73,1.981,78,1.053,86,2.151,87,2.449,104,2.604,110,2.097,111,2.769,112,2.458,137,2.435,188,2.315,196,3.824,273,4.895,283,2.009,292,2.729,294,1.541,314,1.609,336,2.884,341,7.638,343,6.187,346,3.745,377,6.625,447,2.778,784,2.481,848,4.318,1413,4.085,1414,7.227,1415,5.752,1416,3.745,1422,4.085,1613,2.941,1852,3.497,1854,3.217,1868,8.314,1869,4.085,1870,4.629,1871,6.518,1872,4.318,1873,5.101,1874,4.629,1875,4.629,1876,5.101,1877,5.101,1878,5.101,1879,7.183,1880,6.518,1881,5.101,1882,5.101,1883,5.101,1884,4.629,1885,5.101,1886,4.629,1887,5.101,1888,5.101]],["title/classes/DeleteMailEvent.html",[0,0.356,1869,4.444]],["body/classes/DeleteMailEvent.html",[0,0.384,2,0.267,3,0.034,4,0.04,5,0.04,9,0.148,10,0.909,11,1.702,12,0.732,15,0.358,18,0.18,20,0.279,21,0.003,22,0.168,23,0.255,24,0.253,25,1.2,28,0.04,30,0.002,31,0.002,52,0.471,116,2.753,117,2.22,121,2.595,122,2.905,137,2.716,196,4.629,273,6.229,277,6.417,283,3.155,287,3.637,343,4.1,377,7.389,1852,4.1,1869,6.417,1889,10.064,1890,5.427,1891,9.653,1892,5.981,1893,5.981,1894,5.981,1895,5.427,1896,5.427]],["title/classes/DeleteMailEventHandler.html",[0,0.356,344,4.697]],["body/classes/DeleteMailEventHandler.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,9,0.153,12,0.416,15,0.277,18,0.153,20,0.382,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.428,36,1.769,38,1.462,39,1.815,50,1.104,51,1.607,52,0.725,54,1.205,78,1.278,116,1.694,117,1.366,128,3.7,129,3.3,130,2.549,131,3.613,132,2.549,133,3.3,134,2.313,135,2.361,136,2.492,137,2.779,138,2.18,139,2.201,141,1.97,142,2.549,145,2.244,196,4.229,215,1.68,273,5.762,277,4.958,283,3.229,287,3.722,344,6.94,346,7.185,1854,3.905,1869,7.837,1897,9.193,1898,6.191,1899,6.191]],["title/classes/DeleteOccupationCommand.html",[0,0.356,1900,4.444]],["body/classes/DeleteOccupationCommand.html",[0,0.482,2,0.336,3,0.043,4,0.05,5,0.05,9,0.185,10,1.053,11,1.574,12,0.676,15,0.336,16,1.806,17,2.047,18,0.173,20,0.35,21,0.003,22,0.211,23,0.245,24,0.317,25,1.036,28,0.05,30,0.002,31,0.002,1332,5.296,1465,5.742,1470,3.601,1900,7.431,1901,10.069,1902,6.357,1903,6.357]],["title/classes/DeleteOccupationCommandHandler.html",[0,0.356,1904,4.697]],["body/classes/DeleteOccupationCommandHandler.html",[0,0.344,2,0.24,3,0.03,4,0.036,5,0.036,9,0.132,12,0.499,15,0.332,18,0.139,20,0.346,21,0.003,22,0.209,23,0.196,24,0.314,28,0.036,30,0.002,31,0.002,35,1.236,36,1.604,37,3.475,38,1.326,39,1.686,40,2.265,42,2.96,44,3.421,47,3.027,49,2.044,50,0.956,51,1.458,52,0.79,53,2.182,54,1.043,56,1.72,57,1.552,60,2.807,61,2.002,62,1.962,63,1.982,64,1.398,73,2.05,75,1.784,76,1.924,78,1.534,80,2.285,83,0.875,85,2.366,86,2.557,87,2.317,90,2.002,104,1.943,110,1.565,111,2.066,112,1.834,134,2.002,176,4.69,177,3.566,227,2.258,621,2.646,657,4.474,687,3.225,719,3.061,746,3.155,1333,3.381,1334,4.812,1473,6.531,1474,3.674,1475,3.566,1852,3.674,1863,3.091,1900,7.385,1904,7.226,1905,8.538,1906,2.973,1907,5.36,1908,4.292,1909,5.36]],["title/classes/DeleteOccupationEvent.html",[0,0.356,1910,4.697]],["body/classes/DeleteOccupationEvent.html",[0,0.414,2,0.289,3,0.037,4,0.043,5,0.043,9,0.159,10,0.956,11,1.728,12,0.743,15,0.289,16,1.64,17,1.936,18,0.186,20,0.301,21,0.003,22,0.181,23,0.262,24,0.273,25,1.182,28,0.043,30,0.002,31,0.002,116,2.567,117,2.07,121,2.73,122,3.055,283,3.319,719,4.095,1332,4.935,1470,3.095,1505,4.935,1506,4.935,1508,4.935,1509,4.935,1910,7.134,1911,10.32,1912,5.464]],["title/classes/DeleteOccupationEventHandler.html",[0,0.356,1913,4.697]],["body/classes/DeleteOccupationEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,181,2.254,1482,6.573,1513,4.847,1854,3.999,1863,3.656,1910,8.361,1913,7.049,1914,9.301,1915,6.34]],["title/classes/DeleteProfileCommand.html",[0,0.356,1916,4.242]],["body/classes/DeleteProfileCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,83,1.642,1521,5.495,1916,7.078,1917,10.053,1918,7.837]],["title/classes/DeleteProfileCommandHandler.html",[0,0.356,1919,4.697]],["body/classes/DeleteProfileCommandHandler.html",[0,0.356,2,0.248,3,0.031,4,0.037,5,0.037,9,0.137,12,0.511,15,0.34,18,0.142,20,0.354,21,0.003,22,0.214,23,0.201,24,0.321,28,0.037,30,0.002,31,0.002,35,1.278,36,1.641,37,3.537,38,1.357,39,1.716,40,2.318,42,3.002,44,3.452,47,3.097,49,2.902,50,0.988,51,1.492,52,0.798,53,2.256,54,1.079,56,1.779,57,1.605,64,1.445,73,2.098,75,1.844,76,1.989,78,1.57,80,2.363,83,0.905,85,2.421,86,2.279,87,2.358,90,2.071,104,2.009,110,1.618,134,2.071,158,4.144,160,2.421,163,3.018,164,3.335,166,3.412,181,1.97,1529,6.054,1530,3.412,1533,3.412,1540,3.335,1558,3.412,1852,3.799,1854,3.496,1856,3.335,1906,3.074,1916,7.494,1919,6.441,1920,8.69,1921,6.094,1922,5.542,1923,5.542]],["title/classes/DeleteProfileEvent.html",[0,0.356,1921,4.444]],["body/classes/DeleteProfileEvent.html",[0,0.406,2,0.283,3,0.036,4,0.042,5,0.042,9,0.156,10,0.943,11,1.721,12,0.74,15,0.283,16,1.618,17,1.995,18,0.184,20,0.294,21,0.003,22,0.177,23,0.26,24,0.267,25,1.101,28,0.042,29,1.491,30,0.002,31,0.002,52,0.498,116,2.54,117,2.048,121,2.692,122,3.013,181,3.507,283,3.273,1529,4.091,1568,4.641,1569,6.657,1570,5.062,1571,4.832,1852,4.333,1916,8.044,1921,6.657,1924,10.25]],["title/classes/DeleteProfileEventHandler.html",[0,0.356,1925,4.697]],["body/classes/DeleteProfileEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,181,2.254,195,3.815,1540,5.943,1854,3.999,1863,3.656,1921,7.911,1925,7.049,1926,9.301,1927,6.34,1928,6.34]],["title/classes/DeleteSocialNetworkCommand.html",[0,0.356,1929,4.444]],["body/classes/DeleteSocialNetworkCommand.html",[0,0.472,2,0.329,3,0.042,4,0.049,5,0.049,9,0.182,10,1.039,11,1.559,12,0.67,15,0.329,16,1.782,17,2.031,18,0.171,20,0.342,21,0.003,22,0.206,23,0.242,24,0.311,25,1.022,28,0.049,30,0.002,31,0.002,83,1.629,627,4.154,1084,4.015,1470,3.526,1587,5.622,1590,5.622,1593,5.622,1929,7.334,1930,9.974]],["title/classes/DeleteSocialNetworkCommandHandler.html",[0,0.356,1931,4.697]],["body/classes/DeleteSocialNetworkCommandHandler.html",[0,0.344,2,0.24,3,0.03,4,0.036,5,0.036,9,0.132,12,0.499,15,0.332,18,0.139,20,0.346,21,0.003,22,0.209,23,0.196,24,0.314,28,0.036,30,0.002,31,0.002,35,1.236,36,1.604,37,3.475,38,1.326,39,1.686,40,2.265,42,2.96,44,3.421,47,3.027,49,2.044,50,0.956,51,1.458,52,0.79,53,2.182,54,1.043,56,1.72,57,1.552,64,1.398,73,2.05,78,1.762,80,2.285,83,0.875,85,2.366,86,2.227,87,2.018,90,2.002,134,2.002,189,2.867,227,2.258,626,2.867,627,3.556,629,2.973,659,4.69,689,3.381,746,3.155,1019,2.646,1084,3.899,1327,4.947,1597,6.531,1598,3.674,1600,3.566,1602,3.381,1613,3.091,1615,5.459,1852,3.674,1854,3.381,1856,3.225,1857,5.459,1863,3.091,1929,7.385,1931,6.293,1932,8.538,1933,4.292,1934,5.36,1935,5.36,1936,5.36]],["title/classes/DeleteSocialNetworkEvent.html",[0,0.356,1933,4.444]],["body/classes/DeleteSocialNetworkEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.213,28,0.042,30,0.002,31,0.002,83,1.606,116,2.529,117,2.039,121,2.676,122,2.996,283,3.254,627,4.256,1084,4.424,1330,5.453,1617,4.789,1618,4.599,1619,6.317,1620,4.789,1621,4.789,1622,2.844,1933,6.618,1937,10.22]],["title/classes/DeleteSocialNetworkEventHandler.html",[0,0.356,1938,4.697]],["body/classes/DeleteSocialNetworkEventHandler.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,12,0.417,15,0.278,18,0.153,20,0.383,21,0.003,22,0.231,23,0.217,24,0.347,28,0.041,30,0.002,31,0.002,35,1.432,36,1.772,38,1.465,39,1.818,50,1.107,51,1.61,52,0.726,54,1.208,78,1.281,83,1.014,116,1.698,117,1.37,128,3.706,129,3.307,130,2.556,131,3.616,132,2.556,133,3.307,134,2.32,135,2.368,136,2.499,137,2.105,138,2.186,139,2.207,141,1.976,142,2.556,143,2.586,144,2.586,145,2.251,146,4.257,627,3.834,1019,3.065,1084,3.944,1602,6.18,1854,3.917,1863,3.581,1933,7.847,1938,6.954,1939,9.207,1940,6.21]],["title/classes/DeleteUserCommand.html",[0,0.356,1941,4.444]],["body/classes/DeleteUserCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,564,4.187,1636,5.495,1941,7.415,1942,10.053,1943,7.837]],["title/classes/DeleteUserCommandHandler.html",[0,0.356,1944,4.444]],["body/classes/DeleteUserCommandHandler.html",[0,0.347,2,0.241,3,0.031,4,0.036,5,0.036,9,0.133,10,0.848,11,1.34,15,0.334,18,0.16,20,0.348,21,0.003,22,0.21,23,0.226,24,0.316,28,0.036,30,0.002,31,0.002,35,1.246,36,1.612,37,3.489,38,1.333,39,1.693,40,2.277,42,2.969,44,3.591,45,3.965,47,3.043,49,2.06,50,0.963,51,1.465,52,0.827,53,2.198,54,1.051,56,1.734,57,1.564,60,2.821,61,2.018,62,1.977,63,1.997,64,1.408,73,1.489,75,1.797,78,1.114,85,1.718,86,1.617,87,1.465,110,2.183,111,2.082,112,1.848,215,1.465,252,2.06,646,2.941,666,3.746,676,2.707,1194,2.518,1535,3.594,1536,3.249,1613,4.31,1642,6.879,1670,3.053,1752,3.325,1852,3.702,1854,3.406,1941,7.409,1944,6.865,1945,9.251,1946,4.901,1947,4.325,1948,4.325,1949,5.714,1950,4.571,1951,5.401,1952,5.401,1953,5.401]],["title/classes/DeleteUserEvent.html",[0,0.356,1948,4.444]],["body/classes/DeleteUserEvent.html",[0,0.42,2,0.292,3,0.037,4,0.044,5,0.044,9,0.161,10,0.964,11,1.713,12,0.744,15,0.292,18,0.187,20,0.304,21,0.003,22,0.183,23,0.264,24,0.276,25,1.224,28,0.044,30,0.002,31,0.002,116,2.582,117,2.082,121,2.751,122,3.08,215,2.712,283,3.345,564,4.162,1622,2.967,1745,4.799,1746,3.933,1749,4.799,1948,6.804,1954,10.36,1955,6.495,1956,4.996]],["title/classes/DeleteUserEventHandler.html",[0,0.356,1957,4.697]],["body/classes/DeleteUserEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,195,3.815,215,1.72,1752,6.081,1754,4.218,1854,3.999,1863,3.656,1948,7.911,1957,7.049,1958,9.301,1959,6.34]],["title/entities/DiscountCodeEntity.html",[199,2.073,604,3.93]],["body/entities/DiscountCodeEntity.html",[0,0.401,3,0.024,4,0.028,5,0.028,9,0.104,10,0.846,18,0.191,21,0.003,22,0.259,23,0.292,25,0.698,28,0.028,30,0.002,31,0.002,52,0.587,64,1.097,81,1.838,83,1.218,199,2.335,201,2.017,202,5.274,207,3.217,208,3.475,214,3.257,217,4.021,218,6.471,232,4.42,240,3.233,257,4.778,258,3.856,259,3.92,261,2.142,262,3.856,265,5.489,267,2.077,604,4.426,605,8.297,633,5.825,705,3.818,985,5.557,1058,3.089,1080,5.004,1081,4.588,1091,4.857,1098,2.251,1960,3.818,1961,6.764,1962,7.454,1963,6.764,1964,6.764,1965,6.309,1966,7.454,1967,4.208,1968,4.208,1969,5.67,1970,6.764,1971,4.208,1972,6.249,1973,4.208,1974,5.67,1975,5.67,1976,4.208,1977,4.208,1978,5.67,1979,4.208,1980,4.208,1981,4.208,1982,4.208,1983,6.249,1984,4.208,1985,6.764,1986,7.486,1987,3.217,1988,6.309,1989,4.208]],["title/classes/DuplicateMailException.html",[0,0.356,1674,4.074]],["body/classes/DuplicateMailException.html",[0,0.502,2,0.349,3,0.044,4,0.052,5,0.052,15,0.458,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.616,97,5.201,292,4.182,294,2.361,784,4.984,852,4.812,1089,4.154,1193,5.087,1194,4.433,1672,6.327,1674,6.981,1693,5.536,1990,7.093,1991,7.093,1992,6.616]],["title/classes/DuplicateNameException.html",[0,0.356,1993,4.444]],["body/classes/DuplicateNameException.html",[0,0.505,2,0.352,3,0.045,4,0.053,5,0.053,15,0.46,18,0.147,21,0.003,22,0.221,28,0.053,30,0.002,31,0.002,52,0.621,294,2.378,784,5.001,1089,4.173,1193,5.11,1194,4.453,1672,6.355,1993,7.649,1994,7.875,1995,7.875,1996,7.875,1997,7.875]],["title/classes/DuplicateUsernameException.html",[0,0.356,1671,4.074]],["body/classes/DuplicateUsernameException.html",[0,0.502,2,0.349,3,0.044,4,0.052,5,0.052,15,0.458,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.616,97,5.201,292,4.182,294,2.361,784,4.984,852,4.812,1089,4.154,1193,5.087,1194,4.433,1671,6.981,1672,6.327,1693,5.536,1998,7.093,1999,7.093,2000,7.817]],["title/modules/EntitiesToMoveModule.html",[117,1.224,475,4.242]],["body/modules/EntitiesToMoveModule.html",[0,0.34,3,0.03,4,0.035,5,0.035,21,0.003,28,0.035,30,0.002,31,0.002,52,0.903,57,1.533,65,4.771,67,3.522,117,1.626,160,3.22,161,2.992,199,1.977,200,5.053,202,2.694,205,3.886,223,4.649,263,4.239,272,2.613,294,1.598,320,2.992,332,3.184,333,3.184,431,3.426,475,5.635,497,4.802,522,7.762,598,5.053,600,3.886,602,4.649,604,5.22,606,5.411,607,4.904,609,5.053,611,3.886,612,5.22,614,5.053,616,4.771,617,4.771,619,5.053,621,3.638,623,5.22,626,3.943,628,3.522,629,2.935,630,5.411,632,4.239,633,4.649,635,4.904,637,5.22,641,4.802,707,3.748,1084,2.13,1088,3.426,1254,4.48,1255,4.802,1287,4.802,1288,4.239,1289,4.802,1290,4.802,1291,4.802,1987,4.046,2001,5.293,2002,4.802,2003,4.802,2004,4.802,2005,5.293,2006,5.293,2007,4.802]],["title/classes/EntityCreationException.html",[0,0.356,2008,4.697]],["body/classes/EntityCreationException.html",[0,0.491,2,0.342,3,0.043,4,0.051,5,0.051,15,0.454,18,0.143,21,0.003,28,0.051,30,0.002,31,0.002,52,0.603,199,2.857,294,2.31,467,4.241,717,4.708,784,4.937,1089,4.099,1090,4.601,1193,5.019,1194,4.374,1198,7.941,1200,6.472,2008,7.941,2009,8.513,2010,7.647,2011,7.647,2012,6.939]],["title/classes/ErrorCustomEvent.html",[0,0.356,60,2.095]],["body/classes/ErrorCustomEvent.html",[0,0.425,2,0.296,3,0.038,4,0.044,5,0.044,9,0.163,10,0.972,11,1.736,12,0.746,15,0.296,16,1.667,17,2.024,18,0.187,20,0.308,21,0.003,22,0.186,23,0.265,24,0.279,25,1.189,28,0.044,29,1.561,30,0.002,31,0.002,60,3.233,62,3.808,110,2.773,111,3.66,112,3.249,2013,9.438,2014,6.618,2015,6.618,2016,6.618,2017,6.618,2018,6.618]],["title/classes/ErrorCustomEventHandler.html",[0,0.356,340,4.074]],["body/classes/ErrorCustomEventHandler.html",[0,0.294,2,0.205,3,0.026,4,0.031,5,0.031,9,0.113,10,0.755,12,0.723,15,0.205,18,0.178,20,0.31,21,0.003,22,0.22,23,0.251,24,0.281,25,0.959,28,0.031,30,0.002,31,0.002,35,1.057,36,1.435,38,1.186,45,3.364,48,3.502,50,0.817,52,0.75,54,0.892,60,3.244,62,3.596,63,3.721,73,2.942,76,1.645,87,1.243,110,1.338,121,1.484,122,1.661,128,3.152,129,2.677,131,2.968,133,2.677,135,1.747,136,1.844,138,1.613,139,1.629,141,1.458,188,2.08,227,1.93,242,3.284,340,4.884,393,5.546,400,3.502,486,4.426,500,6.569,1317,4.305,1384,5.75,1396,3.245,1407,4.711,1409,7.106,1410,7.106,1411,7.106,1412,5.987,1417,3.669,1425,3.502,1428,6.036,1429,4.157,1430,6.036,1431,4.157,1432,3.878,1433,4.157,1434,5.63,1438,3.364,2013,8.912,2019,3.669,2020,5.327,2021,3.669,2022,3.878,2023,4.582,2024,4.582,2025,4.582,2026,4.582,2027,3.878,2028,4.157,2029,4.157,2030,3.669,2031,4.582,2032,3.669,2033,4.582,2034,3.878,2035,4.582,2036,3.669]],["title/classes/ErrorExceptionFilter.html",[0,0.356,2037,5.035]],["body/classes/ErrorExceptionFilter.html",[0,0.418,2,0.291,3,0.037,4,0.044,5,0.044,9,0.161,18,0.122,20,0.303,21,0.003,22,0.183,23,0.172,24,0.275,28,0.044,30,0.002,31,0.002,36,1.829,38,1.512,50,1.162,52,0.668,76,3.583,85,3.176,87,1.768,235,4.981,292,5.043,294,1.968,466,5.348,486,5.642,760,5.348,784,4.124,791,4.335,934,5.218,1799,8.553,2037,7.694,2038,8.479,2039,6.516,2040,9.426,2041,8.479,2042,9.983,2043,6.516,2044,7.694,2045,5.912,2046,6.516,2047,6.516,2048,6.516,2049,6.516,2050,4.981,2051,6.516,2052,6.516,2053,6.516,2054,6.516,2055,6.516,2056,6.516]],["title/injectables/ErrorLoggingMiddleware.html",[368,2.162,506,4.697]],["body/injectables/ErrorLoggingMiddleware.html",[0,0.295,3,0.026,4,0.031,5,0.031,9,0.113,10,0.756,12,0.578,15,0.205,18,0.146,20,0.31,21,0.003,22,0.187,23,0.227,24,0.281,28,0.031,30,0.002,31,0.002,36,0.99,38,1.188,39,1.548,50,0.819,52,0.775,73,2.162,75,1.528,76,3.088,78,0.947,85,1.461,86,1.375,87,1.246,110,1.945,113,2.141,117,1.013,131,2.971,138,1.616,139,1.632,141,1.461,294,1.387,314,1.448,368,2.595,369,2.337,393,5.553,400,3.51,447,4.27,466,5.426,500,6.576,506,5.639,524,3.252,525,3.371,526,6.706,527,3.371,528,3.371,529,5.639,530,3.886,531,3.886,532,3.677,760,5.426,785,3.371,786,6.279,791,3.055,1375,5.093,1396,3.252,1407,3.252,1412,5.994,1418,6.576,1421,3.677,1425,5.093,1438,3.371,2019,3.677,2020,5.335,2021,3.677,2027,3.886,2028,4.166,2030,3.677,2032,3.677,2034,3.886,2036,3.677,2057,8.602,2058,3.886,2059,5.335,2060,6.662,2061,5.639,2062,8.602,2063,4.592,2064,5.639,2065,5.335,2066,3.677,2067,3.886,2068,3.886,2069,3.886,2070,3.886,2071,3.886,2072,5.639,2073,3.886,2074,3.886,2075,3.886,2076,3.886,2077,3.886,2078,3.886,2079,4.166,2080,4.166,2081,4.166,2082,4.166,2083,4.166,2084,4.166,2085,4.166,2086,3.886,2087,3.886,2088,3.886,2089,3.886,2090,3.886]],["title/classes/GenerateUserDto.html",[0,0.356,2091,4.444]],["body/classes/GenerateUserDto.html",[0,0.446,2,0.31,3,0.039,4,0.046,5,0.046,9,0.171,10,1.002,11,1.687,12,0.725,15,0.31,16,1.719,17,2.054,18,0.181,20,0.323,21,0.003,22,0.195,23,0.256,24,0.293,25,0.986,28,0.046,29,1.638,30,0.002,31,0.002,52,0.547,287,4.41,305,5.197,307,3.851,741,5.197,1730,5.877,1741,4.918,2091,7.074,2092,10.224,2093,8.833,2094,6.944]],["title/classes/GetAllCardQuery.html",[0,0.356,2095,4.697]],["body/classes/GetAllCardQuery.html",[0,0.557,2,0.388,3,0.049,4,0.058,5,0.058,21,0.003,28,0.058,30,0.002,31,0.002,2095,8.568,2096,6.15,2097,8.683]],["title/classes/GetAllCardQueryHandler.html",[0,0.356,1129,4.697]],["body/classes/GetAllCardQueryHandler.html",[0,0.373,2,0.26,3,0.033,4,0.039,5,0.039,9,0.144,12,0.528,15,0.351,18,0.147,20,0.271,21,0.003,22,0.163,23,0.153,24,0.246,28,0.039,30,0.002,31,0.002,35,1.342,36,1.696,38,1.402,39,1.759,40,2.907,41,3.226,42,3.063,44,3.496,46,4.282,50,1.037,51,1.542,52,0.81,54,1.132,56,1.867,57,1.685,58,2.64,59,3.168,60,2.968,61,2.173,62,2.13,63,2.151,64,1.517,72,3.168,73,2.168,75,1.936,78,1.2,81,2.541,85,1.851,86,1.742,87,1.578,104,2.109,109,2.009,110,2.602,111,2.242,112,1.99,113,2.712,134,2.173,314,1.834,719,2.395,961,2.871,1019,2.871,1129,7.541,1130,8.66,1906,3.226,2095,4.923,2098,6.31,2099,4.211,2100,2.75,2101,2.871,2102,5.817,2103,4.923]],["title/classes/GetAllCardWithProfileIdQuery.html",[0,0.356,2104,4.697]],["body/classes/GetAllCardWithProfileIdQuery.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,9,0.181,10,1.037,11,1.556,12,0.669,15,0.328,16,1.778,17,2.088,18,0.171,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,25,1.02,28,0.049,29,1.729,30,0.002,31,0.002,109,3.44,156,4.991,181,3.54,2096,7.053,2104,7.735,2105,4.743,2106,5.024,2107,5.024]],["title/classes/GetAllCardWithProfileIdQueryHandler.html",[0,0.356,1117,4.697]],["body/classes/GetAllCardWithProfileIdQueryHandler.html",[0,0.31,2,0.216,3,0.027,4,0.032,5,0.032,9,0.119,12,0.542,15,0.309,18,0.129,20,0.322,21,0.003,22,0.194,23,0.182,24,0.292,28,0.032,30,0.002,31,0.002,35,1.115,36,1.491,38,1.233,39,1.594,40,2.106,41,2.68,42,3.204,44,3.321,46,3.764,50,0.862,51,1.355,52,0.787,54,0.941,56,1.551,57,1.4,58,2.194,59,2.632,60,2.609,61,1.806,62,1.769,63,1.787,64,1.26,72,2.632,73,2.225,75,1.608,76,1.735,78,1.426,79,2.908,80,2.061,81,2.112,83,1.129,85,2.568,86,2.417,87,2.19,90,2.583,104,1.752,109,3.219,110,2.357,111,1.863,112,1.654,113,2.253,158,4.395,160,2.112,161,2.732,163,2.632,164,2.908,166,2.975,170,3.87,181,3.313,188,2.194,314,2.18,719,1.99,961,3.412,1019,2.386,1117,6.831,1118,4.796,1146,2.284,1599,3.216,2098,5.716,2099,3.815,2100,2.284,2101,2.386,2104,7.455,2108,3.519,2109,4.833,2110,4.385,2111,3.87,2112,4.833,2113,4.091,2114,3.695]],["title/classes/GetAllCardWithUserIdQuery.html",[0,0.356,2115,4.697]],["body/classes/GetAllCardWithUserIdQuery.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,9,0.181,10,1.037,11,1.556,12,0.669,15,0.328,16,1.778,17,2.088,18,0.171,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,25,1.02,28,0.049,29,1.729,30,0.002,31,0.002,109,3.44,215,2.702,564,4.147,2096,7.053,2105,4.743,2106,5.024,2107,5.024,2115,7.735]],["title/classes/GetAllCardWithUserIdQueryHandler.html",[0,0.356,1119,4.697]],["body/classes/GetAllCardWithUserIdQueryHandler.html",[0,0.341,2,0.238,3,0.03,4,0.036,5,0.036,9,0.131,12,0.497,15,0.331,18,0.138,20,0.344,21,0.003,22,0.208,23,0.195,24,0.312,28,0.036,30,0.002,31,0.002,35,1.227,36,1.595,38,1.319,39,1.679,40,2.253,41,2.95,42,2.95,44,3.413,46,4.028,50,0.948,51,1.45,52,0.788,54,1.035,56,1.707,57,1.54,58,2.414,59,2.897,60,2.792,61,1.987,62,1.948,63,1.967,64,1.387,72,2.897,73,2.039,75,1.77,78,1.098,81,2.324,83,0.869,85,1.692,86,1.593,87,1.443,104,1.928,109,3.336,110,2.483,111,2.05,112,1.82,113,2.48,134,1.987,215,2.621,227,3.117,314,1.677,719,2.19,961,3.651,1019,2.626,1118,5.005,1119,7.197,1146,2.514,1906,2.95,2098,6.022,2099,4.019,2100,2.514,2101,2.626,2103,4.502,2108,3.765,2115,7.779,2116,5.319,2117,4.26,2118,5.319,2119,5.319,2120,3.905]],["title/classes/GetAllMailQuery.html",[0,0.356,379,4.444]],["body/classes/GetAllMailQuery.html",[0,0.553,2,0.385,3,0.049,4,0.058,5,0.058,21,0.003,28,0.058,30,0.002,31,0.002,196,3.961,273,5.07,379,8.068,2121,8.613,2122,8.613]],["title/classes/GetAllMailQueryHandler.html",[0,0.356,347,4.697]],["body/classes/GetAllMailQueryHandler.html",[0,0.367,2,0.256,3,0.032,4,0.038,5,0.038,9,0.141,15,0.256,18,0.145,20,0.362,21,0.003,22,0.218,23,0.205,24,0.328,28,0.038,30,0.002,31,0.002,35,1.32,36,1.677,38,1.387,39,1.745,40,2.369,50,1.02,51,1.525,52,0.806,54,1.114,73,1.578,78,1.181,86,1.714,87,1.553,134,2.138,196,4.064,273,5.581,294,1.728,314,1.805,336,3.235,347,6.583,349,8.023,379,7.591,524,4.053,525,4.201,526,4.201,527,4.201,528,4.201,784,2.783,848,4.843,1146,2.705,1413,4.583,1414,7.591,1415,6.228,1416,4.201,1422,4.583,1870,7.057,1871,7.057,1872,4.843,1874,5.192,1875,5.192,1886,5.192,2099,4.176,2100,2.705,2101,2.825,2108,3.959,2123,8.835,2124,6.583,2125,5.722,2126,5.722,2127,5.722,2128,5.192,2129,5.192,2130,5.192,2131,5.722,2132,5.722,2133,5.722,2134,5.722]],["title/classes/GetAllOccupationQuery.html",[0,0.356,2135,4.444]],["body/classes/GetAllOccupationQuery.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,10,0.992,11,1.679,12,0.722,15,0.305,16,1.701,17,1.978,18,0.18,20,0.318,21,0.003,22,0.192,23,0.254,24,0.288,25,1.135,28,0.046,30,0.002,31,0.002,116,2.637,117,2.126,121,2.831,122,3.169,719,4.184,1470,3.275,2135,7.001,2136,8.602,2137,6.832,2138,6.832,2139,6.832,2140,6.832]],["title/classes/GetAllOccupationQueryHandler.html",[0,0.356,2141,4.697]],["body/classes/GetAllOccupationQueryHandler.html",[0,0.359,2,0.25,3,0.032,4,0.037,5,0.037,9,0.138,12,0.514,15,0.342,18,0.143,20,0.26,21,0.003,22,0.157,23,0.147,24,0.236,28,0.037,30,0.002,31,0.002,35,1.289,36,1.65,38,1.364,39,1.723,40,2.859,42,3.012,44,3.459,50,0.996,51,1.5,52,0.819,54,1.087,56,1.793,57,1.618,60,2.888,61,2.087,62,2.045,63,2.066,64,1.457,73,2.11,78,1.579,86,1.673,87,2.368,104,2.025,107,3.717,110,2.234,111,2.153,112,1.911,113,2.604,188,2.536,189,2.989,314,2.752,621,2.758,657,4.603,687,3.361,719,2.3,1018,3.158,1333,3.523,1474,3.83,1475,3.717,1476,3.956,1477,4.27,2099,4.124,2100,2.641,2101,2.758,2111,4.474,2135,4.474,2141,7.385,2142,7.385,2143,7.943,2144,5.586,2145,5.586,2146,5.586,2147,5.069,2148,4.474,2149,3.83]],["title/classes/GetAllProfileQuery.html",[0,0.356,2150,4.444]],["body/classes/GetAllProfileQuery.html",[0,0.557,2,0.388,3,0.049,4,0.058,5,0.058,21,0.003,28,0.058,30,0.002,31,0.002,2150,8.107,2151,6.954,2152,8.683]],["title/classes/GetAllProfileQueryHandler.html",[0,0.356,2153,4.697]],["body/classes/GetAllProfileQueryHandler.html",[0,0.362,2,0.252,3,0.032,4,0.038,5,0.038,9,0.139,12,0.518,15,0.344,18,0.144,20,0.263,21,0.003,22,0.158,23,0.149,24,0.238,28,0.038,30,0.002,31,0.002,35,1.302,36,1.662,38,1.374,39,1.733,40,2.871,42,3.026,44,3.469,50,1.007,51,1.511,52,0.821,54,1.099,56,1.812,57,1.635,60,2.909,61,2.109,62,2.067,63,2.088,64,1.472,73,2.125,75,1.879,76,2.027,78,1.165,85,1.796,86,1.691,87,2.091,104,2.047,110,2.562,111,2.176,112,1.932,113,2.632,158,4.197,160,2.467,163,3.074,181,3.119,188,2.563,314,1.78,1169,4.861,1530,3.476,1532,3.87,1533,3.476,1906,3.131,2099,4.147,2100,2.669,2101,2.787,2150,4.521,2153,7.426,2154,7.026,2155,7.979,2156,5.646,2157,3.654,2158,5.646,2159,5.123]],["title/classes/GetAllSocialNetworkQuery.html",[0,0.356,2160,4.444]],["body/classes/GetAllSocialNetworkQuery.html",[0,0.553,2,0.385,3,0.049,4,0.058,5,0.058,21,0.003,28,0.058,30,0.002,31,0.002,627,3.587,1084,3.467,2160,8.068,2161,7.29,2162,8.613]],["title/classes/GetAllSocialNetworkQueryHandler.html",[0,0.356,2163,4.697]],["body/classes/GetAllSocialNetworkQueryHandler.html",[0,0.349,2,0.243,3,0.031,4,0.036,5,0.036,9,0.134,12,0.505,15,0.336,18,0.14,20,0.253,21,0.003,22,0.153,23,0.144,24,0.23,28,0.036,30,0.002,31,0.002,35,1.255,36,1.621,38,1.34,39,1.7,40,2.827,42,2.979,44,3.435,50,0.97,51,1.473,52,0.813,54,1.059,56,1.747,57,1.576,60,2.837,61,2.033,62,1.993,63,2.013,64,1.419,73,2.072,78,1.551,86,1.63,87,2.335,104,1.973,107,3.621,110,2.194,111,2.098,112,1.862,113,2.537,188,2.47,189,2.912,314,2.714,626,2.912,627,3.585,629,3.019,659,4.74,689,3.433,1019,2.687,1084,3.92,1327,3.621,1598,3.731,1600,3.621,2099,4.068,2100,2.573,2101,2.687,2111,4.359,2148,4.359,2149,3.731,2160,4.359,2163,7.285,2164,7.285,2165,7.856,2166,3.996,2167,4.359,2168,4.359,2169,5.442,2170,5.442,2171,5.442,2172,4.938,2173,5.442]],["title/classes/GetCardByIdQuery.html",[0,0.356,2174,4.697]],["body/classes/GetCardByIdQuery.html",[0,0.475,2,0.331,3,0.042,4,0.049,5,0.049,9,0.183,10,1.043,11,1.564,12,0.672,15,0.331,16,1.79,17,2.094,18,0.172,20,0.345,21,0.003,22,0.208,23,0.243,24,0.313,25,1.027,28,0.049,29,1.747,30,0.002,31,0.002,83,1.634,109,3.456,2096,7.086,2105,4.793,2106,5.077,2107,5.077,2174,7.785]],["title/classes/GetCardByIdQueryHandler.html",[0,0.356,1131,4.697]],["body/classes/GetCardByIdQueryHandler.html",[0,0.347,2,0.241,3,0.031,4,0.036,5,0.036,9,0.133,12,0.502,15,0.334,18,0.14,20,0.348,21,0.003,22,0.21,23,0.197,24,0.316,28,0.036,30,0.002,31,0.002,35,1.246,36,1.612,38,1.333,39,1.693,40,2.277,41,2.995,42,2.969,44,3.428,46,4.07,50,0.963,51,1.465,52,0.792,54,1.051,56,1.734,57,1.564,58,2.451,59,2.941,60,2.821,61,2.018,62,1.977,63,1.997,64,1.408,72,2.941,73,2.061,75,1.797,78,1.114,79,3.249,80,2.303,81,2.36,83,0.882,85,2.378,86,2.238,87,2.028,88,3.496,90,2.018,104,1.958,109,3.355,110,2.503,111,2.082,112,1.848,113,2.518,134,2.018,314,1.703,719,2.223,961,2.666,1019,2.666,1118,5.038,1131,7.256,1146,2.553,1906,2.995,2098,6.071,2099,4.052,2100,2.553,2101,2.666,2108,3.805,2174,7.83,2175,5.401,2176,4.325]],["title/classes/GetCardWithCriteriaQuery.html",[0,0.356,2177,4.697]],["body/classes/GetCardWithCriteriaQuery.html",[0,0.344,2,0.24,3,0.03,4,0.036,5,0.036,9,0.132,10,0.843,11,1.772,12,0.762,15,0.24,16,1.447,17,1.885,18,0.192,20,0.25,21,0.003,22,0.15,23,0.271,24,0.467,25,1.119,28,0.036,29,1.265,30,0.002,31,0.002,52,0.422,109,3.619,121,1.736,122,1.943,242,4.552,950,5.526,953,5.681,955,6.047,956,5.681,967,6.322,1005,3.566,1045,4.812,1185,3.796,2096,7.422,2177,6.293,2178,4.097,2179,5.026,2180,4.536,2181,5.36,2182,5.36,2183,4.863,2184,5.36,2185,5.36,2186,5.36]],["title/classes/GetCardWithCriteriaQueryHandler.html",[0,0.356,1120,4.697]],["body/classes/GetCardWithCriteriaQueryHandler.html",[0,0.295,2,0.205,3,0.026,4,0.031,5,0.031,9,0.113,12,0.448,15,0.298,18,0.124,20,0.31,21,0.003,22,0.187,23,0.176,24,0.281,28,0.031,30,0.002,31,0.002,35,1.059,36,1.437,38,1.188,39,1.548,40,2.029,41,2.547,42,2.761,44,3.271,46,3.628,50,0.819,51,1.306,52,0.751,54,0.894,56,1.474,57,1.33,58,2.084,59,2.5,60,2.515,61,1.715,62,1.681,63,1.698,64,1.197,72,2.5,73,1.837,75,1.528,76,1.648,78,0.947,81,2.006,85,2.12,86,1.995,87,1.808,104,1.664,107,3.055,109,3.155,110,2.29,111,1.77,112,1.571,113,2.141,134,1.715,227,1.935,314,2.101,447,4.974,746,2.703,950,2.972,953,3.055,955,3.252,956,3.055,961,2.267,967,2.896,1018,2.596,1019,2.267,1120,6.637,1121,5.064,1146,2.17,1906,2.547,2098,5.553,2099,3.706,2100,2.17,2101,2.267,2108,3.392,2113,3.886,2114,5.093,2117,3.677,2149,3.148,2177,7.281,2187,4.592,2188,5.093,2189,4.592,2190,7.513,2191,4.166,2192,6.662,2193,6.662,2194,6.662,2195,6.662,2196,6.662,2197,4.592]],["title/classes/GetCardWithCriteriaRequest.html",[0,0.356,2198,5.035]],["body/classes/GetCardWithCriteriaRequest.html",[0,0.434,2,0.302,3,0.038,4,0.045,5,0.045,9,0.167,10,0.986,11,1.675,12,0.72,15,0.302,16,1.691,17,2.038,18,0.179,20,0.315,21,0.003,22,0.19,23,0.253,24,0.442,25,0.97,28,0.045,29,1.596,30,0.002,31,0.002,109,3.498,121,2.191,122,2.453,242,4.289,1045,5.623,2179,5.65,2198,7.884,2199,10.126,2200,5.418,2201,9.597,2202,5.727,2203,6.766,2204,5.418]],["title/classes/GetOccupationByIdQuery.html",[0,0.356,2205,4.444]],["body/classes/GetOccupationByIdQuery.html",[0,0.477,2,0.332,3,0.042,4,0.05,5,0.05,9,0.184,10,1.046,11,1.566,12,0.673,15,0.332,16,1.794,17,2.039,18,0.172,20,0.346,21,0.003,22,0.209,23,0.243,24,0.314,25,1.029,28,0.05,30,0.002,31,0.002,719,4.126,1332,5.271,1470,3.563,2105,4.81,2106,5.095,2107,5.095,2136,8.482,2205,7.382]],["title/classes/GetOccupationByIdQueryHandler.html",[0,0.356,2206,4.697]],["body/classes/GetOccupationByIdQueryHandler.html",[0,0.348,2,0.242,3,0.031,4,0.036,5,0.036,9,0.134,12,0.503,15,0.335,18,0.14,20,0.349,21,0.003,22,0.21,23,0.197,24,0.316,28,0.036,30,0.002,31,0.002,35,1.249,36,1.615,38,1.335,39,1.695,40,2.281,42,2.973,44,3.43,50,0.965,51,1.468,52,0.812,54,1.054,56,1.738,57,1.568,60,2.826,61,2.023,62,1.982,63,2.002,64,1.412,73,2.065,78,1.545,80,2.309,83,0.884,86,1.621,87,2.329,90,2.023,104,1.963,110,2.187,111,2.087,112,1.853,113,2.524,188,2.458,189,2.897,314,2.361,621,2.673,657,4.505,687,3.258,719,4.002,1118,5.043,1146,2.559,1333,3.415,1334,3.504,1474,3.712,1475,3.603,1476,3.835,1477,4.139,2099,4.057,2100,2.559,2101,2.673,2108,3.812,2142,7.265,2147,4.913,2148,4.336,2205,7.417,2206,7.265,2207,5.415,2208,5.415,2209,4.913]],["title/classes/GetOccupationWithCriteriaDto.html",[0,0.356,2210,4.444]],["body/classes/GetOccupationWithCriteriaDto.html",[0,0.45,2,0.313,3,0.04,4,0.047,5,0.047,9,0.173,10,1.008,11,1.691,12,0.727,15,0.313,16,1.73,17,1.997,18,0.182,20,0.327,21,0.003,22,0.288,23,0.257,24,0.296,25,0.992,28,0.047,30,0.002,31,0.002,242,4.388,719,4.225,1470,3.362,2179,5.745,2210,7.119,2211,10.262,2212,5.936,2213,7.013,2214,6.363,2215,6.363]],["title/classes/GetOccupationWithCriteriaQuery.html",[0,0.356,2216,4.444]],["body/classes/GetOccupationWithCriteriaQuery.html",[0,0.466,2,0.324,3,0.041,4,0.048,5,0.048,9,0.179,10,1.03,11,1.549,12,0.666,15,0.324,16,1.767,17,2.021,18,0.17,20,0.338,21,0.003,22,0.204,23,0.239,24,0.306,28,0.048,30,0.002,31,0.002,52,0.572,719,4.276,1470,3.477,2136,8.389,2178,5.545,2180,6.139,2210,7.938,2216,7.271,2217,7.277,2218,7.253,2219,5.325,2220,5.325]],["title/classes/GetOccupationWithCriteriaQueryHandler.html",[0,0.356,2221,4.697]],["body/classes/GetOccupationWithCriteriaQueryHandler.html",[0,0.332,2,0.231,3,0.029,4,0.035,5,0.035,9,0.128,12,0.487,15,0.324,18,0.135,20,0.338,21,0.003,22,0.204,23,0.191,24,0.306,28,0.035,30,0.002,31,0.002,35,1.194,36,1.565,38,1.294,39,1.655,40,2.21,42,2.915,44,3.388,50,0.923,51,1.423,52,0.802,54,1.007,56,1.661,57,1.499,60,2.739,61,1.934,62,1.895,63,1.914,64,1.35,73,2.001,75,1.722,76,2.605,78,1.068,85,1.647,86,1.55,87,1.969,104,1.876,110,2.447,111,1.995,112,1.771,113,2.413,188,2.349,189,2.769,227,2.181,314,1.632,621,2.555,657,4.366,687,3.114,719,4.191,746,3.047,1018,2.926,1121,5.347,1146,2.447,1474,3.548,1475,3.444,1476,5.139,1477,3.957,2099,3.961,2100,2.447,2101,2.555,2108,3.694,2142,7.093,2188,3.957,2190,3.957,2216,7.274,2221,7.093,2222,5.176,2223,5.176,2224,5.176,2225,7.257,2226,5.176,2227,7.257,2228,4.381,2229,5.176]],["title/classes/GetOccupationWithCriteriaRequest.html",[0,0.356,2230,4.444]],["body/classes/GetOccupationWithCriteriaRequest.html",[0,0.45,2,0.313,3,0.04,4,0.047,5,0.047,9,0.173,10,1.008,11,1.691,12,0.727,15,0.313,16,1.73,17,1.997,18,0.182,20,0.327,21,0.003,22,0.288,23,0.257,24,0.296,25,0.992,28,0.047,30,0.002,31,0.002,242,4.388,719,4.225,1470,3.362,2179,5.745,2200,5.616,2202,5.936,2204,5.616,2230,7.119,2231,10.262,2232,6.363]],["title/classes/GetProfileByIdQuery.html",[0,0.356,2233,4.444]],["body/classes/GetProfileByIdQuery.html",[0,0.475,2,0.331,3,0.042,4,0.049,5,0.049,9,0.183,10,1.043,11,1.564,12,0.672,15,0.331,16,1.79,17,2.094,18,0.172,20,0.345,21,0.003,22,0.208,23,0.243,24,0.313,25,1.027,28,0.049,29,1.747,30,0.002,31,0.002,83,1.634,181,3.557,2105,4.793,2151,8.013,2233,7.366,2234,8.347]],["title/classes/GetProfileByIdQueryHandler.html",[0,0.356,2235,4.697]],["body/classes/GetProfileByIdQueryHandler.html",[0,0.344,2,0.24,3,0.03,4,0.036,5,0.036,9,0.132,12,0.499,15,0.332,18,0.139,20,0.346,21,0.003,22,0.209,23,0.196,24,0.314,28,0.036,30,0.002,31,0.002,35,1.236,36,1.604,38,1.326,39,1.686,40,2.265,42,2.96,44,3.421,50,0.956,51,1.458,52,0.81,54,1.043,56,1.72,57,1.552,60,2.807,61,2.002,62,1.962,63,1.982,64,1.398,73,2.05,75,1.784,78,1.106,80,2.285,81,2.342,83,0.875,85,1.705,86,1.605,87,2.018,104,1.943,110,2.493,111,2.066,112,1.834,113,2.499,158,4.049,160,2.342,163,2.919,164,3.225,181,3.563,188,2.433,189,2.867,215,1.454,314,1.69,564,2.232,1118,5.021,1146,2.533,1169,4.69,1530,3.3,1532,3.674,1533,3.3,2099,4.036,2100,2.533,2101,2.646,2108,3.785,2154,6.837,2176,4.292,2233,7.385,2235,7.226,2236,5.36,2237,4.536,2238,5.36]],["title/classes/GetProfileWithCriteriaDto.html",[0,0.356,2239,4.444]],["body/classes/GetProfileWithCriteriaDto.html",[0,0.409,2,0.285,3,0.036,4,0.043,5,0.043,9,0.158,10,0.949,11,1.724,12,0.741,15,0.285,16,1.627,17,2,18,0.185,20,0.297,21,0.003,22,0.179,23,0.261,24,0.454,25,0.933,28,0.043,29,1.505,30,0.002,31,0.002,52,0.503,181,3.654,242,4.128,1212,4.128,1561,6.207,1562,6.038,1564,6.207,1566,4.373,2179,5.492,2212,5.399,2214,7.587,2239,6.696,2240,10.28,2241,5.788,2242,6.378]],["title/classes/GetProfileWithCriteriaQuery.html",[0,0.356,2243,4.444]],["body/classes/GetProfileWithCriteriaQuery.html",[0,0.464,2,0.323,3,0.041,4,0.048,5,0.048,9,0.179,10,1.028,11,1.547,12,0.665,15,0.323,16,1.763,17,2.079,18,0.169,20,0.337,21,0.003,22,0.203,23,0.239,24,0.305,28,0.048,29,1.706,30,0.002,31,0.002,52,0.57,181,3.688,2151,7.925,2178,5.526,2219,5.307,2220,5.307,2239,8.731,2243,7.256,2244,8.221]],["title/classes/GetProfileWithCriteriaQueryHandler.html",[0,0.356,2245,4.697]],["body/classes/GetProfileWithCriteriaQueryHandler.html",[0,0.332,2,0.231,3,0.029,4,0.035,5,0.035,9,0.128,12,0.487,15,0.324,18,0.135,20,0.338,21,0.003,22,0.204,23,0.191,24,0.306,28,0.035,30,0.002,31,0.002,35,1.194,36,1.565,38,1.294,39,1.655,40,2.21,42,2.915,44,3.388,50,0.923,51,1.423,52,0.802,54,1.007,56,1.661,57,1.499,60,2.739,61,1.934,62,1.895,63,1.914,64,1.35,73,2.001,75,1.722,76,2.605,78,1.068,85,1.647,86,1.55,87,1.969,104,1.876,110,2.447,111,1.995,112,1.771,113,2.413,158,3.952,160,2.261,163,2.819,181,3.619,188,2.349,189,2.769,227,2.181,314,1.632,746,3.047,1121,5.347,1146,2.447,1169,4.577,1530,3.186,1532,3.548,1533,3.186,1562,4.697,2099,3.961,2100,2.447,2101,2.555,2108,3.694,2154,6.711,2157,3.35,2159,4.697,2188,3.957,2190,3.957,2228,4.381,2243,7.274,2245,7.093,2246,5.176,2247,5.176,2248,5.176,2249,7.257,2250,5.176]],["title/classes/GetProfilesByUserIdQuery.html",[0,0.356,2251,4.444]],["body/classes/GetProfilesByUserIdQuery.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,9,0.181,10,1.037,11,1.556,12,0.669,15,0.328,16,1.778,17,2.088,18,0.171,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,25,1.02,28,0.049,29,1.729,30,0.002,31,0.002,83,1.627,215,2.702,2105,4.743,2151,7.975,2157,6.445,2234,8.292,2251,7.319]],["title/classes/GetProfilesByUserIdQueryHandler.html",[0,0.356,2252,4.697]],["body/classes/GetProfilesByUserIdQueryHandler.html",[0,0.342,2,0.238,3,0.03,4,0.036,5,0.036,9,0.132,12,0.498,15,0.331,18,0.138,20,0.345,21,0.003,22,0.208,23,0.195,24,0.313,28,0.036,30,0.002,31,0.002,35,1.23,36,1.598,38,1.321,39,1.681,40,2.257,42,3.295,50,0.951,51,1.452,52,0.809,54,1.038,56,1.712,57,1.544,64,1.391,73,2.043,75,1.775,76,1.914,78,1.1,80,2.274,81,2.33,83,0.871,85,2.357,86,2.219,87,2.31,90,1.992,110,1.557,158,4.035,160,2.33,163,2.904,181,2.634,188,2.421,215,2.623,252,2.034,264,2.715,314,2.337,666,4.267,676,2.673,1118,5.01,1146,2.521,1169,4.673,1530,3.283,1532,3.656,1533,3.283,1542,4.077,1544,3.451,1558,3.283,1947,4.271,2099,4.025,2100,2.521,2101,2.632,2108,3.772,2154,6.819,2157,5.955,2176,4.271,2251,7.369,2252,6.271,2253,5.333,2254,5.333]],["title/classes/GetProfilesWithCriteriaRequest.html",[0,0.356,2255,4.444]],["body/classes/GetProfilesWithCriteriaRequest.html",[0,0.409,2,0.285,3,0.036,4,0.043,5,0.043,9,0.158,10,0.949,11,1.724,12,0.741,15,0.285,16,1.627,17,2,18,0.185,20,0.297,21,0.003,22,0.179,23,0.261,24,0.454,25,0.933,28,0.043,29,1.505,30,0.002,31,0.002,52,0.503,242,4.128,1212,4.128,1561,6.207,1562,6.038,1564,6.207,1566,4.373,2157,6.653,2179,5.492,2200,5.108,2204,6.696,2255,6.696,2256,10.28,2257,6.378,2258,6.378]],["title/classes/GetSavedCardWithProfileIdQuery.html",[0,0.356,2259,4.697]],["body/classes/GetSavedCardWithProfileIdQuery.html",[0,0.466,2,0.324,3,0.041,4,0.048,5,0.048,9,0.179,10,1.03,11,1.549,12,0.666,15,0.324,16,1.767,17,2.081,18,0.17,20,0.338,21,0.003,22,0.204,23,0.239,24,0.306,25,1.014,28,0.048,29,1.711,30,0.002,31,0.002,109,3.423,155,5.835,156,4.968,181,3.523,2096,7.02,2105,4.695,2106,4.973,2107,4.973,2259,7.685]],["title/classes/GetSavedCardWithProfileIdQueryHandler.html",[0,0.356,1122,4.697]],["body/classes/GetSavedCardWithProfileIdQueryHandler.html",[0,0.317,2,0.221,3,0.028,4,0.033,5,0.033,9,0.122,12,0.548,15,0.314,18,0.131,20,0.327,21,0.003,22,0.197,23,0.185,24,0.296,28,0.033,30,0.002,31,0.002,35,1.138,36,1.513,38,1.251,39,1.612,40,2.137,41,2.737,42,3.223,44,3.342,46,3.821,50,0.88,51,1.375,52,0.791,54,0.96,56,1.584,57,1.429,58,2.24,59,2.687,60,2.648,61,1.844,62,1.807,63,1.825,64,1.287,72,2.687,73,2.251,75,1.642,76,1.771,78,1.448,80,2.104,81,2.156,83,1.146,85,2.232,86,2.101,87,1.904,90,1.844,104,1.789,109,3.244,110,2.384,111,1.902,112,1.688,113,2.3,155,5.235,158,4.446,160,3.065,161,2.789,163,2.687,164,2.969,166,3.038,167,5.619,170,3.952,181,3.339,188,2.24,314,1.556,719,2.031,961,2.436,1019,2.436,1118,4.842,1122,6.91,1146,2.332,1599,3.283,2098,5.782,2099,3.859,2100,2.332,2101,2.436,2103,4.176,2108,3.572,2110,4.477,2259,7.526,2260,4.934]],["title/classes/GetSavedCardWithUserIdQuery.html",[0,0.356,2261,4.697]],["body/classes/GetSavedCardWithUserIdQuery.html",[0,0.466,2,0.324,3,0.041,4,0.048,5,0.048,9,0.179,10,1.03,11,1.549,12,0.666,15,0.324,16,1.767,17,2.081,18,0.17,20,0.338,21,0.003,22,0.204,23,0.239,24,0.306,25,1.014,28,0.048,29,1.711,30,0.002,31,0.002,109,3.423,155,5.835,215,2.689,564,4.128,2096,7.02,2105,4.695,2106,4.973,2107,4.973,2261,7.685]],["title/classes/GetSavedCardWithUserIdQueryHandler.html",[0,0.356,1123,4.697]],["body/classes/GetSavedCardWithUserIdQueryHandler.html",[0,0.308,2,0.215,3,0.027,4,0.032,5,0.032,9,0.119,12,0.54,15,0.307,18,0.128,20,0.32,21,0.003,22,0.193,23,0.181,24,0.29,28,0.032,30,0.002,31,0.002,35,1.107,36,1.484,38,1.227,39,1.588,40,2.095,41,2.662,42,3.197,44,3.315,46,3.746,50,0.856,51,1.349,52,0.785,54,0.934,56,1.541,57,1.39,58,2.179,59,2.614,60,2.597,61,1.793,62,1.757,63,1.775,64,1.252,72,2.614,73,2.217,75,1.597,76,1.723,78,1.42,79,2.888,80,2.047,81,2.097,83,1.124,85,2.189,86,2.06,87,1.867,90,1.793,104,1.74,109,3.21,110,2.348,111,1.85,112,1.642,113,2.238,155,5.169,167,5.509,188,2.179,215,2.624,252,1.831,264,2.444,314,2.169,666,4.029,676,2.406,719,1.976,818,4.355,961,2.369,1019,2.369,1118,4.782,1123,6.805,1146,2.269,1542,3.669,1544,3.107,1599,3.194,2098,5.694,2099,3.8,2100,2.269,2101,2.369,2108,3.502,2111,3.844,2113,4.063,2114,3.669,2120,3.524,2261,7.432,2262,4.8,2263,4.8]],["title/classes/GetSocialNetworkByIdQuery.html",[0,0.356,2264,4.444]],["body/classes/GetSocialNetworkByIdQuery.html",[0,0.466,2,0.324,3,0.041,4,0.048,5,0.048,9,0.179,10,1.03,11,1.549,12,0.666,15,0.324,16,1.767,17,2.081,18,0.17,20,0.338,21,0.003,22,0.204,23,0.239,24,0.306,25,1.014,28,0.048,29,1.711,30,0.002,31,0.002,83,1.619,627,4.128,1084,3.99,1330,5.497,2105,4.695,2106,4.973,2107,4.973,2161,8.389,2264,7.271]],["title/classes/GetSocialNetworkByIdQueryHandler.html",[0,0.356,2265,4.697]],["body/classes/GetSocialNetworkByIdQueryHandler.html",[0,0.34,2,0.237,3,0.03,4,0.035,5,0.035,9,0.131,12,0.495,15,0.329,18,0.138,20,0.343,21,0.003,22,0.207,23,0.194,24,0.311,28,0.035,30,0.002,31,0.002,35,1.221,36,1.59,38,1.314,39,1.675,40,2.245,42,2.944,44,3.409,50,0.944,51,1.445,52,0.807,54,1.03,56,1.699,57,1.533,60,2.782,61,1.977,62,1.938,63,1.957,64,1.38,73,2.032,78,1.521,80,2.257,83,0.864,86,1.585,87,2.301,90,1.977,104,1.919,110,2.152,111,2.04,112,1.811,113,2.467,188,2.402,189,2.832,314,2.324,626,2.832,627,3.532,629,2.935,659,4.649,689,3.338,1019,2.613,1084,3.691,1118,4.994,1146,2.502,1327,3.522,1330,5.087,1598,3.628,1600,3.522,1615,3.886,2099,4.009,2100,2.502,2101,2.613,2108,3.752,2148,4.239,2164,7.178,2166,3.886,2167,4.239,2168,4.239,2172,4.802,2176,4.239,2264,7.345,2265,7.178,2266,5.293,2267,4.802]],["title/classes/GetSocialNetworkWithCriteriaQuery.html",[0,0.356,2268,4.444]],["body/classes/GetSocialNetworkWithCriteriaQuery.html",[0,0.426,2,0.297,3,0.038,4,0.044,5,0.044,9,0.164,10,0.974,11,1.667,12,0.716,15,0.297,16,1.67,17,2.026,18,0.178,20,0.309,21,0.003,22,0.282,23,0.251,24,0.402,25,0.958,28,0.044,29,1.566,30,0.002,31,0.002,121,2.15,122,2.406,242,4.236,627,4.187,1045,5.555,1084,4.047,1330,5.576,2161,8.51,2178,5.075,2179,5.599,2183,6.024,2268,6.873,2269,6.639,2270,6.639]],["title/classes/GetSocialNetworkWithCriteriaQueryHandler.html",[0,0.356,2271,4.697]],["body/classes/GetSocialNetworkWithCriteriaQueryHandler.html",[0,0.325,2,0.226,3,0.029,4,0.034,5,0.034,9,0.125,12,0.48,15,0.319,18,0.133,20,0.333,21,0.003,22,0.201,23,0.188,24,0.302,28,0.034,30,0.002,31,0.002,35,1.168,36,1.541,38,1.274,39,1.635,40,2.177,42,2.887,44,3.367,50,0.903,51,1.401,52,0.797,54,0.986,56,1.626,57,1.467,60,2.698,61,1.892,62,1.854,63,1.873,64,1.321,73,1.971,75,1.685,76,2.565,78,1.045,85,1.611,86,1.517,87,1.939,104,1.836,110,2.418,111,1.952,112,1.733,113,2.361,188,2.299,189,2.71,227,2.134,314,1.597,626,2.71,627,3.449,629,2.809,659,4.508,689,3.194,746,2.982,1019,4.088,1084,3.621,1121,5.296,1146,2.394,1330,4.989,1598,3.472,1600,3.37,2099,3.914,2100,2.394,2101,2.5,2108,3.638,2164,7.009,2166,5.247,2167,4.056,2168,4.056,2188,3.872,2190,3.872,2191,4.595,2228,4.287,2268,7.204,2271,7.009,2272,5.064,2273,5.064,2274,7.146,2275,5.064,2276,7.146,2277,5.064,2278,5.064]],["title/classes/GetSocialNetworkWithCriteriaRequest.html",[0,0.356,2279,4.444]],["body/classes/GetSocialNetworkWithCriteriaRequest.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,10,0.992,11,1.679,12,0.722,15,0.305,16,1.701,17,1.978,18,0.18,20,0.318,21,0.003,22,0.285,23,0.254,24,0.288,25,0.976,28,0.046,30,0.002,31,0.002,242,4.315,627,4.232,1084,4.091,1330,5.637,1470,3.275,2179,5.676,2200,5.471,2202,5.782,2204,5.471,2232,6.199,2279,7.001,2280,10.163]],["title/classes/GetUserByEmailQuery.html",[0,0.356,2281,4.697]],["body/classes/GetUserByEmailQuery.html",[0,0.484,2,0.337,3,0.043,4,0.05,5,0.05,9,0.186,10,1.055,11,1.453,12,0.677,15,0.337,18,0.174,20,0.351,21,0.003,22,0.212,23,0.245,24,0.318,25,1.175,28,0.05,30,0.002,31,0.002,215,2.736,1220,6.072,1622,3.422,2281,7.871,2282,7.404,2283,7.538,2284,7.538,2285,7.538,2286,7.538]],["title/classes/GetUserByEmailQueryHandler.html",[0,0.356,2287,4.697]],["body/classes/GetUserByEmailQueryHandler.html",[0,0.38,2,0.264,3,0.034,4,0.04,5,0.04,9,0.146,15,0.355,18,0.148,20,0.37,21,0.003,22,0.223,23,0.21,24,0.336,28,0.04,30,0.002,31,0.002,35,1.364,36,1.715,38,1.418,39,1.774,40,2.422,42,3.084,50,1.055,51,1.559,52,0.79,54,1.151,56,1.898,57,1.713,64,1.542,73,1.631,75,1.968,78,1.22,83,0.966,85,1.882,86,1.771,90,2.21,110,2.322,195,3.559,207,2.552,214,2.584,215,2.607,252,2.256,287,3.61,314,1.865,646,3.221,666,3.986,676,2.964,738,2.964,741,3.164,1146,2.796,1317,3.828,1670,3.343,2099,4.247,2100,2.796,2101,2.919,2108,4.049,2281,8.133,2287,6.731,2288,6.597,2289,8.719,2290,5.914,2291,4.342,2292,5.914,2293,4.342,2294,5.006]],["title/classes/GetUserByUsernameQuery.html",[0,0.356,2295,4.697]],["body/classes/GetUserByUsernameQuery.html",[0,0.484,2,0.337,3,0.043,4,0.05,5,0.05,9,0.186,10,1.055,11,1.453,12,0.677,15,0.337,18,0.174,20,0.351,21,0.003,22,0.212,23,0.245,24,0.318,25,1.175,28,0.05,30,0.002,31,0.002,215,2.736,735,4.977,1622,3.422,2282,7.404,2295,7.871,2296,7.538,2297,6.037,2298,7.538,2299,7.538]],["title/classes/GetUserByUsernameQueryHandler.html",[0,0.356,2300,4.697]],["body/classes/GetUserByUsernameQueryHandler.html",[0,0.38,2,0.264,3,0.034,4,0.04,5,0.04,9,0.146,15,0.355,18,0.148,20,0.37,21,0.003,22,0.223,23,0.21,24,0.336,28,0.04,30,0.002,31,0.002,35,1.364,36,1.715,38,1.418,39,1.774,40,2.422,42,3.084,50,1.055,51,1.559,52,0.79,54,1.151,56,1.898,57,1.713,64,1.542,73,1.631,75,1.968,78,1.22,83,0.966,85,1.882,86,1.771,90,2.21,110,2.322,195,3.559,207,2.552,214,2.584,215,2.607,252,2.256,314,1.865,646,3.221,666,3.986,676,2.964,735,3.759,738,2.964,741,3.164,1146,2.796,1317,3.828,1670,3.343,2099,4.247,2100,2.796,2101,2.919,2108,4.049,2288,6.597,2291,4.342,2293,4.342,2294,5.006,2295,8.133,2300,6.731,2301,8.719,2302,5.914,2303,5.367]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[0,0.356,2304,4.444]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,10,0.992,11,1.642,12,0.722,15,0.305,18,0.18,20,0.318,21,0.003,22,0.192,23,0.254,24,0.288,25,1.235,28,0.046,30,0.002,31,0.002,215,2.758,564,4.375,752,5.534,777,5.983,1622,3.101,2282,7.461,2304,7.001,2305,6.832,2306,8.139,2307,6.199,2308,6.832,2309,8.742]],["title/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[0,0.356,2310,4.697]],["body/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[0,0.333,2,0.232,3,0.029,4,0.035,5,0.035,9,0.128,15,0.325,18,0.136,20,0.339,21,0.003,22,0.204,23,0.192,24,0.307,28,0.035,30,0.002,31,0.002,35,1.197,36,1.568,38,1.296,39,1.657,40,2.214,42,2.918,44,3.39,50,0.925,51,1.425,52,0.803,54,1.01,56,1.665,57,1.503,60,2.744,61,1.939,62,1.9,63,1.919,64,1.353,73,2.004,75,1.727,76,2.609,78,1.5,83,1.187,85,1.651,87,1.408,104,1.881,110,2.45,111,2,112,1.775,188,2.355,189,2.776,215,2.821,252,1.979,287,2.355,314,1.636,646,2.826,666,3.643,675,5.148,676,2.6,735,2.453,741,2.776,744,3.675,752,4.951,777,5.353,1146,2.453,1670,2.933,2099,3.966,2100,2.453,2101,2.561,2108,3.701,2120,3.809,2288,6.16,2293,3.809,2304,7.281,2310,7.102,2311,7.696,2312,5.189,2313,4.155,2314,7.269,2315,5.189,2316,5.189]],["title/classes/GetUserLoginQuery.html",[0,0.356,920,4.444]],["body/classes/GetUserLoginQuery.html",[0,0.45,2,0.313,3,0.04,4,0.047,5,0.047,9,0.173,10,1.008,11,1.655,12,0.727,15,0.313,18,0.182,20,0.327,21,0.003,22,0.197,23,0.257,24,0.296,25,1.241,28,0.047,30,0.002,31,0.002,215,2.784,735,4.85,909,8.48,920,7.119,1622,3.183,2282,7.534,2297,5.616,2317,7.013,2318,7.013,2319,8.889]],["title/classes/GetUserLoginQueryHandler.html",[0,0.356,876,4.444]],["body/classes/GetUserLoginQueryHandler.html",[0,0.274,2,0.191,3,0.024,4,0.029,5,0.029,9,0.106,15,0.283,18,0.14,20,0.35,21,0.003,22,0.211,23,0.198,24,0.318,25,1.037,28,0.029,30,0.002,31,0.002,35,0.986,36,1.364,38,1.127,39,1.834,40,1.926,42,2.669,44,3.198,48,3.269,50,1.127,51,1.63,52,0.794,54,0.832,56,1.372,57,1.238,64,1.115,73,2.447,75,1.423,76,2.27,78,1.831,83,1.033,85,1.36,86,2.49,87,1.716,90,2.363,110,2.197,207,2.729,208,2.948,214,2.763,215,2.408,252,1.631,287,3.416,292,2.288,294,1.291,314,2.373,646,2.328,666,3.169,675,4.479,676,2.143,735,3.557,738,3.169,741,3.383,744,4.479,784,2.08,850,5.352,851,4.834,852,3.893,869,5.352,870,3.619,876,5.064,878,7.106,909,3.424,920,6.659,926,5.738,1146,2.021,1416,3.139,1613,3.646,1670,2.417,1752,2.632,2099,3.557,2100,2.021,2101,2.111,2108,3.219,2288,6.104,2293,4.643,2294,5.352,2303,5.738,2320,5.738,2321,5.738,2322,7.545,2323,4.276,2324,3.424,2325,3.88,2326,4.276,2327,9.29,2328,6.324,2329,6.324,2330,6.324,2331,3.88]],["title/classes/GetUserQuery.html",[0,0.356,917,4.242]],["body/classes/GetUserQuery.html",[0,0.484,2,0.337,3,0.043,4,0.05,5,0.05,9,0.186,10,1.055,11,1.453,12,0.677,15,0.337,18,0.174,20,0.351,21,0.003,22,0.212,23,0.245,24,0.426,25,1.175,28,0.05,30,0.002,31,0.002,564,4.385,917,7.109,1622,3.422,1746,4.535,1759,5.534,2282,7.404,2332,7.538,2333,7.538,2334,7.538]],["title/classes/GetUserQueryHandler.html",[0,0.356,2335,4.697]],["body/classes/GetUserQueryHandler.html",[0,0.364,2,0.254,3,0.032,4,0.038,5,0.038,9,0.14,15,0.346,18,0.144,20,0.36,21,0.003,22,0.217,23,0.204,24,0.327,28,0.038,30,0.002,31,0.002,35,1.309,36,1.668,38,1.379,39,1.737,40,2.356,42,3.032,50,1.012,51,1.516,52,0.823,54,1.105,56,1.822,57,1.644,64,1.48,73,1.565,76,2.037,78,1.596,83,0.927,87,1.54,188,2.577,215,1.54,252,2.165,314,2.439,646,3.091,666,3.876,676,2.845,800,5.146,917,7.222,919,7.566,1146,2.683,1670,3.209,1906,3.148,2099,4.159,2100,2.683,2101,2.802,2108,3.937,2120,5.679,2288,6.459,2291,4.167,2335,6.547,2336,4.546,2337,7.996,2338,5.676,2339,5.676,2340,5.676,2341,5.676,2342,5.676,2343,5.676,2344,5.676]],["title/classes/GetUserWithCriteriaDto.html",[0,0.356,2345,4.242]],["body/classes/GetUserWithCriteriaDto.html",[0,0.296,2,0.206,3,0.026,4,0.031,5,0.031,9,0.114,10,0.758,11,1.799,12,0.773,15,0.206,16,1.301,17,1.781,18,0.197,20,0.215,21,0.003,22,0.129,23,0.279,24,0.475,25,1.065,28,0.031,29,1.088,30,0.002,31,0.002,215,2.899,232,4.501,242,3.299,287,3.568,735,3.716,2179,4.628,2212,3.903,2215,4.184,2241,4.184,2345,5.109,2346,10.683,2347,7.861,2348,7.861,2349,7.861,2350,7.861,2351,6.295,2352,7.861,2353,7.861,2354,6.683,2355,4.612,2356,4.612,2357,4.612,2358,4.612,2359,4.612,2360,4.612,2361,4.612]],["title/classes/GetUserWithCriteriaQuery.html",[0,0.356,2362,4.444]],["body/classes/GetUserWithCriteriaQuery.html",[0,0.472,2,0.329,3,0.042,4,0.049,5,0.049,9,0.182,10,1.039,11,1.431,12,0.67,15,0.329,18,0.171,20,0.342,21,0.003,22,0.206,23,0.242,24,0.311,28,0.049,30,0.002,31,0.002,52,0.58,215,2.832,1622,3.338,2178,5.622,2180,6.225,2219,5.399,2220,5.399,2244,6.673,2282,7.323,2345,8.652,2362,7.334,2363,7.354]],["title/classes/GetUserWithCriteriaQueryHandler.html",[0,0.356,2364,4.697]],["body/classes/GetUserWithCriteriaQueryHandler.html",[0,0.369,2,0.257,3,0.033,4,0.038,5,0.038,9,0.142,15,0.349,18,0.146,20,0.364,21,0.003,22,0.219,23,0.206,24,0.33,28,0.038,30,0.002,31,0.002,35,1.327,36,1.684,38,1.392,39,1.75,40,2.378,42,3.05,50,1.026,51,1.53,52,0.783,54,1.12,56,1.847,57,1.666,64,1.5,73,1.586,76,2.065,195,3.462,215,2.578,227,2.424,252,2.194,646,3.133,666,3.912,676,2.884,746,3.387,1121,5.593,1146,2.72,1317,3.724,1670,3.252,2099,4.188,2100,2.72,2101,2.84,2108,3.974,2188,4.398,2190,4.398,2288,6.504,2362,7.609,2364,6.607,2365,5.753,2366,5.753,2367,5.753,2368,7.806,2369,7.806,2370,5.753,2371,5.753,2372,5.753,2373,5.753,2374,5.753,2375,5.753,2376,5.753]],["title/entities/GroupEntity.html",[199,2.073,607,3.692]],["body/entities/GroupEntity.html",[0,0.392,3,0.023,4,0.027,5,0.027,9,0.101,10,0.83,18,0.186,21,0.003,22,0.228,23,0.262,25,0.907,28,0.027,30,0.001,31,0.001,52,0.685,64,1.064,83,1.195,199,2.281,201,1.955,202,5.158,207,3.158,208,3.411,214,3.197,217,3.918,220,2.51,226,5.694,227,4.439,228,5.257,229,6.138,232,3.847,240,3.158,257,3.158,258,3.785,259,3.848,261,2.076,262,3.785,267,2.013,602,5.123,607,4.062,609,5.569,611,2.994,616,2.639,617,6.125,703,4.323,707,4.323,715,5.964,1024,4.062,1027,5.569,1028,4.323,1040,5.539,1045,5.257,1048,4.323,1082,4.868,1083,5.016,1091,4.272,1098,2.182,1219,6.193,1254,3.452,1262,3.7,1268,6.505,1742,5.167,2377,4.078,2378,7.317,2379,7.317,2380,7.317,2381,6.105,2382,6.105,2383,4.078,2384,6.105,2385,4.078,2386,4.078,2387,4.078,2388,4.078,2389,6.105,2390,4.078,2391,4.078,2392,4.667,2393,4.078,2394,6.105,2395,4.078,2396,4.078,2397,4.078]],["title/entities/GroupMembershipEntity.html",[199,2.073,609,3.804]],["body/entities/GroupMembershipEntity.html",[0,0.307,3,0.027,4,0.032,5,0.032,9,0.118,10,0.911,18,0.186,21,0.003,22,0.134,23,0.263,25,0.767,28,0.032,30,0.002,31,0.002,52,0.691,58,4.387,64,1.249,81,2.092,83,1.312,109,2.773,121,2.224,199,2.566,201,2.296,202,5.184,207,3.465,208,3.744,214,3.508,217,3.92,224,4.228,227,2.894,228,5.677,229,5.533,232,4.072,240,3.553,257,2.477,258,4.154,259,4.223,260,4.831,261,2.438,262,4.154,447,2.608,607,6.431,609,4.708,610,7.784,707,6.212,709,4.346,1034,5.5,1035,5.5,1091,5.083,1098,2.562,1212,3.1,1288,3.835,2351,6.43,2398,4.789,2399,6.868,2400,4.789,2401,4.789,2402,4.789,2403,6.868,2404,4.789,2405,4.789,2406,6.796,2407,4.789,2408,4.789,2409,4.789,2410,3.516,2411,4.789]],["title/classes/GroupMembershipResponse.html",[0,0.356,1158,4.697]],["body/classes/GroupMembershipResponse.html",[0,0.36,2,0.251,3,0.032,4,0.038,5,0.038,9,0.139,10,0.871,11,1.782,12,0.766,15,0.251,16,1.494,17,1.917,18,0.194,20,0.262,21,0.003,22,0.158,23,0.275,24,0.44,25,1.135,28,0.038,29,1.325,30,0.002,31,0.002,83,1.429,156,4.385,202,5.395,207,3.776,214,3.823,232,3.963,242,3.79,1158,6.499,1190,9.616,2179,5.151,2412,5.616,2413,8.75,2414,5.616,2415,5.616,2416,5.616,2417,5.616,2418,5.616,2419,5.616,2420,5.616]],["title/controllers/HealthCheckController.html",[270,2.919,2421,4.697]],["body/controllers/HealthCheckController.html",[0,0.376,3,0.033,4,0.039,5,0.039,9,0.145,18,0.109,21,0.003,28,0.039,30,0.002,31,0.002,38,1.41,50,1.046,51,1.55,52,0.788,137,3.389,141,1.866,217,2.31,270,3.085,272,2.895,276,4.021,291,3.796,294,1.771,299,3.903,300,3.316,314,1.85,418,4.484,442,6.693,443,4.868,446,6.045,447,3.194,453,6.693,456,4.484,457,4.964,459,4.484,460,4.964,461,4.964,463,5.322,467,3.253,468,4.697,494,6.693,1766,6.84,1767,5.806,1769,8.573,1778,4.484,1779,4.964,1780,4.964,2421,6.693,2422,5.865,2423,11.143,2424,5.865,2425,9.576,2426,5.865,2427,9.576,2428,4.484,2429,5.322,2430,5.322,2431,5.865,2432,5.865,2433,5.865]],["title/modules/HealthCheckModule.html",[117,1.224,476,4.242]],["body/modules/HealthCheckModule.html",[0,0.423,3,0.037,4,0.044,5,0.044,21,0.003,28,0.044,30,0.002,31,0.002,52,0.839,54,1.284,112,2.925,117,1.885,121,2.137,272,4.219,294,1.992,320,3.729,321,4.832,328,5.143,329,3.969,330,3.969,332,5.143,333,3.969,337,5.391,476,8.138,494,5.584,522,8.49,1766,8.138,1767,4.843,1769,6.845,1777,5.584,2007,5.986,2421,8.026,2428,5.043,2429,5.986,2430,5.986,2434,5.986,2435,5.986,2436,6.597,2437,8.548,2438,6.597,2439,7.235,2440,6.597]],["title/classes/HealthCheckQuery.html",[0,0.356,1775,4.444]],["body/classes/HealthCheckQuery.html",[0,0.555,2,0.387,3,0.049,4,0.058,5,0.058,21,0.003,28,0.058,30,0.002,31,0.002,1767,6.349,1775,8.088,2441,8.648,2442,8.648]],["title/classes/HealthCheckQueryHandler.html",[0,0.356,2439,4.697]],["body/classes/HealthCheckQueryHandler.html",[0,0.329,2,0.229,3,0.029,4,0.034,5,0.034,9,0.127,15,0.322,18,0.135,20,0.239,21,0.003,22,0.144,23,0.135,24,0.216,28,0.034,30,0.002,31,0.002,35,1.182,36,1.555,38,1.285,39,1.646,40,2.755,44,3.378,50,0.914,51,1.937,52,0.713,54,0.998,73,2.628,78,1.058,87,1.391,314,1.616,882,5.772,934,4.105,1416,3.763,1767,6.12,1769,4.105,1775,4.105,1777,7.654,1778,5.51,1779,4.338,1780,4.338,2059,4.105,2099,3.94,2100,2.423,2428,3.918,2439,6.1,2443,8.336,2444,5.126,2445,9.883,2446,10.152,2447,10.152,2448,10.152,2449,5.126,2450,5.126,2451,5.126,2452,5.126,2453,5.126,2454,5.126,2455,7.207,2456,7.207,2457,7.207,2458,5.126,2459,5.126,2460,5.126,2461,9.044,2462,7.207,2463,5.126,2464,5.126,2465,5.126,2466,4.651,2467,5.126,2468,5.126,2469,5.126,2470,5.126,2471,4.651,2472,5.126,2473,5.126,2474,5.126,2475,5.126]],["title/classes/HealthCheckResponse.html",[0,0.356,1778,4.242]],["body/classes/HealthCheckResponse.html",[0,0.475,2,0.331,3,0.042,4,0.049,5,0.049,9,0.183,10,1.043,11,1.438,12,0.672,15,0.331,18,0.172,20,0.345,21,0.003,22,0.208,23,0.243,24,0.313,28,0.049,30,0.002,31,0.002,52,0.584,1622,3.362,1767,7.346,1778,7.032,2428,5.661,2476,10.006,2477,7.406,2478,10.465,2479,7.406,2480,10.761,2481,7.406,2482,7.406]],["title/classes/IdProfileDto.html",[0,0.356,2483,5.035]],["body/classes/IdProfileDto.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,83,1.642,1560,5.994,2483,8.401,2484,10.053,2485,9.259]],["title/classes/InvalidIdException.html",[0,0.356,1949,4.242]],["body/classes/InvalidIdException.html",[0,0.482,2,0.336,3,0.043,4,0.05,5,0.05,15,0.336,18,0.14,20,0.35,21,0.003,22,0.211,23,0.198,24,0.317,25,1.124,28,0.05,30,0.002,31,0.002,52,0.592,83,1.227,292,4.019,294,2.268,717,5.712,784,4.897,852,4.624,1089,4.054,1193,4.964,1194,4.326,1536,5.583,1759,5.514,1949,7.093,2486,7.511,2487,9.279,2488,7.511,2489,6.816]],["title/classes/InvalidMailException.html",[0,0.356,1682,4.444]],["body/classes/InvalidMailException.html",[0,0.504,2,0.351,3,0.045,4,0.052,5,0.052,15,0.459,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.618,292,4.197,294,2.369,784,4.992,852,4.83,1089,4.164,1193,5.099,1194,4.443,1536,5.734,1682,7.632,1990,7.119,1991,7.119,1992,6.64,2490,7.846]],["title/classes/InvalidParameterEntityException.html",[0,0.356,1534,4.074]],["body/classes/InvalidParameterEntityException.html",[0,0.551,2,0.297,3,0.038,4,0.044,5,0.044,15,0.297,18,0.124,20,0.4,21,0.003,22,0.186,23,0.226,24,0.28,28,0.044,30,0.002,31,0.002,52,0.676,76,2.383,267,3.277,292,3.552,294,2.005,314,2.706,467,3.682,717,4.087,784,4.626,852,5.283,1089,3.75,1090,3.994,1193,4.592,1194,4.001,1534,6.301,1536,5.164,1537,6.078,1697,4.874,2491,6.024,2492,8.582,2493,10.411,2494,6.639,2495,6.639,2496,7.788,2497,6.024,2498,6.639,2499,6.639,2500,6.639,2501,6.639,2502,6.639]],["title/classes/InvalidPasswordException.html",[0,0.356,1680,4.242]],["body/classes/InvalidPasswordException.html",[0,0.479,2,0.333,3,0.042,4,0.05,5,0.05,15,0.449,18,0.139,21,0.003,28,0.05,30,0.002,31,0.002,52,0.588,292,3.99,294,2.252,738,4.63,784,4.882,852,4.591,985,4.487,1089,4.036,1090,4.487,1193,4.943,1194,4.307,1536,5.559,1680,7.062,1697,5.476,1729,5.973,2503,6.767,2504,6.767,2505,7.458,2506,7.458,2507,10.037,2508,7.458,2509,9.239,2510,7.458]],["title/classes/InvalidUsernameException.html",[0,0.356,1683,4.444]],["body/classes/InvalidUsernameException.html",[0,0.502,2,0.349,3,0.044,4,0.052,5,0.052,15,0.458,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.616,292,4.182,294,2.361,735,3.695,784,4.984,852,4.812,1089,4.154,1193,5.087,1194,4.433,1536,5.721,1683,7.615,1998,7.093,1999,7.093,2044,7.093,2489,7.093]],["title/entities/InvoicesEntity.html",[199,2.073,612,3.93]],["body/entities/InvoicesEntity.html",[0,0.288,3,0.016,4,0.018,5,0.018,9,0.068,10,0.645,18,0.192,21,0.003,22,0.274,23,0.299,24,0.19,25,1.158,28,0.018,30,0.001,31,0.001,52,0.448,64,0.718,81,1.204,83,0.928,121,0.892,199,1.029,201,1.321,202,5.279,207,2.453,208,2.65,214,2.483,217,4.052,218,7.167,219,8.173,220,6.282,221,7.452,224,1.696,226,2.702,227,1.161,232,3.262,240,2.323,257,5.176,258,2.94,259,2.989,260,2.702,261,1.402,262,2.94,265,6.495,266,7.25,267,1.36,269,7.051,443,4.444,467,1.528,612,3.18,633,4.883,728,4.345,950,3.679,985,5.447,1071,3.18,1091,4.072,1098,1.474,1961,5.158,1969,4.075,1970,2.5,1986,7.025,1987,2.106,1988,2.332,2511,2.755,2512,7.219,2513,5.684,2514,5.684,2515,5.684,2516,5.684,2517,5.684,2518,7.219,2519,5.684,2520,5.684,2521,5.684,2522,5.684,2523,2.755,2524,4.49,2525,2.755,2526,4.49,2527,2.755,2528,4.49,2529,2.755,2530,4.49,2531,2.755,2532,4.49,2533,2.755,2534,4.49,2535,2.755,2536,2.755,2537,2.755,2538,2.755,2539,2.755,2540,7.219,2541,2.755,2542,2.755,2543,2.755,2544,4.49,2545,2.755,2546,2.755,2547,2.755,2548,4.49,2549,5.684,2550,2.755,2551,4.49,2552,2.755,2553,4.49,2554,2.755,2555,2.755,2556,4.49,2557,2.755,2558,4.075,2559,2.755,2560,2.755,2561,2.755,2562,2.755,2563,2.755,2564,2.755,2565,2.755,2566,2.755]],["title/classes/IsCardOwnerWithUserIdQuery.html",[0,0.356,2567,4.697]],["body/classes/IsCardOwnerWithUserIdQuery.html",[0,0.437,2,0.304,3,0.039,4,0.046,5,0.046,9,0.168,10,0.99,11,1.678,12,0.721,13,4.488,15,0.304,16,1.698,17,2.042,18,0.18,20,0.317,21,0.003,22,0.191,23,0.254,24,0.288,25,1.133,28,0.046,29,1.607,30,0.002,31,0.002,109,3.506,215,2.754,564,4.009,961,5.011,2105,4.407,2106,4.668,2107,4.668,2567,7.384,2568,9.211,2569,6.81]],["title/classes/IsCardOwnerWithUserIdQueryHandler.html",[0,0.356,1124,4.697]],["body/classes/IsCardOwnerWithUserIdQueryHandler.html",[0,0.331,2,0.23,3,0.029,4,0.034,5,0.034,9,0.127,12,0.486,15,0.323,18,0.135,20,0.337,21,0.003,22,0.203,23,0.191,24,0.305,28,0.034,30,0.002,31,0.002,35,1.188,36,1.56,38,1.289,39,1.65,40,2.203,41,2.857,42,2.909,44,3.383,46,3.938,50,0.918,51,1.418,52,0.78,54,1.002,56,1.653,57,1.492,58,2.338,59,2.805,60,2.73,61,1.924,62,1.886,63,1.905,64,1.343,72,2.805,73,1.994,75,1.714,76,1.849,78,1.063,79,3.099,80,2.196,81,2.25,83,0.841,85,2.301,86,2.166,87,1.962,88,3.334,90,1.924,104,1.867,109,3.419,110,2.441,111,1.985,112,1.762,113,2.401,134,1.924,215,2.59,314,1.624,961,4.886,1118,4.935,1124,7.074,1146,2.435,1906,2.857,2099,3.951,2100,2.435,2108,3.682,2117,4.125,2120,5.31,2567,7.671,2570,7.584,2571,4.674,2572,5.151,2573,5.151]],["title/classes/IsProfileOwnerWithUserIsQuery.html",[0,0.356,2574,4.697]],["body/classes/IsProfileOwnerWithUserIsQuery.html",[0,0.437,2,0.304,3,0.039,4,0.046,5,0.046,9,0.168,10,0.99,11,1.678,12,0.721,15,0.304,16,1.698,17,2.042,18,0.18,20,0.317,21,0.003,22,0.191,23,0.254,24,0.288,25,1.133,28,0.046,29,1.607,30,0.002,31,0.002,156,4.824,181,3.608,215,2.754,564,4.009,961,5.011,2568,9.211,2574,7.384,2575,6.81,2576,6.81,2577,6.81,2578,6.81]],["title/classes/IsProfileOwnerWithUserIsQueryHandler.html",[0,0.356,1126,4.697]],["body/classes/IsProfileOwnerWithUserIsQueryHandler.html",[0,0.322,2,0.224,3,0.028,4,0.034,5,0.034,9,0.124,12,0.553,15,0.317,18,0.133,20,0.331,21,0.003,22,0.199,23,0.187,24,0.3,28,0.034,30,0.002,31,0.002,35,1.157,36,1.531,38,1.266,39,1.627,40,2.162,42,3.239,44,3.358,50,0.894,51,1.392,52,0.795,54,0.976,56,1.61,57,1.453,60,2.679,61,1.874,62,1.837,63,1.855,64,1.308,73,2.272,75,1.669,76,1.801,78,1.035,80,2.139,81,2.192,83,0.819,85,2.258,86,2.126,87,1.926,90,1.874,104,1.818,110,2.406,111,1.933,112,1.716,113,2.339,158,3.865,160,2.192,161,2.836,163,2.732,164,3.018,166,3.088,181,3.489,188,2.277,215,2.565,252,1.913,264,2.554,314,1.582,666,4.129,676,2.514,961,4.666,1118,4.486,1126,6.973,1146,2.371,1530,3.088,1599,3.338,2099,3.894,2100,2.371,2108,3.614,2117,4.017,2120,5.211,2570,7.475,2571,4.552,2574,7.582,2579,5.016,2580,5.016,2581,5.016]],["title/classes/IsTestEnvironmentPipe.html",[0,0.356,569,4.697]],["body/classes/IsTestEnvironmentPipe.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,18,0.128,20,0.318,21,0.003,22,0.192,23,0.18,24,0.288,28,0.046,30,0.002,31,0.002,36,1.886,38,1.559,50,1.218,52,0.538,86,2.046,87,1.854,122,3.169,292,3.655,294,2.063,314,2.154,524,4.838,525,5.016,526,5.016,527,5.016,528,5.016,540,7.078,569,7.399,570,7.932,784,3.323,1795,6.199,2128,6.199,2129,6.199,2130,6.199,2582,6.832,2583,9.641,2584,8.742,2585,8.742,2586,10.504,2587,8.748,2588,10.163,2589,6.832,2590,6.832,2591,6.199]],["title/entities/JoinedConversation.html",[199,2.073,614,3.804]],["body/entities/JoinedConversation.html",[0,0.327,3,0.029,4,0.034,5,0.034,9,0.126,10,0.942,18,0.189,21,0.003,22,0.143,23,0.267,25,1.006,28,0.034,30,0.002,31,0.002,52,0.654,64,1.327,81,2.223,83,1.356,160,4.308,161,2.877,181,2.951,199,2.679,201,2.44,202,5.266,207,3.583,208,3.871,214,3.628,217,3.989,224,4.414,232,4.155,240,3.709,257,4.295,258,4.295,259,4.367,260,4.996,261,2.591,262,4.295,602,5.686,614,4.916,615,7.908,616,3.294,703,6.731,713,4.618,1091,5.186,1098,2.723,1268,6.649,2592,5.089,2593,8.303,2594,5.089,2595,5.089,2596,5.089,2597,5.089,2598,5.089,2599,5.089,2600,5.089,2601,5.089,2602,5.089,2603,5.089,2604,5.089]],["title/injectables/JwtAuthenticationGuard.html",[368,2.162,2605,5.035]],["body/injectables/JwtAuthenticationGuard.html",[0,0.527,3,0.047,4,0.055,5,0.055,21,0.003,28,0.055,30,0.002,31,0.002,52,0.772,121,2.659,294,2.48,368,3.816,369,4.18,863,5.629,1089,3.588,2605,8.888,2606,7.451,2607,8.211,2608,6.95,2609,7.451]],["title/injectables/JwtRefreshGuard.html",[368,2.162,792,4.444]],["body/injectables/JwtRefreshGuard.html",[0,0.521,3,0.046,4,0.054,5,0.054,21,0.003,28,0.054,30,0.002,31,0.002,52,0.767,121,2.629,294,2.451,368,3.789,369,4.132,752,5.297,777,4.778,792,7.79,863,5.564,1089,3.546,2606,7.365,2608,6.87,2609,7.365,2610,8.117]],["title/injectables/JwtRefreshTokenStrategy.html",[368,2.162,857,4.444]],["body/injectables/JwtRefreshTokenStrategy.html",[0,0.355,3,0.031,4,0.037,5,0.037,9,0.137,12,0.371,15,0.247,18,0.142,20,0.354,21,0.003,22,0.213,23,0.2,24,0.321,25,0.617,28,0.037,30,0.002,31,0.002,38,1.354,39,1.714,50,0.986,51,1.489,52,0.832,76,1.984,78,1.141,141,1.759,227,2.329,294,1.67,314,2.395,327,6.383,354,4.226,368,2.959,369,2.814,752,5.088,757,3.915,760,6.538,776,4.57,777,3.254,789,5.016,790,4.226,791,3.678,857,6.083,863,3.79,869,6.429,870,4.679,912,7.143,913,4.679,914,4.679,928,7.345,937,5.016,944,4.679,1089,2.415,1090,3.326,2306,4.427,2611,8.678,2612,5.528,2613,5.528,2614,5.528,2615,7.596,2616,5.528,2617,4.679,2618,5.016,2619,4.679,2620,4.427,2621,6.083,2622,4.679,2623,5.016,2624,5.016,2625,6.892,2626,6.083,2627,5.016,2628,5.528,2629,5.528]],["title/injectables/JwtStrategy.html",[368,2.162,858,4.444]],["body/injectables/JwtStrategy.html",[0,0.373,3,0.033,4,0.039,5,0.039,9,0.144,12,0.391,15,0.351,18,0.147,20,0.366,21,0.003,22,0.221,23,0.207,24,0.332,25,0.649,28,0.039,30,0.002,31,0.002,38,1.402,39,1.759,42,3.063,50,1.037,51,1.542,52,0.842,56,1.867,57,1.685,64,1.517,73,1.604,78,1.2,83,0.95,252,2.219,264,2.961,294,1.757,314,2.48,368,3.063,369,2.961,646,3.168,666,3.941,676,2.915,760,5.62,776,4.732,791,3.87,858,6.298,863,3.988,885,5.278,912,7.296,913,4.923,914,4.923,928,4.923,944,4.923,1089,2.541,1090,3.5,2291,4.27,2617,4.923,2618,5.278,2619,4.923,2620,4.658,2621,4.658,2622,4.923,2623,5.278,2624,5.278,2625,5.278,2626,4.658,2627,5.278,2630,5.817,2631,5.817,2632,7.864,2633,5.817]],["title/classes/ListRolesDto.html",[0,0.356,2634,4.697]],["body/classes/ListRolesDto.html",[0,0.47,2,0.328,3,0.042,4,0.049,5,0.049,9,0.181,10,1.037,11,1.556,12,0.669,15,0.328,16,1.778,17,2.088,18,0.171,20,0.341,21,0.003,22,0.206,23,0.241,24,0.309,28,0.049,29,1.729,30,0.002,31,0.002,52,0.578,305,5.328,307,4.065,741,5.328,1741,5.191,2634,7.735,2635,9.958,2636,7.329,2637,7.329,2638,7.329]],["title/injectables/LocalAuthenticationGuard.html",[368,2.162,787,4.697]],["body/injectables/LocalAuthenticationGuard.html",[0,0.531,3,0.047,4,0.055,5,0.055,21,0.003,28,0.055,30,0.002,31,0.002,52,0.775,294,2.499,368,3.833,369,4.213,787,8.329,863,5.673,1089,3.616,2608,7.004,2639,8.275,2640,8.275]],["title/injectables/LocalStrategy.html",[368,2.162,859,4.444]],["body/injectables/LocalStrategy.html",[0,0.406,3,0.036,4,0.042,5,0.042,9,0.156,15,0.283,18,0.155,20,0.387,21,0.003,22,0.233,23,0.219,24,0.351,25,1.175,28,0.042,30,0.002,31,0.002,38,1.482,39,1.834,50,1.127,51,1.629,52,0.808,141,2.011,252,2.411,264,3.218,294,1.909,314,1.993,368,3.238,369,3.218,738,5.137,776,5.001,782,7.244,783,5.35,859,6.657,863,4.333,895,6.354,1089,2.762,1090,3.803,2617,5.35,2619,5.35,2620,5.062,2622,5.35,2641,9.288,2642,6.321,2643,6.321,2644,6.321,2645,8.312,2646,8.312,2647,6.321,2648,5.736,2649,6.321,2650,6.321,2651,6.321]],["title/classes/LoggingTypeEnum.html",[0,0.356,1396,3.93]],["body/classes/LoggingTypeEnum.html",[0,0.432,2,0.3,3,0.038,4,0.045,5,0.045,9,0.166,10,0.982,12,0.748,18,0.179,21,0.003,23,0.252,25,1.068,28,0.045,30,0.002,31,0.002,110,3.052,121,3.099,122,3.468,196,4.647,466,6.593,760,6.593,1396,6.128,2021,8.09,2652,6.1,2653,10.108,2654,6.723,2655,6.723,2656,6.723]],["title/classes/LoginOfUserEvent.html",[0,0.356,2324,4.444]],["body/classes/LoginOfUserEvent.html",[0,0.42,2,0.292,3,0.037,4,0.044,5,0.044,9,0.161,10,0.964,11,1.713,12,0.744,15,0.292,18,0.187,20,0.304,21,0.003,22,0.183,23,0.264,24,0.276,25,1.224,28,0.044,30,0.002,31,0.002,116,2.582,117,2.082,121,2.751,122,3.08,215,2.712,735,4.724,895,6.495,1622,2.967,1745,4.799,1749,4.799,1955,6.495,1956,4.996,2297,5.234,2324,6.804,2657,10.36]],["title/classes/LoginOfUserEventHandler.html",[0,0.356,2658,4.697]],["body/classes/LoginOfUserEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,195,3.815,215,1.72,735,2.997,1752,6.081,2324,7.911,2325,5.753,2658,7.049,2659,9.301,2660,6.34,2661,6.34,2662,6.34]],["title/classes/MailDto.html",[0,0.356,410,4.444]],["body/classes/MailDto.html",[0,0.542,2,0.289,3,0.037,4,0.043,5,0.043,9,0.16,10,0.958,15,0.289,16,1.643,17,2.01,18,0.186,20,0.302,21,0.003,22,0.182,23,0.263,24,0.436,25,1.182,28,0.043,29,1.528,30,0.002,31,0.002,52,0.666,196,4.751,217,3.701,265,5.619,267,3.197,300,3.661,410,6.763,717,5.785,1085,6.456,1220,5.419,1382,7.777,2663,6.476,2664,7.526,2665,6.476,2666,6.476,2667,6.476,2668,6.476,2669,6.476]],["title/classes/MailLandingPageDto.html",[0,0.356,2124,4.697]],["body/classes/MailLandingPageDto.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,10,0.992,11,1.642,12,0.722,15,0.305,18,0.18,20,0.318,21,0.003,22,0.192,23,0.254,24,0.288,25,1.235,28,0.046,30,0.002,31,0.002,83,1.66,196,4.675,273,6.512,287,4.768,1618,5.016,1622,3.101,2124,7.399,2670,10.163,2671,6.832,2672,6.832,2673,8.742]],["title/classes/MailRequiredException.html",[0,0.356,2674,4.697]],["body/classes/MailRequiredException.html",[0,0.504,2,0.351,3,0.045,4,0.052,5,0.052,15,0.459,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.618,292,4.197,294,2.369,784,4.992,852,4.83,1089,4.164,1193,5.099,1194,4.443,1992,6.64,2674,8.066,2675,8.647,2676,7.846,2677,7.846,2678,6.283]],["title/classes/MailResponse.html",[0,0.356,301,4.444]],["body/classes/MailResponse.html",[0,0.477,2,0.332,3,0.042,4,0.05,5,0.05,9,0.184,10,1.046,11,1.566,12,0.673,15,0.332,16,1.794,17,2.039,18,0.172,20,0.346,21,0.003,22,0.209,23,0.243,24,0.314,25,1.029,28,0.05,30,0.002,31,0.002,196,4.609,273,5.9,287,4.549,301,7.382,1470,3.563,2679,7.432,2680,7.432,2681,7.432]],["title/entities/MediaEntity.html",[199,2.073,617,3.592]],["body/entities/MediaEntity.html",[0,0.239,3,0.021,4,0.025,5,0.025,9,0.092,10,0.786,11,1.082,18,0.191,21,0.003,22,0.105,23,0.269,25,0.866,28,0.025,30,0.001,31,0.001,52,0.659,58,4.003,64,0.972,81,1.628,83,1.131,160,4.399,161,2.106,199,2.13,201,1.786,202,5.264,207,2.989,208,3.229,214,3.026,217,4.022,223,6.351,228,6.764,229,6.592,232,3.716,240,2.949,257,3.582,258,3.582,259,3.642,261,1.897,262,3.582,263,2.984,607,6.106,617,3.69,707,5.494,715,2.735,1048,6.499,1083,6.489,1091,4.638,1098,1.993,1288,2.984,2410,2.735,2682,3.726,2683,6.925,2684,6.925,2685,6.925,2686,6.925,2687,6.925,2688,6.925,2689,6.925,2690,6.925,2691,5.701,2692,3.726,2693,5.701,2694,3.726,2695,5.701,2696,3.726,2697,3.726,2698,3.726,2699,5.701,2700,3.726,2701,5.701,2702,3.726,2703,3.726,2704,3.726,2705,5.701,2706,3.726,2707,5.701,2708,3.726,2709,3.726]],["title/entities/MessageEntity.html",[199,2.073,619,3.804]],["body/entities/MessageEntity.html",[0,0.326,3,0.029,4,0.034,5,0.034,9,0.125,10,0.941,11,1.54,18,0.189,21,0.003,22,0.142,23,0.267,25,1.005,28,0.034,30,0.002,31,0.002,52,0.653,58,4.472,64,1.324,81,2.218,83,1.354,199,2.674,201,2.434,202,5.263,207,3.579,208,3.866,214,3.623,217,3.987,224,4.407,228,4.633,229,4.515,232,4.151,240,3.703,257,4.29,258,4.29,259,4.361,260,4.989,261,2.584,262,4.29,446,6.339,602,5.68,616,3.286,619,4.907,703,6.725,717,3.125,1091,5.182,1098,2.716,2410,3.727,2710,5.077,2711,7.524,2712,7.159,2713,5.077,2714,5.077,2715,7.159,2716,5.077,2717,5.077,2718,5.077,2719,5.077,2720,5.077]],["title/classes/NoUserTraceException.html",[0,0.356,2721,5.035]],["body/classes/NoUserTraceException.html",[0,0.498,2,0.347,3,0.044,4,0.052,5,0.052,15,0.457,18,0.145,21,0.003,28,0.052,30,0.002,31,0.002,52,0.611,215,2.772,851,5.932,1089,4.136,1193,5.064,1194,4.413,1537,5.495,2721,8.589,2722,9.466,2723,7.759,2724,10.215,2725,7.759,2726,7.759,2727,7.759,2728,7.759]],["title/classes/NotTheOwnerException.html",[0,0.356,2729,4.697]],["body/classes/NotTheOwnerException.html",[0,0.504,2,0.351,3,0.045,4,0.052,5,0.052,15,0.459,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.618,292,4.197,294,2.369,784,4.992,961,3.873,1089,4.164,1193,5.099,1194,4.443,2591,7.119,2729,8.066,2730,8.647,2731,7.846,2732,7.846,2733,7.846]],["title/entities/NotificationEntity.html",[199,2.073,635,3.692]],["body/entities/NotificationEntity.html",[0,0.339,3,0.019,4,0.023,5,0.023,9,0.083,10,0.738,18,0.186,21,0.003,22,0.257,23,0.295,25,1.023,28,0.023,30,0.001,31,0.001,52,0.668,64,0.88,81,1.475,83,1.063,121,2.383,160,3.701,161,1.908,181,2.313,199,1.973,201,1.618,202,5.15,207,2.808,208,3.033,214,2.843,215,1.765,217,3.929,218,5.403,219,6.784,220,5.215,221,4.47,224,4.005,226,5.797,227,4.06,228,5.483,229,5.343,232,3.569,233,3.062,234,4.47,235,6.476,237,3.062,238,4.47,240,2.732,242,3.633,249,3.062,250,4.47,252,3.231,257,4.382,258,2.732,259,2.778,260,4.428,261,1.718,262,2.732,264,1.718,265,4.329,266,5.21,267,1.666,269,5.894,443,4.918,447,1.838,602,5.343,616,2.184,635,3.514,703,4.608,730,2.478,1045,3.418,1054,2.703,1071,5.212,1091,4.455,1098,1.806,1407,2.39,2664,6.397,2734,3.375,2735,6.506,2736,7.988,2737,5.281,2738,3.375,2739,3.375,2740,3.375,2741,3.375,2742,3.375,2743,5.281,2744,3.375,2745,3.375,2746,5.281,2747,3.375,2748,3.375,2749,7.249,2750,3.375,2751,3.375,2752,5.281,2753,3.375,2754,3.375,2755,3.375]],["title/controllers/OccupationController.html",[270,2.919,2756,4.697]],["body/controllers/OccupationController.html",[0,0.216,3,0.019,4,0.023,5,0.023,9,0.083,12,0.226,18,0.171,20,0.412,21,0.003,22,0.248,23,0.233,24,0.374,25,1.155,28,0.023,30,0.001,31,0.001,38,0.94,39,2.162,50,1.633,51,2.046,52,0.722,78,1.89,86,2.742,110,2.674,141,1.072,145,2.356,217,3.606,270,1.772,272,1.663,276,2.31,283,1.327,291,2.181,293,2.386,294,1.018,299,2.242,300,1.905,303,2.31,304,2.474,305,1.803,306,2.474,307,1.869,313,6.486,314,2.888,413,2.386,466,2.125,582,5.86,719,2.171,1167,2.576,1332,5.065,1514,7.987,1710,3.736,2217,2.474,2230,5.889,2756,4.464,2757,3.37,2758,4.786,2759,4.786,2760,7.353,2761,4.786,2762,6.499,2763,4.786,2764,4.786,2765,5.898,2766,3.37,2767,3.058,2768,3.37,2769,3.058,2770,3.058,2771,3.37,2772,3.058,2773,3.37,2774,3.058,2775,2.852,2776,3.37,2777,3.37,2778,4.464,2779,2.852,2780,3.37,2781,5.275,2782,3.058,2783,3.058,2784,3.37,2785,3.058,2786,5.275,2787,3.37,2788,3.37,2789,3.058,2790,3.058,2791,3.37,2792,2.698,2793,2.698,2794,4.969,2795,3.058,2796,3.058,2797,2.698,2798,2.474,2799,2.698,2800,3.058,2801,3.37,2802,3.37,2803,3.058,2804,5.501,2805,3.37,2806,2.852,2807,3.37,2808,3.37,2809,3.37,2810,2.698,2811,3.37,2812,3.37,2813,3.058,2814,2.698,2815,3.37,2816,3.37,2817,3.058,2818,3.37,2819,3.37,2820,3.058,2821,3.37,2822,3.37,2823,3.058,2824,3.37,2825,3.37]],["title/classes/OccupationDto.html",[0,0.356,1476,3.93]],["body/classes/OccupationDto.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,10,0.932,11,1.783,12,0.766,15,0.278,16,1.599,17,1.907,18,0.195,20,0.289,21,0.003,22,0.275,23,0.276,24,0.389,25,1.094,28,0.041,30,0.002,31,0.002,83,1.504,207,3.973,208,4.292,214,4.023,232,4.412,1470,2.977,1476,5.818,2826,6.21,2827,6.21,2828,6.21,2829,6.21,2830,6.21,2831,6.21,2832,6.21]],["title/entities/OccupationEntity.html",[199,2.073,621,2.739]],["body/entities/OccupationEntity.html",[0,0.436,3,0.027,4,0.032,5,0.032,9,0.116,10,0.903,16,0.917,17,1.549,18,0.189,21,0.003,22,0.223,23,0.267,25,0.972,28,0.032,29,1.112,30,0.002,31,0.002,52,0.727,58,4.364,64,1.229,81,2.06,83,1.3,160,4.2,161,2.665,199,1.761,201,3.255,207,3.435,208,3.711,214,3.477,217,3.993,220,2.902,223,6.064,226,2.837,227,1.986,232,4.051,240,3.513,257,3.513,258,4.117,259,4.186,261,2.4,262,4.117,267,2.327,597,3.604,621,3.352,1020,3.775,1045,4.395,1058,5.843,1079,4.809,1081,6.393,1089,2.06,1090,2.837,1091,5.056,1098,2.522,1738,5.438,2114,6.084,2157,5.151,2392,5.191,2410,3.461,2833,4.714,2834,7.222,2835,6.791,2836,4.714,2837,6.791,2838,4.714,2839,4.714,2840,4.714,2841,4.714,2842,4.714,2843,4.714,2844,6.791,2845,4.714,2846,4.714,2847,4.714,2848,4.714]],["title/modules/OccupationModule.html",[117,1.224,477,4.242]],["body/modules/OccupationModule.html",[0,0.278,3,0.025,4,0.029,5,0.029,21,0.003,22,0.121,28,0.029,30,0.002,31,0.002,49,1.651,52,0.89,54,0.842,57,1.253,112,3.678,117,1.407,131,3.223,135,1.651,137,2.569,138,2.246,139,1.539,252,1.651,264,2.203,272,3.15,283,2.513,294,1.307,320,2.447,321,3.607,325,5.614,328,3.839,329,2.604,330,2.604,332,3.839,333,3.839,334,2.801,335,4.13,336,2.447,337,4.025,338,2.801,342,3.178,345,3.178,348,5.564,350,4.025,351,2.88,352,2.73,355,2.801,356,2.801,357,2.801,358,2.801,359,2.73,387,3.178,395,2.967,431,2.801,432,3.065,477,7.859,621,3.15,719,2.627,1114,3.309,1116,3.309,1118,2.357,1121,2.548,1128,3.309,1134,3.309,1139,3.466,1141,3.466,1143,3.309,1144,3.309,1145,5.794,1146,2.046,1471,5.401,1473,6.316,1475,2.88,1482,5.934,1510,5.401,1904,5.401,1913,5.401,2141,5.401,2143,3.663,2206,5.401,2221,5.401,2756,6.415,2794,7.133,2795,3.928,2849,3.928,2850,4.328,2851,3.928,2852,4.328,2853,4.328,2854,5.401,2855,5.401,2856,5.401,2857,5.401,2858,5.401,2859,5.401]],["title/classes/OccupationNotFoundException.html",[0,0.356,2860,4.697]],["body/classes/OccupationNotFoundException.html",[0,0.505,2,0.352,3,0.045,4,0.053,5,0.053,15,0.46,18,0.147,21,0.003,28,0.053,30,0.002,31,0.002,52,0.621,90,2.942,294,2.378,784,5.001,1089,4.173,1193,5.11,1194,4.453,1884,7.146,2860,8.084,2861,8.667,2862,7.146,2863,7.146,2864,7.875]],["title/classes/OccupationResponse.html",[0,0.356,1167,4.242]],["body/classes/OccupationResponse.html",[0,0.389,2,0.271,3,0.034,4,0.041,5,0.041,9,0.15,10,0.918,11,1.778,12,0.764,15,0.271,16,1.574,17,1.968,18,0.194,20,0.283,21,0.003,22,0.272,23,0.274,24,0.384,25,1.084,28,0.041,29,1.432,30,0.002,31,0.002,83,1.487,207,3.928,208,4.243,214,3.976,232,4.383,1167,6.184,2865,10.618,2866,6.067,2867,6.067,2868,6.067,2869,6.067,2870,6.067,2871,6.067,2872,6.067]],["title/injectables/OccupationService.html",[368,2.162,2794,4.242]],["body/injectables/OccupationService.html",[0,0.156,3,0.014,4,0.016,5,0.016,9,0.06,12,0.273,15,0.109,18,0.157,20,0.377,21,0.003,22,0.261,23,0.214,24,0.342,25,1.071,28,0.016,30,0.001,31,0.001,38,0.724,39,2.056,40,0.742,50,1.445,51,1.905,52,0.81,54,0.474,73,0.672,75,2.697,78,1.672,85,2.578,86,3.031,87,2.788,90,2.525,110,3.021,113,3.607,141,0.775,283,0.96,294,0.736,314,2.93,368,1.581,369,1.241,371,1.726,372,5.002,373,5.304,378,1.863,380,3.988,381,4.786,382,1.789,399,1.671,402,1.863,466,1.537,719,3.464,1118,1.327,1121,1.435,1167,1.863,1194,2.432,1332,5.044,1463,3.251,1466,4.178,1469,3.436,1473,4.786,1476,4.309,1477,1.863,1478,5.357,1479,1.789,1480,1.789,1514,4.872,1535,3.471,1672,1.622,1900,3.251,1993,4.178,2050,5.166,2135,1.952,2143,2.063,2179,1.435,2205,3.251,2210,3.251,2216,3.251,2217,2.98,2219,1.789,2220,1.789,2230,4.872,2758,3.683,2759,3.683,2761,3.683,2763,3.683,2764,3.683,2765,3.683,2769,3.683,2774,3.683,2782,3.683,2785,3.683,2789,3.683,2794,3.103,2796,2.212,2797,1.952,2798,1.789,2799,1.952,2800,3.683,2860,6.176,2861,2.212,2873,2.437,2874,6.084,2875,4.059,2876,2.437,2877,4.059,2878,2.437,2879,6.084,2880,2.437,2881,2.437,2882,2.437,2883,4.059,2884,2.437,2885,2.437,2886,2.437,2887,5.149,2888,2.437,2889,4.872,2890,2.063,2891,2.212,2892,2.063,2893,2.212,2894,2.063,2895,4.178,2896,1.726,2897,3.251,2898,1.952,2899,3.251,2900,2.063,2901,3.251,2902,1.952,2903,2.437,2904,4.059,2905,5.217,2906,3.436,2907,2.212,2908,2.437,2909,2.212,2910,2.212,2911,2.437,2912,4.059,2913,4.059]],["title/entities/PlanEntity.html",[199,2.073,623,3.93]],["body/entities/PlanEntity.html",[0,0.282,3,0.025,4,0.029,5,0.029,9,0.108,10,0.867,18,0.193,21,0.003,22,0.294,23,0.294,25,1.047,28,0.029,30,0.002,31,0.002,52,0.508,64,1.145,81,1.919,83,1.248,199,2.409,201,2.105,202,5.324,207,3.298,208,3.563,214,3.339,217,4.062,218,6.586,219,6.745,220,5.185,232,3.952,240,3.336,257,4.852,258,3.954,259,4.02,261,2.235,262,3.954,269,6.745,443,5.523,623,4.567,633,5.916,721,3.717,985,5.643,1024,2.922,1082,4.291,1091,4.933,1098,2.349,1965,6.469,1987,3.357,1988,5.458,2914,4.391,2915,7.643,2916,8.971,2917,8.971,2918,4.391,2919,4.391,2920,4.391,2921,6.449,2922,8.422,2923,4.391,2924,4.391,2925,4.391,2926,4.391,2927,4.391,2928,6.449,2929,4.391,2930,4.391]],["title/controllers/ProfileController.html",[270,2.919,2931,4.697]],["body/controllers/ProfileController.html",[0,0.157,3,0.014,4,0.016,5,0.016,9,0.06,12,0.164,18,0.166,20,0.404,21,0.003,22,0.256,23,0.229,24,0.367,25,1.071,28,0.016,30,0.001,31,0.001,38,0.724,39,2.139,50,1.59,51,2.015,52,0.684,76,1.874,78,1.84,83,1.105,86,2.67,110,2.603,137,0.827,141,0.776,145,2.207,156,4.219,181,3.456,215,1.103,217,3.511,270,1.283,272,1.205,276,1.673,283,0.961,291,1.579,293,1.728,294,0.737,299,1.624,300,1.379,303,1.673,304,1.792,305,1.306,306,1.792,307,1.353,313,6.314,314,2.811,413,1.728,442,3.439,443,2.501,446,3.106,453,3.439,456,1.865,457,2.065,459,1.865,461,2.065,462,2.214,467,1.353,468,1.954,564,1.692,582,4.965,757,7.227,785,1.792,790,1.865,821,1.954,1169,1.539,1532,1.673,1577,4.876,1710,3.698,1880,4.737,2157,5.248,2217,1.792,2255,5.847,2626,3.254,2775,2.065,2778,3.439,2779,2.065,2792,1.954,2793,1.954,2798,1.792,2804,6.179,2806,2.065,2810,3.254,2814,1.954,2931,3.439,2932,2.44,2933,3.687,2934,4.063,2935,3.687,2936,6.762,2937,4.063,2938,4.063,2939,3.687,2940,4.737,2941,3.687,2942,3.687,2943,3.687,2944,2.44,2945,2.44,2946,2.44,2947,2.44,2948,6.088,2949,4.063,2950,2.44,2951,2.44,2952,5.221,2953,2.44,2954,2.44,2955,2.44,2956,2.44,2957,2.44,2958,3.687,2959,2.44,2960,2.44,2961,2.44,2962,2.44,2963,2.214,2964,4.063,2965,2.44,2966,2.44,2967,2.44,2968,2.44,2969,2.44,2970,4.063,2971,2.44,2972,2.44,2973,6.2,2974,3.687,2975,2.44,2976,2.44,2977,4.063,2978,2.44,2979,3.991,2980,2.214,2981,2.065,2982,2.214,2983,2.214,2984,3.687,2985,2.214,2986,2.44,2987,2.44,2988,2.214,2989,2.214,2990,2.44,2991,4.063,2992,2.44,2993,2.44,2994,5.221,2995,2.44,2996,2.44,2997,2.44,2998,2.44,2999,2.44,3000,2.44,3001,2.44,3002,2.44,3003,5.221,3004,2.44,3005,2.44,3006,4.063,3007,2.44,3008,2.44,3009,2.44,3010,2.44,3011,2.44,3012,2.44,3013,2.44,3014,2.44,3015,2.44,3016,2.44]],["title/entities/ProfileEntity.html",[160,2.424,199,2.073]],["body/entities/ProfileEntity.html",[0,0.168,3,0.015,4,0.017,5,0.017,9,0.065,10,0.622,16,0.509,17,0.837,18,0.185,21,0.003,22,0.224,23,0.264,24,0.417,25,0.709,28,0.017,29,0.617,30,0.001,31,0.001,52,0.701,58,3.624,64,0.682,81,1.143,83,0.896,109,2.609,121,1.394,155,2.533,160,1.88,173,3.905,181,1.949,199,1.608,201,3.621,207,2.366,208,2.556,214,2.395,215,1.905,217,3.893,223,4.764,224,1.61,227,4.166,228,6.533,229,6.236,232,3.183,240,2.226,252,2.423,257,3.287,258,2.836,259,2.884,260,2.589,261,1.331,262,2.836,264,1.331,447,3.824,597,1.999,598,4.355,599,1.999,600,1.92,614,5.178,615,1.999,616,1.693,617,5.167,618,1.999,621,3.136,635,4.227,636,1.999,715,4.664,719,2.616,730,3.159,1018,3.099,1024,4.673,1027,6.92,1028,7.002,1048,3.048,1054,2.094,1058,3.159,1071,4.974,1080,4.391,1081,4.025,1082,5.026,1083,3.759,1088,1.693,1091,4.387,1098,1.399,1212,1.693,1219,4.64,1224,4.975,1231,3.905,1248,3.905,1268,5.088,1271,4.64,1561,3.648,1562,3.549,1564,4.673,1566,1.793,2410,1.92,2834,4.975,3017,2.615,3018,5.483,3019,5.483,3020,5.483,3021,5.483,3022,2.615,3023,4.303,3024,4.303,3025,2.615,3026,2.615,3027,2.615,3028,2.615,3029,4.303,3030,2.615,3031,4.303,3032,2.615,3033,4.303,3034,4.303,3035,6.353,3036,2.615,3037,4.303,3038,2.615,3039,4.303,3040,2.615,3041,2.615,3042,2.615,3043,2.615,3044,2.615,3045,4.303,3046,2.615,3047,2.615,3048,2.615,3049,4.303,3050,2.615,3051,2.615]],["title/modules/ProfileModule.html",[117,1.224,478,4.242]],["body/modules/ProfileModule.html",[0,0.251,3,0.022,4,0.026,5,0.026,21,0.003,22,0.11,28,0.026,30,0.001,31,0.001,49,1.492,52,0.894,54,0.761,57,1.133,112,3.739,117,1.305,131,3.104,135,1.492,137,2.419,138,2.083,139,1.391,160,2.585,181,2.828,215,1.061,252,1.492,264,1.991,272,2.921,283,2.33,294,1.181,320,2.211,321,3.345,325,5.407,328,3.56,329,2.354,330,2.354,332,3.56,333,3.56,334,2.532,335,3.829,336,2.211,337,3.732,338,2.532,342,2.872,345,2.872,348,5.84,350,3.732,351,2.603,352,2.467,355,2.532,356,2.532,357,2.532,358,2.532,359,2.467,387,2.872,395,2.682,431,2.532,432,2.771,478,7.666,621,2.921,1018,3.345,1088,2.532,1114,2.991,1116,2.991,1118,3.222,1121,2.303,1128,4.523,1134,2.991,1139,3.133,1141,3.133,1143,4.523,1144,2.991,1145,5.455,1146,1.849,1527,5.008,1529,5.817,1533,2.408,1540,5.407,1572,5.008,1919,5.008,1925,5.008,2153,5.008,2155,3.311,2157,2.532,2235,5.008,2245,5.008,2252,5.008,2931,6.039,2979,6.87,2980,3.55,3052,3.55,3053,3.912,3054,3.55,3055,3.912,3056,3.912,3057,5.008,3058,3.912,3059,3.311,3060,5.008,3061,5.008,3062,5.008,3063,5.008,3064,5.008,3065,3.912,3066,3.55,3067,5.008,3068,5.008,3069,5.008,3070,5.008]],["title/classes/ProfileResponse.html",[0,0.356,1169,3.5]],["body/classes/ProfileResponse.html",[0,0.416,2,0.289,3,0.037,4,0.043,5,0.043,9,0.16,10,0.958,11,1.768,12,0.76,15,0.289,16,1.643,17,2.01,18,0.193,20,0.302,21,0.003,22,0.182,23,0.272,24,0.397,25,1.182,28,0.043,29,1.528,30,0.002,31,0.002,83,1.535,242,4.169,564,3.914,1169,5.327,1562,6.083,2179,5.533,3071,6.476,3072,8.445,3073,6.476,3074,6.476,3075,6.476]],["title/injectables/ProfileService.html",[368,2.162,2979,4.242]],["body/injectables/ProfileService.html",[0,0.114,3,0.01,4,0.012,5,0.012,9,0.044,12,0.209,15,0.08,18,0.157,20,0.381,21,0.003,22,0.229,23,0.216,24,0.345,25,1.115,28,0.012,30,0.001,31,0.001,38,0.554,39,2.063,40,0.947,50,1.458,51,1.915,52,0.757,54,0.347,73,0.491,75,2.721,78,1.805,83,1.582,85,2.601,86,3.117,87,2.924,90,3.326,141,0.567,156,3.09,176,5.787,177,6.104,181,3.215,215,1.908,283,0.702,294,0.538,314,2.504,368,1.211,369,0.907,371,1.262,372,4.227,373,4.546,378,1.362,380,3.783,381,5.223,382,1.308,402,1.362,564,2.568,719,1.701,960,1.186,961,2.443,1018,2.336,1056,1.913,1118,1.692,1121,1.049,1169,1.124,1194,2.307,1519,2.489,1522,1.427,1529,3.99,1532,1.222,1534,3.633,1535,3.292,1536,1.87,1537,1.262,1538,1.427,1544,2.011,1561,3.292,1562,3.203,1577,4.495,1916,2.376,1949,6.251,1950,1.508,2050,3.159,2150,2.489,2155,1.508,2157,2.011,2179,1.049,2233,3.963,2237,2.63,2239,1.427,2243,2.489,2251,2.489,2255,3.963,2729,3.498,2730,1.617,2798,1.308,2892,1.508,2898,2.489,2900,1.508,2902,1.427,2906,2.63,2933,2.82,2935,2.82,2939,2.82,2940,3.75,2941,2.82,2942,2.82,2943,2.82,2963,2.82,2973,6.717,2979,2.376,2982,1.617,2983,1.617,2984,2.82,2985,1.617,3059,1.508,3076,1.782,3077,3.108,3078,3.108,3079,4.948,3080,3.108,3081,3.108,3082,1.782,3083,3.108,3084,1.782,3085,3.108,3086,1.782,3087,3.108,3088,1.782,3089,3.108,3090,1.782,3091,1.782,3092,1.782,3093,1.782,3094,1.782,3095,3.108,3096,3.108,3097,1.782,3098,3.108,3099,4.751,3100,1.782,3101,3.108,3102,1.782,3103,3.108,3104,1.782,3105,3.108,3106,1.782,3107,4.938,3108,1.508,3109,3.159,3110,2.489,3111,3.309,3112,2.489,3113,1.782,3114,1.782,3115,1.782,3116,1.782,3117,2.489,3118,1.782,3119,1.782,3120,1.782,3121,1.782,3122,8.177,3123,3.108,3124,4.132,3125,3.108,3126,2.489,3127,3.108,3128,3.108,3129,3.108,3130,1.782,3131,1.782,3132,4.132,3133,1.782,3134,1.782,3135,1.782]],["title/classes/QueryErrorException.html",[0,0.356,2889,4.444]],["body/classes/QueryErrorException.html",[0,0.505,2,0.352,3,0.045,4,0.053,5,0.053,15,0.46,18,0.147,21,0.003,28,0.053,30,0.002,31,0.002,52,0.621,110,2.3,294,2.378,784,5.001,1089,4.173,1193,5.11,1194,4.453,1196,7.146,1197,7.146,1198,6.665,2889,7.649,2890,8.084,3136,7.875]],["title/entities/ReferralCodeEntity.html",[199,2.073,637,3.93]],["body/entities/ReferralCodeEntity.html",[0,0.383,3,0.022,4,0.026,5,0.026,9,0.098,10,0.677,18,0.18,21,0.003,23,0.281,25,0.893,28,0.026,30,0.001,31,0.001,52,0.677,64,1.032,83,1.173,199,1.478,201,1.896,202,5.024,207,3.1,214,3.139,215,2.171,217,3.797,220,2.435,226,4.813,227,3.371,232,4.237,235,4.561,240,2.046,252,3.764,257,3.716,258,3.087,260,4.322,261,2.014,262,3.087,264,2.014,266,4.778,267,1.953,300,2.236,468,4.778,633,5.693,637,4.226,638,7.544,728,5.492,740,4.561,961,3.546,1045,3.862,1083,4.09,1087,4.778,1382,7.245,1388,7.639,1716,5.753,1721,5.05,1738,3.168,1740,5.414,1960,3.59,1987,3.024,2392,3.024,2678,6.407,3137,7.184,3138,7.184,3139,5.967,3140,5.967,3141,5.05,3142,3.956,3143,3.956,3144,3.956,3145,3.956,3146,3.956,3147,3.956,3148,3.956,3149,3.956,3150,5.967,3151,5.967,3152,5.967,3153,5.967,3154,3.956,3155,3.956,3156,3.956,3157,5.967,3158,3.956,3159,3.956,3160,3.956,3161,3.956,3162,3.956,3163,3.956,3164,5.967,3165,3.956,3166,5.967,3167,3.956,3168,3.956,3169,3.956]],["title/classes/RegisterCommand.html",[0,0.356,915,4.444]],["body/classes/RegisterCommand.html",[0,0.434,2,0.302,3,0.038,4,0.045,5,0.045,9,0.167,10,0.986,11,1.726,12,0.749,15,0.302,18,0.189,20,0.315,21,0.003,22,0.19,23,0.267,24,0.286,25,1.271,28,0.045,30,0.002,31,0.002,287,4.754,735,4.787,738,5.249,915,6.958,1622,3.071,2297,5.418,3170,6.766,3171,6.766,3172,9.597]],["title/classes/RegisterEvent.html",[0,0.356,3173,4.444]],["body/classes/RegisterEvent.html",[0,0.494,2,0.344,3,0.044,4,0.051,5,0.051,9,0.19,10,1.069,11,1.473,12,0.684,15,0.344,18,0.176,20,0.359,21,0.003,22,0.216,23,0.249,24,0.325,25,1.184,28,0.051,30,0.002,31,0.002,564,4.418,1622,3.496,1746,4.634,3173,7.547,3174,7.703,3175,7.703,3176,7.703]],["title/classes/RegisterEventHandler.html",[0,0.356,879,4.697]],["body/classes/RegisterEventHandler.html",[0,0.412,2,0.287,3,0.036,4,0.043,5,0.043,9,0.158,10,0.952,18,0.157,20,0.299,21,0.003,22,0.18,23,0.169,24,0.271,28,0.043,30,0.002,31,0.002,35,1.48,36,1.811,38,1.497,50,1.144,52,0.782,54,1.249,83,1.371,87,2.278,121,2.078,122,2.326,128,3.766,129,3.379,133,3.379,135,2.447,136,2.583,188,2.913,195,3.861,215,2.278,294,1.938,486,5.586,879,7.105,881,8.49,1754,5.586,1787,7.105,1789,5.823,3173,7.948,3177,9.356,3178,9.356,3179,8.395,3180,6.417,3181,5.823,3182,6.417,3183,6.417,3184,7.617,3185,6.417]],["title/classes/RegisterHandler.html",[0,0.356,871,4.697]],["body/classes/RegisterHandler.html",[0,0.277,2,0.117,3,0.015,4,0.018,5,0.018,9,0.065,10,0.49,15,0.193,18,0.17,20,0.415,21,0.003,22,0.243,23,0.228,24,0.365,25,1.128,28,0.018,30,0.001,31,0.001,36,0.932,37,2.239,38,0.77,39,1.904,40,1.316,42,2.045,44,2.662,47,1.759,49,1.002,50,1.543,51,1.697,52,0.771,53,1.07,54,0.511,56,0.844,57,0.761,60,3.02,61,0.982,62,0.962,63,0.972,64,0.685,73,2.854,76,2.287,78,1.786,86,2.267,87,2.617,97,2.875,104,2.744,110,2.211,111,2.918,112,2.59,215,1.172,220,1.618,242,3.476,252,1.648,264,1.338,267,1.297,287,1.961,314,2.73,646,1.431,666,2.165,675,3.06,676,1.317,735,3.579,738,2.757,740,2.009,744,1.861,749,5.362,776,1.581,871,3.657,915,5.103,985,2.6,1056,1.618,1194,3.53,1220,3.675,1493,2.962,1495,1.802,1534,1.93,1535,5.038,1536,3.834,1537,1.861,1538,2.105,1554,2.225,1613,1.516,1643,4.657,1644,3.921,1645,4.992,1646,3.921,1647,3.657,1648,3.657,1649,3.657,1650,3.657,1651,3.657,1654,2.385,1657,3.921,1659,5.103,1660,3.657,1662,3.657,1664,2.225,1666,3.657,1668,3.657,1671,3.172,1672,2.875,1673,3.46,1674,3.172,1675,3.46,1680,3.303,1681,2.225,1682,3.46,1683,3.46,1685,2.225,1686,2.385,1687,3.657,1688,2.385,1689,2.385,1692,6.408,1693,3.06,1697,4.679,1700,2.385,1702,2.385,1703,2.385,1705,2.385,1716,4.406,1720,3.921,1721,3.657,1722,2.385,1723,3.657,1724,3.657,1725,2.225,1726,2.225,1727,2.225,1728,3.657,1729,2.105,3173,2.105,3181,2.385,3186,2.628,3187,4.321,3188,2.628,3189,2.628,3190,2.628,3191,2.628,3192,2.628,3193,2.628,3194,2.628,3195,2.628,3196,2.628,3197,2.628,3198,2.628,3199,2.628,3200,2.628,3201,2.628,3202,4.321,3203,2.628,3204,4.321,3205,2.628,3206,2.628,3207,4.321,3208,2.628]],["title/classes/RemoveConnectedCardCommand.html",[0,0.356,3209,4.697]],["body/classes/RemoveConnectedCardCommand.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,7,6.31,8,4.524,9,0.173,10,1.006,11,1.689,12,0.726,14,6.68,15,0.312,16,1.726,17,2.059,18,0.182,19,4.792,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,26,4.792,27,5.343,28,0.047,29,1.649,30,0.002,31,0.002,83,1.592,3209,7.508,3210,9.3]],["title/classes/RemoveConnectedCardCommandHandler.html",[0,0.356,1111,4.697]],["body/classes/RemoveConnectedCardCommandHandler.html",[0,0.249,2,0.174,3,0.022,4,0.026,5,0.026,7,5.243,9,0.096,12,0.477,13,2.743,14,4.033,15,0.263,18,0.11,20,0.274,21,0.003,22,0.165,23,0.155,24,0.248,28,0.026,30,0.001,31,0.001,34,5.129,35,0.896,36,1.269,37,2.891,38,1.049,39,1.403,40,1.792,41,2.154,42,2.988,43,6.012,44,3.098,46,3.204,47,2.395,49,1.481,50,0.692,51,1.153,52,0.734,53,1.581,54,0.756,56,1.246,57,1.125,58,3.224,59,2.115,64,1.013,65,2.513,66,3.524,67,2.584,70,2.078,72,2.115,73,1.959,74,3.287,75,1.292,76,2.112,77,3.524,78,1.635,79,3.54,80,3.379,81,3.463,82,4.98,83,1.464,85,2.962,86,2.788,87,2.664,88,3.808,89,3.524,90,2.198,92,3.524,93,3.524,99,7.191,101,4.98,102,4.98,104,2.133,107,5.273,110,1.134,188,1.763,1111,4.98,1558,2.391,1599,2.584,1856,2.336,1859,5.339,3209,6.708,3211,7.104,3212,5.689,3213,3.287,3214,3.524,3215,3.883,3216,3.883,3217,3.883,3218,3.883,3219,5.884,3220,5.884,3221,7.925,3222,7.925,3223,5.884,3224,5.884,3225,7.925,3226,5.884]],["title/classes/RemoveConnectedCardEvent.html",[0,0.356,3212,4.444]],["body/classes/RemoveConnectedCardEvent.html",[0,0.385,2,0.268,3,0.034,4,0.04,5,0.04,7,6.624,9,0.148,10,0.911,11,1.748,12,0.751,13,4.219,14,6.204,15,0.268,16,1.562,17,1.96,18,0.188,20,0.279,21,0.003,22,0.168,23,0.266,24,0.253,25,1.201,28,0.04,29,1.415,30,0.002,31,0.002,109,3.338,115,3.882,116,2.475,117,1.996,118,3.882,119,3.991,120,3.882,121,2.6,122,2.91,124,4.404,125,3.882,3212,6.429,3227,9.407,3228,6.137]],["title/classes/RemoveConnectedCardEventHandler.html",[0,0.356,1136,4.697]],["body/classes/RemoveConnectedCardEventHandler.html",[0,0.397,2,0.277,3,0.035,4,0.041,5,0.041,7,6.025,9,0.153,12,0.416,15,0.277,18,0.153,20,0.382,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.428,36,1.769,38,1.462,39,1.815,50,1.104,51,1.607,52,0.725,54,1.205,70,5.236,78,1.278,83,1.011,109,2.832,116,1.694,117,1.366,128,3.7,129,3.3,130,2.549,131,3.613,132,2.549,133,3.3,134,2.313,135,2.361,136,2.492,137,2.099,138,2.18,139,2.201,141,1.97,142,2.549,143,2.578,144,2.578,145,2.244,147,5.618,180,4.244,1136,6.94,3212,7.837,3213,5.24,3229,9.193,3230,6.191,3231,6.191]],["title/classes/RemoveConnectedCardRequest.html",[0,0.356,3232,5.035]],["body/classes/RemoveConnectedCardRequest.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,7,6.31,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,14,6.68,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,150,5.132,151,5.598,152,5.598,153,5.132,3232,8.049,3233,9.3]],["title/classes/RemoveRefreshTokenCommand.html",[0,0.356,3234,4.444]],["body/classes/RemoveRefreshTokenCommand.html",[0,0.484,2,0.337,3,0.043,4,0.05,5,0.05,9,0.186,10,1.055,11,1.453,12,0.677,15,0.337,18,0.174,20,0.351,21,0.003,22,0.212,23,0.245,24,0.318,25,1.175,28,0.05,30,0.002,31,0.002,564,4.385,752,5.492,1622,3.422,1746,4.535,3234,7.447,3235,10.085,3236,6.84,3237,6.84,3238,6.84]],["title/classes/RemoveRefreshTokenCommandHandler.html",[0,0.356,3239,4.697]],["body/classes/RemoveRefreshTokenCommandHandler.html",[0,0.366,2,0.255,3,0.032,4,0.038,5,0.038,9,0.141,15,0.347,18,0.145,20,0.362,21,0.003,22,0.218,23,0.205,24,0.328,28,0.038,30,0.002,31,0.002,35,1.316,36,1.674,37,3.591,38,1.384,39,1.742,40,2.365,42,3.039,44,3.479,47,3.16,49,2.177,50,1.018,51,1.522,52,0.805,53,2.323,54,1.111,56,1.832,57,1.653,60,2.93,61,2.132,62,2.089,63,2.111,64,1.488,73,2.141,75,1.899,78,1.178,85,1.816,87,1.548,104,2.069,110,2.576,111,2.2,112,1.953,134,2.132,215,1.548,252,2.177,447,3.108,646,3.108,666,3.891,676,2.86,752,5.156,1670,3.226,1906,3.165,2313,4.57,3214,5.178,3234,7.583,3239,7.467,3240,8.823,3241,7.583,3242,5.707,3243,4.363]],["title/classes/RemoveRefreshTokenEvent.html",[0,0.356,3244,4.697]],["body/classes/RemoveRefreshTokenEvent.html",[0,0.411,2,0.286,3,0.036,4,0.043,5,0.043,9,0.158,10,0.95,11,1.706,12,0.741,15,0.286,18,0.185,20,0.298,21,0.003,22,0.18,23,0.261,24,0.27,25,1.218,28,0.043,30,0.002,31,0.002,116,2.555,117,2.06,121,2.713,122,3.037,215,2.273,564,4.128,752,5.858,777,4.932,1622,2.904,1746,3.849,3228,6.405,3244,7.091,3245,10.29,3246,5.805,3247,7.602,3248,5.805,3249,5.805]],["title/classes/RemoveRefreshTokenEventHandler.html",[0,0.356,3250,4.697]],["body/classes/RemoveRefreshTokenEventHandler.html",[0,0.406,2,0.283,3,0.036,4,0.042,5,0.042,9,0.156,12,0.425,15,0.283,18,0.155,20,0.387,21,0.003,22,0.233,23,0.219,24,0.351,28,0.042,30,0.002,31,0.002,35,1.458,36,1.793,38,1.482,50,1.127,52,0.732,54,1.23,83,1.032,116,1.729,117,1.394,128,3.738,129,3.346,130,2.602,131,3.634,132,2.602,133,3.346,135,2.411,136,2.544,137,2.143,138,2.225,139,2.247,141,2.011,142,2.602,143,2.632,144,2.632,145,2.291,195,3.803,486,5.531,752,5.582,777,3.721,1754,4.206,3213,5.35,3244,8.351,3250,7.036,3251,9.288,3252,8.351,3253,6.321,3254,6.321]],["title/classes/RemoveSavedCardCommand.html",[0,0.356,3255,5.035]],["body/classes/RemoveSavedCardCommand.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,8,4.524,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,15,0.312,16,1.726,17,2.059,18,0.182,19,4.792,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,26,4.792,27,5.343,28,0.047,29,1.649,30,0.002,31,0.002,155,6.034,156,4.884,3210,9.3,3255,8.049]],["title/classes/RemoveSavedCardEvent.html",[0,0.356,3256,5.035]],["body/classes/RemoveSavedCardEvent.html",[0,0.383,2,0.267,3,0.034,4,0.04,5,0.04,9,0.147,10,0.907,11,1.746,12,0.751,13,4.207,15,0.267,16,1.556,17,1.957,18,0.188,20,0.278,21,0.003,22,0.167,23,0.265,24,0.252,25,1.2,28,0.04,29,1.407,30,0.002,31,0.002,109,3.33,112,2.736,115,3.86,116,2.468,117,1.99,118,3.86,119,3.969,120,3.86,121,2.59,122,2.899,124,4.379,125,3.86,155,6.326,156,4.522,3227,9.392,3228,6.114,3256,7.257]],["title/classes/RemoveSavedCardRequest.html",[0,0.356,3257,5.035]],["body/classes/RemoveSavedCardRequest.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,9,0.173,10,1.006,11,1.689,12,0.726,13,4.543,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,150,5.132,151,5.598,152,5.598,153,5.132,155,6.034,156,4.884,3233,9.3,3257,8.049]],["title/injectables/RequestLoggingMiddleware.html",[368,2.162,501,4.697]],["body/injectables/RequestLoggingMiddleware.html",[0,0.291,3,0.026,4,0.03,5,0.03,9,0.112,10,0.749,12,0.574,15,0.203,18,0.145,20,0.307,21,0.003,22,0.185,23,0.205,24,0.279,28,0.03,30,0.002,31,0.002,36,0.978,38,1.177,50,0.808,52,0.791,73,2.146,76,3.262,87,1.23,131,2.953,138,1.596,139,1.611,141,1.442,294,1.369,368,2.571,369,2.307,393,5.512,400,3.465,447,4.948,466,5.393,486,4.391,500,6.947,501,5.586,524,3.21,525,3.328,526,6.671,527,3.328,528,3.328,532,6.233,760,5.393,785,3.328,786,6.233,791,3.016,1375,5.045,1380,5.285,1384,3.328,1396,3.21,1407,4.674,1412,5.95,1418,6.536,1421,3.63,1425,5.045,1427,3.836,1434,3.836,1435,4.113,1438,3.328,2019,3.63,2020,5.285,2021,3.63,2022,3.836,2027,3.836,2029,4.113,2030,3.63,2032,3.63,2036,3.63,2058,3.836,2059,5.285,2061,5.586,2064,5.586,2065,5.285,2066,3.63,2067,3.836,2068,3.836,2069,3.836,2070,5.586,2071,3.836,2072,5.586,2073,3.836,2074,3.836,2075,3.836,2076,3.836,2077,3.836,2078,3.836,2079,4.113,2086,3.836,2087,3.836,2088,3.836,2089,5.586,2090,3.836,2626,3.63,3258,8.55,3259,6.6,3260,4.532,3261,4.113,3262,4.532,3263,5.989,3264,4.113,3265,4.113,3266,4.532,3267,4.532,3268,4.532,3269,4.532]],["title/interfaces/RequestUser.html",[757,3.93,3270,4.074]],["body/interfaces/RequestUser.html",[3,0.044,4,0.052,5,0.052,9,0.193,10,1.079,21,0.003,23,0.206,28,0.052,30,0.002,31,0.002,52,0.749,215,2.893,252,4.067,264,3.979,757,6.734,760,6.464,791,5.201,1089,4.154,3270,5.739,3271,6.26,3272,7.817,3273,7.817]],["title/injectables/ResponseLoggingMiddleware.html",[368,2.162,504,4.697]],["body/injectables/ResponseLoggingMiddleware.html",[0,0.3,3,0.027,4,0.031,5,0.031,9,0.115,10,0.765,12,0.583,15,0.209,18,0.148,20,0.314,21,0.003,22,0.189,23,0.229,24,0.285,28,0.031,30,0.002,31,0.002,36,1.008,38,1.203,39,1.564,50,0.833,52,0.755,73,2.184,76,3.301,78,0.964,87,1.268,117,1.031,131,2.995,138,1.645,139,1.661,141,1.487,294,1.411,314,1.474,368,2.628,369,2.379,393,5.609,400,3.572,447,5.009,466,5.47,500,6.054,504,5.711,524,3.309,525,3.431,526,6.753,527,3.431,528,3.431,529,5.711,530,3.955,531,5.711,532,6.945,760,5.47,785,3.431,786,6.342,791,3.109,1375,5.158,1380,5.404,1412,6.054,1418,6.63,1421,3.742,1425,3.572,1427,3.955,1438,3.431,2019,3.742,2020,5.404,2030,3.742,2032,3.742,2034,3.955,2036,3.742,2058,3.955,2059,5.404,2061,5.711,2064,5.711,2065,5.404,2066,3.742,2067,3.955,2068,3.955,2069,3.955,2070,3.955,2071,3.955,2072,5.711,2073,3.955,2074,3.955,2075,3.955,2076,3.955,2077,3.955,2078,3.955,2080,4.24,2081,4.24,2082,4.24,2083,4.24,2084,4.24,2085,4.24,2086,3.955,2087,3.955,2088,3.955,2089,3.955,2090,3.955,3261,4.24,3263,6.123,3264,4.24,3265,4.24,3274,8.673,3275,6.747,3276,4.673]],["title/classes/RestoreCardCommand.html",[0,0.356,3277,4.697]],["body/classes/RestoreCardCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,8,4.844,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,19,5.131,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,26,5.131,28,0.05,29,1.766,30,0.002,31,0.002,83,1.642,3277,7.837,3278,10.053]],["title/classes/RestoreCardCommandHandler.html",[0,0.356,1113,4.697]],["body/classes/RestoreCardCommandHandler.html",[0,0.341,2,0.237,3,0.03,4,0.035,5,0.035,9,0.131,12,0.496,13,2.474,15,0.33,18,0.138,20,0.344,21,0.003,22,0.207,23,0.195,24,0.312,28,0.035,30,0.002,31,0.002,34,5.942,35,1.224,36,1.593,37,3.457,38,1.316,39,1.677,40,2.249,41,2.943,42,2.947,44,3.411,46,4.021,47,3.005,49,2.024,50,0.946,51,1.447,52,0.808,53,2.16,54,1.033,56,1.703,57,1.537,58,2.408,59,2.889,60,2.787,61,1.982,62,1.943,63,1.962,64,1.384,70,2.839,72,2.889,73,2.036,75,1.766,78,1.524,79,3.192,80,2.262,83,0.867,85,2.349,86,2.211,87,2.491,88,3.434,90,1.982,104,2.677,109,1.833,110,2.156,111,2.045,112,1.815,113,2.474,188,2.408,189,2.839,227,2.236,746,3.124,1113,7.188,1558,3.266,1856,4.442,3277,7.771,3279,8.492,3280,4.056,3281,5.913,3282,3.434,3283,5.306,3284,5.306]],["title/classes/RestoreCardEvent.html",[0,0.356,3281,4.444]],["body/classes/RestoreCardEvent.html",[0,0.413,2,0.288,3,0.037,4,0.043,5,0.043,9,0.159,10,0.954,11,1.727,12,0.742,13,4.368,15,0.288,16,1.637,17,2.006,18,0.185,20,0.3,21,0.003,22,0.181,23,0.262,24,0.272,25,1.181,28,0.043,29,1.519,30,0.002,31,0.002,109,3.432,115,4.166,116,2.563,117,2.067,118,4.166,119,4.283,120,4.166,121,2.724,122,3.049,125,4.166,3281,6.736,3285,10.31,3286,6.43]],["title/classes/RestoreCardEventHandler.html",[0,0.356,1138,4.697]],["body/classes/RestoreCardEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,70,5.285,78,1.308,83,1.036,109,2.19,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,180,4.346,1138,7.049,3281,7.911,3282,4.103,3287,9.301,3288,6.34,3289,4.655]],["title/classes/RestoreOccupationCommand.html",[0,0.356,2901,4.444]],["body/classes/RestoreOccupationCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,1332,5.287,1465,5.722,1902,6.335,1903,6.335,2901,7.415,3290,10.053]],["title/classes/RestoreOccupationCommandHandler.html",[0,0.356,2854,4.697]],["body/classes/RestoreOccupationCommandHandler.html",[0,0.357,2,0.248,3,0.032,4,0.037,5,0.037,9,0.137,12,0.512,15,0.341,18,0.142,20,0.355,21,0.003,22,0.214,23,0.201,24,0.322,28,0.037,30,0.002,31,0.002,35,1.282,36,1.644,37,3.542,38,1.359,39,1.718,40,2.322,42,3.006,44,3.454,47,3.103,49,2.119,50,0.991,51,1.494,52,0.799,53,2.262,54,1.081,56,1.784,57,1.609,64,1.449,73,2.102,75,1.849,78,1.573,80,2.369,83,0.908,85,2.425,86,2.283,87,2.361,90,2.076,104,2.014,110,1.623,134,2.076,227,2.341,621,2.743,657,4.587,687,3.343,746,3.271,1332,2.923,1333,3.505,1334,3.597,1473,6.632,1474,3.809,1475,3.697,1482,3.697,1558,3.421,1906,3.082,1908,6.105,2854,6.452,2901,7.499,3280,4.248,3282,3.597,3291,8.702,3292,6.105,3293,5.557,3294,5.557]],["title/classes/RestoreOccupationEvent.html",[0,0.356,3292,4.444]],["body/classes/RestoreOccupationEvent.html",[0,0.413,2,0.288,3,0.037,4,0.043,5,0.043,9,0.159,10,0.954,11,1.727,12,0.742,15,0.288,16,1.637,17,2.006,18,0.185,20,0.3,21,0.003,22,0.181,23,0.262,24,0.272,25,1.181,28,0.043,29,1.519,30,0.002,31,0.002,116,2.563,117,2.067,121,2.724,122,3.049,719,4.091,1332,4.928,1505,4.92,1506,4.92,1507,5.84,1508,4.92,1509,4.92,3286,6.43,3292,6.736,3295,10.31]],["title/classes/RestoreOccupationEventHandler.html",[0,0.356,2858,4.697]],["body/classes/RestoreOccupationEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,719,2.61,1482,6.573,1513,4.847,2858,7.049,3282,4.103,3289,4.655,3292,7.911,3296,9.301,3297,6.34]],["title/classes/RestoreProfileCommand.html",[0,0.356,3117,4.444]],["body/classes/RestoreProfileCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,156,5.038,1521,5.495,1523,6.791,3117,7.415,3298,10.053,3299,7.485]],["title/classes/RestoreProfileCommandHandler.html",[0,0.356,3069,4.697]],["body/classes/RestoreProfileCommandHandler.html",[0,0.359,2,0.25,3,0.032,4,0.037,5,0.037,9,0.138,12,0.514,15,0.342,18,0.143,20,0.356,21,0.003,22,0.215,23,0.202,24,0.323,28,0.037,30,0.002,31,0.002,35,1.289,36,1.65,37,3.552,38,1.364,39,1.723,40,2.33,42,3.012,44,3.459,47,3.114,49,2.131,50,0.996,51,1.5,52,0.8,53,2.274,54,1.087,56,1.793,57,1.618,64,1.457,73,2.11,75,1.859,78,1.579,80,2.382,83,0.912,85,2.434,86,2.291,87,2.368,90,2.087,104,2.025,110,1.631,134,2.087,156,2.8,158,4.166,160,2.441,163,3.042,164,3.361,165,5.849,166,3.439,1529,6.074,1530,3.439,1533,3.439,1540,3.361,1558,3.439,1906,3.098,3069,6.476,3117,7.516,3280,4.27,3282,3.616,3300,8.726,3301,6.127,3302,5.586,3303,5.586]],["title/classes/RestoreProfileEvent.html",[0,0.356,3301,4.444]],["body/classes/RestoreProfileEvent.html",[0,0.413,2,0.288,3,0.037,4,0.043,5,0.043,9,0.159,10,0.954,11,1.727,12,0.742,15,0.288,16,1.637,17,2.006,18,0.185,20,0.3,21,0.003,22,0.181,23,0.262,24,0.272,25,1.181,28,0.043,29,1.519,30,0.002,31,0.002,116,2.563,117,2.067,121,2.724,122,3.049,156,4.696,181,3.532,1568,4.725,1569,5.155,3286,6.43,3301,6.736,3304,10.31,3305,6.436,3306,6.436,3307,6.436]],["title/classes/RestoreProfileEventHandler.html",[0,0.356,3070,4.697]],["body/classes/RestoreProfileEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,181,2.254,182,5.077,1540,5.943,3070,7.049,3282,4.103,3289,4.655,3301,7.911,3308,9.301,3309,6.34]],["title/classes/RestoreSocialNetworkCommand.html",[0,0.356,3310,4.444]],["body/classes/RestoreSocialNetworkCommand.html",[0,0.472,2,0.329,3,0.042,4,0.049,5,0.049,9,0.182,10,1.039,11,1.559,12,0.67,15,0.329,16,1.782,17,2.031,18,0.171,20,0.342,21,0.003,22,0.206,23,0.242,24,0.311,25,1.022,28,0.049,30,0.002,31,0.002,83,1.629,627,4.154,1084,4.015,1470,3.526,1587,5.622,1590,5.622,1593,5.622,3310,7.334,3311,9.974]],["title/classes/RestoreSocialNetworkCommandHandler.html",[0,0.356,3312,4.697]],["body/classes/RestoreSocialNetworkCommandHandler.html",[0,0.344,2,0.24,3,0.03,4,0.036,5,0.036,9,0.132,12,0.499,15,0.332,18,0.139,20,0.346,21,0.003,22,0.209,23,0.196,24,0.314,28,0.036,30,0.002,31,0.002,35,1.236,36,1.604,37,3.475,38,1.326,39,1.686,40,2.265,42,2.96,44,3.421,47,3.027,49,2.044,50,0.956,51,1.458,52,0.79,53,2.182,54,1.043,56,1.72,57,1.552,64,1.398,73,2.05,78,1.762,80,2.285,83,0.875,85,2.366,86,2.227,87,2.018,90,2.002,134,2.002,227,2.258,626,2.867,627,3.556,629,2.973,659,4.69,689,3.381,746,3.155,1019,2.646,1084,3.899,1327,4.947,1597,6.531,1598,3.674,1600,3.566,1602,3.381,1613,3.091,1615,5.459,1856,3.225,1857,5.459,1906,2.973,3280,4.097,3282,3.469,3289,3.935,3310,7.385,3312,6.293,3313,8.538,3314,4.292,3315,5.36,3316,5.36,3317,5.36]],["title/classes/RestoreSocialNetworkEvent.html",[0,0.356,3314,4.444]],["body/classes/RestoreSocialNetworkEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.213,28,0.042,30,0.002,31,0.002,83,1.606,116,2.529,117,2.039,121,2.676,122,2.996,627,4.256,1084,4.424,1330,5.453,1617,4.789,1618,4.599,1619,6.317,1620,4.789,1621,4.789,1622,2.844,3286,6.317,3314,6.618,3318,10.22]],["title/classes/RestoreSocialNetworkEventHandler.html",[0,0.356,3319,4.697]],["body/classes/RestoreSocialNetworkEventHandler.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,12,0.417,15,0.278,18,0.153,20,0.383,21,0.003,22,0.231,23,0.217,24,0.347,28,0.041,30,0.002,31,0.002,35,1.432,36,1.772,38,1.465,39,1.818,50,1.107,51,1.61,52,0.726,54,1.208,78,1.281,83,1.014,116,1.698,117,1.37,128,3.706,129,3.307,130,2.556,131,3.616,132,2.556,133,3.307,134,2.32,135,2.368,136,2.499,137,2.105,138,2.186,139,2.207,141,1.976,142,2.556,143,2.586,144,2.586,145,2.251,146,4.257,627,3.834,1019,3.065,1084,3.944,1602,6.18,3282,4.019,3289,4.559,3314,7.847,3319,6.954,3320,9.207,3321,6.21]],["title/classes/RestoreUserCommand.html",[0,0.356,3322,4.444]],["body/classes/RestoreUserCommand.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.21,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,83,1.642,1636,5.495,1943,7.837,3322,7.415,3323,10.053]],["title/classes/RestoreUserCommandHandler.html",[0,0.356,3324,4.697]],["body/classes/RestoreUserCommandHandler.html",[0,0.331,2,0.23,3,0.029,4,0.034,5,0.034,9,0.127,10,0.82,11,1.306,15,0.323,18,0.156,20,0.337,21,0.003,22,0.203,23,0.22,24,0.305,28,0.034,30,0.002,31,0.002,35,1.188,36,1.56,37,3.402,38,1.289,39,1.65,40,2.203,42,2.909,44,3.556,47,2.944,49,1.965,50,0.918,51,1.418,52,0.801,53,2.097,54,1.002,56,1.653,57,1.492,60,2.73,61,1.924,62,1.886,63,1.905,64,1.343,73,1.42,75,2.407,78,1.492,83,1.181,85,2.301,86,2.503,87,2.268,90,1.924,104,1.867,110,2.441,111,1.985,112,1.762,176,3.249,188,2.338,189,2.756,215,1.398,227,2.17,252,1.965,646,2.805,666,3.625,676,2.581,746,3.032,1317,3.334,1544,4.681,1613,2.97,1642,6.761,1670,2.912,1752,3.171,1856,4.351,2291,3.782,2678,4.125,3280,3.938,3282,3.334,3322,7.258,3324,7.074,3325,9.063,3326,4.125,3327,5.151,3328,5.151,3329,5.151]],["title/classes/RestoreUserEvent.html",[0,0.356,3326,4.444]],["body/classes/RestoreUserEvent.html",[0,0.42,2,0.292,3,0.037,4,0.044,5,0.044,9,0.161,10,0.964,11,1.713,12,0.744,15,0.292,18,0.187,20,0.304,21,0.003,22,0.183,23,0.264,24,0.276,25,1.224,28,0.044,30,0.002,31,0.002,116,2.582,117,2.082,121,2.751,122,3.08,215,2.712,564,4.162,1622,2.967,1745,4.799,1746,3.933,1749,4.799,1955,6.495,1956,4.996,3286,6.495,3326,6.804,3330,10.36]],["title/classes/RestoreUserEventHandler.html",[0,0.356,3331,5.035]],["body/classes/RestoreUserEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,215,1.72,1752,6.081,1754,4.218,3282,4.103,3289,4.655,3326,7.911,3331,7.557,3332,9.301,3333,6.34]],["title/classes/RoleGroupMembershipEnum.html",[0,0.356,2406,4.697]],["body/classes/RoleGroupMembershipEnum.html",[0,0.426,2,0.297,3,0.038,4,0.044,5,0.044,9,0.164,10,0.974,12,0.747,18,0.178,21,0.003,23,0.251,25,1.062,28,0.044,30,0.002,31,0.002,121,3.08,122,3.448,202,5.118,707,7.121,961,5.139,2406,7.264,2653,10.084,3334,9.123,3335,6.639,3336,9.447,3337,10.411,3338,6.639,3339,6.639,3340,6.639]],["title/classes/SamePasswordException.html",[0,0.356,3341,4.697]],["body/classes/SamePasswordException.html",[0,0.498,2,0.347,3,0.044,4,0.052,5,0.052,15,0.457,18,0.145,21,0.003,28,0.052,30,0.002,31,0.002,52,0.611,292,4.151,294,2.343,738,4.744,784,4.968,852,4.777,1089,4.136,1193,5.064,1194,4.413,2503,7.041,2504,7.041,3341,8.012,3342,8.589,3343,7.759,3344,6.567,3345,6.567]],["title/classes/SendMailCommand.html",[0,0.356,436,4.444]],["body/classes/SendMailCommand.html",[0,0.409,2,0.285,3,0.036,4,0.043,5,0.043,9,0.158,10,0.949,11,1.724,12,0.741,15,0.285,16,1.627,17,2,18,0.185,20,0.297,21,0.003,22,0.179,23,0.261,24,0.434,25,1.178,28,0.043,29,1.505,30,0.002,31,0.002,196,4.728,436,6.696,447,5.392,717,5.743,1220,5.379,1865,5.399,1866,5.788,1867,5.788,2664,7.471,3346,10.28,3347,5.788,3348,5.788]],["title/classes/SendMailCommandHandler.html",[0,0.356,426,4.697]],["body/classes/SendMailCommandHandler.html",[0,0.393,2,0.274,3,0.035,4,0.041,5,0.041,9,0.151,12,0.411,15,0.274,18,0.152,20,0.379,21,0.003,22,0.228,23,0.215,24,0.344,28,0.041,30,0.002,31,0.002,36,1.755,37,3.721,38,1.451,39,1.805,40,2.478,44,3.541,47,3.312,49,3.103,50,1.091,51,1.595,52,0.799,53,2.491,54,1.191,73,2.243,87,1.661,104,2.218,196,4.204,294,1.848,336,3.459,343,4.195,346,4.493,426,6.887,436,7.801,1220,4.692,1413,4.901,1414,7.801,1415,6.516,1422,4.901,1424,5.553,1865,5.18,3347,5.553,3348,5.553,3349,9.14,3350,6.516,3351,5.553,3352,6.12,3353,6.12,3354,6.12,3355,6.12]],["title/classes/SendMailEvent.html",[0,0.356,3350,4.444]],["body/classes/SendMailEvent.html",[0,0.363,2,0.253,3,0.032,4,0.038,5,0.038,9,0.14,10,0.876,11,1.762,12,0.757,15,0.253,16,1.502,17,1.922,18,0.19,20,0.264,21,0.003,22,0.159,23,0.269,24,0.417,25,1.216,28,0.038,29,1.336,30,0.002,31,0.002,116,2.403,117,1.938,121,2.5,122,2.799,137,2.617,196,4.798,287,4.284,717,5.409,1220,5.066,1890,5.137,1895,5.137,1896,5.137,2664,7.036,3350,6.183,3356,10.431,3357,5.661,3358,5.661,3359,5.661,3360,7.006,3361,5.661]],["title/classes/SendMailEventHandler.html",[0,0.356,428,4.697]],["body/classes/SendMailEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,195,3.815,196,4.278,287,2.878,346,7.252,428,7.049,3350,7.911,3351,5.753,3362,9.301,3363,6.34,3364,6.34,3365,6.34]],["title/classes/SetCurrentRefreshTokenCommand.html",[0,0.356,3366,4.444]],["body/classes/SetCurrentRefreshTokenCommand.html",[0,0.444,2,0.309,3,0.039,4,0.046,5,0.046,9,0.171,10,1,11,1.648,12,0.724,15,0.309,18,0.181,20,0.322,21,0.003,22,0.194,23,0.256,24,0.292,25,1.238,28,0.046,30,0.002,31,0.002,564,4.392,752,5.561,1622,3.142,2306,8.178,2307,6.28,3236,6.28,3237,6.28,3238,7.999,3366,7.059,3367,10.212,3368,7.497]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[0,0.356,3369,4.697]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[0,0.354,2,0.246,3,0.031,4,0.037,5,0.037,9,0.136,15,0.339,18,0.142,20,0.353,21,0.003,22,0.213,23,0.2,24,0.32,28,0.037,30,0.002,31,0.002,35,1.272,36,1.635,37,3.527,38,1.352,39,1.711,40,2.31,42,2.996,44,3.447,47,3.086,49,2.103,50,0.983,51,1.486,52,0.816,53,2.244,54,1.073,56,1.77,57,1.597,60,2.862,61,2.06,62,2.019,63,2.039,64,1.438,73,2.091,75,1.835,76,1.979,78,1.565,85,1.754,87,1.496,104,1.999,110,2.531,111,2.125,112,1.886,188,2.503,189,2.95,215,1.496,252,2.103,646,3.002,666,3.8,675,5.37,676,2.763,740,4.215,752,5.082,1670,3.117,2313,6.072,3241,7.474,3243,4.215,3366,7.474,3368,6.852,3369,7.335,3370,8.666,3371,5.513,3372,5.513,3373,5.513]],["title/classes/SetCurrentRefreshTokenEvent.html",[0,0.356,3374,4.697]],["body/classes/SetCurrentRefreshTokenEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.213,28,0.042,30,0.002,31,0.002,116,2.529,117,2.039,121,2.676,122,2.996,215,2.668,564,4.095,752,5.828,777,4.865,1027,5.665,1622,2.844,1746,3.769,3246,5.685,3247,7.498,3248,5.685,3249,5.685,3368,7.503,3374,6.994,3375,10.22]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[0,0.356,3376,4.697]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,50,1.114,52,0.728,54,1.216,83,1.02,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,195,3.758,486,5.488,752,5.56,777,3.677,1027,4.282,1754,4.156,3252,8.312,3368,7.21,3374,8.312,3376,6.981,3377,9.234,3378,6.246,3379,6.246]],["title/classes/ShiftProfileOwnerCommand.html",[0,0.356,3112,4.444]],["body/classes/ShiftProfileOwnerCommand.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,9,0.173,10,1.006,11,1.689,12,0.726,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,156,4.884,181,3.643,564,4.058,3112,7.104,3380,10.249,3381,6.99,3382,8.87,3383,6.99]],["title/classes/ShiftProfileOwnerCommandHandler.html",[0,0.356,3057,4.697]],["body/classes/ShiftProfileOwnerCommandHandler.html",[0,0.336,2,0.234,3,0.03,4,0.035,5,0.035,9,0.129,12,0.566,15,0.327,18,0.136,20,0.34,21,0.003,22,0.205,23,0.193,24,0.309,28,0.035,30,0.002,31,0.002,35,1.206,36,1.576,37,3.429,38,1.303,39,1.664,40,2.226,42,3.277,44,3.397,47,2.974,49,1.994,50,0.932,51,1.432,52,0.784,53,2.128,54,1.017,56,1.678,57,1.514,64,1.363,73,2.323,75,1.739,76,1.876,78,1.738,80,3.116,83,1.194,85,2.68,86,2.523,87,2.286,90,2.73,110,1.526,134,1.953,158,3.979,160,2.284,163,2.846,164,3.145,165,3.996,166,3.218,181,3.412,252,1.994,264,2.661,666,4.222,676,2.62,1530,3.218,1533,3.218,1542,3.996,1543,3.996,1544,3.383,1558,3.218,1947,4.186,3057,6.185,3059,7.721,3112,7.305,3384,8.424,3385,5.227,3386,5.227,3387,4.743,3388,5.227]],["title/classes/ShiftProfileOwnerEvent.html",[0,0.356,3389,4.697]],["body/classes/ShiftProfileOwnerEvent.html",[0,0.385,2,0.268,3,0.034,4,0.04,5,0.04,9,0.148,10,0.911,11,1.748,12,0.751,15,0.268,16,1.562,17,1.96,18,0.188,20,0.279,21,0.003,22,0.168,23,0.266,24,0.253,25,1.201,28,0.04,29,1.415,30,0.002,31,0.002,83,1.478,116,2.475,117,1.996,121,2.6,122,2.91,181,3.913,961,4.973,3389,6.795,3390,10.368,3391,5.998,3392,8.028,3393,5.998,3394,8.028,3395,5.998,3396,5.998]],["title/classes/ShiftProfileOwnerEventHandler.html",[0,0.356,3064,4.697]],["body/classes/ShiftProfileOwnerEventHandler.html",[0,0.394,2,0.274,3,0.035,4,0.041,5,0.041,9,0.152,12,0.412,15,0.274,18,0.152,20,0.38,21,0.003,22,0.229,23,0.215,24,0.344,28,0.041,30,0.002,31,0.002,35,1.416,36,1.758,38,1.454,39,1.808,50,1.094,51,1.598,52,0.721,54,1.194,78,1.266,83,1.332,116,1.679,117,1.354,128,3.684,129,3.281,130,2.527,131,3.604,132,2.527,133,3.281,134,2.293,135,2.341,136,2.47,137,2.08,138,2.161,139,2.182,141,1.953,142,2.527,143,2.556,144,2.556,145,2.225,146,4.208,181,3.608,215,1.665,3064,6.9,3066,8.85,3389,8.255,3397,9.154,3398,6.138,3399,6.138,3400,6.138,3401,6.138]],["title/classes/ShiftProfileOwnerRequest.html",[0,0.356,3099,4.697]],["body/classes/ShiftProfileOwnerRequest.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,9,0.173,10,1.006,11,1.689,12,0.726,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,156,4.884,181,3.643,564,4.058,3099,7.508,3402,10.249,3403,6.99,3404,8.87,3405,6.99]],["title/classes/SignInDto.html",[0,0.356,3406,4.697]],["body/classes/SignInDto.html",[0,0.59,2,0.331,3,0.042,4,0.049,5,0.049,9,0.183,10,1.043,18,0.172,21,0.003,23,0.243,25,1.168,28,0.049,30,0.002,31,0.002,52,0.584,217,3.622,265,6.963,267,3.656,735,4.729,738,5.015,1087,5.931,3141,6.268,3406,7.785,3407,9.079,3408,7.406,3409,6.72,3410,7.406,3411,7.406,3412,6.72,3413,6.72]],["title/classes/SignUpDto.html",[0,0.356,771,4.444]],["body/classes/SignUpDto.html",[0,0.571,2,0.313,3,0.04,4,0.047,5,0.047,9,0.173,10,1.008,18,0.182,21,0.003,23,0.257,25,1.208,28,0.047,30,0.002,31,0.002,52,0.553,217,3.843,265,7.045,267,3.462,287,4.43,735,4.613,738,4.891,771,7.119,1085,6.795,1087,5.616,3141,5.936,3407,9.311,3409,6.363,3412,6.363,3413,6.363,3414,7.013,3415,6.363,3416,7.013,3417,7.013,3418,7.013]],["title/controllers/SocialNetworkController.html",[270,2.919,3419,4.697]],["body/controllers/SocialNetworkController.html",[0,0.219,3,0.019,4,0.023,5,0.023,9,0.084,12,0.23,18,0.166,20,0.397,21,0.003,22,0.239,23,0.225,24,0.36,25,1.117,28,0.023,30,0.001,31,0.001,38,0.951,39,2.137,50,1.586,51,2.012,52,0.745,78,1.836,86,2.664,110,2.598,141,1.088,145,2.378,217,3.503,270,1.798,272,1.688,276,2.344,283,1.346,291,2.213,293,2.421,294,1.032,299,2.275,300,1.933,303,2.344,304,2.51,305,1.829,306,2.51,307,1.896,313,6.3,314,2.805,413,2.421,514,7.37,582,5.441,627,3.832,1084,3.235,1174,2.613,1189,2.893,1295,7.37,1330,3.638,1626,7.744,1710,3.778,2217,2.51,2279,5.935,2767,3.102,2770,3.102,2772,3.102,2775,2.893,2778,4.515,2779,2.893,2783,3.102,2790,3.102,2792,2.738,2793,2.738,2797,2.738,2798,2.51,2799,2.738,2803,3.102,2804,5.552,2806,2.893,2810,2.738,2813,3.102,2814,2.738,2817,3.102,2823,3.102,2894,2.893,3419,4.515,3420,3.419,3421,4.84,3422,4.84,3423,7.411,3424,4.84,3425,6.56,3426,4.84,3427,5.952,3428,3.419,3429,3.419,3430,3.102,3431,3.419,3432,3.419,3433,3.102,3434,3.419,3435,3.419,3436,3.419,3437,5.334,3438,3.102,3439,3.419,3440,4.84,3441,5.935,3442,3.419,3443,5.015,3444,3.102,3445,4.84,3446,3.102,3447,3.419,3448,3.419,3449,3.419,3450,3.419,3451,3.419,3452,5.334,3453,3.419,3454,5.334,3455,3.419,3456,3.419,3457,3.419,3458,3.419,3459,3.419,3460,3.419]],["title/classes/SocialNetworkDto.html",[0,0.356,2166,4.074]],["body/classes/SocialNetworkDto.html",[0,0.348,2,0.243,3,0.031,4,0.036,5,0.036,9,0.134,10,0.851,11,1.791,12,0.77,15,0.243,16,1.46,17,1.894,18,0.196,20,0.253,21,0.003,22,0.26,23,0.277,24,0.363,25,1.174,28,0.036,29,1.281,30,0.002,31,0.002,83,1.404,207,3.71,208,4.007,214,3.755,232,4.24,627,4.444,1296,5.563,1589,5.893,2166,5.507,3461,10.671,3462,5.428,3463,5.428,3464,5.428,3465,5.428,3466,5.428,3467,5.428,3468,5.428,3469,5.428,3470,5.428]],["title/entities/SocialNetworkEntity.html",[199,2.073,626,2.969]],["body/entities/SocialNetworkEntity.html",[0,0.391,3,0.023,4,0.027,5,0.027,9,0.101,10,0.829,16,0.792,17,1.186,18,0.186,21,0.003,22,0.265,23,0.262,25,1.187,28,0.027,29,0.96,30,0.001,31,0.001,52,0.48,58,4.141,64,1.061,81,1.778,83,1.42,199,3.247,201,1.951,207,3.502,208,3.783,214,3.546,217,3.916,232,4.389,240,3.153,257,5.145,258,3.781,259,3.844,261,2.072,262,3.781,443,3.753,626,3.91,627,4.218,628,6.739,724,3.445,1024,2.708,1079,4.317,1082,4.056,1084,4.077,1089,1.778,1090,2.449,1091,4.798,1098,2.178,1296,5.625,1330,5.617,1588,5.176,1589,5.958,2012,3.693,2114,5.587,2410,2.988,3471,4.07,3472,7.308,3473,6.096,3474,4.07,3475,4.07,3476,4.07,3477,4.07,3478,4.07,3479,4.07,3480,4.07,3481,4.07,3482,4.07,3483,4.07,3484,3.693,3485,4.07,3486,9.458,3487,2.506,3488,4.07]],["title/modules/SocialNetworkModule.html",[117,1.224,479,4.242]],["body/modules/SocialNetworkModule.html",[0,0.268,3,0.024,4,0.028,5,0.028,21,0.003,22,0.117,28,0.028,30,0.002,31,0.002,49,1.592,52,0.886,54,0.812,57,1.209,112,3.654,117,1.37,131,3.181,135,1.592,137,2.515,138,2.187,139,1.484,252,1.592,264,2.125,272,3.066,283,2.446,294,1.261,320,2.36,321,3.512,325,5.541,328,3.738,329,2.512,330,2.512,332,3.738,333,3.738,334,2.702,335,4.021,336,2.36,337,3.918,338,2.702,342,3.065,345,3.065,348,5.447,350,3.918,351,2.778,352,2.633,355,2.702,356,2.702,357,2.702,358,2.702,359,2.633,387,3.065,395,2.862,431,2.702,432,2.957,479,7.791,514,3.343,626,3.324,627,1.739,629,2.315,1084,4.334,1114,3.191,1116,3.191,1118,2.273,1121,2.458,1128,3.191,1134,3.191,1139,3.343,1141,3.343,1143,3.191,1144,3.191,1145,5.672,1146,1.973,1330,3.445,1595,5.258,1597,6.222,1600,2.778,1602,5.541,1623,5.258,1931,5.258,1938,5.258,2163,5.258,2165,3.533,2265,5.258,2271,5.258,3312,5.258,3319,5.258,3419,6.28,3443,7.04,3444,3.788,3489,3.788,3490,3.788,3491,4.175,3492,4.175,3493,4.175,3494,5.258,3495,5.258,3496,5.258,3497,5.258]],["title/classes/SocialNetworkResponse.html",[0,0.356,1174,4.242]],["body/classes/SocialNetworkResponse.html",[0,0.335,2,0.233,3,0.03,4,0.035,5,0.035,9,0.129,10,0.827,11,1.797,12,0.773,15,0.233,16,1.42,17,1.773,18,0.197,20,0.243,21,0.003,22,0.256,23,0.279,24,0.355,25,1.196,28,0.035,30,0.002,31,0.002,83,1.374,207,3.631,208,3.922,214,3.676,232,4.187,627,4.462,1174,5.576,1188,9.721,1296,5.445,1470,2.5,1588,5.958,1589,5.768,3498,5.214,3499,5.214,3500,5.214,3501,5.214,3502,5.214,3503,5.214,3504,5.214,3505,5.214,3506,5.214,3507,5.214]],["title/injectables/SocialNetworkService.html",[368,2.162,3443,4.242]],["body/injectables/SocialNetworkService.html",[0,0.165,3,0.015,4,0.017,5,0.017,9,0.063,12,0.285,15,0.115,18,0.155,20,0.369,21,0.003,22,0.254,23,0.209,24,0.334,25,1.034,28,0.017,30,0.001,31,0.001,38,0.756,39,2.035,40,0.782,50,1.412,51,1.879,52,0.806,54,0.5,73,0.708,75,2.635,78,1.634,83,1.026,85,2.52,86,2.87,87,2.797,90,2.347,110,2.506,113,3.49,141,0.817,294,0.775,314,2.92,368,1.651,369,1.307,371,1.818,372,5.132,373,5.429,378,1.963,380,4.138,381,4.45,402,1.963,514,6.873,627,3.574,1019,3.432,1084,3.559,1118,1.398,1121,1.512,1174,1.963,1189,2.173,1192,5.885,1194,3.242,1195,2.33,1295,6.63,1296,2.743,1330,3.002,1342,1.76,1478,3.112,1479,1.885,1480,1.885,1535,4.627,1536,1.545,1585,3.394,1588,3.002,1589,2.906,1597,4.45,1626,5.031,1672,1.708,1929,3.394,1949,5.315,1950,2.173,1993,3.394,2008,3.587,2009,2.33,2050,1.963,2160,3.394,2165,2.173,2166,4.613,2167,2.056,2168,2.056,2179,1.512,2217,1.885,2264,3.394,2268,3.394,2279,5.031,2797,2.056,2798,1.885,2799,2.056,2889,5.031,2890,2.173,2891,3.846,2893,2.33,2894,2.173,2898,2.056,2902,2.056,2906,4.581,2907,3.846,2909,2.33,2910,2.33,3310,3.394,3421,3.846,3422,3.846,3424,3.846,3426,3.846,3427,3.846,3430,3.846,3433,3.846,3438,3.846,3440,3.846,3441,5.031,3443,3.24,3445,3.846,3446,2.33,3508,2.568,3509,6.283,3510,4.238,3511,2.568,3512,4.238,3513,2.568,3514,6.283,3515,2.568,3516,2.568,3517,2.568,3518,4.238,3519,2.568,3520,2.568,3521,2.568,3522,3.394,3523,2.568,3524,4.238,3525,4.238,3526,5.412,3527,2.568,3528,4.238,3529,4.238,3530,4.238,3531,4.238,3532,2.568]],["title/classes/SoftDeleteCardCommand.html",[0,0.356,3533,4.697]],["body/classes/SoftDeleteCardCommand.html",[0,0.475,2,0.331,3,0.042,4,0.049,5,0.049,8,4.793,9,0.183,10,1.043,11,1.564,12,0.672,15,0.331,16,1.79,17,2.094,18,0.172,19,5.077,20,0.345,21,0.003,22,0.208,23,0.243,24,0.313,25,1.027,26,5.077,28,0.049,29,1.747,30,0.002,31,0.002,83,1.634,283,3.94,3533,7.785,3534,10.006]],["title/classes/SoftDeleteCardCommandHandler.html",[0,0.356,1115,4.697]],["body/classes/SoftDeleteCardCommandHandler.html",[0,0.338,2,0.235,3,0.03,4,0.035,5,0.035,9,0.13,12,0.493,13,2.455,15,0.328,18,0.137,20,0.342,21,0.003,22,0.206,23,0.194,24,0.31,28,0.035,30,0.002,31,0.002,34,5.923,35,1.215,36,1.584,37,3.443,38,1.31,39,1.67,40,2.237,41,2.921,42,2.937,44,3.404,46,4,47,2.99,49,2.009,50,0.939,51,1.44,52,0.806,53,2.144,54,1.025,56,1.69,57,1.525,58,2.39,59,2.868,60,2.772,61,1.967,62,1.928,63,1.948,64,1.373,70,2.817,72,2.868,73,2.025,75,1.752,78,1.516,79,3.169,80,2.245,83,0.86,85,2.337,86,2.2,87,2.483,88,3.408,90,1.967,104,2.663,109,1.819,110,2.145,111,2.03,112,1.802,113,2.455,188,2.39,189,2.817,283,3.79,1115,7.159,1558,3.242,1856,4.419,3533,7.746,3535,8.458,3536,4.026,3537,5.882,3538,3.408,3539,5.266,3540,5.266]],["title/classes/SoftDeleteCardEvent.html",[0,0.356,3537,4.444]],["body/classes/SoftDeleteCardEvent.html",[0,0.405,2,0.282,3,0.036,4,0.042,5,0.042,9,0.156,10,0.941,11,1.72,12,0.739,13,4.324,15,0.282,16,1.614,17,1.993,18,0.184,20,0.293,21,0.003,22,0.177,23,0.26,24,0.266,25,1.174,28,0.042,29,1.487,30,0.002,31,0.002,109,3.404,115,4.079,116,2.537,117,2.045,118,4.079,119,4.193,120,4.079,121,2.687,122,3.007,125,4.079,283,4.22,3537,6.644,3541,10.24,3542,5.369]],["title/classes/SoftDeleteCardEventHandler.html",[0,0.356,1140,4.697]],["body/classes/SoftDeleteCardEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,39,1.823,50,1.114,51,1.617,52,0.728,54,1.216,70,5.254,78,1.289,83,1.02,109,2.157,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,134,2.334,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,180,4.282,283,3.867,1140,6.981,1863,3.602,3537,7.865,3538,4.043,3542,4.043,3543,9.234,3544,6.246]],["title/classes/SoftDeleteOccupationCommand.html",[0,0.356,2899,4.444]],["body/classes/SoftDeleteOccupationCommand.html",[0,0.477,2,0.332,3,0.042,4,0.05,5,0.05,9,0.184,10,1.046,11,1.566,12,0.673,15,0.332,16,1.794,17,2.039,18,0.172,20,0.346,21,0.003,22,0.209,23,0.243,24,0.314,25,1.029,28,0.05,30,0.002,31,0.002,283,3.946,1332,5.271,1465,5.681,1470,3.563,1902,6.29,1903,6.29,2899,7.382,3545,10.021]],["title/classes/SoftDeleteOccupationCommandHandler.html",[0,0.356,2855,4.697]],["body/classes/SoftDeleteOccupationCommandHandler.html",[0,0.331,2,0.231,3,0.029,4,0.035,5,0.035,9,0.128,12,0.487,15,0.324,18,0.135,20,0.337,21,0.003,22,0.203,23,0.191,24,0.306,28,0.035,30,0.002,31,0.002,35,1.191,36,1.563,37,3.406,38,1.292,39,1.653,40,2.207,42,2.912,44,3.385,47,2.949,49,1.969,50,0.921,51,1.42,52,0.802,53,2.102,54,1.005,56,1.657,57,1.495,60,2.734,61,1.929,62,1.89,63,1.91,64,1.347,73,1.998,75,1.718,76,1.853,78,1.495,80,2.202,83,0.843,85,2.305,86,2.169,87,2.462,90,1.929,104,2.626,110,1.508,111,1.99,112,1.767,176,3.257,177,3.436,188,2.344,189,2.762,283,3.762,621,2.549,657,4.359,687,3.107,719,2.982,1332,2.716,1333,3.257,1334,4.689,1473,6.426,1474,3.54,1475,3.436,1482,3.436,1863,2.977,1908,5.802,2855,7.083,2899,7.266,3536,3.947,3538,3.342,3542,3.342,3546,8.369,3547,5.802,3548,5.163,3549,5.163]],["title/classes/SoftDeleteOccupationEvent.html",[0,0.356,3547,4.444]],["body/classes/SoftDeleteOccupationEvent.html",[0,0.406,2,0.283,3,0.036,4,0.042,5,0.042,9,0.156,10,0.943,11,1.721,12,0.74,15,0.283,16,1.618,17,1.92,18,0.184,20,0.294,21,0.003,22,0.177,23,0.26,24,0.267,25,1.175,28,0.042,30,0.002,31,0.002,116,2.54,117,2.048,121,2.692,122,3.013,283,4.224,719,4.062,1332,4.885,1470,3.03,1505,4.832,1506,4.832,1508,4.832,1509,4.832,1912,5.35,3542,5.38,3547,6.657,3550,10.25]],["title/classes/SoftDeleteOccupationEventHandler.html",[0,0.356,2856,4.697]],["body/classes/SoftDeleteOccupationEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,39,1.823,50,1.114,51,1.617,52,0.728,54,1.216,78,1.289,83,1.02,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,134,2.334,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,283,3.867,719,2.572,1482,6.534,1513,4.775,1863,3.602,2856,6.981,3538,4.043,3542,4.043,3547,7.865,3551,9.234,3552,6.246]],["title/classes/SoftDeleteProfileCommand.html",[0,0.356,3110,4.444]],["body/classes/SoftDeleteProfileCommand.html",[0,0.475,2,0.331,3,0.042,4,0.049,5,0.049,9,0.183,10,1.043,11,1.564,12,0.672,15,0.331,16,1.79,17,2.094,18,0.172,20,0.345,21,0.003,22,0.208,23,0.243,24,0.313,25,1.027,28,0.049,29,1.747,30,0.002,31,0.002,83,1.634,283,3.94,1521,5.437,1918,7.785,3110,7.366,3553,10.006]],["title/classes/SoftDeleteProfileCommandHandler.html",[0,0.356,3067,4.697]],["body/classes/SoftDeleteProfileCommandHandler.html",[0,0.348,2,0.243,3,0.031,4,0.036,5,0.036,9,0.134,12,0.504,15,0.335,18,0.14,20,0.349,21,0.003,22,0.211,23,0.198,24,0.317,28,0.036,30,0.002,31,0.002,35,1.252,36,1.618,37,3.499,38,1.337,39,1.697,40,2.285,42,2.976,44,3.432,47,3.053,49,2.07,50,0.968,51,1.471,52,0.793,53,2.21,54,1.056,56,1.742,57,1.572,64,1.416,73,2.068,75,1.806,76,1.949,78,1.548,80,2.315,83,1.404,85,2.387,86,2.246,87,2.332,90,2.028,104,1.968,110,1.585,134,2.028,158,4.085,160,2.372,163,2.956,164,3.266,166,3.342,170,4.347,181,1.93,283,3.832,1529,6.001,1530,3.342,1533,3.342,1540,3.266,1558,3.342,1856,4.513,1906,3.011,3067,6.349,3110,7.425,3536,4.15,3538,3.513,3554,8.595,3555,6.007,3556,5.428,3557,5.428]],["title/classes/SoftDeleteProfileEvent.html",[0,0.356,3555,4.444]],["body/classes/SoftDeleteProfileEvent.html",[0,0.405,2,0.282,3,0.036,4,0.042,5,0.042,9,0.156,10,0.941,11,1.72,12,0.739,15,0.282,16,1.614,17,1.993,18,0.184,20,0.293,21,0.003,22,0.177,23,0.26,24,0.266,25,1.174,28,0.042,29,1.487,30,0.002,31,0.002,83,1.515,116,2.537,117,2.045,121,2.687,122,3.007,181,3.503,283,4.22,1568,4.627,1571,6.342,3542,5.369,3555,6.644,3558,10.24,3559,5.719,3560,5.719]],["title/classes/SoftDeleteProfileEventHandler.html",[0,0.356,3063,4.697]],["body/classes/SoftDeleteProfileEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,39,1.823,50,1.114,51,1.617,52,0.728,54,1.216,78,1.289,83,1.02,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,134,2.334,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,146,4.282,181,2.22,283,3.867,1540,5.909,1863,3.602,3063,6.981,3538,4.043,3542,4.043,3555,7.865,3561,9.234,3562,6.246]],["title/classes/SoftDeleteSocialNetworkCommand.html",[0,0.356,3563,4.697]],["body/classes/SoftDeleteSocialNetworkCommand.html",[0,0.467,2,0.325,3,0.041,4,0.049,5,0.049,9,0.18,10,1.032,11,1.552,12,0.667,15,0.325,16,1.771,17,2.024,18,0.17,20,0.339,21,0.003,22,0.204,23,0.24,24,0.307,25,1.016,28,0.049,30,0.002,31,0.002,83,1.621,283,3.909,627,4.134,1084,3.996,1470,3.489,1587,5.564,1590,5.564,1593,5.564,3563,7.702,3564,9.927]],["title/classes/SoftDeleteSocialNetworkCommandHandler.html",[0,0.356,3497,4.697]],["body/classes/SoftDeleteSocialNetworkCommandHandler.html",[0,0.341,2,0.238,3,0.03,4,0.036,5,0.036,9,0.131,12,0.497,15,0.331,18,0.138,20,0.344,21,0.003,22,0.208,23,0.195,24,0.312,28,0.036,30,0.002,31,0.002,35,1.227,36,1.595,37,3.461,38,1.319,39,1.679,40,2.253,42,2.95,44,3.413,47,3.011,49,2.029,50,0.948,51,1.45,52,0.788,53,2.165,54,1.035,56,1.707,57,1.54,64,1.387,73,2.039,78,1.755,80,2.268,83,0.869,85,2.353,86,2.215,87,2.007,90,1.987,134,1.987,283,3.804,626,2.846,627,3.541,629,2.95,659,4.665,689,3.355,1019,2.626,1084,3.888,1327,4.921,1597,6.509,1598,3.647,1600,3.539,1602,3.355,1613,3.067,1615,5.43,1856,3.2,1857,5.43,1863,3.067,1906,2.95,3497,6.26,3536,4.066,3538,3.443,3563,7.779,3565,8.503,3566,4.26,3567,5.319,3568,5.319,3569,5.319]],["title/classes/SoftDeleteSocialNetworkEvent.html",[0,0.356,3566,4.444]],["body/classes/SoftDeleteSocialNetworkEvent.html",[0,0.394,2,0.274,3,0.035,4,0.041,5,0.041,9,0.152,10,0.925,11,1.69,12,0.735,15,0.274,18,0.182,20,0.286,21,0.003,22,0.172,23,0.257,24,0.259,25,1.207,28,0.041,30,0.002,31,0.002,83,1.593,116,2.504,117,2.019,121,2.64,122,2.955,283,4.193,627,4.228,1084,4.406,1330,5.409,1617,4.692,1618,4.506,1619,6.232,1620,4.692,1621,4.692,1622,2.786,3542,5.276,3566,6.529,3570,10.151]],["title/classes/SoftDeleteSocialNetworkEventHandler.html",[0,0.356,3494,4.697]],["body/classes/SoftDeleteSocialNetworkEventHandler.html",[0,0.393,2,0.274,3,0.035,4,0.041,5,0.041,9,0.151,12,0.411,15,0.274,18,0.152,20,0.379,21,0.003,22,0.228,23,0.215,24,0.344,28,0.041,30,0.002,31,0.002,35,1.412,36,1.755,38,1.451,39,1.805,50,1.091,51,1.595,52,0.72,54,1.191,78,1.263,83,1,116,1.674,117,1.35,128,3.679,129,3.275,130,2.519,131,3.601,132,2.519,133,3.275,134,2.286,135,2.334,136,2.463,137,2.074,138,2.154,139,2.175,141,1.947,142,2.519,143,2.549,144,2.549,145,2.218,146,4.195,283,3.836,627,3.807,1019,3.021,1084,3.921,1602,6.144,1863,3.529,3494,6.887,3538,3.961,3542,3.961,3566,7.801,3571,9.14,3572,6.12]],["title/classes/SoftDeleteUserCommand.html",[0,0.356,3573,4.444]],["body/classes/SoftDeleteUserCommand.html",[0,0.484,2,0.337,3,0.043,4,0.05,5,0.05,9,0.186,10,1.055,11,1.453,12,0.677,15,0.337,18,0.174,20,0.351,21,0.003,22,0.212,23,0.245,24,0.318,25,1.175,28,0.05,30,0.002,31,0.002,283,3.971,564,4.385,1622,3.422,1636,5.534,1746,4.535,1943,6.38,3573,7.447,3574,10.085,3575,7.538]],["title/classes/SoftDeleteUserCommandHandler.html",[0,0.356,3576,4.697]],["body/classes/SoftDeleteUserCommandHandler.html",[0,0.333,2,0.232,3,0.029,4,0.035,5,0.035,9,0.128,10,0.825,11,1.311,15,0.325,18,0.157,20,0.339,21,0.003,22,0.204,23,0.221,24,0.307,28,0.035,30,0.002,31,0.002,35,1.197,36,1.568,37,3.415,38,1.296,39,1.657,40,2.214,42,2.918,44,3.562,47,2.959,49,1.979,50,0.925,51,1.425,52,0.803,53,2.112,54,1.01,56,1.665,57,1.503,60,2.744,61,1.939,62,1.9,63,1.919,64,1.353,73,1.431,75,1.727,78,1.5,80,2.212,83,1.187,85,2.313,86,2.177,87,1.408,90,1.939,110,2.45,111,2,112,1.775,188,2.355,189,2.776,215,1.408,252,1.979,283,3.907,646,2.826,666,3.643,676,2.6,743,4.708,1317,3.358,1542,3.967,1543,5.557,1544,3.358,1613,4.192,1642,6.779,1670,2.933,1752,3.194,1944,4.155,3536,3.967,3538,3.358,3573,7.281,3576,6.153,3577,9.092,3578,4.155,3579,5.189,3580,5.189]],["title/classes/SoftDeleteUserEvent.html",[0,0.356,3578,4.444]],["body/classes/SoftDeleteUserEvent.html",[0,0.408,2,0.284,3,0.036,4,0.042,5,0.042,9,0.157,10,0.947,11,1.703,12,0.74,15,0.284,18,0.185,20,0.296,21,0.003,22,0.178,23,0.261,24,0.269,25,1.217,28,0.042,30,0.002,31,0.002,116,2.548,117,2.054,121,2.703,122,3.025,215,2.683,283,4.044,564,4.119,752,4.544,777,4.913,1027,5.721,1622,2.886,1745,4.669,1746,3.826,1749,4.669,1955,6.38,1956,4.861,3578,6.683,3581,10.27]],["title/classes/SoftDeleteUserEventHandler.html",[0,0.356,3582,5.035]],["body/classes/SoftDeleteUserEventHandler.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,12,0.42,15,0.279,18,0.154,20,0.384,21,0.003,22,0.231,23,0.218,24,0.348,28,0.042,30,0.002,31,0.002,35,1.441,36,1.779,38,1.471,39,1.823,50,1.114,51,1.617,52,0.728,54,1.216,78,1.289,83,1.02,116,1.709,117,1.378,128,3.717,129,3.32,130,2.572,131,3.622,132,2.572,133,3.32,134,2.334,135,2.382,136,2.514,137,2.117,138,2.199,139,2.22,141,1.987,142,2.572,143,2.601,144,2.601,145,2.264,215,1.695,283,3.867,1752,6.046,1754,4.156,1863,3.602,3538,4.043,3542,4.043,3578,7.865,3582,7.484,3583,9.234,3584,6.246]],["title/entities/StripEventEntity.html",[199,2.073,630,4.074]],["body/entities/StripEventEntity.html",[0,0.575,3,0.04,4,0.047,5,0.047,9,0.176,10,1.114,11,1.535,18,0.133,21,0.003,22,0.252,23,0.187,25,1.001,28,0.047,30,0.002,31,0.002,52,0.56,64,1.854,83,1.604,121,2.302,199,3.349,201,3.407,202,4.563,217,2.799,261,4.999,630,7.57,631,7.179,726,6.449,1079,5.034,1089,3.105,1091,4.715,3484,6.449,3585,7.107,3586,7.107,3587,7.107]],["title/entities/SubscriptionEntity.html",[199,2.073,633,3.5]],["body/entities/SubscriptionEntity.html",[0,0.338,3,0.019,4,0.022,5,0.022,9,0.083,10,0.736,11,1.667,18,0.189,21,0.003,22,0.224,23,0.286,24,0.357,25,0.819,28,0.022,30,0.001,31,0.001,52,0.666,64,0.876,81,1.468,83,1.302,121,1.088,199,1.966,201,1.61,202,5.206,207,2.799,208,3.024,214,2.834,215,2.163,217,3.979,218,5.389,224,3.239,226,5.086,227,3.562,232,4.523,240,2.722,252,3.224,257,4.571,258,3.355,259,3.411,260,3.903,261,1.71,262,3.355,264,1.71,267,1.658,443,2.068,467,1.863,604,5.987,606,2.466,612,5.987,623,5.987,633,3.319,711,5.885,721,5.49,728,2.568,1024,2.235,1058,2.466,1071,3.726,1081,3.863,1082,3.501,1091,4.446,1098,1.797,1963,5.885,1964,5.885,1974,4.774,1975,4.774,1978,4.774,1985,7.232,2002,3.048,2003,3.048,2004,3.048,2392,2.568,3588,3.359,3589,6.486,3590,6.486,3591,6.486,3592,6.486,3593,3.359,3594,3.359,3595,5.261,3596,3.359,3597,3.359,3598,3.359,3599,5.261,3600,3.359,3601,5.261,3602,3.359,3603,3.359,3604,3.048,3605,3.359,3606,4.453,3607,4.774,3608,5.261,3609,5.261,3610,5.261,3611,5.261,3612,3.359,3613,5.261,3614,3.359,3615,3.359,3616,5.261,3617,3.359,3618,4.774,3619,3.359]],["title/classes/TimestampEntityExtendEntity.html",[0,0.356,3620,5.035]],["body/classes/TimestampEntityExtendEntity.html",[0,0.324,2,0.225,3,0.029,4,0.034,5,0.034,9,0.124,10,0.808,11,1.759,18,0.184,21,0.003,22,0.276,23,0.259,28,0.034,30,0.002,31,0.002,38,1.27,50,1.473,52,0.397,64,1.314,87,2.436,207,3.565,208,3.851,214,3.609,217,3.252,232,4.142,234,6.028,235,7.514,238,6.028,250,6.028,257,4.644,486,6.54,1028,6.357,1054,6.615,1079,5.85,1089,3.112,3620,6.463,3621,10.104,3622,10.104,3623,5.04,3624,8.976,3625,8.976,3626,8.976,3627,5.04,3628,5.04,3629,7.122,3630,7.122,3631,5.04,3632,5.04,3633,5.04,3634,5.04,3635,5.04,3636,8.976,3637,7.122,3638,8.26]],["title/interfaces/TokenPayload.html",[912,4.242,3270,4.074]],["body/interfaces/TokenPayload.html",[3,0.047,4,0.055,5,0.055,9,0.204,10,1.114,21,0.003,23,0.217,25,1.171,28,0.055,30,0.002,31,0.002,564,4.52,912,7.505,3270,6.052,3271,6.601,3639,8.243,3640,8.243]],["title/classes/TransferProfileToUserCommand.html",[0,0.356,3641,5.035]],["body/classes/TransferProfileToUserCommand.html",[0,0.44,2,0.306,3,0.039,4,0.046,5,0.046,9,0.169,10,0.994,11,1.681,12,0.722,15,0.306,16,1.705,17,2.046,18,0.18,20,0.319,21,0.003,22,0.192,23,0.255,24,0.289,25,0.978,28,0.046,29,1.617,30,0.002,31,0.002,52,0.54,181,3.617,564,4.021,1636,5.032,1639,5.801,3406,8.172,3641,7.949,3642,10.175,3643,9.655,3644,8.76,3645,6.854,3646,6.854]],["title/classes/UnauthorizedRequestException.html",[0,0.356,3647,5.035]],["body/classes/UnauthorizedRequestException.html",[0,0.504,2,0.351,3,0.045,4,0.052,5,0.052,15,0.459,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.618,292,4.197,294,2.369,760,4.949,784,4.992,927,7.119,1089,4.164,1193,5.099,1194,4.443,3647,8.647,3648,9.53,3649,7.846,3650,7.846,3651,7.846]],["title/classes/UpdateCardCommand.html",[0,0.356,3652,4.697]],["body/classes/UpdateCardCommand.html",[0,0.223,2,0.155,3,0.02,4,0.023,5,0.023,8,2.249,9,0.086,10,0.613,11,1.817,12,0.781,13,3.09,15,0.155,16,1.051,17,1.576,18,0.201,20,0.162,21,0.003,22,0.098,23,0.285,24,0.476,25,1.262,28,0.023,29,0.82,30,0.001,31,0.001,52,0.274,156,3.322,232,2.276,268,4.694,949,4.694,950,4.29,953,4.41,956,4.41,960,4.41,964,4.694,966,4.544,967,5.408,970,4.694,971,4.694,1005,2.312,1185,2.461,1220,3.822,1223,5.61,1294,6.015,1295,5.308,1296,4.29,1297,6.015,1298,3.153,1299,3.153,1300,3.153,1301,3.153,1302,3.153,1303,3.153,1304,3.153,1305,3.153,1306,3.153,1307,3.153,1308,3.153,1309,3.153,1311,3.153,1312,3.153,1315,3.153,3652,4.573,3653,10.848,3654,3.475,3655,3.475,3656,3.475,3657,3.475,3658,3.475]],["title/classes/UpdateCardCommandHandler.html",[0,0.356,1127,4.697]],["body/classes/UpdateCardCommandHandler.html",[0,0.348,2,0.156,3,0.02,4,0.023,5,0.023,9,0.086,12,0.545,13,1.628,15,0.242,18,0.101,20,0.253,21,0.003,22,0.152,23,0.143,24,0.229,28,0.023,30,0.001,31,0.001,34,4.852,35,0.805,36,1.17,37,2.707,38,0.967,39,1.313,40,1.652,41,1.937,42,3.272,44,2.983,46,2.953,47,2.208,49,1.332,50,0.623,51,1.063,52,0.781,53,1.421,54,0.68,56,1.121,57,1.011,58,2.462,59,1.902,60,2.047,61,1.305,62,1.279,63,1.291,64,0.911,70,1.868,72,1.902,73,2.238,75,1.162,76,2.914,78,1.773,79,3.263,80,3.196,81,1.526,83,1.224,84,4.343,85,2.733,86,2.685,87,2.583,88,3.51,90,2.801,104,1.966,109,1.206,110,1.942,111,1.346,112,1.195,113,1.628,158,3.621,160,1.526,161,1.974,163,1.902,164,2.101,165,5.083,166,2.15,181,1.241,267,1.724,314,2.097,447,3.621,621,1.724,626,1.868,628,2.323,629,1.937,657,4.001,659,4.194,687,2.101,689,2.203,719,2.233,776,2.101,961,1.724,1018,1.974,1019,2.677,1056,2.15,1084,1.406,1088,2.26,1127,5.628,1317,2.26,1318,3.169,1327,2.323,1328,6.034,1329,3.169,1330,1.937,1331,4.921,1332,3.497,1333,2.203,1334,2.26,1493,2.394,1495,2.394,2209,3.169,2237,2.956,2267,3.169,3652,6.345,3659,6.649,3660,2.26,3661,4.343,3662,2.014,3663,3.492,3664,5.423,3665,3.492,3666,3.492,3667,3.492,3668,3.492,3669,3.492,3670,3.169,3671,3.492,3672,5.423,3673,3.492,3674,3.492,3675,3.492,3676,2.203]],["title/classes/UpdateCardEvent.html",[0,0.356,3661,4.444]],["body/classes/UpdateCardEvent.html",[0,0.413,2,0.288,3,0.037,4,0.043,5,0.043,9,0.159,10,0.954,11,1.727,12,0.742,13,4.368,15,0.288,16,1.637,17,2.006,18,0.185,20,0.3,21,0.003,22,0.181,23,0.262,24,0.272,25,1.181,28,0.043,29,1.519,30,0.002,31,0.002,109,3.432,115,4.166,116,2.563,117,2.067,118,4.166,119,4.283,120,4.166,121,2.724,122,3.049,125,4.166,3487,5.178,3661,6.736,3677,10.31]],["title/classes/UpdateCardEventHandler.html",[0,0.356,1142,4.697]],["body/classes/UpdateCardEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,70,5.285,78,1.308,83,1.036,109,2.19,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,180,4.346,196,2.916,1142,7.049,3661,7.911,3662,3.656,3676,3.999,3678,9.301,3679,6.34]],["title/classes/UpdateCardRequest.html",[0,0.356,3680,5.035]],["body/classes/UpdateCardRequest.html",[0,0.225,2,0.157,3,0.02,4,0.023,5,0.023,9,0.087,10,0.617,13,3.106,15,0.157,16,1.058,17,1.582,18,0.208,20,0.163,21,0.003,22,0.098,23,0.293,24,0.485,25,1.263,28,0.023,29,0.827,30,0.001,31,0.001,52,0.641,109,1.21,150,2.572,153,2.572,156,3.34,192,4.892,232,2.291,242,2.684,467,1.943,949,4.719,950,4.313,951,5.64,952,5.094,953,4.434,954,5.64,955,4.719,956,4.434,957,5.336,958,5.336,959,5.094,960,4.434,961,3.289,962,5.094,963,5.64,964,4.719,965,5.64,966,5.898,967,5.426,968,5.094,969,6.093,970,4.719,971,4.719,985,4.518,1000,4.719,1002,4.719,1005,4.434,1007,2.402,1008,2.481,1009,2.572,1010,2.481,1011,2.572,1185,2.481,1186,5.336,1187,2.806,1345,3.179,1346,3.179,1347,3.179,1348,3.179,1349,3.179,1350,3.179,1351,3.179,1352,3.179,1353,3.179,1354,3.179,1355,3.179,1356,3.179,1357,3.179,1358,3.179,1359,3.179,1360,3.179,1361,3.179,1362,3.179,1363,3.179,1364,3.179,1365,3.179,1366,3.179,1367,3.179,1368,3.179,3680,4.934,3681,11.154,3682,3.504,3683,3.504]],["title/classes/UpdateOccupationCommand.html",[0,0.356,2897,4.444]],["body/classes/UpdateOccupationCommand.html",[0,0.447,2,0.311,3,0.04,4,0.047,5,0.047,9,0.172,10,1.004,11,1.688,12,0.726,15,0.311,16,1.723,17,1.992,18,0.182,20,0.324,21,0.003,22,0.196,23,0.257,24,0.294,25,0.988,28,0.047,30,0.002,31,0.002,52,0.549,1332,5.117,1465,5.326,1467,6.322,1468,6.322,1469,5.897,1470,3.34,2895,8.649,2896,4.934,2897,7.089,3684,10.237,3685,6.967]],["title/classes/UpdateOccupationCommandHandler.html",[0,0.356,2857,4.697]],["body/classes/UpdateOccupationCommandHandler.html",[0,0.419,2,0.2,3,0.025,4,0.03,5,0.03,9,0.11,12,0.439,15,0.292,18,0.122,20,0.304,21,0.003,22,0.217,23,0.172,24,0.276,28,0.03,30,0.002,31,0.002,35,1.03,36,1.408,37,3.141,38,1.164,39,1.524,40,1.989,42,2.725,44,3.243,45,3.278,47,2.657,49,1.703,50,0.796,51,1.28,52,0.787,53,1.818,54,0.869,56,1.433,57,1.293,60,2.464,61,1.668,62,1.635,63,1.651,64,1.165,73,1.8,75,1.486,76,2.77,78,1.864,80,1.904,83,0.729,85,2.455,86,2.705,87,2.644,90,1.668,104,2.367,110,1.304,111,1.721,112,1.528,176,4.118,177,2.971,267,2.204,314,1.408,621,4.459,657,3.928,687,2.687,719,1.838,776,3.928,1056,4.019,1332,2.349,1333,4.118,1334,4.226,1473,6.013,1474,3.061,1475,2.971,1478,3.278,1479,3.278,1480,3.278,1484,4.052,1485,4.052,1486,4.052,1487,4.052,1488,4.052,1490,3.78,1493,3.061,1495,3.061,1496,3.576,1498,4.052,1857,3.278,1908,6.18,1947,3.576,2857,6.532,2897,7.234,3660,2.89,3670,4.052,3676,2.817,3686,7.717,3687,4.465,3688,4.465,3689,6.529,3690,4.465,3691,4.465,3692,4.465]],["title/classes/UpdateOccupationDto.html",[0,0.356,2895,4.444]],["body/classes/UpdateOccupationDto.html",[0,0.482,2,0.336,3,0.043,4,0.05,5,0.05,9,0.185,10,1.053,11,1.574,12,0.676,15,0.336,16,1.806,17,2.047,18,0.173,20,0.35,21,0.003,22,0.295,23,0.245,24,0.317,25,1.036,28,0.05,30,0.002,31,0.002,1470,3.601,1501,6.816,1502,6.816,1503,6.816,2895,7.431,3693,10.069]],["title/classes/UpdateOccupationEvent.html",[0,0.356,3694,4.697]],["body/classes/UpdateOccupationEvent.html",[0,0.414,2,0.289,3,0.037,4,0.043,5,0.043,9,0.159,10,0.956,11,1.728,12,0.743,15,0.289,16,1.64,17,1.936,18,0.186,20,0.301,21,0.003,22,0.181,23,0.262,24,0.273,25,1.182,28,0.043,30,0.002,31,0.002,116,2.567,117,2.07,121,2.73,122,3.055,719,4.095,1332,4.935,1470,3.095,1505,4.935,1506,4.935,1508,4.935,1509,4.935,1912,5.464,3487,5.189,3694,7.134,3695,10.32]],["title/classes/UpdateOccupationEventHandler.html",[0,0.356,2859,4.697]],["body/classes/UpdateOccupationEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,719,2.61,1482,6.573,1513,4.847,2859,7.049,3662,3.656,3676,3.999,3694,8.361,3696,9.301,3697,6.34]],["title/classes/UpdateOccupationRequest.html",[0,0.356,2887,4.697]],["body/classes/UpdateOccupationRequest.html",[0,0.48,2,0.335,3,0.042,4,0.05,5,0.05,9,0.185,10,1.05,11,1.571,12,0.675,15,0.335,16,1.802,17,2.101,18,0.173,20,0.349,21,0.003,22,0.295,23,0.244,24,0.316,25,1.034,28,0.05,29,1.766,30,0.002,31,0.002,1516,6.791,1517,6.791,1518,6.791,2887,7.837,3698,10.053]],["title/classes/UpdateOccupationsProfileCommand.html",[0,0.356,3111,4.444]],["body/classes/UpdateOccupationsProfileCommand.html",[0,0.449,2,0.312,3,0.04,4,0.047,5,0.047,9,0.173,10,1.006,11,1.689,12,0.726,15,0.312,16,1.726,17,2.059,18,0.182,20,0.326,21,0.003,22,0.196,23,0.257,24,0.295,25,1.144,28,0.047,29,1.649,30,0.002,31,0.002,83,1.592,1018,6.207,1521,5.132,1918,5.916,3111,7.104,3699,9.3,3700,8.87]],["title/classes/UpdateOccupationsProfileCommandHandler.html",[0,0.356,3060,4.697]],["body/classes/UpdateOccupationsProfileCommandHandler.html",[0,0.303,2,0.211,3,0.027,4,0.032,5,0.032,9,0.117,12,0.535,15,0.304,18,0.127,20,0.317,21,0.003,22,0.191,23,0.179,24,0.287,28,0.032,30,0.002,31,0.002,35,1.09,36,1.467,37,3.244,38,1.213,39,1.574,40,2.072,42,3.182,44,3.299,47,2.769,49,1.802,50,0.842,51,1.562,52,0.781,53,1.923,54,0.919,56,1.517,57,1.368,64,1.232,73,2.197,75,1.572,76,2.861,78,1.799,80,2.9,83,1.111,85,2.535,86,2.611,87,2.507,90,2.977,104,1.713,110,1.38,156,2.368,158,3.704,160,2.064,163,2.573,164,2.843,166,2.909,181,1.68,188,2.145,314,1.49,621,3.357,657,4.795,687,2.843,1018,5.736,1056,2.909,1088,3.058,1332,3.577,1333,2.98,1334,3.058,1529,5.642,1530,2.909,1533,2.909,1540,2.843,1548,4.287,1550,4.287,1551,4.287,1558,2.909,1599,3.144,1856,4.092,3060,5.757,3111,6.981,3660,3.058,3662,2.725,3701,7.231,3702,5.447,3703,4.725,3704,4.725,3705,4.725,3706,4.287,3707,4.287,3708,4.725]],["title/classes/UpdateOccupationsProfileDto.html",[0,0.356,3709,5.035]],["body/classes/UpdateOccupationsProfileDto.html",[0,0.462,2,0.322,3,0.041,4,0.048,5,0.048,9,0.178,10,1.026,11,1.544,12,0.664,15,0.322,16,1.759,17,2.077,18,0.169,20,0.335,21,0.003,22,0.202,23,0.238,24,0.417,28,0.048,29,1.7,30,0.002,31,0.002,52,0.568,1018,5.586,1212,4.663,1560,5.769,1561,6.574,1564,6.574,1565,7.652,1566,4.939,3709,8.204,3710,8.966]],["title/classes/UpdateOccupationsProfileEvent.html",[0,0.356,3702,4.444]],["body/classes/UpdateOccupationsProfileEvent.html",[0,0.385,2,0.268,3,0.034,4,0.04,5,0.04,9,0.148,10,0.911,11,1.748,12,0.751,15,0.268,16,1.562,17,1.96,18,0.188,20,0.279,21,0.003,22,0.168,23,0.266,24,0.253,25,1.201,28,0.04,29,1.415,30,0.002,31,0.002,116,2.475,117,1.996,121,2.6,122,2.91,156,4.535,181,3.435,1018,6.082,1568,4.404,1570,6.429,1571,4.585,3487,4.942,3559,5.443,3560,5.443,3702,6.429,3707,8.211,3711,9.407]],["title/classes/UpdateOccupationsProfileEventHandler.html",[0,0.356,3068,4.697]],["body/classes/UpdateOccupationsProfileEventHandler.html",[0,0.395,2,0.275,3,0.035,4,0.041,5,0.041,9,0.152,12,0.414,15,0.275,18,0.152,20,0.38,21,0.003,22,0.229,23,0.215,24,0.345,28,0.041,30,0.002,31,0.002,35,1.42,36,1.762,38,1.456,39,1.81,50,1.098,51,1.601,52,0.722,54,1.198,78,1.27,83,1.334,116,1.684,117,1.358,128,3.69,129,3.288,130,2.534,131,3.607,132,2.534,133,3.288,135,2.348,136,2.478,137,2.086,138,2.167,139,2.188,141,1.958,142,2.534,143,2.563,144,2.563,145,2.231,181,2.188,182,4.929,195,3.704,719,2.534,1018,5.52,1540,5.875,3068,6.913,3662,3.549,3676,3.882,3702,7.819,3712,8.318,3713,6.155,3714,6.155]],["title/classes/UpdateProfileCommand.html",[0,0.356,3109,4.242]],["body/classes/UpdateProfileCommand.html",[0,0.446,2,0.31,3,0.039,4,0.046,5,0.046,9,0.171,10,1.002,11,1.687,12,0.725,15,0.31,16,1.719,17,2.054,18,0.181,20,0.323,21,0.003,22,0.195,23,0.256,24,0.293,25,0.986,28,0.046,29,1.638,30,0.002,31,0.002,52,0.547,83,1.587,1521,5.098,1524,8.015,1525,6.301,1526,6.301,2896,4.918,3109,6.753,3126,8.642,3699,9.278]],["title/classes/UpdateProfileCommandHandler.html",[0,0.356,3062,4.697]],["body/classes/UpdateProfileCommandHandler.html",[0,0.355,2,0.247,3,0.031,4,0.037,5,0.037,9,0.137,12,0.51,15,0.339,18,0.142,20,0.354,21,0.003,22,0.213,23,0.2,24,0.321,28,0.037,30,0.002,31,0.002,35,1.275,36,1.638,37,3.532,38,1.354,39,1.714,40,2.314,42,2.999,44,3.449,47,3.092,49,2.897,50,0.986,51,1.489,52,0.797,53,2.25,54,1.076,56,1.774,57,1.601,64,1.442,73,2.094,75,1.839,76,1.984,78,1.567,80,2.357,83,0.903,85,2.417,86,2.275,87,2.355,90,2.065,104,2.004,110,1.614,134,2.065,158,4.136,160,2.415,163,3.01,164,3.326,166,3.403,181,1.965,1529,6.047,1530,3.403,1533,3.403,1540,3.326,1558,3.403,1856,3.326,1906,3.066,3062,6.429,3109,7.487,3660,3.578,3662,3.187,3701,7.874,3706,5.016,3715,6.083,3716,5.528,3717,5.528]],["title/classes/UpdateProfileDto.html",[0,0.356,3126,4.444]],["body/classes/UpdateProfileDto.html",[0,0.469,2,0.326,3,0.041,4,0.049,5,0.049,9,0.18,10,1.034,11,1.708,12,0.734,18,0.17,21,0.003,23,0.24,24,0.44,25,1.018,28,0.049,30,0.002,31,0.002,52,0.576,1212,4.727,1560,5.849,1561,6.616,1562,6.435,1563,6.627,1564,6.616,1565,6.182,1566,5.007,3126,7.303,3710,9.022]],["title/classes/UpdateProfileEvent.html",[0,0.356,3715,4.444]],["body/classes/UpdateProfileEvent.html",[0,0.406,2,0.283,3,0.036,4,0.042,5,0.042,9,0.156,10,0.943,11,1.721,12,0.74,15,0.283,16,1.618,17,1.995,18,0.184,20,0.294,21,0.003,22,0.177,23,0.26,24,0.267,25,1.101,28,0.042,29,1.491,30,0.002,31,0.002,52,0.498,116,2.54,117,2.048,121,2.692,122,3.013,181,3.507,1529,4.091,1568,4.641,1569,6.657,1570,5.062,1571,4.832,3109,8.044,3487,5.117,3660,4.091,3711,9.301,3715,6.657]],["title/classes/UpdateProfileEventHandler.html",[0,0.356,3061,4.697]],["body/classes/UpdateProfileEventHandler.html",[0,0.407,2,0.283,3,0.036,4,0.042,5,0.042,9,0.157,12,0.426,15,0.283,18,0.155,20,0.388,21,0.003,22,0.234,23,0.22,24,0.352,28,0.042,30,0.002,31,0.002,35,1.462,36,1.796,38,1.485,39,1.837,50,1.13,51,1.633,52,0.733,54,1.234,78,1.308,83,1.036,116,1.734,117,1.398,128,3.744,129,3.352,130,2.61,131,3.637,132,2.61,133,3.352,134,2.369,135,2.418,136,2.552,137,2.149,138,2.232,139,2.254,141,2.017,142,2.61,143,2.64,144,2.64,145,2.298,181,2.254,1540,5.943,3061,7.049,3662,3.656,3676,3.999,3712,8.44,3715,7.911,3718,6.34,3719,6.34]],["title/classes/UpdateProfileRequest.html",[0,0.356,2973,4.444]],["body/classes/UpdateProfileRequest.html",[0,0.403,2,0.281,3,0.036,4,0.042,5,0.042,9,0.155,10,0.939,11,1.76,12,0.757,15,0.281,16,1.611,17,1.991,18,0.191,20,0.293,21,0.003,22,0.176,23,0.27,24,0.265,25,1.173,28,0.042,29,1.483,30,0.002,31,0.002,52,0.495,83,1.513,960,6.162,1212,4.067,1561,6.162,1562,5.994,1564,6.162,1566,4.308,1579,5.702,1581,7.513,1582,5.702,1583,5.702,1584,5.702,2973,6.631,3720,10.505]],["title/classes/UpdateSocialNetworkCommand.html",[0,0.356,3522,4.444]],["body/classes/UpdateSocialNetworkCommand.html",[0,0.378,2,0.263,3,0.033,4,0.039,5,0.039,9,0.145,10,0.899,11,1.771,12,0.761,15,0.263,16,1.542,17,1.866,18,0.192,20,0.274,21,0.003,22,0.269,23,0.272,24,0.248,25,1.225,28,0.039,30,0.002,31,0.002,83,1.463,627,4.387,1084,4.24,1296,5.799,1470,2.82,1587,4.496,1588,6.346,1589,6.142,1590,4.496,1591,5.337,1592,5.337,1593,4.496,1594,5.337,3522,6.345,3721,10.535,3722,5.881]],["title/classes/UpdateSocialNetworkCommandHandler.html",[0,0.356,3495,4.697]],["body/classes/UpdateSocialNetworkCommandHandler.html",[0,0.343,2,0.239,3,0.03,4,0.036,5,0.036,9,0.132,12,0.499,15,0.332,18,0.139,20,0.346,21,0.003,22,0.208,23,0.196,24,0.313,28,0.036,30,0.002,31,0.002,35,1.233,36,1.601,37,3.47,38,1.323,39,1.684,40,2.261,42,2.957,44,3.418,47,3.021,49,2.831,50,0.953,51,1.455,52,0.789,53,2.176,54,1.04,56,1.716,57,1.548,64,1.394,73,2.047,78,1.759,80,2.28,83,0.873,85,2.361,86,2.223,87,2.014,90,1.997,134,1.997,626,2.86,627,3.551,629,2.965,659,4.682,689,3.372,1019,2.639,1084,3.895,1327,4.939,1597,6.524,1598,3.665,1600,3.557,1602,3.372,1613,3.083,1615,5.449,1856,3.217,1857,5.449,1906,2.965,3495,6.282,3522,7.377,3660,3.46,3662,3.083,3676,3.372,3723,8.526,3724,4.281,3725,5.346,3726,5.346,3727,5.346]],["title/classes/UpdateSocialNetworkEvent.html",[0,0.356,3724,4.444]],["body/classes/UpdateSocialNetworkEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.213,28,0.042,30,0.002,31,0.002,83,1.606,116,2.529,117,2.039,121,2.676,122,2.996,627,4.256,1084,4.424,1330,5.453,1617,4.789,1618,4.599,1619,6.317,1620,4.789,1621,4.789,1622,2.844,3487,5.087,3724,6.618,3728,10.22]],["title/classes/UpdateSocialNetworkEventHandler.html",[0,0.356,3496,4.697]],["body/classes/UpdateSocialNetworkEventHandler.html",[0,0.399,2,0.278,3,0.035,4,0.041,5,0.041,9,0.153,12,0.417,15,0.278,18,0.153,20,0.383,21,0.003,22,0.231,23,0.217,24,0.347,28,0.041,30,0.002,31,0.002,35,1.432,36,1.772,38,1.465,39,1.818,50,1.107,51,1.61,52,0.726,54,1.208,78,1.281,83,1.014,116,1.698,117,1.37,128,3.706,129,3.307,130,2.556,131,3.616,132,2.556,133,3.307,134,2.32,135,2.368,136,2.499,137,2.105,138,2.186,139,2.207,141,1.976,142,2.556,143,2.586,144,2.586,145,2.251,146,4.257,627,3.834,1019,3.065,1084,3.944,1602,6.18,3496,6.954,3662,3.581,3676,3.917,3724,7.847,3729,9.207,3730,6.21]],["title/classes/UpdateSocialNetworkRequest.html",[0,0.356,3441,4.444]],["body/classes/UpdateSocialNetworkRequest.html",[0,0.378,2,0.263,3,0.033,4,0.039,5,0.039,9,0.145,10,0.899,11,1.771,12,0.761,15,0.263,16,1.542,17,1.866,18,0.192,20,0.274,21,0.003,22,0.269,23,0.272,24,0.248,25,1.225,28,0.039,30,0.002,31,0.002,83,1.463,627,4.387,1084,4.24,1296,5.799,1470,2.82,1588,6.346,1589,6.142,1628,5.337,1629,5.337,1630,5.337,1631,5.337,1632,5.337,1633,5.337,3441,6.345,3731,10.535,3732,5.881]],["title/classes/UpdateUserCommand.html",[0,0.356,3733,4.444]],["body/classes/UpdateUserCommand.html",[0,0.447,2,0.311,3,0.04,4,0.047,5,0.047,9,0.172,10,1.004,11,1.652,12,0.726,15,0.311,18,0.182,20,0.324,21,0.003,22,0.196,23,0.257,24,0.294,25,1.143,28,0.047,30,0.002,31,0.002,52,0.549,215,2.867,564,4.263,573,4.934,1622,3.162,1636,5.115,1638,6.322,1639,7.492,1746,4.192,2896,4.934,3733,7.089,3734,8.664,3735,8.078]],["title/classes/UpdateUserCommandHandler.html",[0,0.356,3736,4.697]],["body/classes/UpdateUserCommandHandler.html",[0,0.284,2,0.121,3,0.015,4,0.018,5,0.018,9,0.067,10,0.502,11,0.878,15,0.198,18,0.163,20,0.394,21,0.003,22,0.237,23,0.231,24,0.357,25,1.113,28,0.018,30,0.001,31,0.001,35,0.625,36,0.955,37,2.287,38,0.79,39,1.919,40,1.349,42,2.083,44,2.996,47,1.803,49,1.033,50,1.445,51,1.716,52,0.741,53,1.103,54,0.527,56,0.87,57,0.785,60,2.45,61,1.012,62,0.992,63,1.002,64,0.707,73,2.778,75,0.901,76,2.33,78,2.057,83,0.723,85,0.862,86,2.143,87,2.295,90,1.012,97,2.947,104,2.037,110,2.243,111,2.166,112,1.922,215,1.525,227,1.866,242,2.773,252,2.475,267,1.337,287,2.946,314,2.422,447,1.475,646,1.475,666,2.22,676,1.358,735,3.998,744,3.979,746,2.608,749,3.137,776,2.665,800,2.947,1028,5.068,1056,1.668,1194,2.065,1220,3.742,1478,1.989,1479,1.989,1480,1.989,1493,1.857,1495,1.857,1496,2.169,1535,2.947,1543,3.386,1544,1.753,1599,1.803,1613,3.24,1642,6.529,1647,3.749,1648,3.749,1649,3.749,1651,3.749,1660,3.749,1662,3.749,1664,2.293,1668,3.749,1670,1.531,1671,3.252,1672,2.947,1673,2.169,1674,3.252,1675,2.169,1692,3.749,1693,3.137,1723,3.749,1724,3.749,1725,2.293,1726,2.293,1728,3.749,1729,2.169,1752,1.668,1863,2.554,1946,2.458,2291,1.989,2336,2.169,3243,2.071,3660,1.753,3662,1.562,3733,5.197,3736,4.756,3737,7.62,3738,4.429,3739,4.429,3740,2.458,3741,2.709,3742,2.709,3743,2.709,3744,2.709,3745,4.429,3746,2.709,3747,2.709,3748,2.709,3749,2.169,3750,2.709,3751,2.709,3752,2.709,3753,2.709,3754,2.709,3755,2.709,3756,2.709,3757,2.709,3758,2.709,3759,2.709,3760,6.49,3761,2.709,3762,4.429,3763,2.709,3764,4.429,3765,4.429,3766,2.709]],["title/classes/UpdateUserCredentialCommand.html",[0,0.356,3767,4.444]],["body/classes/UpdateUserCredentialCommand.html",[0,0.438,2,0.305,3,0.039,4,0.046,5,0.046,9,0.169,10,0.992,11,1.679,12,0.722,15,0.305,16,1.701,17,2.044,18,0.18,20,0.318,21,0.003,22,0.192,23,0.254,24,0.288,25,0.976,28,0.046,29,1.612,30,0.002,31,0.002,52,0.538,215,2.85,564,4.015,2896,4.838,3734,8.602,3767,7.001,3768,6.832,3769,8.214,3770,8.742,3771,6.832,3772,5.782]],["title/classes/UpdateUserCredentialCommandHandler.html",[0,0.356,3773,4.697]],["body/classes/UpdateUserCredentialCommandHandler.html",[0,0.258,2,0.179,3,0.023,4,0.027,5,0.027,9,0.099,10,0.685,15,0.27,18,0.161,20,0.375,21,0.003,22,0.226,23,0.213,24,0.34,25,1.106,28,0.027,30,0.001,31,0.001,35,0.926,36,1.302,37,2.951,38,1.076,39,1.792,40,1.838,42,2.587,44,3.133,47,2.456,49,1.532,50,1.293,51,1.58,52,0.763,53,1.635,54,0.782,56,1.289,57,1.163,60,2.278,61,1.5,62,1.47,63,1.485,64,1.047,73,2.827,75,1.336,76,1.442,78,1.783,83,0.986,85,1.278,86,2.588,87,2.463,90,1.5,104,1.456,110,2.354,111,1.548,112,1.374,215,2.782,242,2.979,252,1.532,314,1.903,646,2.187,666,3.025,675,4.274,676,2.013,738,4.719,744,2.844,831,3.644,909,3.216,946,5.476,1417,4.833,1543,3.07,1544,2.599,1613,2.316,1643,6.136,1650,5.108,1666,5.108,1670,2.27,1685,3.399,1687,3.399,1727,3.399,2293,2.948,2320,5.476,2321,5.476,2322,7.315,2331,3.644,3243,3.07,3344,3.399,3345,5.108,3660,2.599,3662,2.316,3737,7.683,3740,3.644,3767,6.456,3773,6.136,3774,7.97,3775,4.016,3776,4.016,3777,3.216,3778,3.644,3779,4.016,3780,4.016,3781,6.035,3782,4.016,3783,6.035,3784,4.016,3785,4.016,3786,4.016,3787,4.016,3788,4.016]],["title/classes/UpdateUserCredentialDto.html",[0,0.356,3769,4.242]],["body/classes/UpdateUserCredentialDto.html",[0,0.425,2,0.296,3,0.038,4,0.044,5,0.044,9,0.163,10,0.972,11,1.736,12,0.746,15,0.296,16,1.667,17,2.024,18,0.187,20,0.308,21,0.003,22,0.186,23,0.265,24,0.279,25,1.189,28,0.044,29,1.561,30,0.002,31,0.002,215,2.822,735,4.489,738,4.759,3769,6.548,3789,9.438,3790,6.618,3791,9.496,3792,8.565,3793,6.618,3794,6.618]],["title/classes/UpdateUserCredentialEvent.html",[0,0.356,3777,4.444]],["body/classes/UpdateUserCredentialEvent.html",[0,0.411,2,0.286,3,0.036,4,0.043,5,0.043,9,0.158,10,0.95,11,1.706,12,0.741,15,0.286,18,0.185,20,0.298,21,0.003,22,0.18,23,0.261,24,0.27,25,1.218,28,0.043,30,0.002,31,0.002,116,2.555,117,2.06,121,2.713,122,3.037,215,2.994,564,4.128,1622,2.904,1746,3.849,3487,5.158,3777,6.71,3795,8.709,3796,6.398,3797,8.378,3798,8.378,3799,6.398,3800,6.398]],["title/classes/UpdateUserCredentialEventHandler.html",[0,0.356,3801,5.035]],["body/classes/UpdateUserCredentialEventHandler.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,12,0.421,15,0.28,18,0.154,20,0.385,21,0.003,22,0.232,23,0.218,24,0.349,28,0.042,30,0.002,31,0.002,35,1.445,36,1.782,38,1.473,39,1.826,50,1.117,51,1.62,52,0.729,54,1.219,78,1.293,83,1.023,116,1.714,117,1.382,128,3.722,129,3.326,130,2.579,131,3.625,132,2.579,133,3.326,134,2.341,135,2.389,136,2.522,137,2.124,138,2.205,139,2.227,141,1.993,142,2.579,143,2.609,144,2.609,145,2.271,215,2.773,1754,4.168,3662,3.612,3676,3.951,3777,7.874,3778,8.922,3801,7.498,3802,7.827,3803,6.265]],["title/classes/UpdateUserDto.html",[0,0.356,3735,4.242]],["body/classes/UpdateUserDto.html",[0,0.568,2,0.311,3,0.04,4,0.047,5,0.047,9,0.172,10,1.004,18,0.182,21,0.003,23,0.257,24,0.456,25,1.206,28,0.047,30,0.002,31,0.002,52,0.549,217,3.486,220,4.289,265,6.474,267,3.439,287,4.416,735,4.599,738,4.876,1085,6.767,1730,5.897,1738,5.579,1739,6.322,1742,7.492,3415,6.322,3735,6.767,3789,9.289,3804,6.967,3805,6.967,3806,6.967]],["title/classes/UpdateUserEvent.html",[0,0.356,3749,4.444]],["body/classes/UpdateUserEvent.html",[0,0.42,2,0.292,3,0.037,4,0.044,5,0.044,9,0.161,10,0.964,11,1.713,12,0.744,15,0.292,18,0.187,20,0.304,21,0.003,22,0.183,23,0.264,24,0.276,25,1.224,28,0.044,30,0.002,31,0.002,116,2.582,117,2.082,121,2.751,122,3.08,215,2.712,564,4.162,1622,2.967,1745,4.799,1746,3.933,1749,4.799,1955,6.495,1956,4.996,3487,5.23,3749,6.804,3795,8.769]],["title/classes/UpdateUserEventHandler.html",[0,0.356,3807,4.697]],["body/classes/UpdateUserEventHandler.html",[0,0.412,2,0.287,3,0.036,4,0.043,5,0.043,9,0.158,12,0.431,15,0.287,18,0.157,20,0.391,21,0.003,22,0.236,23,0.221,24,0.354,28,0.043,30,0.002,31,0.002,35,1.48,36,1.811,38,1.497,50,1.144,52,0.737,54,1.249,83,1.048,116,1.755,117,1.415,128,3.766,129,3.379,130,2.642,131,3.649,132,2.642,133,3.379,134,2.397,135,2.447,136,2.583,137,2.175,138,2.259,139,2.281,141,2.042,142,2.642,143,2.672,144,2.672,145,2.326,215,1.741,486,5.586,1752,6.11,1754,4.27,3662,3.7,3676,4.047,3749,7.948,3802,7.919,3807,7.105,3808,6.417]],["title/classes/UpdateUserRoleCommand.html",[0,0.356,3809,4.242]],["body/classes/UpdateUserRoleCommand.html",[0,0.44,2,0.306,3,0.039,4,0.046,5,0.046,9,0.169,10,0.994,11,1.681,12,0.722,15,0.306,16,1.705,17,2.046,18,0.18,20,0.319,21,0.003,22,0.192,23,0.255,24,0.289,25,0.978,28,0.046,29,1.617,30,0.002,31,0.002,52,0.54,215,2.761,305,5.166,307,3.801,564,4.021,741,5.166,1679,5.489,3734,8.612,3809,6.697,3810,6.854,3811,8.76,3812,6.854]],["title/classes/UpdateUserRoleCommandHandler.html",[0,0.356,3813,4.697]],["body/classes/UpdateUserRoleCommandHandler.html",[0,0.354,2,0.246,3,0.031,4,0.037,5,0.037,9,0.136,15,0.339,18,0.142,20,0.353,21,0.003,22,0.213,23,0.2,24,0.32,28,0.037,30,0.002,31,0.002,35,1.272,36,1.635,37,3.527,38,1.352,39,1.711,40,2.31,42,2.996,44,3.447,47,3.086,49,2.103,50,0.983,51,1.486,52,0.816,53,2.244,54,1.073,56,1.77,57,1.597,60,2.862,61,2.06,62,2.019,63,2.039,64,1.438,73,2.091,75,1.835,78,1.565,85,1.754,86,1.651,87,2.057,104,1.999,110,2.531,111,2.125,112,1.886,188,2.503,189,2.95,215,2.744,252,2.103,646,3.002,666,3.8,676,2.763,741,2.95,1613,3.179,1670,3.117,3243,4.215,3660,3.568,3662,3.179,3737,7.335,3809,7.135,3813,7.335,3814,7.474,3815,4.415,3816,5.003,3817,5.513,3818,5.513,3819,5.513,3820,5.513]],["title/classes/UpdateUserRoleEvent.html",[0,0.356,3815,4.444]],["body/classes/UpdateUserRoleEvent.html",[0,0.402,2,0.28,3,0.036,4,0.042,5,0.042,9,0.155,10,0.937,11,1.698,12,0.738,15,0.28,18,0.184,20,0.292,21,0.003,22,0.176,23,0.259,24,0.265,25,1.098,28,0.042,30,0.002,31,0.002,52,0.494,116,2.529,117,2.039,121,2.676,122,2.996,215,3.011,1622,2.844,2351,6.618,3487,5.087,3660,4.055,3795,8.65,3809,8.402,3814,5.017,3815,6.618,3821,6.265,3822,6.265,3823,8.264,3824,6.265,3825,6.265]],["title/classes/UpdateUserRoleEventHandler.html",[0,0.356,3826,5.035]],["body/classes/UpdateUserRoleEventHandler.html",[0,0.396,2,0.276,3,0.035,4,0.041,5,0.041,9,0.152,12,0.415,15,0.276,18,0.153,20,0.381,21,0.003,22,0.23,23,0.216,24,0.346,28,0.041,30,0.002,31,0.002,35,1.424,36,1.765,38,1.459,39,1.813,50,1.101,51,1.604,52,0.723,54,1.201,78,1.274,83,1.008,116,1.689,117,1.362,128,3.695,129,3.294,130,2.542,131,3.61,132,2.542,133,3.294,134,2.306,135,2.355,136,2.485,137,2.093,138,2.173,139,2.194,141,1.964,142,2.542,143,2.571,144,2.571,145,2.238,215,2.76,2351,4.944,3662,3.56,3676,3.894,3802,7.77,3815,7.828,3816,8.87,3826,7.426,3827,6.173,3828,6.173,3829,6.173]],["title/controllers/UserController.html",[270,2.919,3830,4.697]],["body/controllers/UserController.html",[0,0.123,3,0.011,4,0.013,5,0.013,9,0.047,12,0.129,18,0.164,20,0.401,21,0.003,22,0.242,23,0.227,24,0.364,25,1.001,28,0.013,30,0.001,31,0.001,38,0.592,39,2.109,50,1.569,51,2,52,0.706,75,2.928,76,0.69,78,1.778,83,1.247,85,2.799,86,2.58,87,2.387,110,2.569,113,4.102,141,0.612,145,2.334,215,1.872,217,3.464,270,1.011,272,0.949,276,1.318,283,0.757,287,0.873,291,1.245,293,1.362,294,0.581,299,1.28,300,1.087,303,1.318,304,1.412,305,1.029,307,1.067,313,6.231,314,2.826,327,2.763,399,1.318,413,1.362,418,1.47,551,4.413,555,4.175,564,2.171,573,3.103,576,1.745,582,4.321,717,5.416,738,0.964,741,2.344,757,7.182,784,4.359,785,3.216,790,1.47,800,1.28,1676,1.47,1677,1.628,1678,1.54,1679,1.54,1710,3.692,1712,2.81,2091,5.155,2219,1.412,2220,1.412,2336,1.54,2345,4.921,2634,4.413,2792,1.54,2793,1.54,2810,1.54,2814,2.659,2820,1.745,2896,2.351,2958,3.013,2974,4.731,2981,1.628,2989,1.745,3228,2.538,3487,2.697,3735,6.851,3769,5.576,3772,1.628,3830,2.81,3831,1.923,3832,3.013,3833,4.731,3834,3.013,3835,3.975,3836,3.013,3837,3.013,3838,3.013,3839,3.013,3840,4.381,3841,3.975,3842,3.32,3843,1.745,3844,1.923,3845,1.923,3846,1.923,3847,1.923,3848,4.381,3849,1.923,3850,1.923,3851,1.923,3852,1.745,3853,1.923,3854,1.923,3855,1.745,3856,1.923,3857,1.923,3858,1.745,3859,1.923,3860,1.923,3861,1.923,3862,1.745,3863,3.32,3864,1.923,3865,1.923,3866,1.923,3867,1.923,3868,1.923,3869,1.923,3870,1.923,3871,1.745,3872,1.923,3873,1.923,3874,1.923,3875,1.745,3876,1.923,3877,1.923,3878,1.923,3879,1.923,3880,1.923,3881,1.923,3882,1.923,3883,1.923,3884,1.923,3885,1.923,3886,1.745,3887,1.745,3888,1.923,3889,1.923,3890,1.923,3891,1.923,3892,1.923,3893,1.923,3894,1.923,3895,8.798,3896,1.923,3897,1.923,3898,1.923,3899,1.923,3900,1.923,3901,1.923,3902,1.923,3903,1.923,3904,1.923,3905,1.923,3906,1.923,3907,1.923,3908,1.923,3909,1.923,3910,1.923,3911,1.923,3912,1.923,3913,1.923,3914,1.923,3915,1.923,3916,1.923,3917,1.923,3918,1.923,3919,1.923,3920,1.923,3921,1.923,3922,1.923,3923,1.923,3924,1.923,3925,1.923]],["title/entities/UserEntity.html",[199,2.073,252,2.116]],["body/entities/UserEntity.html",[0,0.273,3,0.015,4,0.017,5,0.017,9,0.064,10,0.617,11,1.45,16,0.503,17,1.058,18,0.19,21,0.003,22,0.073,23,0.268,24,0.374,25,1.072,28,0.017,29,0.61,30,0.001,31,0.001,38,0.461,39,0.51,51,0.506,52,0.654,64,0.674,73,0.712,76,0.927,81,1.129,83,0.888,87,0.701,121,2.042,160,3.048,161,1.46,181,1.932,199,1.591,200,4.323,201,3.344,207,2.346,208,2.534,214,2.375,215,2.155,217,4,226,5.465,227,4.378,229,3.977,232,3.164,240,2.204,242,3.113,252,1.625,257,4.45,258,2.812,259,2.859,261,1.315,262,2.812,268,5.318,287,2.467,305,2.908,307,1.433,443,3.346,447,1.407,560,3.605,606,1.897,633,3.977,634,2.069,635,4.196,636,1.975,637,5.624,638,1.975,639,2.069,728,3.256,730,3.127,735,2.569,738,3.496,741,2.908,1020,2.069,1024,4.996,1034,3.411,1035,3.411,1044,3.865,1045,5.372,1079,3.017,1082,5.284,1089,1.129,1090,1.554,1091,3.949,1098,1.382,1217,4.932,1220,3.636,1271,4.601,1659,6.359,1710,1.83,1741,1.83,1814,3.865,1847,3.865,1965,4.601,2157,3.518,2293,4.63,2313,4.353,2392,4.821,2466,3.865,3184,3.865,3387,3.865,3604,4.932,3606,5.337,3607,5.722,3926,2.583,3927,5.436,3928,5.436,3929,5.436,3930,5.436,3931,5.436,3932,4.26,3933,2.583,3934,2.583,3935,4.26,3936,2.583,3937,2.583,3938,2.583,3939,2.583,3940,6.306,3941,4.26,3942,4.26,3943,2.583,3944,5.722,3945,6.976,3946,2.583,3947,2.583,3948,4.26,3949,2.583,3950,2.583,3951,2.583,3952,2.583,3953,4.26,3954,2.583,3955,2.583,3956,4.26,3957,2.583,3958,2.583,3959,4.26,3960,2.583,3961,2.583,3962,2.583,3963,4.26,3964,2.344,3965,4.26,3966,2.583,3967,4.26,3968,2.583]],["title/interfaces/UserIdDto.html",[555,4.444,3270,4.074]],["body/interfaces/UserIdDto.html",[3,0.047,4,0.055,5,0.055,9,0.204,10,1.114,21,0.003,23,0.217,25,1.171,28,0.055,30,0.002,31,0.002,555,7.862,564,4.52,575,6.977,3270,6.052,3271,6.601,3969,8.243]],["title/classes/UserListResponse.html",[0,0.356,2337,4.697]],["body/classes/UserListResponse.html",[0,0.461,2,0.321,3,0.041,4,0.048,5,0.048,9,0.177,10,1.023,11,1.542,15,0.321,18,0.168,20,0.334,21,0.003,22,0.202,23,0.238,24,0.303,28,0.048,30,0.002,31,0.002,52,0.566,560,8.35,800,7.242,1678,5.75,1759,5.271,2337,7.636,3970,8.952,3971,7.18,3972,9.865,3973,9.022,3974,9.022,3975,9.022]],["title/classes/UserLoginDto.html",[0,0.356,3976,5.035]],["body/classes/UserLoginDto.html",[0,0.422,2,0.294,3,0.037,4,0.044,5,0.044,9,0.162,10,0.968,11,1.663,12,0.715,15,0.294,18,0.177,20,0.306,21,0.003,22,0.185,23,0.25,24,0.278,25,1.249,28,0.044,30,0.002,31,0.002,52,0.518,217,3.359,300,3.718,575,8.48,738,5.427,895,7.936,1382,7.621,3976,7.74,3977,6.577,3978,8.53,3979,6.577,3980,6.577,3981,6.577,3982,6.577,3983,6.577]],["title/classes/UserLoginResponse.html",[0,0.356,797,4.444]],["body/classes/UserLoginResponse.html",[0,0.331,2,0.231,3,0.029,4,0.035,5,0.035,9,0.128,10,0.822,11,1.796,12,0.758,15,0.231,16,1.41,17,1.928,18,0.197,20,0.24,21,0.003,22,0.145,23,0.278,24,0.43,25,1.194,28,0.035,29,1.218,30,0.002,31,0.002,52,0.571,83,1.367,207,3.612,214,3.656,232,3.823,252,1.969,305,4.477,307,2.864,735,3.956,738,4.194,741,4.477,777,4.927,797,5.802,1220,4.826,1741,3.657,1759,3.791,3970,9.702,3984,5.163,3985,5.163,3986,5.163,3987,5.163,3988,5.163,3989,5.163,3990,5.163,3991,5.163,3992,5.163,3993,5.163,3994,5.163]],["title/modules/UserModule.html",[117,1.224,326,3.93]],["body/modules/UserModule.html",[0,0.243,3,0.021,4,0.025,5,0.025,21,0.003,22,0.106,28,0.025,30,0.001,31,0.001,49,1.444,52,0.893,54,0.737,57,1.096,112,3.774,117,1.273,131,3.065,135,1.444,137,2.371,138,2.032,139,1.346,215,2.504,252,1.444,272,2.849,283,1.491,294,1.143,320,2.14,321,3.262,325,5.339,326,7.042,327,5.597,328,3.472,329,2.278,330,2.278,332,3.472,333,3.472,334,2.45,335,3.735,336,2.14,337,3.64,338,2.45,342,2.779,345,2.779,348,6.515,350,3.64,351,2.519,352,2.388,355,2.45,356,2.45,357,2.45,358,2.45,359,2.388,387,2.779,395,2.595,431,2.45,432,2.681,752,4.586,777,2.229,876,4.622,878,3.032,919,3.032,1112,3.435,1114,2.894,1116,2.894,1121,2.229,1128,5.347,1134,2.894,1137,3.435,1143,2.894,1144,2.894,1145,5.347,1146,1.79,1640,4.885,1642,5.964,1670,2.14,1750,4.885,1752,4.816,1944,4.622,1957,4.885,2287,4.885,2289,3.435,2300,4.885,2301,3.435,2310,4.885,2311,3.204,2335,4.885,2364,4.885,2658,4.885,3239,4.885,3241,4.622,3250,4.885,3252,4.885,3324,4.885,3368,4.237,3369,4.885,3376,4.885,3576,4.885,3736,4.885,3773,4.885,3774,3.204,3807,4.885,3813,4.885,3814,3.032,3830,5.92,3886,3.435,3995,3.786,3996,3.786,3997,3.786,3998,3.786,3999,3.786,4000,3.786,4001,3.786,4002,3.786]],["title/classes/UserNotFoundException.html",[0,0.356,3107,4.444]],["body/classes/UserNotFoundException.html",[0,0.504,2,0.351,3,0.045,4,0.052,5,0.052,15,0.459,18,0.146,21,0.003,28,0.052,30,0.002,31,0.002,52,0.618,90,2.931,292,4.197,294,2.369,784,4.992,852,4.83,1089,4.164,1193,5.099,1194,4.443,2862,7.119,2863,7.119,3107,7.632,3108,8.066,4003,7.846]],["title/classes/UserResponse.html",[0,0.356,800,3.692]],["body/classes/UserResponse.html",[0,0.401,2,0.279,3,0.035,4,0.042,5,0.042,9,0.154,10,0.936,11,1.759,12,0.756,15,0.279,16,1.605,17,2.041,18,0.191,20,0.291,21,0.003,22,0.175,23,0.269,24,0.431,25,1.171,28,0.042,29,1.474,30,0.002,31,0.002,52,0.492,83,1.508,287,4.191,305,4.94,307,3.464,735,4.365,741,4.94,800,5.488,1741,4.424,1759,4.586,4004,6.246,4005,6.246,4006,6.246,4007,6.246,4008,6.246,4009,6.246]],["title/injectables/UserService.html",[327,3.5,368,2.162]],["body/injectables/UserService.html",[0,0.109,3,0.01,4,0.011,5,0.011,9,0.042,12,0.201,15,0.076,18,0.171,20,0.416,21,0.003,22,0.25,23,0.235,24,0.377,25,1.199,28,0.011,30,0.001,31,0.001,38,0.533,39,2.14,50,1.615,51,2.016,52,0.794,54,0.332,73,1.323,75,2.288,76,0.612,78,1.939,83,0.891,85,2.187,86,2.843,87,2.55,90,2.245,97,3.192,110,2.517,113,3.635,137,0.578,141,0.542,215,2.181,220,1.049,273,1.003,283,0.671,287,2.727,294,0.515,305,2.566,307,0.945,314,2.856,327,1.885,343,1.168,368,1.164,369,0.868,371,1.207,372,4.119,373,4.439,377,2.195,378,1.303,380,3.052,381,2.117,382,5.303,399,1.168,402,1.303,551,4.119,564,3.954,573,2.827,735,0.806,738,2.735,741,3.214,752,2.174,757,1.207,777,1.76,790,1.303,800,1.134,917,2.285,919,1.365,921,6.831,1056,1.049,1121,1.003,1194,2.801,1535,3.997,1536,1.026,1544,1.935,1634,2.394,1642,3.865,1671,2.931,1672,1.989,1673,1.365,1674,3.522,1675,1.365,1676,1.303,1677,1.443,1678,1.365,1679,1.365,1680,3.052,1681,2.53,1693,3.397,1697,2.195,1710,1.207,1712,2.53,1864,1.547,1941,2.394,2050,2.285,2091,4.811,2219,1.251,2220,1.251,2304,1.365,2306,1.365,2311,1.443,2336,1.365,2345,4.171,2362,2.394,2674,2.53,2675,1.547,2678,2.394,2892,1.443,2896,2.117,2898,3.197,2900,1.443,2902,1.365,2981,1.443,3107,5.185,3108,1.443,3228,2.285,3234,1.365,3241,2.394,3322,2.394,3341,2.53,3342,1.547,3344,1.443,3345,2.53,3366,1.365,3368,1.251,3487,1.84,3573,1.365,3733,1.365,3735,5.256,3767,2.394,3769,5.522,3772,1.443,3774,1.443,3809,2.285,3814,1.365,3832,2.712,3833,4.353,3834,2.712,3835,2.712,3836,2.712,3837,2.712,3838,2.712,3839,2.712,3841,2.712,3843,2.712,3852,2.712,3855,2.712,3858,2.712,3862,2.712,3871,2.712,3875,2.712,3887,1.547,4010,1.704,4011,2.989,4012,4.797,4013,2.989,4014,2.989,4015,2.989,4016,2.989,4017,1.704,4018,1.704,4019,2.989,4020,1.704,4021,1.704,4022,2.989,4023,1.704,4024,1.704,4025,1.704,4026,1.704,4027,1.704,4028,1.704,4029,2.989,4030,1.704,4031,2.989,4032,1.704,4033,2.989,4034,1.704,4035,2.989,4036,1.704,4037,1.704,4038,2.989,4039,1.704,4040,1.704,4041,2.989,4042,1.704,4043,2.989,4044,1.704,4045,1.704,4046,1.704,4047,1.704,4048,1.704,4049,1.704,4050,1.704,4051,1.704,4052,1.704,4053,1.704,4054,1.704,4055,1.704,4056,1.704,4057,2.989,4058,3.992,4059,1.704,4060,2.989,4061,1.704,4062,4.797,4063,1.704,4064,1.704,4065,1.704]],["title/changelog.html",[2149,3.163,4066,3.527,4067,4.614]],["body/changelog.html",[21,0.002,30,0.002,31,0.002,109,2.108,117,2.345,123,7.965,137,3.298,181,2.169,199,3.034,201,2.925,215,1.656,273,3.592,277,4.887,287,2.77,395,5.567,460,5.165,540,6.701,719,2.512,730,4.48,740,6.208,749,5.751,776,3.671,895,4.665,1084,2.456,1330,3.384,1339,4.48,1716,4.887,1816,5.537,2988,5.537,3487,3.757,4068,5.537,4069,11.135,4070,9.73,4071,10.934,4072,11.135,4073,6.102,4074,6.102,4075,8.121,4076,6.102,4077,8.121,4078,9.127,4079,6.102,4080,6.102,4081,6.102,4082,6.102,4083,6.102,4084,6.102,4085,6.102,4086,6.102,4087,6.102,4088,6.102,4089,6.102,4090,6.102,4091,6.102,4092,6.102,4093,6.102,4094,6.102,4095,6.102,4096,6.102,4097,6.102,4098,5.537,4099,5.537]],["title/contributing.html",[2149,3.163,4066,3.527,4100,4.186]],["body/contributing.html",[21,0.003,30,0.003,31,0.003,4100,8.217]],["title/dependencies.html",[321,3.779,4101,4.186]],["body/dependencies.html",[0,0.544,21,0.003,30,0.002,31,0.002,54,1.268,57,1.887,64,1.699,267,3.216,294,1.968,300,3.683,321,3.683,336,3.683,492,5.912,675,4.615,791,5.642,863,4.467,868,5.515,1788,5.912,1872,5.515,2065,5.218,2428,4.981,2587,5.912,2620,7.548,2621,6.79,2648,7.694,3964,5.912,4102,9.426,4103,8.479,4104,6.516,4105,8.479,4106,6.516,4107,6.516,4108,6.516,4109,6.516,4110,6.516,4111,6.516,4112,8.479,4113,6.516,4114,6.516,4115,6.516,4116,6.516,4117,6.516,4118,6.516,4119,6.516,4120,6.516,4121,6.516,4122,6.516,4123,6.516,4124,6.516,4125,6.516,4126,6.516,4127,6.516,4128,6.516,4129,6.516,4130,6.516,4131,6.516,4132,6.516]],["title/miscellaneous/enumerations.html",[4133,3.163,4134,6.066]],["body/miscellaneous/enumerations.html",[3,0.032,9,0.089,11,0.871,20,0.168,21,0.003,22,0.102,30,0.001,31,0.001,90,2.082,97,4.524,109,1.925,110,2.231,122,4.222,196,3.127,202,3.889,205,5.608,215,0.982,305,2.982,467,3.091,724,4.717,735,1.71,738,1.813,961,1.786,966,3.821,967,3.515,969,3.947,1000,3.947,1002,3.947,1007,3.821,1008,3.947,1010,3.947,1200,4.717,1209,5.057,1220,2.086,1226,5.057,1384,4.092,1418,4.261,1564,3.708,1693,4.815,1697,4.092,2022,3.062,2045,5.057,2066,2.897,2558,5.057,2652,6.931,2749,5.057,3334,3.282,3336,6.169,3618,5.057,4133,2.48,4134,3.282,4135,3.617,4136,5.574,4137,3.617,4138,3.617,4139,5.574,4140,3.617,4141,5.574,4142,5.574,4143,5.574,4144,5.574,4145,6.799,4146,5.574,4147,5.574,4148,7.639,4149,5.574,4150,3.617,4151,8.715,4152,3.617,4153,3.617,4154,5.574,4155,3.617,4156,6.799,4157,5.574,4158,5.574,4159,5.574,4160,5.574,4161,3.617,4162,3.617,4163,3.617,4164,3.617,4165,3.617,4166,3.617,4167,3.617,4168,3.617,4169,3.617,4170,3.617,4171,3.617,4172,5.574,4173,5.574,4174,5.574,4175,5.574,4176,5.574,4177,3.617,4178,3.617,4179,3.617,4180,3.617,4181,3.617,4182,7.639,4183,5.574,4184,5.574,4185,7.639,4186,5.574,4187,7.639,4188,5.574,4189,5.574,4190,5.574,4191,3.617,4192,5.574,4193,5.574,4194,5.574,4195,3.617,4196,5.574,4197,5.574,4198,3.617,4199,5.574,4200,5.574,4201,3.617,4202,5.574,4203,5.574,4204,5.574,4205,5.574,4206,6.799,4207,7.639,4208,5.574,4209,5.574,4210,5.574,4211,5.574,4212,5.574,4213,5.574]],["title/miscellaneous/functions.html",[4133,3.163,4214,6.066]],["body/miscellaneous/functions.html",[9,0.214,21,0.003,30,0.002,31,0.002,50,1.548,51,1.702,4133,5.953,4214,7.879,4215,10.715,4216,8.683,4217,8.683]],["title/index.html",[9,0.114,2149,3.163,4066,3.527]],["body/index.html",[21,0.002,30,0.002,31,0.002,137,3.408,175,5.301,321,5.234,443,4.608,524,5.301,1007,5.131,4099,6.791,4218,7.485,4219,7.485,4220,7.485,4221,7.485,4222,7.485,4223,7.485,4224,7.485,4225,7.485,4226,7.485,4227,7.485,4228,7.485,4229,7.485,4230,7.485,4231,7.485,4232,10.794,4233,7.485,4234,9.259,4235,7.485,4236,7.485,4237,7.485,4238,7.485,4239,7.485,4240,7.485,4241,7.485,4242,10.053,4243,7.485,4244,7.485,4245,7.485,4246,7.485,4247,7.485,4248,9.259,4249,7.485]],["title/license.html",[2149,3.163,4066,3.527,4250,4.186]],["body/license.html",[21,0.003,30,0.003,31,0.003]],["title/modules.html",[320,4.305]],["body/modules.html",[21,0.002,30,0.002,31,0.002,319,5.433,320,4.018,325,4.276,326,5.034,421,5.433,470,5.433,474,5.433,475,5.433,476,5.433,477,5.433,478,5.433,479,5.433,590,5.692,1099,5.692,2471,6.449,4251,11.46,4252,11.46,4253,11.46,4254,11.509,4255,7.107]],["title/overview.html",[4256,6.911]],["body/overview.html",[2,0.177,21,0.003,30,0.001,31,0.001,131,3.578,201,1.904,272,1.96,295,5.504,319,8.01,320,2.245,321,3.382,322,3.603,323,3.603,324,3.603,325,6.47,326,7.241,327,5.701,328,3.6,329,2.389,330,2.389,369,2.021,414,5.504,421,8.01,422,3.603,423,3.603,451,5.286,470,8.621,471,3.603,472,3.603,473,3.603,474,8.326,475,5.504,476,6.574,477,7.552,478,7.552,479,7.552,566,5.504,590,7.238,591,3.603,592,3.603,782,6.887,853,3.603,854,3.603,855,3.603,857,5.766,858,5.766,859,5.766,1099,7.731,1100,3.603,1101,3.603,1103,6.533,1766,5.504,2434,3.603,2435,3.603,2794,5.504,2849,3.603,2851,3.603,2979,5.504,3052,3.603,3054,3.603,3271,3.18,3443,5.504,3489,3.603,3490,3.603,4256,3.603,4257,3.971,4258,3.971,4259,5.984,4260,3.971,4261,3.971]],["title/properties.html",[10,0.758,4101,4.186]],["body/properties.html",[10,0.985,21,0.003,30,0.002,31,0.002,443,5.346,1432,7.349,2711,7.879,4068,7.879,4250,7.879,4262,8.683]],["title/todo.html",[2149,3.163,4066,3.527,4263,4.614]],["body/todo.html",[21,0.002,25,0.873,30,0.002,31,0.002,64,2.039,123,8.495,137,2.65,175,5.536,268,5.536,287,4.316,466,5.997,749,7.258,779,7.093,1028,5.536,2621,6.26,3360,7.093,3606,8.048,3944,7.093,4098,7.093,4264,7.817,4265,7.817,4266,7.817,4267,7.817,4268,7.817,4269,9.509,4270,9.509,4271,7.817,4272,9.509]],["title/miscellaneous/typealiases.html",[4133,3.163,4273,6.686]],["body/miscellaneous/typealiases.html",[9,0.211,21,0.002,23,0.225,30,0.002,31,0.002,1193,4.571,1194,3.983,1536,5.14,1537,7.102,2491,9.099,2496,9.099,2497,7.752,4133,5.857,4274,8.543,4275,8.543]],["title/miscellaneous/variables.html",[4133,3.163,4276,6.066]],["body/miscellaneous/variables.html",[0,0.413,3,0.037,9,0.159,12,0.432,21,0.003,23,0.17,30,0.002,31,0.002,39,1.271,51,1.262,76,3.019,78,1.328,87,1.746,121,2.724,122,3.049,141,2.048,215,1.746,303,5.766,305,3.444,314,2.653,327,5.306,368,2.507,741,3.444,760,5.306,792,5.155,1089,2.812,1090,3.873,1787,7.12,4133,4.412,4276,5.84,4277,6.436,4278,8.412,4279,6.436,4280,6.436,4281,6.436,4282,8.412,4283,6.436,4284,6.436,4285,6.436,4286,6.436,4287,6.436,4288,6.436,4289,6.436,4290,6.436,4291,6.436,4292,6.436,4293,6.436,4294,6.436,4295,6.436,4296,6.436,4297,6.436,4298,6.436,4299,6.436,4300,6.436,4301,6.436,4302,6.436,4303,6.436,4304,6.436,4305,6.436,4306,6.436,4307,6.436,4308,6.436,4309,6.436,4310,6.436]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1056,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["0.0.1",{"_index":460,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.10",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":2988,"title":{},"body":{"controllers/ProfileController.html":{},"changelog.html":{}}}],["0.0.9",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":4068,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2475,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2626,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":4114,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":740,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{}}}],["10.0.2",{"_index":4106,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":2461,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["11",{"_index":4258,"title":{},"body":{"overview.html":{}}}],["13",{"_index":4257,"title":{},"body":{"overview.html":{}}}],["15",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":2991,"title":{},"body":{"controllers/ProfileController.html":{}}}],["2.3.0",{"_index":4131,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1738,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{}}}],["20)@isnotempty",{"_index":3805,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":442,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["2023",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["20})@column({unique",{"_index":3142,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["22",{"_index":4259,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":4179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":269,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":221,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["29",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["290",{"_index":4260,"title":{},"body":{"overview.html":{}}}],["3",{"_index":4261,"title":{},"body":{"overview.html":{}}}],["3.0.8",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":4132,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2397,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":2391,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":2465,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":2460,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":1144,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["300mb",{"_index":2456,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":361,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":364,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":367,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":1729,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["4.0.1",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":809,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":2132,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1884,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/OccupationNotFoundException.html":{}}}],["409",{"_index":1997,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["4210",{"_index":3152,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":4116,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2470,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["500",{"_index":1198,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/EntityCreationException.html":{},"classes/QueryErrorException.html":{}}}],["500000",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1803,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1721,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{}}}],["6.2.1",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":4126,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":4123,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":3168,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":3154,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":3153,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9.0.0",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":4107,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":1091,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":3965,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":3140,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1719,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["accesstokencookie",{"_index":813,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":825,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":830,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":4193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":123,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"changelog.html":{},"todo.html":{}}}],["addconnectedcardcommand",{"_index":1,"title":{"classes/AddConnectedCardCommand.html":{}},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{}}}],["addconnectedcardcommandhandler",{"_index":32,"title":{"classes/AddConnectedCardCommandHandler.html":{}},"body":{"classes/AddConnectedCardCommandHandler.html":{},"modules/CardModule.html":{}}}],["addconnectedcardevent",{"_index":68,"title":{"classes/AddConnectedCardEvent.html":{}},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{}}}],["addconnectedcardeventhandler",{"_index":126,"title":{"classes/AddConnectedCardEventHandler.html":{}},"body":{"classes/AddConnectedCardEventHandler.html":{},"modules/CardModule.html":{}}}],["addconnectedcardrequest",{"_index":148,"title":{"classes/AddConnectedCardRequest.html":{}},"body":{"classes/AddConnectedCardRequest.html":{}}}],["addprofile",{"_index":3966,"title":{},"body":{"entities/UserEntity.html":{}}}],["address",{"_index":268,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":1228,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":1255,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":3932,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":200,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{}}}],["addresses",{"_index":1217,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":664,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["addsavedcardcommand",{"_index":154,"title":{"classes/AddSavedCardCommand.html":{}},"body":{"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{}}}],["addsavedcardcommandhandler",{"_index":157,"title":{"classes/AddSavedCardCommandHandler.html":{}},"body":{"classes/AddSavedCardCommandHandler.html":{},"modules/CardModule.html":{}}}],["addsavedcardevent",{"_index":159,"title":{"classes/AddSavedCardEvent.html":{}},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{}}}],["addsavedcardeventhandler",{"_index":178,"title":{"classes/AddSavedCardEventHandler.html":{}},"body":{"classes/AddSavedCardEventHandler.html":{},"modules/CardModule.html":{}}}],["addsavedcardrequest",{"_index":183,"title":{"classes/AddSavedCardRequest.html":{}},"body":{"classes/AddSavedCardRequest.html":{}}}],["addviewcountcardcommand",{"_index":184,"title":{"classes/AddViewCountCardCommand.html":{}},"body":{"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["addviewcountcardcommandhandler",{"_index":187,"title":{"classes/AddViewCountCardCommandHandler.html":{}},"body":{"classes/AddViewCountCardCommandHandler.html":{},"modules/CardModule.html":{}}}],["addviewcountcardevent",{"_index":190,"title":{"classes/AddViewCountCardEvent.html":{}},"body":{"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{}}}],["addviewcountcardeventhandler",{"_index":194,"title":{"classes/AddViewCountCardEventHandler.html":{}},"body":{"classes/AddViewCountCardEventHandler.html":{},"modules/CardModule.html":{}}}],["admin",{"_index":3336,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":936,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":940,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":942,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":2070,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":3269,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":4274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":2463,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":1715,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["already",{"_index":97,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":2512,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":4225,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":4192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":137,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":500,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["api/card/domain/entities/card.entity",{"_index":1794,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/card/domain/entities/connected",{"_index":1790,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/entities",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["api/occupation/domain/entities/occupation.entity",{"_index":1791,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/occupation/occupation.module",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["api/profile/domain/entities/profile.entity",{"_index":1792,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/profile/profile.module",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["api/social",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1793,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":889,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":356,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":362,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1409,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1410,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1411,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":365,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":461,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apigroup",{"_index":457,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apilandingpagecontroller",{"_index":271,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["apilandingpagemodule",{"_index":319,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":295,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":2020,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":325,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":131,"title":{"injectables/ApiLogService.html":{}},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":405,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["apimailmodule",{"_index":421,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":414,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"overview.html":{}}}],["apiname",{"_index":456,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apiokresponse",{"_index":297,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":298,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":1382,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1732,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1734,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1736,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@length(5",{"_index":1737,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":1385,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":3139,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1394,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1388,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":453,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apisuccess",{"_index":462,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apisuccessexample",{"_index":464,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":299,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":309,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":803,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":2432,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":454,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":417,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('occupation",{"_index":2802,"title":{},"body":{"controllers/OccupationController.html":{}}}],["apitags('profile",{"_index":2987,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('socialnetwork",{"_index":3448,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["apitags('user",{"_index":3892,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":1371,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":1384,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1434,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":459,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["app",{"_index":567,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":452,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":438,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":2990,"title":{},"body":{"controllers/ProfileController.html":{}}}],["appmodule",{"_index":470,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":451,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":537,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["appteste2emodule",{"_index":590,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":566,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":2588,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":2042,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":4222,"title":{},"body":{"index.html":{}}}],["array",{"_index":1035,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":39,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":749,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":866,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":2607,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["auth.service",{"_index":783,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/dto/sign",{"_index":3645,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["auth/guards/role.guard",{"_index":304,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2981,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":747,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":750,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":842,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":756,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":941,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":932,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":2645,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":907,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":2608,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":2609,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":2640,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":474,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2711,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":782,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["available",{"_index":2471,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":78,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":1218,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":1219,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":1079,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":675,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":2331,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":2315,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":3373,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":3206,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":739,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":3942,"title":{},"body":{"entities/UserEntity.html":{}}}],["beforeinsert",{"_index":3963,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":3151,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":949,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["body",{"_index":145,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GroupMembershipResponse.html":{},"entities/NotificationEntity.html":{},"classes/ProfileResponse.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":4215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundary",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":4220,"title":{},"body":{"index.html":{}}}],["browse",{"_index":4254,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4251,"title":{},"body":{"modules.html":{}}}],["call",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":4187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":109,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"entities/ProfileEntity.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["card.command",{"_index":34,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["card.command.ts",{"_index":8,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddViewCountCardCommand.html":{},"classes/CreateCardCommand.html":{},"classes/DeleteCardCommand.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RestoreCardCommand.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:1",{"_index":19,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddViewCountCardCommand.html":{},"classes/DeleteCardCommand.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RestoreCardCommand.html":{},"classes/SoftDeleteCardCommand.html":{}}}],["card.command.ts:10",{"_index":3658,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["card.command.ts:11",{"_index":3657,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["card.command.ts:12",{"_index":1307,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:13",{"_index":1311,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:14",{"_index":1308,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:15",{"_index":1302,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:16",{"_index":1304,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:17",{"_index":1301,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:18",{"_index":1306,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:19",{"_index":1300,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:20",{"_index":1303,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:21",{"_index":1298,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:22",{"_index":1312,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:23",{"_index":1299,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:24",{"_index":1305,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:25",{"_index":1309,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:26",{"_index":1315,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["card.command.ts:27",{"_index":1313,"title":{},"body":{"classes/CreateCardCommand.html":{}}}],["card.command.ts:28",{"_index":1314,"title":{},"body":{"classes/CreateCardCommand.html":{}}}],["card.command.ts:29",{"_index":1310,"title":{},"body":{"classes/CreateCardCommand.html":{}}}],["card.command.ts:3",{"_index":3654,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["card.command.ts:6",{"_index":26,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddViewCountCardCommand.html":{},"classes/DeleteCardCommand.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RestoreCardCommand.html":{},"classes/SoftDeleteCardCommand.html":{}}}],["card.command.ts:7",{"_index":27,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddSavedCardCommand.html":{},"classes/CreateCardCommand.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveSavedCardCommand.html":{}}}],["card.command.ts:8",{"_index":3655,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["card.command.ts:9",{"_index":3656,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["card.controller",{"_index":1106,"title":{},"body":{"modules/CardModule.html":{}}}],["card.entity",{"_index":67,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["card.entity.ts",{"_index":1257,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:29",{"_index":1266,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:39",{"_index":1263,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:44",{"_index":1259,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:49",{"_index":1261,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:55",{"_index":1264,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:58",{"_index":1267,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:61",{"_index":1265,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":1005,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["card.enum.ts",{"_index":4151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.event",{"_index":70,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{}}}],["card.event.ts",{"_index":115,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardEvent.html":{}}}],["card.event.ts:1",{"_index":118,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardEvent.html":{}}}],["card.event.ts:6",{"_index":120,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardEvent.html":{}}}],["card.event.ts:7",{"_index":119,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardEvent.html":{}}}],["card.event.ts:8",{"_index":125,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardEvent.html":{}}}],["card.event.ts:9",{"_index":124,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{}}}],["card.id",{"_index":95,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["card.id).includes(cardtodisconnect.id",{"_index":3218,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["card.numberofshares",{"_index":193,"title":{},"body":{"classes/AddViewCountCardCommandHandler.html":{}}}],["card.owner",{"_index":3039,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.owner.id",{"_index":2573,"title":{},"body":{"classes/IsCardOwnerWithUserIdQueryHandler.html":{}}}],["card.profileswhosavedcard",{"_index":173,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard.find(profile",{"_index":169,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{}}}],["card.query",{"_index":1130,"title":{},"body":{"modules/CardModule.html":{},"classes/GetAllCardQueryHandler.html":{}}}],["card.query.ts",{"_index":2097,"title":{},"body":{"classes/GetAllCardQuery.html":{}}}],["card.request.ts",{"_index":150,"title":{},"body":{"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardRequest.html":{},"classes/CreateCardRequest.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:1",{"_index":151,"title":{},"body":{"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardRequest.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardRequest.html":{}}}],["card.request.ts:12",{"_index":1361,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:13",{"_index":1351,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:14",{"_index":1349,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:15",{"_index":1352,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:16",{"_index":1346,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:17",{"_index":1359,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:18",{"_index":1348,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:19",{"_index":1365,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:20",{"_index":1345,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:21",{"_index":1355,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:22",{"_index":1356,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:23",{"_index":1358,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:24",{"_index":1347,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:25",{"_index":1360,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:26",{"_index":1357,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:27",{"_index":1350,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:28",{"_index":1353,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:29",{"_index":1354,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:30",{"_index":1362,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:31",{"_index":1364,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:32",{"_index":1368,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:33",{"_index":1367,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:34",{"_index":1366,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:35",{"_index":1363,"title":{},"body":{"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.request.ts:36",{"_index":3683,"title":{},"body":{"classes/UpdateCardRequest.html":{}}}],["card.request.ts:37",{"_index":3682,"title":{},"body":{"classes/UpdateCardRequest.html":{}}}],["card.request.ts:6",{"_index":152,"title":{},"body":{"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardRequest.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardRequest.html":{}}}],["card.request.ts:7",{"_index":153,"title":{},"body":{"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardRequest.html":{},"classes/CreateCardRequest.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["card.service",{"_index":1107,"title":{},"body":{"modules/CardModule.html":{}}}],["card/domain/entities/card.entity",{"_index":2410,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card/domain/entities/connected",{"_index":1287,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["card_id",{"_index":3050,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardcontroller",{"_index":1105,"title":{},"body":{"modules/CardModule.html":{}}}],["carddto",{"_index":947,"title":{"classes/CardDto.html":{}},"body":{"classes/CardDto.html":{}}}],["cardentity",{"_index":58,"title":{"entities/CardEntity.html":{}},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateCardCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["cardentity.connectedcardone",{"_index":1258,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":1260,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":2399,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":2691,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":2712,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":2835,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":3473,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":101,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"entities/ConnectedCardEntity.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardentitytwo",{"_index":102,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"entities/ConnectedCardEntity.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardid",{"_index":13,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{}}}],["cardmodule",{"_index":1099,"title":{"modules/CardModule.html":{}},"body":{"modules/CardModule.html":{},"modules.html":{},"overview.html":{}}}],["cardone",{"_index":3219,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardpicture",{"_index":2683,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":46,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["cardresponse",{"_index":1147,"title":{"classes/CardResponse.html":{}},"body":{"classes/CardResponse.html":{}}}],["cards",{"_index":2114,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cardservice",{"_index":1103,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cardtoconnect",{"_index":91,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["cardtoconnect.id",{"_index":96,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["cardtodisconnect",{"_index":3216,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardtodisconnect.id",{"_index":3222,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardtoupdate",{"_index":3664,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.occupations.find(occupation",{"_index":3669,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.occupations.push(occupation",{"_index":3671,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.owner",{"_index":3666,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.owner.id",{"_index":3665,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.socialnetwork",{"_index":3668,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtoupdate.socialnetwork.id",{"_index":3667,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardtwo",{"_index":3220,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardtype",{"_index":2201,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{}}}],["cardupdated",{"_index":3672,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["cardwhorequest",{"_index":77,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardwhorequest.connectedcardone.foreach(card",{"_index":94,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["cardwhorequest.connectedcardone.map(card",{"_index":3217,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cardwhorequest.connectedcardtwo.foreach(card",{"_index":98,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["cardwhorequest.id",{"_index":3221,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["cascade",{"_index":229,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["catch",{"_index":85,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(async",{"_index":2148,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["catch(error",{"_index":3454,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["catch(exception",{"_index":2041,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1870,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1877,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":4170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":4067,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":2506,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":1718,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["check",{"_index":2423,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":2438,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":2422,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller.ts:27",{"_index":2426,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":2436,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1777,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.query.ts",{"_index":2442,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check.response",{"_index":1780,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":2477,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:3",{"_index":2481,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":2482,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":2430,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1770,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:10",{"_index":1774,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1773,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":2443,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["check/cqrs/query/health",{"_index":2441,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check/custom",{"_index":1768,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/domain/response/health",{"_index":2476,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check/health",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["checkhealth",{"_index":1771,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":204,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":0,"title":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":1480,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":3483,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":4182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":542,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1415,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":2524,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":2526,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":2528,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":2513,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":2514,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1414,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":334,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":355,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":2515,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":322,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":323,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":324,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":383,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":385,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":384,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":422,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":424,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":423,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":591,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":593,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":592,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":853,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":855,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":856,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":854,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cardmodule",{"_index":1100,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_imports",{"_index":1102,"title":{},"body":{"modules/CardModule.html":{}}}],["cluster_cardmodule_providers",{"_index":1101,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":2434,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":2435,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_occupationmodule",{"_index":2849,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_occupationmodule_imports",{"_index":2850,"title":{},"body":{"modules/OccupationModule.html":{}}}],["cluster_occupationmodule_providers",{"_index":2851,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":3052,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":3053,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":3054,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_socialnetworkmodule",{"_index":3489,"title":{},"body":{"modules/SocialNetworkModule.html":{},"overview.html":{}}}],["cluster_socialnetworkmodule_imports",{"_index":3491,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["cluster_socialnetworkmodule_providers",{"_index":3490,"title":{},"body":{"modules/SocialNetworkModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3995,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":3996,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3997,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":848,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1716,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"changelog.html":{}}}],["code.entity",{"_index":606,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1960,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:19",{"_index":3155,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1977,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":3144,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1973,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":3165,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1971,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":3158,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1979,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":3160,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1976,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":3149,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1984,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":3146,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":3162,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1981,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1967,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1982,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1968,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":4141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["color",{"_index":1588,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["column",{"_index":257,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":1034,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@column({unique",{"_index":3961,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":1044,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":218,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":1020,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":1054,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":3604,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":49,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/CardModule.html":{},"classes/CommandErrorException.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.cardid",{"_index":84,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["command.connectedcardid",{"_index":92,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["command.createoccupationdto",{"_index":1492,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createoccupationdto.name",{"_index":1489,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createprofiledto",{"_index":1546,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.createuserdto",{"_index":1701,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.mail",{"_index":1694,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1690,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":3355,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command.id",{"_index":1856,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["command.mail",{"_index":3202,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.mail).pipe",{"_index":1876,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.name",{"_index":1608,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["command.occupationid",{"_index":1908,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["command.occupations",{"_index":3708,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupations.map(async",{"_index":3704,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupationsid",{"_index":1331,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["command.occupationsid.length",{"_index":1547,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.occupationsid.map(async",{"_index":1549,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.profileid",{"_index":165,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["command.roles",{"_index":3818,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["command.socialnetworkid",{"_index":1328,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["command.typeofcardenum",{"_index":1325,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["command.updateoccupationdto",{"_index":3690,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateoccupationdto.name",{"_index":3688,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateprofiledto",{"_index":3717,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["command.updateusercredentialdto.newpassword",{"_index":3783,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.updateusercredentialdto.password",{"_index":3784,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.user",{"_index":3758,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.mail",{"_index":3753,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.username",{"_index":3751,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":1543,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.username",{"_index":3204,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/add",{"_index":55,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["command/create",{"_index":1319,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1852,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":3197,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":3214,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/restore",{"_index":3280,"title":{},"body":{"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{}}}],["command/send",{"_index":3352,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":3371,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/shift",{"_index":3385,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command/soft",{"_index":3536,"title":{},"body":{"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["command/update",{"_index":3660,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["commandbus",{"_index":372,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["commanderrorexception",{"_index":1192,"title":{"classes/CommandErrorException.html":{}},"body":{"classes/CommandErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["commandhandler",{"_index":53,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["commandhandler(addconnectedcardcommand",{"_index":71,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["commandhandler(addsavedcardcommand",{"_index":162,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{}}}],["commandhandler(addviewcountcardcommand",{"_index":191,"title":{},"body":{"classes/AddViewCountCardCommandHandler.html":{}}}],["commandhandler(createcardcommand",{"_index":1322,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1423,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createoccupationcommand",{"_index":1483,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["commandhandler(createprofilecommand",{"_index":1541,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["commandhandler(createsocialnetworkcommand",{"_index":1603,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1684,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletecardcommand",{"_index":1855,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1873,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteoccupationcommand",{"_index":1907,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["commandhandler(deleteprofilecommand",{"_index":1922,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["commandhandler(deletesocialnetworkcommand",{"_index":1934,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1951,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":3198,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removeconnectedcardcommand",{"_index":3215,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":3242,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(restorecardcommand",{"_index":3283,"title":{},"body":{"classes/RestoreCardCommandHandler.html":{}}}],["commandhandler(restoreoccupationcommand",{"_index":3293,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["commandhandler(restoreprofilecommand",{"_index":3302,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["commandhandler(restoresocialnetworkcommand",{"_index":3315,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["commandhandler(restoreusercommand",{"_index":3327,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":3353,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":3372,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(shiftprofileownercommand",{"_index":3386,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["commandhandler(softdeletecardcommand",{"_index":3539,"title":{},"body":{"classes/SoftDeleteCardCommandHandler.html":{}}}],["commandhandler(softdeleteoccupationcommand",{"_index":3548,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["commandhandler(softdeleteprofilecommand",{"_index":3556,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["commandhandler(softdeletesocialnetworkcommand",{"_index":3567,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["commandhandler(softdeleteusercommand",{"_index":3579,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["commandhandler(updatecardcommand",{"_index":3663,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["commandhandler(updateoccupationcommand",{"_index":3687,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["commandhandler(updateoccupationsprofilecommand",{"_index":3703,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["commandhandler(updateprofilecommand",{"_index":3716,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["commandhandler(updatesocialnetworkcommand",{"_index":3725,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":3750,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(updateusercredentialcommand",{"_index":3779,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["commandhandler(updateuserrolecommand",{"_index":3817,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["communicate",{"_index":1010,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":2834,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":205,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":1202,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":263,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{}}}],["company_account",{"_index":4203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":2530,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":699,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":2532,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":2534,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":2516,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":3023,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":3024,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":598,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["companyemployeeentity.company",{"_index":1239,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":648,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":223,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["companyentity.addresses",{"_index":225,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":2693,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":2837,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":3037,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":2695,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":2684,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":950,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"entities/InvoicesEntity.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["companyprofilepicture",{"_index":2685,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":647,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":2517,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":4235,"title":{},"body":{"index.html":{}}}],["config",{"_index":869,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":3940,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":4269,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1847,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":7,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{}}}],["connected_card",{"_index":701,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":1025,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":1026,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":1030,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":65,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"classes/AddConnectedCardCommandHandler.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["connectedcardentity.conversation",{"_index":1272,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardid",{"_index":14,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{}}}],["connectedcardone",{"_index":1014,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":43,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["connectedcards",{"_index":82,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/CardResponse.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["connectedcardsid",{"_index":951,"title":{},"body":{"classes/CardDto.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["connectedcardtwo",{"_index":1015,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1436,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":2496,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":2499,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":2502,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1424,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1874,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":2019,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":130,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":2643,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cardrepository",{"_index":41,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["constructor(client",{"_index":1413,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":371,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1637,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1892,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":2284,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":2492,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(getuserwithcriteriadto",{"_index":2363,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["constructor(healthcheckservice",{"_index":2444,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":2479,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":1618,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["constructor(jwtservice",{"_index":896,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":3978,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(message",{"_index":2487,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["constructor(occupationrepository",{"_index":1474,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["constructor(partial",{"_index":16,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GroupMembershipResponse.html":{},"classes/IdProfileDto.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":141,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(profilerepository",{"_index":1530,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["constructor(public",{"_index":1622,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["constructor(querybus",{"_index":1772,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":2307,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(socialnetworkrepository",{"_index":1598,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["constructor(updateuserrolecommand",{"_index":3822,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["constructor(userid",{"_index":1746,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":2297,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":646,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["constructor(users",{"_index":3973,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":2613,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":2505,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":446,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{},"controllers/ProfileController.html":{}}}],["context.switchtohttp().getrequest",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":4100,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":4219,"title":{},"body":{"index.html":{}}}],["controller",{"_index":270,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["controller('/auth",{"_index":802,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/occupation",{"_index":2801,"title":{},"body":{"controllers/OccupationController.html":{}}}],["controller('api",{"_index":308,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":2431,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('profile",{"_index":2986,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('social",{"_index":3447,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["controller('user",{"_index":3891,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":272,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":703,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":616,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":2592,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:21",{"_index":2598,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":2601,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":2600,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":2595,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":2596,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":2602,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":2597,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":2384,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":2604,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":2594,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":2715,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":602,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversationentity.notifications",{"_index":2737,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":649,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":2378,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":824,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["count",{"_index":186,"title":{},"body":{"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/CardModule.html":{}}}],["country",{"_index":206,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["cqrs/command/create",{"_index":402,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":378,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":916,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":4045,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/restore",{"_index":2902,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":437,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":4046,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/shift",{"_index":3113,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cqrs/command/soft",{"_index":2900,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2898,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/event",{"_index":880,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/add",{"_index":1108,"title":{},"body":{"modules/CardModule.html":{}}}],["cqrs/handler/command/create",{"_index":387,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":342,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":872,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":1112,"title":{},"body":{"modules/CardModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/restore",{"_index":1114,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":427,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":4000,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/shift",{"_index":3058,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/command/soft",{"_index":1116,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":1128,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/add",{"_index":1132,"title":{},"body":{"modules/CardModule.html":{}}}],["cqrs/handler/event/create",{"_index":1134,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":345,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":4002,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":1137,"title":{},"body":{"modules/CardModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/restore",{"_index":1139,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{}}}],["cqrs/handler/event/send",{"_index":429,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":4001,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/shift",{"_index":3065,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/event/soft",{"_index":1141,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{}}}],["cqrs/handler/event/update",{"_index":1143,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":348,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":2440,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/handler/query/is",{"_index":1125,"title":{},"body":{"modules/CardModule.html":{}}}],["cqrs/query/get",{"_index":380,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1776,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":337,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1339,"title":{},"body":{"classes/CreateCardEvent.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":639,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":203,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:17",{"_index":241,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":248,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":222,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":247,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":231,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":256,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":245,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":246,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":244,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":236,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":251,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":239,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":254,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":230,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":674,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["create/company",{"_index":599,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity",{"_index":597,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity.ts",{"_index":1216,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:104",{"_index":1235,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":1251,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":1236,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":1241,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":1242,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":1250,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":1230,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":1237,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":1252,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":1227,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":1253,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":1233,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":1234,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":1247,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":1238,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":1240,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":1244,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":1246,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":1249,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":1232,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":1229,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/conversation.entity",{"_index":603,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":1269,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:24",{"_index":1279,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":1274,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":1273,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":1278,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":1283,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":1281,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":1285,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":1275,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":1286,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":1276,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":605,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{}}}],["create/entities",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":4171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":3334,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":4184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":610,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{}}}],["create/group.entity",{"_index":608,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":2377,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:24",{"_index":2388,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":2393,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":2390,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":2385,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":2395,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":2383,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":2386,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":2396,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":2387,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":613,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":2511,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:103",{"_index":2547,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":2536,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":2555,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":2538,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":2543,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":2523,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":2537,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":2545,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":2533,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":2531,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":2535,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":2527,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":2525,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":2529,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":2539,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":2550,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":2554,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":2552,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":2542,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":615,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity",{"_index":618,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity.ts",{"_index":2682,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:22",{"_index":2703,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":2704,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":2702,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":2700,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":2708,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":2706,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":2692,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":2696,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":2694,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":2697,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":2709,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":2698,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":620,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":2710,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:20",{"_index":2719,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":2714,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":2713,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":2716,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":2717,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":2720,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":2718,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":636,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":2734,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:23",{"_index":2742,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":2748,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":2741,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":2750,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":2744,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":2745,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":2753,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":2747,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":2738,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":2739,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":2751,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":2740,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/plan.entity",{"_index":624,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":2914,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:19",{"_index":2925,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":2926,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":2920,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":2927,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":2924,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":2923,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":2929,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":2918,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":2930,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":2919,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/referal",{"_index":638,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["create/response/group",{"_index":1190,"title":{},"body":{"classes/CardResponse.html":{},"classes/GroupMembershipResponse.html":{}}}],["create/strip",{"_index":631,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{}}}],["create/subscription.entity",{"_index":634,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":3588,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:25",{"_index":3598,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":3603,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":3597,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":3605,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":3614,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":3612,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":3602,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":3617,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":3600,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":3596,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":3593,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":3615,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":3594,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["createcardcommand",{"_index":1292,"title":{"classes/CreateCardCommand.html":{}},"body":{"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{}}}],["createcardcommandhandler",{"_index":1109,"title":{"classes/CreateCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{}}}],["createcardevent",{"_index":1320,"title":{"classes/CreateCardEvent.html":{}},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{}}}],["createcardeventhandler",{"_index":1133,"title":{"classes/CreateCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{}}}],["createcardrequest",{"_index":1343,"title":{"classes/CreateCardRequest.html":{}},"body":{"classes/CreateCardRequest.html":{}}}],["created",{"_index":1342,"title":{},"body":{"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["created_at",{"_index":234,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":207,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":258,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":233,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createdfrom",{"_index":2347,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createdto",{"_index":2348,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createlog",{"_index":389,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":392,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":401,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["createlogcommandhandler",{"_index":350,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["createlogdto",{"_index":393,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiname",{"_index":2025,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":2029,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":2026,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":2078,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":2034,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":2076,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":2087,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":2027,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":2030,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":2086,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":2089,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":2084,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":2082,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":2032,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":2090,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":2080,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":390,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":396,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":397,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{}}}],["createoccupation",{"_index":2758,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupation(@body",{"_index":2811,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(createoccupationrequest",{"_index":2766,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(occupationrequest",{"_index":2877,"title":{},"body":{"injectables/OccupationService.html":{}}}],["createoccupationcommand",{"_index":1463,"title":{"classes/CreateOccupationCommand.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["createoccupationcommandhandler",{"_index":1471,"title":{"classes/CreateOccupationCommandHandler.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationdto",{"_index":1466,"title":{"classes/CreateOccupationDto.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"injectables/OccupationService.html":{}}}],["createoccupationevent",{"_index":1481,"title":{"classes/CreateOccupationEvent.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{}}}],["createoccupationeventhandler",{"_index":1510,"title":{"classes/CreateOccupationEventHandler.html":{}},"body":{"classes/CreateOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationrequest",{"_index":1514,"title":{"classes/CreateOccupationRequest.html":{}},"body":{"classes/CreateOccupationRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupationrequest).catch(error",{"_index":2816,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createprofile",{"_index":2933,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofile(@body",{"_index":3009,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofile(createprofilerequest",{"_index":3083,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofile(profile",{"_index":2944,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofilecommand",{"_index":1519,"title":{"classes/CreateProfileCommand.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["createprofilecommandhandler",{"_index":1527,"title":{"classes/CreateProfileCommandHandler.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofiledto",{"_index":1522,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{}}}],["createprofileevent",{"_index":1539,"title":{"classes/CreateProfileEvent.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{}}}],["createprofileeventhandler",{"_index":1572,"title":{"classes/CreateProfileEventHandler.html":{}},"body":{"classes/CreateProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofilerequest",{"_index":1577,"title":{"classes/CreateProfileRequest.html":{}},"body":{"classes/CreateProfileRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofilerequest.iduser",{"_index":3120,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.occupationsid",{"_index":3121,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.roleprofile",{"_index":3119,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.usernameprofile",{"_index":3118,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createsocialnetwork",{"_index":3421,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["createsocialnetwork(@body",{"_index":3455,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["createsocialnetwork(createsocialnetworkrequest",{"_index":3428,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["createsocialnetwork(socialnetworkrequest",{"_index":3512,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["createsocialnetworkcommand",{"_index":1585,"title":{"classes/CreateSocialNetworkCommand.html":{}},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["createsocialnetworkcommandhandler",{"_index":1595,"title":{"classes/CreateSocialNetworkCommandHandler.html":{}},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["createsocialnetworkevent",{"_index":1601,"title":{"classes/CreateSocialNetworkEvent.html":{}},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{}}}],["createsocialnetworkevent(socialnetworkentity.id",{"_index":1614,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["createsocialnetworkeventhandler",{"_index":1623,"title":{"classes/CreateSocialNetworkEventHandler.html":{}},"body":{"classes/CreateSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["createsocialnetworkrequest",{"_index":1626,"title":{"classes/CreateSocialNetworkRequest.html":{}},"body":{"classes/CreateSocialNetworkRequest.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["createtimestamp",{"_index":3624,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1782,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1712,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":3893,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":3843,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1634,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["createusercommand(createuserdto",{"_index":4048,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1640,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["createuserdto",{"_index":551,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto.mail",{"_index":737,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":742,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":736,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1743,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{}}}],["createusereventhandler",{"_index":1750,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["createuserresponse",{"_index":1676,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusertest",{"_index":543,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":580,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":550,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":2012,"title":{},"body":{"classes/EntityCreationException.html":{},"entities/SocialNetworkEntity.html":{}}}],["creation.exception",{"_index":3523,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["creation.exception.ts",{"_index":2010,"title":{},"body":{"classes/EntityCreationException.html":{}}}],["creation.exception.ts:3",{"_index":2011,"title":{},"body":{"classes/EntityCreationException.html":{}}}],["credential",{"_index":3798,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.command",{"_index":3774,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["credential.command.ts",{"_index":3768,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:4",{"_index":3771,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:5",{"_index":3770,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.dto",{"_index":3772,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential.dto.ts",{"_index":3790,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:2",{"_index":3794,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:3",{"_index":3793,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:5",{"_index":3792,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.event",{"_index":3778,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["credential.event.ts",{"_index":3796,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:2",{"_index":3799,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:3",{"_index":3797,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:4",{"_index":3800,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credentials",{"_index":926,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["criteria",{"_index":2217,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria')@httpcode(201)@useguards(undefined",{"_index":2779,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["criteria.dto",{"_index":2220,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["criteria.dto.ts",{"_index":2212,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:1",{"_index":2213,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["criteria.dto.ts:10",{"_index":2359,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:12",{"_index":2360,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:14",{"_index":2361,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:15",{"_index":2354,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:2",{"_index":2355,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:3",{"_index":2356,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:4",{"_index":2242,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:5",{"_index":2241,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:6",{"_index":2215,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:7",{"_index":2214,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:8",{"_index":2357,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:9",{"_index":2358,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.isdeleted",{"_index":2910,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.name",{"_index":2909,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.query",{"_index":1121,"title":{},"body":{"modules/CardModule.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["criteria.query.ts",{"_index":2178,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:1",{"_index":2269,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.query.ts:10",{"_index":2182,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{}}}],["criteria.query.ts:11",{"_index":2185,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{}}}],["criteria.query.ts:12",{"_index":2181,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{}}}],["criteria.query.ts:13",{"_index":2186,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{}}}],["criteria.query.ts:3",{"_index":2180,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:4",{"_index":2244,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:6",{"_index":2270,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.query.ts:7",{"_index":2218,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{}}}],["criteria.query.ts:8",{"_index":2183,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.query.ts:9",{"_index":2184,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{}}}],["criteria.request",{"_index":2798,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.request.ts",{"_index":2200,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:1",{"_index":2202,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:4",{"_index":2258,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:5",{"_index":2257,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:6",{"_index":2204,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:7",{"_index":2232,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:8",{"_index":2203,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{}}}],["cron",{"_index":4271,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":2046,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":2049,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":2048,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":2518,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":3368,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["current_timestamp",{"_index":3630,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":2313,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":2429,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":63,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["custom.event.ts",{"_index":2014,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:1",{"_index":2015,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":2018,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":2017,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":2016,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":3609,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1766,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["data",{"_index":779,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":175,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":489,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["date",{"_index":232,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1975,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":2055,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":3636,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":3145,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":3161,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":4223,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":4204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":2540,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":2549,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":217,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":121,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardEvent.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":3472,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":283,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AppTestE2eController.html":{},"modules/CardModule.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["delete('/admin/:id",{"_index":3917,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/delete",{"_index":2948,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('/admin/delete/:id",{"_index":2817,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["delete('/admin/delete/:id')@httpcode(204)@useguards(undefined",{"_index":2770,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["delete('/admin/full",{"_index":3923,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/soft",{"_index":2786,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete('/api/test/remove",{"_index":583,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["delete('/delete",{"_index":281,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete('/public/delete",{"_index":3920,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(card.id",{"_index":1858,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{}}}],["delete(cardconnected.id",{"_index":3224,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["delete(socialnetwork.id",{"_index":1935,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["delete/:id",{"_index":2820,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/UserController.html":{}}}],["delete/:id')@httpcode(204)@useguards(undefined",{"_index":2787,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete/:id')@useguards(undefined",{"_index":3860,"title":{},"body":{"controllers/UserController.html":{}}}],["deletecardcommand",{"_index":1849,"title":{"classes/DeleteCardCommand.html":{}},"body":{"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{}}}],["deletecardcommandhandler",{"_index":1110,"title":{"classes/DeleteCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/DeleteCardCommandHandler.html":{}}}],["deletecardevent",{"_index":1853,"title":{"classes/DeleteCardEvent.html":{}},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{}}}],["deletecardeventhandler",{"_index":1135,"title":{"classes/DeleteCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/DeleteCardEventHandler.html":{}}}],["deleted",{"_index":1863,"title":{},"body":{"classes/DeleteCardEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["deleted_at",{"_index":238,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":208,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":259,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":237,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletedfrom",{"_index":2349,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletedto",{"_index":2350,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletemail",{"_index":278,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":317,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":280,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":377,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"injectables/UserService.html":{}}}],["deletemailcommandhandler",{"_index":341,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{}}}],["deletemaildto",{"_index":1891,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1869,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deletemailevent(command",{"_index":1888,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":344,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deleteme",{"_index":3832,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteme(@req",{"_index":3921,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(requestuser",{"_index":3846,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(userid",{"_index":4019,"title":{},"body":{"injectables/UserService.html":{}}}],["deletemyprofile",{"_index":2934,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(@req",{"_index":3013,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(requestuser",{"_index":2947,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteoccupation",{"_index":2759,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupation(@param('id",{"_index":2818,"title":{},"body":{"controllers/OccupationController.html":{}}}],["deleteoccupation(occupationid",{"_index":2769,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommand",{"_index":1900,"title":{"classes/DeleteOccupationCommand.html":{}},"body":{"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommandhandler",{"_index":1904,"title":{"classes/DeleteOccupationCommandHandler.html":{}},"body":{"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteoccupationevent",{"_index":1910,"title":{"classes/DeleteOccupationEvent.html":{}},"body":{"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{}}}],["deleteoccupationeventhandler",{"_index":1913,"title":{"classes/DeleteOccupationEventHandler.html":{}},"body":{"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteprofile",{"_index":2935,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleteprofile(@param('id",{"_index":3011,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofile(id",{"_index":3085,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteprofile(profileid",{"_index":2951,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofilecommand",{"_index":1916,"title":{"classes/DeleteProfileCommand.html":{}},"body":{"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"injectables/ProfileService.html":{}}}],["deleteprofilecommandhandler",{"_index":1919,"title":{"classes/DeleteProfileCommandHandler.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["deleteprofileevent",{"_index":1921,"title":{"classes/DeleteProfileEvent.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{}}}],["deleteprofileeventhandler",{"_index":1925,"title":{"classes/DeleteProfileEventHandler.html":{}},"body":{"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["deletesocialnetwork",{"_index":3422,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetwork(@param('id",{"_index":3457,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["deletesocialnetwork(socialnetworkid",{"_index":3430,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetworkcommand",{"_index":1929,"title":{"classes/DeleteSocialNetworkCommand.html":{}},"body":{"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetworkcommandhandler",{"_index":1931,"title":{"classes/DeleteSocialNetworkCommandHandler.html":{}},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["deletesocialnetworkevent",{"_index":1933,"title":{"classes/DeleteSocialNetworkEvent.html":{}},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{}}}],["deletesocialnetworkevent(socialnetwork.id",{"_index":1936,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["deletesocialnetworkeventhandler",{"_index":1938,"title":{"classes/DeleteSocialNetworkEventHandler.html":{}},"body":{"classes/DeleteSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["deletetimestamp",{"_index":3625,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1941,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1944,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["deleteuserevent",{"_index":1948,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{}}}],["deleteuserevent(command.userid",{"_index":1953,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1957,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{}}}],["deleteusertest",{"_index":544,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(@body",{"_index":584,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(useriddto",{"_index":554,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleting",{"_index":1859,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["deletion",{"_index":3488,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":321,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":443,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1834,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":2072,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":4210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["disconnected",{"_index":3231,"title":{},"body":{"classes/RemoveConnectedCardEventHandler.html":{}}}],["discount",{"_index":2002,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1969,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":705,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1972,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1961,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":604,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discountcodeentity.subscriptions",{"_index":3595,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":650,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":3589,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":2921,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":2915,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1962,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":2467,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":2448,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":4234,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":4245,"title":{},"body":{"index.html":{}}}],["documentation:serveapplication",{"_index":4246,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":399,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/generate",{"_index":3887,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/get",{"_index":2219,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/list",{"_index":3888,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/dto/mail",{"_index":2125,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":416,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/occupation.dto",{"_index":1477,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["domain/dto/social",{"_index":2167,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["domain/dto/update",{"_index":2896,"title":{},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/user",{"_index":3890,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/entities/card.entity",{"_index":59,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["domain/entities/connected",{"_index":66,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["domain/entities/occupation.entity",{"_index":1475,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["domain/entities/profile.entity",{"_index":1533,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["domain/entities/social",{"_index":1600,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["domain/entities/user.entity",{"_index":1670,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["domain/enum/api",{"_index":1408,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1406,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/transferable",{"_index":1187,"title":{},"body":{"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["domain/enum/type",{"_index":1185,"title":{},"body":{"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["domain/enum/user",{"_index":1679,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/enum/verbose",{"_index":1420,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/who",{"_index":1186,"title":{},"body":{"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["domain/request/create",{"_index":2985,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/get",{"_index":2982,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/shift",{"_index":3114,"title":{},"body":{"injectables/ProfileService.html":{}}}],["domain/request/update",{"_index":2983,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/create",{"_index":1677,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1779,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":302,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/profile.response",{"_index":1532,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/user",{"_index":2338,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["domain/response/user.response",{"_index":2336,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":870,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":4268,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":780,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate",{"_index":2913,"title":{},"body":{"injectables/OccupationService.html":{}}}],["duplicate_category_name",{"_index":4169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":4163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":4162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicated",{"_index":3532,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["duplicatemailexception",{"_index":1674,"title":{"classes/DuplicateMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duplicatenameexception",{"_index":1993,"title":{"classes/DuplicateNameException.html":{}},"body":{"classes/DuplicateNameException.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["duplicateusernameexception",{"_index":1671,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":2916,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e",{"_index":176,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e.message",{"_index":177,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e2e",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":595,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":541,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:14",{"_index":549,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:20",{"_index":553,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:27",{"_index":558,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:33",{"_index":561,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:39",{"_index":563,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":594,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":568,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":642,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:105",{"_index":668,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:114",{"_index":673,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:118",{"_index":671,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:126",{"_index":669,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":665,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":667,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":1037,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":3150,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":1220,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/MailDto.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["email.query",{"_index":2289,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["email.query.ts",{"_index":2283,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:1",{"_index":2285,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":2286,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":952,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["employee",{"_index":4180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":600,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":1201,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:27",{"_index":1206,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":1210,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":1203,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":1208,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":1204,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":1211,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":1205,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":1213,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":4143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":1221,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":4265,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1974,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1963,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":201,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":3994,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":475,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":199,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["entity('company_employee",{"_index":1214,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":2557,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":2847,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":3167,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1538,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":2491,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":2494,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":3623,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:11",{"_index":3628,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":3632,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":3634,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":3633,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":3627,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":3631,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1823,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":3622,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entitycreationexception",{"_index":2008,"title":{"classes/EntityCreationException.html":{}},"body":{"classes/EntityCreationException.html":{},"injectables/SocialNetworkService.html":{}}}],["entity{.ts,.js",{"_index":1811,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":1071,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1458,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1459,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":2754,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":1212,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["enum/transferable",{"_index":1012,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{}}}],["enum/type",{"_index":1004,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{}}}],["enum/user",{"_index":1741,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":1006,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{}}}],["enumerations",{"_index":4134,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":571,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":2582,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment.pipe.ts:5",{"_index":2589,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":539,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["err",{"_index":1493,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1495,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1881,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1878,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":110,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["error('card",{"_index":88,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["error('cards",{"_index":2112,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{}}}],["error('duplicated",{"_index":1490,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["error('error",{"_index":107,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["error('invalid",{"_index":946,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('mail",{"_index":4057,"title":{},"body":{"injectables/UserService.html":{}}}],["error('new",{"_index":3785,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('node_env",{"_index":1848,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":4054,"title":{},"body":{"injectables/UserService.html":{}}}],["error('occupation",{"_index":1334,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('occupations",{"_index":3705,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('profile",{"_index":166,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error('response",{"_index":820,"title":{},"body":{"controllers/AuthController.html":{}}}],["error('social",{"_index":1329,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["error('socialnetwork",{"_index":1615,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["error('user",{"_index":1544,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["error(e",{"_index":3122,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error(err.tostring",{"_index":3674,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["error(error",{"_index":1558,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error(error.message",{"_index":3820,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["error.constraints",{"_index":2500,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.exception",{"_index":2891,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["error.exception.ts",{"_index":1196,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/QueryErrorException.html":{}}}],["error.exception.ts:3",{"_index":1197,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/QueryErrorException.html":{}}}],["error.message",{"_index":113,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/OccupationService.html":{},"classes/RestoreCardCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.message.split(':')[0",{"_index":807,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.message.split(':')[1",{"_index":808,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.status",{"_index":3895,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":60,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":340,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["errorenum",{"_index":4136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":2037,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{}}}],["errorloggingmiddleware",{"_index":506,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":2495,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":2498,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":3261,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":2128,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":135,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["event.cardid",{"_index":180,"title":{},"body":{"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/UpdateCardEventHandler.html":{}}}],["event.connectedcardid",{"_index":147,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{}}}],["event.createuserdto.mail",{"_index":1755,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1899,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.deleteprofilecommand.id",{"_index":1928,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["event.email",{"_index":3365,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":632,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":3585,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.entity.ts:16",{"_index":3586,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":2035,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":2033,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.id",{"_index":146,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["event.listofoccupationid.join",{"_index":3714,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.localisation",{"_index":2031,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":144,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.module",{"_index":143,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.occupationid",{"_index":1513,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["event.owner",{"_index":3401,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event.profileid",{"_index":182,"title":{},"body":{"classes/AddSavedCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.profileresponse.id",{"_index":1575,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.profileresponse.userid",{"_index":1576,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.updateprofilecommand.updateprofiledto",{"_index":3719,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["event.updateuserrolecommand.roles.join",{"_index":3829,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.userid",{"_index":3828,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.userid",{"_index":1754,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":2661,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/add",{"_index":69,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{}}}],["event/create",{"_index":1321,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1854,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":2325,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":3181,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":3213,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/restore",{"_index":3282,"title":{},"body":{"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["event/send",{"_index":3351,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":3378,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/shift",{"_index":3398,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event/soft",{"_index":3538,"title":{},"body":{"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["event/update",{"_index":3662,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventbus",{"_index":44,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["eventshandler",{"_index":136,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventshandler(addconnectedcardevent",{"_index":140,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{}}}],["eventshandler(addsavedcardevent",{"_index":179,"title":{},"body":{"classes/AddSavedCardEventHandler.html":{}}}],["eventshandler(addviewcountcardevent",{"_index":197,"title":{},"body":{"classes/AddViewCountCardEventHandler.html":{}}}],["eventshandler(createcardevent",{"_index":1341,"title":{},"body":{"classes/CreateCardEventHandler.html":{}}}],["eventshandler(createoccupationevent",{"_index":1512,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["eventshandler(createprofileevent",{"_index":1574,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["eventshandler(createsocialnetworkevent",{"_index":1625,"title":{},"body":{"classes/CreateSocialNetworkEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1753,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletecardevent",{"_index":1862,"title":{},"body":{"classes/DeleteCardEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1898,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteoccupationevent",{"_index":1915,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["eventshandler(deleteprofileevent",{"_index":1927,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["eventshandler(deletesocialnetworkevent",{"_index":1940,"title":{},"body":{"classes/DeleteSocialNetworkEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1959,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":2023,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":2660,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":3182,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removeconnectedcardevent",{"_index":3230,"title":{},"body":{"classes/RemoveConnectedCardEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":3253,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(restorecardevent",{"_index":3288,"title":{},"body":{"classes/RestoreCardEventHandler.html":{}}}],["eventshandler(restoreoccupationevent",{"_index":3297,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["eventshandler(restoreprofileevent",{"_index":3309,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["eventshandler(restoresocialnetworkevent",{"_index":3321,"title":{},"body":{"classes/RestoreSocialNetworkEventHandler.html":{}}}],["eventshandler(restoreuserevent",{"_index":3333,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":3363,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":3379,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(shiftprofileownerevent",{"_index":3399,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["eventshandler(softdeletecardevent",{"_index":3544,"title":{},"body":{"classes/SoftDeleteCardEventHandler.html":{}}}],["eventshandler(softdeleteoccupationevent",{"_index":3552,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["eventshandler(softdeleteprofileevent",{"_index":3562,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["eventshandler(softdeletesocialnetworkevent",{"_index":3572,"title":{},"body":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["eventshandler(softdeleteuserevent",{"_index":3584,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["eventshandler(updatecardevent",{"_index":3679,"title":{},"body":{"classes/UpdateCardEventHandler.html":{}}}],["eventshandler(updateoccupationevent",{"_index":3697,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["eventshandler(updateoccupationsprofileevent",{"_index":3713,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["eventshandler(updateprofileevent",{"_index":3718,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["eventshandler(updatesocialnetworkevent",{"_index":3730,"title":{},"body":{"classes/UpdateSocialNetworkEventHandler.html":{}}}],["eventshandler(updateusercredentialevent",{"_index":3803,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":3808,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(updateuserroleevent",{"_index":3827,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["example",{"_index":468,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":2469,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":2044,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/InvalidUsernameException.html":{}}}],["exception.filter.ts",{"_index":2039,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts:6",{"_index":2043,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2051,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/command",{"_index":1195,"title":{},"body":{"classes/CommandErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/duplicate",{"_index":1672,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"injectables/OccupationService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["exception/entity",{"_index":2009,"title":{},"body":{"classes/EntityCreationException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/invalid",{"_index":1536,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["exception/mail",{"_index":2675,"title":{},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["exception/no",{"_index":2722,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["exception/not",{"_index":2730,"title":{},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["exception/occupation",{"_index":2861,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["exception/query",{"_index":2890,"title":{},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/same",{"_index":3342,"title":{},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["exception/unauthorized",{"_index":3648,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["exception/user",{"_index":3108,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["exceptionfilter",{"_index":2040,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":3945,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":40,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(command",{"_index":47,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(new",{"_index":2907,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["execute(query",{"_index":2108,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["execution",{"_index":1199,"title":{},"body":{"classes/CommandErrorException.html":{}}}],["executioncontext",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1883,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1693,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":4188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":3137,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":887,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":28,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":861,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":791,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1089,"title":{},"body":{"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/ConnectedCardEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"interfaces/RequestUser.html":{},"classes/SamePasswordException.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1808,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":2618,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":2624,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":1200,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/EntityCreationException.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":1045,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":3147,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":3935,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":3159,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":4272,"title":{},"body":{"todo.html":{}}}],["features",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["fetching",{"_index":3226,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["filename",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":2111,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["findall",{"_index":3833,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findme",{"_index":4011,"title":{},"body":{"injectables/UserService.html":{}}}],["findme(userid",{"_index":4022,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":3834,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":3903,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":3852,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneorfail",{"_index":80,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["findwithcriteria",{"_index":3835,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findwithcriteria(getuserwithcriteriadto",{"_index":3855,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":953,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["firstvaluefrom",{"_index":1871,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["fix",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":3606,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":2922,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":4282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":90,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception",{"_index":2892,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":2862,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["found.exception.ts:3",{"_index":2863,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["france",{"_index":2565,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["fulldelete",{"_index":3836,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fulldelete(@param('id",{"_index":3924,"title":{},"body":{"controllers/UserController.html":{}}}],["fulldelete(id",{"_index":3858,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["function",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["functions",{"_index":4214,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1713,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["generatecode",{"_index":1644,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatecode(length",{"_index":1654,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatepassword",{"_index":4012,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":1645,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generateuserdto",{"_index":2091,"title":{"classes/GenerateUserDto.html":{}},"body":{"classes/GenerateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserdto.mail",{"_index":4058,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserdto.roles",{"_index":4060,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserfrommail",{"_index":3837,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserfrommail(@body",{"_index":3896,"title":{},"body":{"controllers/UserController.html":{}}}],["generateuserfrommail(generateuserdto",{"_index":3862,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":2424,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":841,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/admin",{"_index":2989,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/admin/')@apiresponse({status",{"_index":2954,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/admin/')@useguards(undefined",{"_index":3850,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id",{"_index":3902,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id')@useguards(undefined",{"_index":3853,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/with",{"_index":2964,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/api/test/clear",{"_index":577,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/api/test/get",{"_index":586,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":310,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":288,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/public",{"_index":2803,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/')@httpcode(201)@useguards(undefined",{"_index":2772,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/:id",{"_index":2806,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/:id')@httpcode(201)@useguards(undefined",{"_index":2775,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/get",{"_index":2958,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/refresh",{"_index":844,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":441,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":279,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallcardquery",{"_index":2095,"title":{"classes/GetAllCardQuery.html":{}},"body":{"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{}}}],["getallcardqueryhandler",{"_index":1129,"title":{"classes/GetAllCardQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetAllCardQueryHandler.html":{}}}],["getallcardwithprofileidquery",{"_index":2104,"title":{"classes/GetAllCardWithProfileIdQuery.html":{}},"body":{"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{}}}],["getallcardwithprofileidqueryhandler",{"_index":1117,"title":{"classes/GetAllCardWithProfileIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{}}}],["getallcardwithuseridquery",{"_index":2115,"title":{"classes/GetAllCardWithUserIdQuery.html":{}},"body":{"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{}}}],["getallcardwithuseridqueryhandler",{"_index":1119,"title":{"classes/GetAllCardWithUserIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{}}}],["getallmailquery",{"_index":379,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getallmailqueryhandler",{"_index":347,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getalloccupation",{"_index":2874,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationquery",{"_index":2135,"title":{"classes/GetAllOccupationQuery.html":{}},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getalloccupationquery({})).then((occupationsdto",{"_index":2903,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationqueryhandler",{"_index":2141,"title":{"classes/GetAllOccupationQueryHandler.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getalloccupations",{"_index":2760,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getallprofilequery",{"_index":2150,"title":{"classes/GetAllProfileQuery.html":{}},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getallprofilequeryhandler",{"_index":2153,"title":{"classes/GetAllProfileQueryHandler.html":{}},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getallprofiles",{"_index":2936,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getallsocialnetwork",{"_index":3509,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getallsocialnetworkquery",{"_index":2160,"title":{"classes/GetAllSocialNetworkQuery.html":{}},"body":{"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getallsocialnetworkqueryhandler",{"_index":2163,"title":{"classes/GetAllSocialNetworkQueryHandler.html":{}},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getallsocialnetworks",{"_index":3423,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getallusers",{"_index":643,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getalluserstest",{"_index":545,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getcardbyidquery",{"_index":2174,"title":{"classes/GetCardByIdQuery.html":{}},"body":{"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{}}}],["getcardbyidqueryhandler",{"_index":1131,"title":{"classes/GetCardByIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetCardByIdQueryHandler.html":{}}}],["getcardwithcriteriaquery",{"_index":2177,"title":{"classes/GetCardWithCriteriaQuery.html":{}},"body":{"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["getcardwithcriteriaqueryhandler",{"_index":1120,"title":{"classes/GetCardWithCriteriaQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["getcardwithcriteriarequest",{"_index":2198,"title":{"classes/GetCardWithCriteriaRequest.html":{}},"body":{"classes/GetCardWithCriteriaRequest.html":{}}}],["getcookieforlogout",{"_index":891,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":892,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":900,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":893,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":903,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":840,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":440,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":2197,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["getme",{"_index":3838,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getme(@req",{"_index":3907,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(requestuser",{"_index":3866,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(userid",{"_index":4029,"title":{},"body":{"injectables/UserService.html":{}}}],["getmyprofile",{"_index":3077,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofile(userid",{"_index":3087,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofiles",{"_index":2937,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(@req",{"_index":3000,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(requestuser",{"_index":2957,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getoccupationbyid",{"_index":2761,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyid(@param('id",{"_index":2807,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationbyid(occupationid",{"_index":2774,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidquery",{"_index":2205,"title":{"classes/GetOccupationByIdQuery.html":{}},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidqueryhandler",{"_index":2206,"title":{"classes/GetOccupationByIdQueryHandler.html":{}},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationswithcriteria",{"_index":2762,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteria(getoccupationswithcriteriarequest",{"_index":2777,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteriarequest",{"_index":2781,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationwithcriteria",{"_index":2875,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteria(criteria",{"_index":2883,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriadto",{"_index":2210,"title":{"classes/GetOccupationWithCriteriaDto.html":{}},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaquery",{"_index":2216,"title":{"classes/GetOccupationWithCriteriaQuery.html":{}},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaqueryhandler",{"_index":2221,"title":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationwithcriteriarequest",{"_index":2230,"title":{"classes/GetOccupationWithCriteriaRequest.html":{}},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getprofile",{"_index":3078,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(id",{"_index":3089,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyid",{"_index":2938,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(@req",{"_index":2993,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(requestuser",{"_index":2961,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyidquery",{"_index":2233,"title":{"classes/GetProfileByIdQuery.html":{}},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyidqueryhandler",{"_index":2235,"title":{"classes/GetProfileByIdQueryHandler.html":{}},"body":{"classes/GetProfileByIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilebyuserid",{"_index":2939,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyuserid(@param('id",{"_index":2998,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyuserid(userid",{"_index":2963,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofiles",{"_index":3079,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilesbyuseridquery",{"_index":2251,"title":{"classes/GetProfilesByUserIdQuery.html":{}},"body":{"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilesbyuseridqueryhandler",{"_index":2252,"title":{"classes/GetProfilesByUserIdQueryHandler.html":{}},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofileswithcriteria",{"_index":2940,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofileswithcriteria(getprofileswithcriteriarequest",{"_index":2967,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileswithcriteria(getprofilewithcriteriarequest",{"_index":3093,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileswithcriteriarequest",{"_index":2255,"title":{"classes/GetProfilesWithCriteriaRequest.html":{}},"body":{"classes/GetProfilesWithCriteriaRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriadto",{"_index":2239,"title":{"classes/GetProfileWithCriteriaDto.html":{}},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaquery",{"_index":2243,"title":{"classes/GetProfileWithCriteriaQuery.html":{}},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaqueryhandler",{"_index":2245,"title":{"classes/GetProfileWithCriteriaQueryHandler.html":{}},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilewithcriteriarequest",{"_index":3095,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.isdeleted",{"_index":3135,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.roleprofile",{"_index":3134,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.usernameprofile",{"_index":3133,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getsavedcardwithprofileidquery",{"_index":2259,"title":{"classes/GetSavedCardWithProfileIdQuery.html":{}},"body":{"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{}}}],["getsavedcardwithprofileidqueryhandler",{"_index":1122,"title":{"classes/GetSavedCardWithProfileIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{}}}],["getsavedcardwithuseridquery",{"_index":2261,"title":{"classes/GetSavedCardWithUserIdQuery.html":{}},"body":{"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["getsavedcardwithuseridqueryhandler",{"_index":1123,"title":{"classes/GetSavedCardWithUserIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["getsocialnetworkbyid",{"_index":3424,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyid(@param('id",{"_index":3450,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkbyid(socialnetworkid",{"_index":3433,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyidquery",{"_index":2264,"title":{"classes/GetSocialNetworkByIdQuery.html":{}},"body":{"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyidqueryhandler",{"_index":2265,"title":{"classes/GetSocialNetworkByIdQueryHandler.html":{}},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getsocialnetworkswithcriteria",{"_index":3425,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkswithcriteria(getsocialnetworkswithcriteriarequest",{"_index":3435,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkswithcriteriarequest",{"_index":3437,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkwithcriteria",{"_index":3510,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteria(criteria",{"_index":3518,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteria(getsocialnetworkswithcriteriarequest",{"_index":3453,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkwithcriteriaquery",{"_index":2268,"title":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteriaqueryhandler",{"_index":2271,"title":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getsocialnetworkwithcriteriarequest",{"_index":2279,"title":{"classes/GetSocialNetworkWithCriteriaRequest.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaRequest.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getting",{"_index":2149,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["getuser",{"_index":644,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuser(userid",{"_index":670,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuserbyemailquery",{"_index":2281,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{}}}],["getuserbyemailqueryhandler",{"_index":2287,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserbyreferralcode",{"_index":1646,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":1657,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyusernamequery",{"_index":2295,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["getuserbyusernamequeryhandler",{"_index":2300,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserfromauthtoken",{"_index":894,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":905,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserifrefreshtokenmatches",{"_index":4013,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":4031,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":2304,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":4049,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesqueryhandler",{"_index":2310,"title":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserloginquery",{"_index":920,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["getuserloginquery(username",{"_index":925,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserloginqueryhandler",{"_index":876,"title":{"classes/GetUserLoginQueryHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserquery",{"_index":917,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserquery(id",{"_index":4052,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":945,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery(userid",{"_index":4062,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserqueryhandler",{"_index":2335,"title":{"classes/GetUserQueryHandler.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{}}}],["getusertest",{"_index":546,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(@body",{"_index":588,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(userid",{"_index":562,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getuserwithcriteriadto",{"_index":2345,"title":{"classes/GetUserWithCriteriaDto.html":{}},"body":{"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery",{"_index":2362,"title":{"classes/GetUserWithCriteriaQuery.html":{}},"body":{"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery(getuserwithcriteriadto",{"_index":4061,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithcriteriaqueryhandler",{"_index":2364,"title":{"classes/GetUserWithCriteriaQueryHandler.html":{}},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{}}}],["given",{"_index":1717,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["google",{"_index":3944,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":4255,"title":{},"body":{"modules.html":{}}}],["group",{"_index":707,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["group.bannerpicture",{"_index":2699,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":1288,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":2701,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":709,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":2686,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":607,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["groupentity.conversations",{"_index":1277,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":2403,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupid",{"_index":2413,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["groupmembership",{"_index":1040,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":1041,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":2389,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":609,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupmembershiprepository",{"_index":652,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmembershipresponse",{"_index":1158,"title":{"classes/GroupMembershipResponse.html":{}},"body":{"classes/CardResponse.html":{},"classes/GroupMembershipResponse.html":{}}}],["groupmemberships",{"_index":1016,"title":{},"body":{"entities/CardEntity.html":{},"classes/CardResponse.html":{}}}],["groupmembershipsid",{"_index":954,"title":{},"body":{"classes/CardDto.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["grouppicture",{"_index":2687,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":651,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":788,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":793,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":795,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":129,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handle(event",{"_index":133,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handled",{"_index":4055,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":112,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":35,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:10",{"_index":188,"title":{},"body":{"classes/AddViewCountCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:100",{"_index":1655,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:104",{"_index":3746,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:11",{"_index":45,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:110",{"_index":1656,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:118",{"_index":1658,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:12",{"_index":1417,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:123",{"_index":1663,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:129",{"_index":1661,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:13",{"_index":1416,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:135",{"_index":1667,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:139",{"_index":1669,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":1317,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["handler.ts:143",{"_index":1665,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:15",{"_index":1946,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1906,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["handler.ts:17",{"_index":189,"title":{},"body":{"classes/AddViewCountCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:18",{"_index":1947,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:19",{"_index":1599,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:20",{"_index":48,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:21",{"_index":2449,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":3740,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:23",{"_index":1419,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:24",{"_index":1652,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:25",{"_index":1531,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["handler.ts:27",{"_index":1318,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["handler.ts:29",{"_index":1653,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:51",{"_index":3775,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:54",{"_index":2323,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:55",{"_index":3776,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:6",{"_index":132,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:70",{"_index":3742,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:76",{"_index":3741,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:8",{"_index":195,"title":{},"body":{"classes/AddViewCountCardEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["handler.ts:82",{"_index":3748,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:86",{"_index":3747,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:9",{"_index":134,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:91",{"_index":3744,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler/error",{"_index":62,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler/register.event",{"_index":881,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["handlers",{"_index":1145,"title":{},"body":{"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["hashedpassword",{"_index":2322,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["headers",{"_index":1372,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1769,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheck",{"_index":2427,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":2421,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["healthcheckmodule",{"_index":476,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1775,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckqueryhandler",{"_index":2439,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckresponse",{"_index":1778,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckresult",{"_index":2480,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":2445,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":2451,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":2459,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":2478,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":444,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":458,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":4224,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1799,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":2047,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":1194,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"injectables/SocialNetworkService.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":449,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":291,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":418,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200)@post('/admin/criteria')@useguards(undefined",{"_index":3856,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":768,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(201",{"_index":2804,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["httpcode(204",{"_index":582,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/:id')@useguards(undefined",{"_index":3869,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/full",{"_index":3859,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/public/delete",{"_index":3847,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@post('/admin/restore",{"_index":3872,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@put('/admin/:id/role')@useguards(undefined",{"_index":3884,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":762,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@usepipes(new",{"_index":556,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":316,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":784,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CommandErrorException.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":2590,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1882,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1886,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":850,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["httponly",{"_index":933,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":292,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":852,"title":{},"body":{"controllers/AuthController.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.forbidden",{"_index":2591,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"classes/NotTheOwnerException.html":{}}}],["httpstatus.internal_server_error",{"_index":2052,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":1887,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpstatus.unauthorized",{"_index":927,"title":{},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":37,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["icon",{"_index":1589,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["id",{"_index":83,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["id.dto",{"_index":576,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{}}}],["id.dto.ts",{"_index":3969,"title":{},"body":{"interfaces/UserIdDto.html":{}}}],["id.exception",{"_index":1950,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["id.exception.ts",{"_index":2486,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.exception.ts:3",{"_index":2488,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.query",{"_index":1118,"title":{},"body":{"modules/CardModule.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["id.query.ts",{"_index":2105,"title":{},"body":{"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{}}}],["id.query.ts:1",{"_index":2106,"title":{},"body":{"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{}}}],["id.query.ts:2",{"_index":2234,"title":{},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id.query.ts:6",{"_index":2107,"title":{},"body":{"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{}}}],["id.query.ts:7",{"_index":2569,"title":{},"body":{"classes/IsCardOwnerWithUserIdQuery.html":{}}}],["id/:id",{"_index":2997,"title":{},"body":{"controllers/ProfileController.html":{}}}],["id/:id')@httpcode(201)@useguards(undefined",{"_index":2965,"title":{},"body":{"controllers/ProfileController.html":{}}}],["idprofiledto",{"_index":2483,"title":{"classes/IdProfileDto.html":{}},"body":{"classes/IdProfileDto.html":{}}}],["iduser",{"_index":1580,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["ieventhandler",{"_index":128,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["ignore",{"_index":455,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":36,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/AppModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["import",{"_index":52,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailRequiredException.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":333,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":3646,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["in.dto.ts",{"_index":3408,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:10",{"_index":3410,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":3411,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":4194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":3607,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":1009,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["information.enum.ts",{"_index":4158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":2561,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1422,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":368,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":369,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":56,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":694,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":72,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["injectrepository(companyemployeeentity",{"_index":678,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":677,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":74,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["injectrepository(conversationentity",{"_index":679,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":680,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":681,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":682,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":683,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":684,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":685,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":686,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":692,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":687,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["injectrepository(planentity",{"_index":688,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":163,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["injectrepository(referralcodeentity",{"_index":693,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":689,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["injectrepository(stripevententity",{"_index":690,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":691,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":676,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["inserteduser",{"_index":3207,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":4240,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":4241,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":2050,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1988,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1970,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":1055,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":4267,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":3270,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}}}],["interface/request",{"_index":789,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":913,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":3271,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"overview.html":{}}}],["invalid",{"_index":1697,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":4165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":4164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":1478,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":1496,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalididexception",{"_index":1949,"title":{"classes/InvalidIdException.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["invalidmailexception",{"_index":1682,"title":{"classes/InvalidMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidMailException.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception",{"_index":1534,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception(err",{"_index":1554,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1680,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["invalidusernameexception",{"_index":1683,"title":{"classes/InvalidUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{}}}],["inversejoincolumn",{"_index":3035,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":4146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":2544,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":2519,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":711,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":2003,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":612,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity.subscription",{"_index":3599,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":653,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":1373,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":2099,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["is.query",{"_index":2579,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["is.query.ts",{"_index":2575,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQuery.html":{}}}],["is.query.ts:1",{"_index":2576,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQuery.html":{}}}],["is.query.ts:6",{"_index":2577,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQuery.html":{}}}],["is.query.ts:7",{"_index":2578,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQuery.html":{}}}],["is_active",{"_index":243,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":4197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":2743,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":4196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":209,"title":{},"body":{"entities/AddressEntity.html":{}}}],["iscardownerwithuseridquery",{"_index":2567,"title":{"classes/IsCardOwnerWithUserIdQuery.html":{}},"body":{"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{}}}],["iscardownerwithuseridqueryhandler",{"_index":1124,"title":{"classes/IsCardOwnerWithUserIdQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{}}}],["isdate",{"_index":1985,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":3166,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isdeleted",{"_index":2179,"title":{},"body":{"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GroupMembershipResponse.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["isduplicatedemail",{"_index":1647,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedemail(email",{"_index":1660,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername",{"_index":1648,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername(username",{"_index":1662,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail",{"_index":3738,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail(mail",{"_index":3743,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername",{"_index":3739,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername(username",{"_index":3745,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isemail",{"_index":1085,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":3415,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":2666,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":3927,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":2560,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":265,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":3409,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1986,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1740,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":955,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/UpdateCardRequest.html":{}}}],["isprofileownerwithuserisquery",{"_index":2574,"title":{"classes/IsProfileOwnerWithUserIsQuery.html":{}},"body":{"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["isprofileownerwithuserisqueryhandler",{"_index":1126,"title":{"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["isread",{"_index":2735,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":2314,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["isregisteredwithgoogle",{"_index":3928,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":266,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":569,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["istestenvironmentpipe())@delete('/api/test/remove",{"_index":557,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":548,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/get",{"_index":559,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":552,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":1086,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidemail",{"_index":1649,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidemail(email",{"_index":1664,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidpassword",{"_index":1650,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidpassword(password",{"_index":1666,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidusername",{"_index":1651,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidusername(username",{"_index":1668,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["jest",{"_index":4237,"title":{},"body":{"index.html":{}}}],["jobtitle",{"_index":1294,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["join",{"_index":1786,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1810,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":4174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":1268,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":1289,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["joined_conversation",{"_index":713,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":614,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joinedconversation.conversation",{"_index":1280,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":3029,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":654,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":3018,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":1270,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":1080,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1389,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":2621,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwtauthenticationguard",{"_index":2605,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["jwtfromrequest",{"_index":2623,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":867,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":883,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":792,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":857,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["jwtservice",{"_index":897,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":858,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwttoken",{"_index":3929,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":2688,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":2564,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":273,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["lastname",{"_index":956,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["latitude",{"_index":210,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":220,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["length(2",{"_index":2848,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["length(5",{"_index":1742,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":3169,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":2509,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":4230,"title":{},"body":{"index.html":{}}}],["license",{"_index":4250,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":2736,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1880,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"controllers/ProfileController.html":{}}}],["list.response",{"_index":2339,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["list.response.ts",{"_index":3971,"title":{},"body":{"classes/UserListResponse.html":{}}}],["list.response.ts:4",{"_index":3974,"title":{},"body":{"classes/UserListResponse.html":{}}}],["listofoccupationid",{"_index":3707,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["listrolesdto",{"_index":2634,"title":{"classes/ListRolesDto.html":{}},"body":{"classes/ListRolesDto.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":902,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadeagerrelations",{"_index":2119,"title":{},"body":{"classes/GetAllCardWithUserIdQueryHandler.html":{}}}],["loadrelationids",{"_index":2118,"title":{},"body":{"classes/GetAllCardWithUserIdQueryHandler.html":{}}}],["local",{"_index":2648,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":2642,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:15",{"_index":2647,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":2644,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":787,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["localisation",{"_index":111,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["localstrategy",{"_index":859,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":395,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/CardModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":352,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log.command.ts",{"_index":1370,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:11",{"_index":1383,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1397,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":1387,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":1386,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1398,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1403,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1393,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1390,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1405,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1402,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1401,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1392,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1399,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":1381,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1400,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1404,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1395,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":400,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1439,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:1",{"_index":1460,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1441,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1448,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1443,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1442,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1449,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1455,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1446,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1444,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1450,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1457,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1454,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1453,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1445,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1440,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1451,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1452,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1456,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1447,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1462,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1461,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1421,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":4148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":403,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":338,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":386,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":139,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":388,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:10",{"_index":394,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":398,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":391,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":138,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log/cqrs/command/create",{"_index":1369,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log/cqrs/handler/command/create",{"_index":351,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log/domain/dto/create",{"_index":1438,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log/domain/enum/api",{"_index":2022,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":2021,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["log/domain/enum/status",{"_index":4191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":2066,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":2662,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1787,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{},"miscellaneous/variables.html":{}}}],["logger('registereventhandler",{"_index":3179,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.config",{"_index":1789,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":4278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1844,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1843,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":3183,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1797,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":3178,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1814,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":2058,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:10",{"_index":3275,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":2060,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":3259,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":2063,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":3276,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":3260,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":1374,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1396,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtypeenum.error",{"_index":2028,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":3266,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":895,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":908,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":3977,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:10",{"_index":3980,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":3981,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":3979,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.query",{"_index":878,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["login.query.ts",{"_index":2317,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:1",{"_index":2318,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":2319,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":799,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":3984,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:11",{"_index":3988,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":3993,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":3987,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":3986,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":3992,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":3991,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":3990,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":3989,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":3985,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["logindto",{"_index":3643,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["loginofuserevent",{"_index":2324,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["loginofuserevent(userusername.id",{"_index":2330,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["loginofusereventhandler",{"_index":2658,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{}}}],["logout",{"_index":751,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":835,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":761,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":211,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":2510,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":4226,"title":{},"body":{"index.html":{}}}],["mail",{"_index":287,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":282,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined",{"_index":3864,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":284,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":343,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.command.ts",{"_index":1865,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:1",{"_index":1866,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":3347,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1867,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":3348,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":430,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":407,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.controller.ts:16",{"_index":412,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":346,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["mail.event.ts",{"_index":1890,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:1",{"_index":3357,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":3361,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":3359,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1893,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1894,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1896,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1895,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":3358,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.exception",{"_index":1675,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.exception.ts",{"_index":1990,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.exception.ts:3",{"_index":1991,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.module",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":425,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":349,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["mail.query.ts",{"_index":2122,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["mail.service",{"_index":415,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":433,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:10",{"_index":435,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":434,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":406,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{}}}],["mail/cqrs/command/send",{"_index":3346,"title":{},"body":{"classes/SendMailCommand.html":{}}}],["mail/cqrs/event/send",{"_index":3356,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail/cqrs/handler/command/send",{"_index":3349,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["mail/cqrs/handler/event/send",{"_index":3362,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":2663,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":2667,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":2669,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":2668,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":2665,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":4160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":410,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{}}}],["maillandingpagedto",{"_index":2124,"title":{"classes/MailLandingPageDto.html":{}},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{}}}],["mailrequiredexception",{"_index":2674,"title":{"classes/MailRequiredException.html":{}},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["mailresponse",{"_index":301,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{}}}],["mails",{"_index":312,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":289,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":2134,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":1081,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":1058,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":260,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":224,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":2294,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["matches.query",{"_index":2311,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":2305,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:1",{"_index":2308,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":2309,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":31,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().split('.')[1",{"_index":3764,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["math.random().tostring(10).split('.')[1",{"_index":4065,"title":{},"body":{"injectables/UserService.html":{}}}],["max",{"_index":935,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":1087,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":3413,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":1092,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["me')@useguards(undefined",{"_index":3848,"title":{},"body":{"controllers/UserController.html":{}}}],["media",{"_index":715,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":1049,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":1254,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["media.groupbannerpicture",{"_index":2381,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":2394,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":1231,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":1248,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":617,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediarepository",{"_index":655,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["mediaurl",{"_index":957,"title":{},"body":{"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["member",{"_index":3337,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":3484,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":2379,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":611,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":2398,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:17",{"_index":2405,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":2407,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":2400,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":2404,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":2401,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":2408,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":2402,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":2409,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":3335,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:2",{"_index":3339,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":3338,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":3340,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.response",{"_index":1191,"title":{},"body":{"classes/CardResponse.html":{}}}],["membership.response.ts",{"_index":2412,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:1",{"_index":2414,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:10",{"_index":2415,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:11",{"_index":2420,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:6",{"_index":2417,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:7",{"_index":2416,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:8",{"_index":2419,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["membership.response.ts:9",{"_index":2418,"title":{},"body":{"classes/GroupMembershipResponse.html":{}}}],["memory",{"_index":2457,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":2447,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":717,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/ConversationEntity.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"controllers/UserController.html":{}}}],["message.author",{"_index":1051,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":1282,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":1290,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":619,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{}}}],["messagepatern",{"_index":847,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":796,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":775,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":656,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":1017,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["messagescount",{"_index":958,"title":{},"body":{"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["metadata",{"_index":2587,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":116,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"injectables/ApiLogService.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["methods",{"_index":38,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":4270,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":3141,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":3412,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":4133,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":822,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":117,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQuery.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardEvent.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["module:entities",{"_index":3485,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":320,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2455,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":2001,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateNameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["name.exception",{"_index":2893,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["name.exception.ts",{"_index":1994,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["name.exception.ts:3",{"_index":1995,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["nameoccupation",{"_index":2227,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["namesocialnetwork",{"_index":2276,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["nestjs",{"_index":4098,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":294,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CardModule.html":{},"classes/CommandErrorException.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":2726,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":1479,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":54,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":868,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":336,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/SendMailCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":863,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":300,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":2428,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":57,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":2064,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1330,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkEvent.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"changelog.html":{}}}],["network.command",{"_index":1597,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network.command.ts",{"_index":1587,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:1",{"_index":1590,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:10",{"_index":3722,"title":{},"body":{"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:6",{"_index":1593,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:7",{"_index":1594,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:8",{"_index":1592,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:9",{"_index":1591,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.controller",{"_index":3493,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["network.controller.ts",{"_index":3420,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:19",{"_index":3432,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:28",{"_index":3434,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:37",{"_index":3436,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:50",{"_index":3429,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:59",{"_index":3442,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:73",{"_index":3431,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:82",{"_index":3439,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.dto",{"_index":2168,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["network.dto.ts",{"_index":3462,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:1",{"_index":3463,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:10",{"_index":3464,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:11",{"_index":3469,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:12",{"_index":3465,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:6",{"_index":3467,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:7",{"_index":3468,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:8",{"_index":3470,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:9",{"_index":3466,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.entity",{"_index":629,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network.entity.ts",{"_index":3471,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:39",{"_index":3479,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:42",{"_index":3480,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:45",{"_index":3482,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:48",{"_index":3478,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:51",{"_index":3475,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:58",{"_index":3474,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:65",{"_index":3476,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:68",{"_index":3481,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:71",{"_index":3477,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.event",{"_index":1602,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["network.event.ts",{"_index":1617,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:2",{"_index":1621,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:3",{"_index":1619,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:4",{"_index":1620,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.module",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["network.module.ts",{"_index":3492,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["network.query",{"_index":2165,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["network.query.ts",{"_index":2162,"title":{},"body":{"classes/GetAllSocialNetworkQuery.html":{}}}],["network.request",{"_index":3445,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["network.request.ts",{"_index":1628,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:1",{"_index":1629,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:10",{"_index":3732,"title":{},"body":{"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:6",{"_index":1632,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:7",{"_index":1633,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:8",{"_index":1631,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:9",{"_index":1630,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.response",{"_index":1189,"title":{},"body":{"classes/CardResponse.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["network.response.ts",{"_index":3498,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:1",{"_index":3499,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:10",{"_index":3500,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:11",{"_index":3501,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:12",{"_index":3506,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:14",{"_index":3502,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:6",{"_index":3504,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:7",{"_index":3505,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:8",{"_index":3507,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:9",{"_index":3503,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.service",{"_index":3444,"title":{},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{}}}],["network.service.ts",{"_index":3508,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:107",{"_index":3515,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:120",{"_index":3520,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:23",{"_index":3511,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:26",{"_index":3516,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:40",{"_index":3517,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:53",{"_index":3519,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:72",{"_index":3513,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:90",{"_index":3521,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network/cqrs/command/create",{"_index":1586,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{}}}],["network/cqrs/command/delete",{"_index":1930,"title":{},"body":{"classes/DeleteSocialNetworkCommand.html":{}}}],["network/cqrs/command/restore",{"_index":3311,"title":{},"body":{"classes/RestoreSocialNetworkCommand.html":{}}}],["network/cqrs/command/soft",{"_index":3564,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommand.html":{}}}],["network/cqrs/command/update",{"_index":3721,"title":{},"body":{"classes/UpdateSocialNetworkCommand.html":{}}}],["network/cqrs/event/create",{"_index":1616,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{}}}],["network/cqrs/event/delete",{"_index":1937,"title":{},"body":{"classes/DeleteSocialNetworkEvent.html":{}}}],["network/cqrs/event/restore",{"_index":3318,"title":{},"body":{"classes/RestoreSocialNetworkEvent.html":{}}}],["network/cqrs/event/soft",{"_index":3570,"title":{},"body":{"classes/SoftDeleteSocialNetworkEvent.html":{}}}],["network/cqrs/event/update",{"_index":3728,"title":{},"body":{"classes/UpdateSocialNetworkEvent.html":{}}}],["network/cqrs/handler/command/create",{"_index":1596,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/delete",{"_index":1932,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/restore",{"_index":3313,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/soft",{"_index":3565,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/update",{"_index":3723,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/event/create",{"_index":1624,"title":{},"body":{"classes/CreateSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/delete",{"_index":1939,"title":{},"body":{"classes/DeleteSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/restore",{"_index":3320,"title":{},"body":{"classes/RestoreSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/soft",{"_index":3571,"title":{},"body":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/update",{"_index":3729,"title":{},"body":{"classes/UpdateSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/query/get",{"_index":2164,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["network/cqrs/query/get",{"_index":2161,"title":{},"body":{"classes/GetAllSocialNetworkQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["network/domain/dto/social",{"_index":3461,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network/domain/entities/social",{"_index":628,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["network/social",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["network/web/request/create",{"_index":1627,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{}}}],["network/web/request/get",{"_index":2280,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["network/web/request/update",{"_index":3731,"title":{},"body":{"classes/UpdateSocialNetworkRequest.html":{}}}],["network/web/response/social",{"_index":1188,"title":{},"body":{"classes/CardResponse.html":{},"classes/SocialNetworkResponse.html":{}}}],["networks",{"_index":2173,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["never",{"_index":2586,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":4176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":4175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":4173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newcard",{"_index":1323,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["newcard.id",{"_index":1337,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["newcard.occupations.push(occupation",{"_index":1335,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["newcard.owner",{"_index":1324,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["newcard.socialnetwork",{"_index":1326,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["newconnectedcard.cardentitytwo.id",{"_index":106,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["newconnectedcard.id",{"_index":105,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["newoccupationentity",{"_index":1491,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["newpassword",{"_index":3791,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["newprofile",{"_index":1545,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newprofile.occupations",{"_index":1552,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newsocialnetworkentity",{"_index":1609,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["newuser",{"_index":1700,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":2062,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":4166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":4208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":4231,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":4236,"title":{},"body":{"index.html":{}}}],["none",{"_index":4205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":4211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":959,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["notification",{"_index":730,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":1284,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":1291,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["notification.profile",{"_index":3031,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":3948,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":635,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationrepository",{"_index":662,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":1271,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":2749,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":2755,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nottheownerexception",{"_index":2729,"title":{"classes/NotTheOwnerException.html":{}},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["nousertraceexception",{"_index":2721,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{}}}],["npm",{"_index":4232,"title":{},"body":{"index.html":{}}}],["null",{"_index":1028,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":2382,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":1060,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":3034,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":226,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":985,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardRequest.html":{}}}],["number(process.env.port_api_log",{"_index":360,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":363,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":366,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":192,"title":{},"body":{"classes/AddViewCountCardCommandHandler.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["object",{"_index":821,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/ProfileController.html":{}}}],["object(log.body",{"_index":404,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":1470,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["object.assign(this",{"_index":29,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GroupMembershipResponse.html":{},"classes/IdProfileDto.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":2501,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":719,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"changelog.html":{}}}],["occupation.cards",{"_index":1059,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.command",{"_index":1473,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.command.ts",{"_index":1465,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:1",{"_index":1902,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:3",{"_index":1467,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:6",{"_index":1903,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:8",{"_index":1468,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:9",{"_index":3685,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["occupation.controller",{"_index":2853,"title":{},"body":{"modules/OccupationModule.html":{}}}],["occupation.dto",{"_index":1469,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.dto.ts",{"_index":1501,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:1",{"_index":1502,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:6",{"_index":1503,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.event",{"_index":1482,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["occupation.event.ts",{"_index":1505,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:1",{"_index":1506,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:6",{"_index":1509,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:7",{"_index":1912,"title":{},"body":{"classes/DeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:8",{"_index":1508,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:9",{"_index":1507,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{}}}],["occupation.id",{"_index":3670,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.name",{"_index":1488,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.profiles",{"_index":3033,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation.query",{"_index":2143,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{}}}],["occupation.query.ts",{"_index":2137,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:1",{"_index":2138,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:6",{"_index":2140,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:7",{"_index":2139,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.request",{"_index":2800,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["occupation.request.ts",{"_index":1516,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:1",{"_index":1517,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:6",{"_index":1518,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.service",{"_index":2795,"title":{},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupation/domain/entities/occupation.entity",{"_index":1088,"title":{},"body":{"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupation/web/response/occupation",{"_index":1184,"title":{},"body":{"classes/CardResponse.html":{}}}],["occupation_id",{"_index":3051,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationcontroller",{"_index":2756,"title":{"controllers/OccupationController.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupationdto",{"_index":1476,"title":{"classes/OccupationDto.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/OccupationDto.html":{},"injectables/OccupationService.html":{}}}],["occupationdto(occupation",{"_index":2147,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{}}}],["occupationentity",{"_index":621,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationentity.companies",{"_index":1256,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":1243,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.id",{"_index":1499,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["occupationid",{"_index":1332,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetOccupationByIdQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationlist",{"_index":1484,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.foreach(occupation",{"_index":1487,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.length",{"_index":1486,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationmodule",{"_index":477,"title":{"modules/OccupationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OccupationModule.html":{},"modules.html":{},"overview.html":{}}}],["occupationnotfoundexception",{"_index":2860,"title":{"classes/OccupationNotFoundException.html":{}},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["occupationpromises",{"_index":1548,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrepository",{"_index":657,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrequest",{"_index":2879,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationrequest.name",{"_index":2912,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationresponse",{"_index":1167,"title":{"classes/OccupationResponse.html":{}},"body":{"classes/CardResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{}}}],["occupationresponse(occupationdto",{"_index":2905,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupations",{"_index":1018,"title":{},"body":{"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["occupations.length",{"_index":1551,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupations.map",{"_index":2229,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["occupations.map(occupation",{"_index":2146,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["occupationsdto.map(occupationdto",{"_index":2904,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationservice",{"_index":2794,"title":{"injectables/OccupationService.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"overview.html":{}}}],["occupationsid",{"_index":960,"title":{},"body":{"classes/CardDto.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileRequest.html":{},"injectables/ProfileService.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["occurred",{"_index":1845,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":450,"title":{},"body":{"controllers/AppController.html":{}}}],["old",{"_index":3345,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":228,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":2507,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":1082,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":1024,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":1083,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":1048,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":4213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":4212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":4207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":4209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":3629,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":358,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":4228,"title":{},"body":{"index.html":{}}}],["os",{"_index":1375,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":330,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":4256,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":961,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["owner.command",{"_index":3059,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["owner.command.ts",{"_index":3381,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:2",{"_index":3383,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:3",{"_index":3382,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.event",{"_index":3066,"title":{},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["owner.event.ts",{"_index":3391,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:2",{"_index":3393,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:3",{"_index":3396,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:5",{"_index":3395,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:6",{"_index":3392,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.exception",{"_index":3116,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.exception.ts",{"_index":2731,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.exception.ts:3",{"_index":2732,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.request",{"_index":3115,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.request.ts",{"_index":3403,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:2",{"_index":3405,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:3",{"_index":3404,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.user",{"_index":2117,"title":{},"body":{"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["ownercompanies",{"_index":3019,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":1222,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":4101,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":277,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"changelog.html":{}}}],["page.controller",{"_index":339,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":275,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:17",{"_index":290,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":286,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":2126,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":2671,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:1",{"_index":2672,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":2673,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":331,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":296,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":370,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:11",{"_index":375,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:19",{"_index":376,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:8",{"_index":374,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":274,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{}}}],["page/cqrs/command/delete",{"_index":1864,"title":{},"body":{"classes/DeleteMailCommand.html":{},"injectables/UserService.html":{}}}],["page/cqrs/event/delete",{"_index":1889,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1868,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1897,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["page/cqrs/handler/query/get",{"_index":2123,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page/cqrs/query/get",{"_index":2121,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["page/domain/dto/mail",{"_index":2670,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page/domain/response/mail.response.ts",{"_index":2679,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":2680,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":2681,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2792,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":2814,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["parameter",{"_index":1537,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1837,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1819,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1802,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1828,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":17,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GroupMembershipResponse.html":{},"classes/IdProfileDto.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":2620,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":862,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2617,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2622,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2628,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":738,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["password')@useguards(undefined",{"_index":3881,"title":{},"body":{"controllers/UserController.html":{}}}],["password.exception",{"_index":1681,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["password.exception.ts",{"_index":2503,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["password.exception.ts:3",{"_index":2504,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["passwordfield",{"_index":2650,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":934,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":928,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":914,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":3640,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["payload.userid",{"_index":944,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":3587,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":4185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":3020,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":4122,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":1223,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["phones",{"_index":962,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["picture",{"_index":2380,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":2131,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":2583,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":909,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["plan",{"_index":721,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":2004,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":623,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity.subscriptions",{"_index":3601,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":658,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":1376,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":359,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["post",{"_index":413,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":411,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/admin/create",{"_index":2810,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["post('/admin/create')@httpcode(204)@useguards(undefined",{"_index":2767,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["post('/admin/create')@useguards(undefined",{"_index":3844,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/criteria",{"_index":3905,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/generate",{"_index":3863,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/get",{"_index":2778,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["post('/admin/restore",{"_index":3898,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":579,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/login",{"_index":811,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":834,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":804,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":772,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1798,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":4139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":4233,"title":{},"body":{"index.html":{}}}],["pour",{"_index":2563,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1816,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"changelog.html":{}}}],["prefix",{"_index":276,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":4183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prettier",{"_index":4239,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":3941,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":2917,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":261,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":240,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":73,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["process",{"_index":882,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["process.env.api_name",{"_index":1429,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1431,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":931,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":930,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":888,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":938,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":937,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":885,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1795,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1840,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1822,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1806,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1831,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1835,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1817,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1800,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1826,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1841,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1825,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1815,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1833,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1839,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1821,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1805,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1830,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1836,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1818,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1801,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1827,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1842,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1824,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1813,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1832,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1838,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1820,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1804,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1829,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":2067,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":2024,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1426,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1796,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":181,"title":{},"body":{"classes/AddSavedCardEventHandler.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["profile')@httpcode(201)@useguards(undefined",{"_index":2945,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile')@httpcode(204)@useguards(undefined",{"_index":2949,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile).catch(error",{"_index":3006,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.command",{"_index":1529,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.command.ts",{"_index":1521,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/RestoreProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:1",{"_index":3299,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["profile.command.ts:2",{"_index":1918,"title":{},"body":{"classes/DeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:3",{"_index":3700,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:4",{"_index":1525,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:5",{"_index":1524,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:6",{"_index":1523,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/RestoreProfileCommand.html":{}}}],["profile.companies",{"_index":1207,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.controller",{"_index":3056,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1526,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.dto.ts",{"_index":1560,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/IdProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:2",{"_index":2485,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["profile.dto.ts:4",{"_index":1565,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:5",{"_index":1563,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.enum",{"_index":1566,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.enum.ts",{"_index":4144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profile.event",{"_index":1540,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["profile.event.ts",{"_index":1568,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:1",{"_index":3305,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:2",{"_index":3559,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:3",{"_index":3560,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:4",{"_index":1571,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:5",{"_index":1570,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:6",{"_index":1569,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:8",{"_index":3307,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:9",{"_index":3306,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.id",{"_index":170,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["profile.personalcards",{"_index":1062,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.query",{"_index":2155,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.query.ts",{"_index":2152,"title":{},"body":{"classes/GetAllProfileQuery.html":{}}}],["profile.request",{"_index":2984,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.request.ts",{"_index":1579,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:4",{"_index":1584,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:5",{"_index":1582,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:6",{"_index":1583,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:7",{"_index":1581,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.savedcard",{"_index":1065,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.service",{"_index":2980,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile.user",{"_index":3387,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profile.user.id",{"_index":2581,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["profile.user?.id",{"_index":2238,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["profile.userid",{"_index":3129,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/:id",{"_index":3003,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/:id')@httpcode(204)@useguards(undefined",{"_index":2952,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/domain/entities/profile.entity",{"_index":161,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profile/domain/response/profile.response",{"_index":1183,"title":{},"body":{"classes/CardResponse.html":{}}}],["profile_id",{"_index":3049,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profilecontroller",{"_index":2931,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profileentity",{"_index":160,"title":{"entities/ProfileEntity.html":{}},"body":{"classes/AddSavedCardCommandHandler.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profileentity.bannerpicture",{"_index":2705,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.id",{"_index":171,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{}}}],["profileentity.joinedconversations",{"_index":2603,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":2599,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":2746,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":2844,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":1245,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":2707,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":2689,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":2690,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileid",{"_index":156,"title":{},"body":{"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GroupMembershipResponse.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profileid).catch(error",{"_index":2996,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilemodule",{"_index":478,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepicture",{"_index":1224,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":158,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["profileresponse",{"_index":1169,"title":{"classes/ProfileResponse.html":{}},"body":{"classes/CardResponse.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["profileresponse(savedprofile",{"_index":1557,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["profiles",{"_index":2157,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/OccupationEntity.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/UserEntity.html":{}}}],["profiles')@httpcode(201)@useguards(undefined",{"_index":2959,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles.map",{"_index":2159,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["profileservice",{"_index":2979,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profileswhosavedcard",{"_index":167,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"entities/CardEntity.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["profileswhosavedcard.user",{"_index":2263,"title":{},"body":{"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["project",{"_index":4099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":51,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all(occupationpromises",{"_index":1550,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"entities/JoinedConversation.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":3486,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":851,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":332,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":4064,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/ListRolesDto.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":2793,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["put('/admin/:id",{"_index":3909,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id')@useguards(undefined",{"_index":3876,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id/role",{"_index":3911,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/restore",{"_index":2970,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/restore/:id",{"_index":2823,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/restore/:id')@httpcode(204)@useguards(undefined",{"_index":2783,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/update",{"_index":2977,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/update/:id",{"_index":2813,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/update/:id')@httpcode(204)@useguards(undefined",{"_index":2790,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/public/update",{"_index":2974,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["query",{"_index":1146,"title":{},"body":{"modules/CardModule.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["query.companyname",{"_index":2193,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["query.criteria.isdeleted",{"_index":2224,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.criteria.name",{"_index":2225,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.email",{"_index":2292,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.firstname",{"_index":2195,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.isdeleted",{"_index":2248,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.usernameprofile",{"_index":2249,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdfrom",{"_index":2368,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdto",{"_index":2370,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedfrom",{"_index":2374,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedto",{"_index":2375,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.isdeleted",{"_index":2367,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedfrom",{"_index":2371,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedto",{"_index":2372,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.id",{"_index":2176,"title":{},"body":{"classes/GetCardByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["query.isdeleted",{"_index":2191,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["query.isownerpro",{"_index":2192,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["query.lastname",{"_index":2196,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["query.name",{"_index":2274,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["query.occupationid",{"_index":2208,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["query.profileid",{"_index":2110,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{}}}],["query.typeofcardenum",{"_index":2194,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["query.userid",{"_index":2120,"title":{},"body":{"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["query.username",{"_index":2303,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["query/get",{"_index":2101,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query/health",{"_index":2450,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["query/is",{"_index":2571,"title":{},"body":{"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["querybuilder",{"_index":2188,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.createdat",{"_index":2369,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.deletedat",{"_index":2376,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.updatedat",{"_index":2373,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.getmany",{"_index":2228,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["querybuilder.setfindoptions",{"_index":2190,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('occupation.name",{"_index":2226,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('profile.usernameprofile",{"_index":2250,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('socialnetwork.name",{"_index":2275,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["querybus",{"_index":373,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["queryerrorexception",{"_index":2889,"title":{"classes/QueryErrorException.html":{}},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["queryhandler",{"_index":2100,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["queryhandler(getallcardquery",{"_index":2102,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{}}}],["queryhandler(getallcardwithprofileidquery",{"_index":2109,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{}}}],["queryhandler(getallcardwithuseridquery",{"_index":2116,"title":{},"body":{"classes/GetAllCardWithUserIdQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":2127,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getalloccupationquery",{"_index":2144,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["queryhandler(getallprofilequery",{"_index":2156,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["queryhandler(getallsocialnetworkquery",{"_index":2169,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["queryhandler(getcardbyidquery",{"_index":2175,"title":{},"body":{"classes/GetCardByIdQueryHandler.html":{}}}],["queryhandler(getcardwithcriteriaquery",{"_index":2187,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["queryhandler(getoccupationbyidquery",{"_index":2207,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["queryhandler(getoccupationwithcriteriaquery",{"_index":2222,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["queryhandler(getprofilebyidquery",{"_index":2236,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["queryhandler(getprofilesbyuseridquery",{"_index":2253,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["queryhandler(getprofilewithcriteriaquery",{"_index":2246,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["queryhandler(getsavedcardwithprofileidquery",{"_index":2260,"title":{},"body":{"classes/GetSavedCardWithProfileIdQueryHandler.html":{}}}],["queryhandler(getsavedcardwithuseridquery",{"_index":2262,"title":{},"body":{"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["queryhandler(getsocialnetworkbyidquery",{"_index":2266,"title":{},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["queryhandler(getsocialnetworkwithcriteriaquery",{"_index":2272,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":2290,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":2302,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":2312,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":2326,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["queryhandler(getuserquery",{"_index":2340,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["queryhandler(getuserwithcriteriaquery",{"_index":2365,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":2452,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(iscardownerwithuseridquery",{"_index":2572,"title":{},"body":{"classes/IsCardOwnerWithUserIdQueryHandler.html":{}}}],["queryhandler(isprofileownerwithuserisquery",{"_index":2580,"title":{},"body":{"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["random",{"_index":1714,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["readme.md",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["receiver",{"_index":93,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["record",{"_index":2497,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":2006,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":732,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":1659,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["referralcode.owner",{"_index":3953,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":3959,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":637,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["referralcoderepository",{"_index":663,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":3930,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":752,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["refresh(@req",{"_index":845,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":764,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":939,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":2306,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":815,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":826,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":828,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":4189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*[a",{"_index":1686,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":3780,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["regexvalidatepassword",{"_index":1643,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["register",{"_index":1692,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["registercommand",{"_index":915,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{}}}],["registercommand(signupdto.username",{"_index":922,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":3184,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":3173,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["registerevent(inserteduser.id",{"_index":3208,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":879,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["registerhandler",{"_index":871,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{}}}],["rejected",{"_index":4190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1809,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relation",{"_index":3225,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["relations",{"_index":81,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":3228,"title":{},"body":{"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@req",{"_index":3918,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":4033,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(requestuser",{"_index":3868,"title":{},"body":{"controllers/UserController.html":{}}}],["removeconnectedcardcommand",{"_index":3209,"title":{"classes/RemoveConnectedCardCommand.html":{}},"body":{"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["removeconnectedcardcommandhandler",{"_index":1111,"title":{"classes/RemoveConnectedCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["removeconnectedcardevent",{"_index":3212,"title":{"classes/RemoveConnectedCardEvent.html":{}},"body":{"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{}}}],["removeconnectedcardeventhandler",{"_index":1136,"title":{"classes/RemoveConnectedCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/RemoveConnectedCardEventHandler.html":{}}}],["removeconnectedcardrequest",{"_index":3232,"title":{"classes/RemoveConnectedCardRequest.html":{}},"body":{"classes/RemoveConnectedCardRequest.html":{}}}],["removed",{"_index":3254,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":4014,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":4035,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":3234,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["removerefreshtokencommand(userid",{"_index":4050,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":3239,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["removerefreshtokenevent",{"_index":3244,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtokeneventhandler",{"_index":3250,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["removesavedcardcommand",{"_index":3255,"title":{"classes/RemoveSavedCardCommand.html":{}},"body":{"classes/RemoveSavedCardCommand.html":{}}}],["removesavedcardevent",{"_index":3256,"title":{"classes/RemoveSavedCardEvent.html":{}},"body":{"classes/RemoveSavedCardEvent.html":{}}}],["removesavedcardrequest",{"_index":3257,"title":{"classes/RemoveSavedCardRequest.html":{}},"body":{"classes/RemoveSavedCardRequest.html":{}}}],["removeuser",{"_index":645,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["removeuser(userid",{"_index":672,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["repository",{"_index":42,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["req",{"_index":785,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":2075,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":2079,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":2077,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":3263,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":3267,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":2088,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":2074,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":3268,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":760,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":3649,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts:3",{"_index":3650,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":819,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":823,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":2056,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":843,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":2625,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":501,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["requestuser",{"_index":757,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestuser.user",{"_index":2994,"title":{},"body":{"controllers/ProfileController.html":{}}}],["required",{"_index":2678,"title":{},"body":{"classes/MailRequiredException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["required.exception",{"_index":4047,"title":{},"body":{"injectables/UserService.html":{}}}],["required.exception.ts",{"_index":2676,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["required.exception.ts:3",{"_index":2677,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["res",{"_index":786,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":2083,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":2085,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":2081,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":329,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":466,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CardResponse.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":832,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":839,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":837,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":2053,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["response.ts",{"_index":2866,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:1",{"_index":2867,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:10",{"_index":2869,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:6",{"_index":2870,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:7",{"_index":2871,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:8",{"_index":2868,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:9",{"_index":2872,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["responsebody",{"_index":1377,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":1378,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":504,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["rest",{"_index":4227,"title":{},"body":{"index.html":{}}}],["restore",{"_index":3286,"title":{},"body":{"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{}}}],["restore(socialnetwork.id",{"_index":3316,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["restorecardcommand",{"_index":3277,"title":{"classes/RestoreCardCommand.html":{}},"body":{"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{}}}],["restorecardcommandhandler",{"_index":1113,"title":{"classes/RestoreCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/RestoreCardCommandHandler.html":{}}}],["restorecardevent",{"_index":3281,"title":{"classes/RestoreCardEvent.html":{}},"body":{"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{}}}],["restorecardeventhandler",{"_index":1138,"title":{"classes/RestoreCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/RestoreCardEventHandler.html":{}}}],["restored",{"_index":3289,"title":{},"body":{"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreoccupation",{"_index":2763,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupation(@param('id",{"_index":2824,"title":{},"body":{"controllers/OccupationController.html":{}}}],["restoreoccupation(occupationid",{"_index":2782,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupationcommand",{"_index":2901,"title":{"classes/RestoreOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationcommandhandler",{"_index":2854,"title":{"classes/RestoreOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationevent",{"_index":3292,"title":{"classes/RestoreOccupationEvent.html":{}},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreoccupationeventhandler",{"_index":2858,"title":{"classes/RestoreOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreprofile",{"_index":2941,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["restoreprofile(@param('id",{"_index":3015,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofile(id",{"_index":3096,"title":{},"body":{"injectables/ProfileService.html":{}}}],["restoreprofile(profileid",{"_index":2969,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofilecommand",{"_index":3117,"title":{"classes/RestoreProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofilecommandhandler",{"_index":3069,"title":{"classes/RestoreProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofileevent",{"_index":3301,"title":{"classes/RestoreProfileEvent.html":{}},"body":{"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoreprofileeventhandler",{"_index":3070,"title":{"classes/RestoreProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoresocialnetwork",{"_index":3426,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetwork(@param('id",{"_index":3459,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["restoresocialnetwork(socialnetworkid",{"_index":3438,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetworkcommand",{"_index":3310,"title":{"classes/RestoreSocialNetworkCommand.html":{}},"body":{"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetworkcommandhandler",{"_index":3312,"title":{"classes/RestoreSocialNetworkCommandHandler.html":{}},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["restoresocialnetworkevent",{"_index":3314,"title":{"classes/RestoreSocialNetworkEvent.html":{}},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{}}}],["restoresocialnetworkevent(command.id",{"_index":3317,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["restoresocialnetworkeventhandler",{"_index":3319,"title":{"classes/RestoreSocialNetworkEventHandler.html":{}},"body":{"classes/RestoreSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["restoreuser",{"_index":3839,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreuser(@body",{"_index":3899,"title":{},"body":{"controllers/UserController.html":{}}}],["restoreuser(userid",{"_index":3871,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreusercommand",{"_index":3322,"title":{"classes/RestoreUserCommand.html":{}},"body":{"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["restoreusercommandhandler",{"_index":3324,"title":{"classes/RestoreUserCommandHandler.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["restoreuserevent",{"_index":3326,"title":{"classes/RestoreUserEvent.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreuserevent(command.id",{"_index":3329,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["restoreusereventhandler",{"_index":3331,"title":{"classes/RestoreUserEventHandler.html":{}},"body":{"classes/RestoreUserEventHandler.html":{}}}],["results",{"_index":30,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":314,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":2351,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"entities/GroupMembershipEntity.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.command",{"_index":3814,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["role.command.ts",{"_index":3810,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:4",{"_index":3812,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:5",{"_index":3811,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.enum",{"_index":307,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":4154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role.event",{"_index":3816,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.event.ts",{"_index":3821,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:4",{"_index":3824,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:5",{"_index":3823,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:6",{"_index":3825,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["rolecompanyemployeeenum",{"_index":1209,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":1215,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":2406,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["rolegroupmembershipenum.member",{"_index":2411,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":303,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleprofile",{"_index":1561,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["roleprofileenum",{"_index":1564,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{},"miscellaneous/enumerations.html":{}}}],["roleprofileenum.classic",{"_index":3048,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["roles",{"_index":741,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.dto",{"_index":3889,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.dto.ts",{"_index":2636,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:3",{"_index":2637,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:8",{"_index":2638,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.roles",{"_index":3914,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.some(role",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1379,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":4247,"title":{},"body":{"index.html":{}}}],["rss",{"_index":2462,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":4242,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":2724,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1872,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["same",{"_index":3344,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["samepasswordexception",{"_index":3341,"title":{"classes/SamePasswordException.html":{}},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["save",{"_index":100,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["save(newcard",{"_index":1336,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["save(newoccupationentity",{"_index":1497,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["save(newsocialnetworkentity",{"_index":1611,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["saved",{"_index":155,"title":{},"body":{"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"modules/CardModule.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"entities/ProfileEntity.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{}}}],["savedby",{"_index":1149,"title":{},"body":{"classes/CardResponse.html":{}}}],["savedbyid",{"_index":963,"title":{},"body":{"classes/CardDto.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["savedcard",{"_index":3021,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedprofile",{"_index":1555,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["saveduser",{"_index":1704,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1706,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.mail",{"_index":1708,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.referralcode",{"_index":1711,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1709,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1707,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saving",{"_index":108,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{}}}],["schema",{"_index":4249,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":1380,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":884,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":2627,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":1008,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":2293,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":3360,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sender",{"_index":89,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["sendmail",{"_index":408,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":419,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":409,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":436,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailcommandhandler",{"_index":426,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailevent",{"_index":3350,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{}}}],["sendmaileventhandler",{"_index":428,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{}}}],["sent",{"_index":3364,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":4264,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":4266,"title":{},"body":{"todo.html":{}}}],["service",{"_index":2007,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":1027,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{}}}],["setcurrentrefreshtoken",{"_index":4015,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":4038,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":3366,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":4051,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":3369,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["setcurrentrefreshtokenevent",{"_index":3374,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":3376,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["share",{"_index":1007,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shift",{"_index":3394,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["shifted",{"_index":3400,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileowner",{"_index":3080,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileowner(shiftprofileownerrequest",{"_index":3098,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownercommand",{"_index":3112,"title":{"classes/ShiftProfileOwnerCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownercommandhandler",{"_index":3057,"title":{"classes/ShiftProfileOwnerCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownerevent",{"_index":3389,"title":{"classes/ShiftProfileOwnerEvent.html":{}},"body":{"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownereventhandler",{"_index":3064,"title":{"classes/ShiftProfileOwnerEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownerrequest",{"_index":3099,"title":{"classes/ShiftProfileOwnerRequest.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerRequest.html":{}}}],["shiftprofileownerrequest.profileid",{"_index":3130,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownerrequest.userid",{"_index":3131,"title":{},"body":{"injectables/ProfileService.html":{}}}],["signin",{"_index":753,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":812,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":767,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":3406,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/TransferProfileToUserCommand.html":{}}}],["signoptions",{"_index":886,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":754,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":805,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":770,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":771,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{}}}],["signupdto.mail",{"_index":923,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":924,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":1225,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":3264,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":3265,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":1084,"title":{},"body":{"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"changelog.html":{}}}],["social_network",{"_index":724,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":964,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["socialnetwork",{"_index":1019,"title":{},"body":{"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["socialnetwork.cards",{"_index":1068,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.foreach(socialnetwork",{"_index":1606,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetwork.length",{"_index":1605,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetwork.name",{"_index":1607,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetworkcontroller",{"_index":3419,"title":{"controllers/SocialNetworkController.html":{}},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{}}}],["socialnetworkdto",{"_index":2166,"title":{"classes/SocialNetworkDto.html":{}},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/SocialNetworkDto.html":{},"injectables/SocialNetworkService.html":{}}}],["socialnetworkdto(socialnetwork",{"_index":2172,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["socialnetworkentity",{"_index":626,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["socialnetworkid",{"_index":1295,"title":{},"body":{"classes/CreateCardCommand.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateCardCommand.html":{}}}],["socialnetworkmodule",{"_index":479,"title":{"modules/SocialNetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialNetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["socialnetworkname",{"_index":965,"title":{},"body":{"classes/CardDto.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["socialnetworkrepository",{"_index":659,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["socialnetworkrequest",{"_index":3514,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.color",{"_index":3531,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.icon",{"_index":3530,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.name",{"_index":3528,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.url",{"_index":3529,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkresponse",{"_index":1174,"title":{"classes/SocialNetworkResponse.html":{}},"body":{"classes/CardResponse.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{}}}],["socialnetworkresponse(socialnetworkdto",{"_index":3526,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworks",{"_index":2277,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["socialnetworks.map",{"_index":2278,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["socialnetworks.map(socialnetwork",{"_index":2171,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["socialnetworksdto.map(socialnetworkdto",{"_index":3525,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkservice",{"_index":3443,"title":{"injectables/SocialNetworkService.html":{}},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"overview.html":{}}}],["socketid",{"_index":2593,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["soft",{"_index":3542,"title":{},"body":{"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdelete(socialnetwork.id",{"_index":3568,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletecardcommand",{"_index":3533,"title":{"classes/SoftDeleteCardCommand.html":{}},"body":{"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{}}}],["softdeletecardcommandhandler",{"_index":1115,"title":{"classes/SoftDeleteCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/SoftDeleteCardCommandHandler.html":{}}}],["softdeletecardevent",{"_index":3537,"title":{"classes/SoftDeleteCardEvent.html":{}},"body":{"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{}}}],["softdeletecardeventhandler",{"_index":1140,"title":{"classes/SoftDeleteCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/SoftDeleteCardEventHandler.html":{}}}],["softdeleteoccupation",{"_index":2764,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupation(@param('id",{"_index":2821,"title":{},"body":{"controllers/OccupationController.html":{}}}],["softdeleteoccupation(occupationid",{"_index":2785,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupationcommand",{"_index":2899,"title":{"classes/SoftDeleteOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationcommandhandler",{"_index":2855,"title":{"classes/SoftDeleteOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationevent",{"_index":3547,"title":{"classes/SoftDeleteOccupationEvent.html":{}},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteoccupationeventhandler",{"_index":2856,"title":{"classes/SoftDeleteOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteprofile",{"_index":3081,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofile(id",{"_index":3101,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofilecommand",{"_index":3110,"title":{"classes/SoftDeleteProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofilecommandhandler",{"_index":3067,"title":{"classes/SoftDeleteProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofileevent",{"_index":3555,"title":{"classes/SoftDeleteProfileEvent.html":{}},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteprofileeventhandler",{"_index":3063,"title":{"classes/SoftDeleteProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeletesocialnetworkcommand",{"_index":3563,"title":{"classes/SoftDeleteSocialNetworkCommand.html":{}},"body":{"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkcommandhandler",{"_index":3497,"title":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkevent",{"_index":3566,"title":{"classes/SoftDeleteSocialNetworkEvent.html":{}},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["softdeletesocialnetworkevent(command.id",{"_index":3569,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkeventhandler",{"_index":3494,"title":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["softdeleteusercommand",{"_index":3573,"title":{"classes/SoftDeleteUserCommand.html":{}},"body":{"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["softdeleteusercommand(id",{"_index":4056,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommand(userid",{"_index":4063,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommandhandler",{"_index":3576,"title":{"classes/SoftDeleteUserCommandHandler.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["softdeleteuserevent",{"_index":3578,"title":{"classes/SoftDeleteUserEvent.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteuserevent(command.userid",{"_index":3580,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["softdeleteusereventhandler",{"_index":3582,"title":{"classes/SoftDeleteUserEventHandler.html":{}},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"modules/CardModule.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQuery.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":2472,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":4135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../errorenum.ts",{"_index":4137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":4275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":4216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":4138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":4140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":4142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":4279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":4145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":4150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":4152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":4153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":4155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":4156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":4277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":196,"title":{},"body":{"classes/AddViewCountCardEventHandler.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":748,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:24",{"_index":773,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":769,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:60",{"_index":763,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:69",{"_index":759,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:75",{"_index":766,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:89",{"_index":778,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":860,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":890,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:14",{"_index":898,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":911,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:23",{"_index":910,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":904,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:43",{"_index":901,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:56",{"_index":899,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":906,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":3170,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":3171,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":3172,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":3177,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":3174,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":3175,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":3176,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":3186,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:103",{"_index":3196,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:107",{"_index":3194,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:113",{"_index":3189,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:123",{"_index":3190,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:131",{"_index":3191,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:19",{"_index":3187,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:29",{"_index":3188,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:87",{"_index":3193,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:93",{"_index":3192,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:99",{"_index":3195,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":4177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":3407,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":2639,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["src/api/auth/guards/jwt",{"_index":2606,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":3272,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["src/api/auth/interface/token",{"_index":3639,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["src/api/auth/strategy/jwt",{"_index":2611,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":2630,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":2631,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":2633,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":2641,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/card/card.module.ts",{"_index":1104,"title":{},"body":{"modules/CardModule.html":{}}}],["src/api/card/cqrs/command/add",{"_index":6,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddViewCountCardCommand.html":{}}}],["src/api/card/cqrs/command/create",{"_index":1293,"title":{},"body":{"classes/CreateCardCommand.html":{}}}],["src/api/card/cqrs/command/delete",{"_index":1850,"title":{},"body":{"classes/DeleteCardCommand.html":{}}}],["src/api/card/cqrs/command/remove",{"_index":3210,"title":{},"body":{"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveSavedCardCommand.html":{}}}],["src/api/card/cqrs/command/restore",{"_index":3278,"title":{},"body":{"classes/RestoreCardCommand.html":{}}}],["src/api/card/cqrs/command/soft",{"_index":3534,"title":{},"body":{"classes/SoftDeleteCardCommand.html":{}}}],["src/api/card/cqrs/command/update",{"_index":3653,"title":{},"body":{"classes/UpdateCardCommand.html":{}}}],["src/api/card/cqrs/event/add",{"_index":114,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{}}}],["src/api/card/cqrs/event/create",{"_index":1338,"title":{},"body":{"classes/CreateCardEvent.html":{}}}],["src/api/card/cqrs/event/delete",{"_index":1860,"title":{},"body":{"classes/DeleteCardEvent.html":{}}}],["src/api/card/cqrs/event/remove",{"_index":3227,"title":{},"body":{"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveSavedCardEvent.html":{}}}],["src/api/card/cqrs/event/restore",{"_index":3285,"title":{},"body":{"classes/RestoreCardEvent.html":{}}}],["src/api/card/cqrs/event/soft",{"_index":3541,"title":{},"body":{"classes/SoftDeleteCardEvent.html":{}}}],["src/api/card/cqrs/event/update",{"_index":3677,"title":{},"body":{"classes/UpdateCardEvent.html":{}}}],["src/api/card/cqrs/handler/command/add",{"_index":33,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/create",{"_index":1316,"title":{},"body":{"classes/CreateCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/delete",{"_index":1851,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/remove",{"_index":3211,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/restore",{"_index":3279,"title":{},"body":{"classes/RestoreCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/soft",{"_index":3535,"title":{},"body":{"classes/SoftDeleteCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/command/update",{"_index":3659,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["src/api/card/cqrs/handler/event/add",{"_index":127,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/create",{"_index":1340,"title":{},"body":{"classes/CreateCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/delete",{"_index":1861,"title":{},"body":{"classes/DeleteCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/remove",{"_index":3229,"title":{},"body":{"classes/RemoveConnectedCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/restore",{"_index":3287,"title":{},"body":{"classes/RestoreCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/soft",{"_index":3543,"title":{},"body":{"classes/SoftDeleteCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/event/update",{"_index":3678,"title":{},"body":{"classes/UpdateCardEventHandler.html":{}}}],["src/api/card/cqrs/handler/query/get",{"_index":2098,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["src/api/card/cqrs/handler/query/is",{"_index":2570,"title":{},"body":{"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{}}}],["src/api/card/cqrs/query/get",{"_index":2096,"title":{},"body":{"classes/GetAllCardQuery.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{}}}],["src/api/card/cqrs/query/is",{"_index":2568,"title":{},"body":{"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{}}}],["src/api/card/domain/dto/card.dto.ts",{"_index":948,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:12",{"_index":981,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:13",{"_index":993,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:14",{"_index":982,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:15",{"_index":979,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:16",{"_index":983,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:17",{"_index":974,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:18",{"_index":991,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:19",{"_index":978,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:20",{"_index":998,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:21",{"_index":973,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:22",{"_index":987,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:23",{"_index":988,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:24",{"_index":990,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:25",{"_index":975,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:26",{"_index":992,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:27",{"_index":989,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:28",{"_index":980,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:29",{"_index":984,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:30",{"_index":986,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:31",{"_index":994,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:32",{"_index":996,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:33",{"_index":1003,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:34",{"_index":1001,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:35",{"_index":999,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:36",{"_index":995,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:37",{"_index":976,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:38",{"_index":997,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:39",{"_index":977,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/dto/card.dto.ts:7",{"_index":972,"title":{},"body":{"classes/CardDto.html":{}}}],["src/api/card/domain/entities/card.entity",{"_index":640,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/api/card/domain/entities/card.entity.ts",{"_index":1013,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:101",{"_index":1066,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:107",{"_index":1061,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:113",{"_index":1042,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:119",{"_index":1050,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:125",{"_index":1052,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:130",{"_index":1069,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:137",{"_index":1072,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:140",{"_index":1078,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:143",{"_index":1077,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:146",{"_index":1076,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:149",{"_index":1070,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:156",{"_index":1032,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:159",{"_index":1073,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:162",{"_index":1033,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:40",{"_index":1043,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:44",{"_index":1067,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:47",{"_index":1046,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:51",{"_index":1039,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:55",{"_index":1047,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:59",{"_index":1023,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:62",{"_index":1064,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:66",{"_index":1038,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:70",{"_index":1075,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:73",{"_index":1021,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:76",{"_index":1053,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:79",{"_index":1057,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:86",{"_index":1063,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:92",{"_index":1029,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/card.entity.ts:98",{"_index":1031,"title":{},"body":{"entities/CardEntity.html":{}}}],["src/api/card/domain/entities/connected",{"_index":601,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["src/api/card/domain/enum/transferable",{"_index":4195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/card/domain/enum/type",{"_index":4198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/card/domain/enum/who",{"_index":4206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/card/web/request/add",{"_index":149,"title":{},"body":{"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardRequest.html":{}}}],["src/api/card/web/request/create",{"_index":1344,"title":{},"body":{"classes/CreateCardRequest.html":{}}}],["src/api/card/web/request/get",{"_index":2199,"title":{},"body":{"classes/GetCardWithCriteriaRequest.html":{}}}],["src/api/card/web/request/remove",{"_index":3233,"title":{},"body":{"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveSavedCardRequest.html":{}}}],["src/api/card/web/request/update",{"_index":3681,"title":{},"body":{"classes/UpdateCardRequest.html":{}}}],["src/api/card/web/response/card.response.ts",{"_index":1148,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:11",{"_index":1150,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:16",{"_index":1160,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:17",{"_index":1173,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:18",{"_index":1161,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:19",{"_index":1157,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:20",{"_index":1162,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:21",{"_index":1152,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:22",{"_index":1171,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:23",{"_index":1156,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:24",{"_index":1179,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:25",{"_index":1151,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:26",{"_index":1165,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:27",{"_index":1166,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:28",{"_index":1170,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:29",{"_index":1153,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:30",{"_index":1172,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:31",{"_index":1168,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:32",{"_index":1159,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:33",{"_index":1163,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:34",{"_index":1164,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:35",{"_index":1175,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:36",{"_index":1177,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:37",{"_index":1182,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:38",{"_index":1181,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:39",{"_index":1180,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:40",{"_index":1176,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:41",{"_index":1154,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:42",{"_index":1178,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/card/web/response/card.response.ts:43",{"_index":1155,"title":{},"body":{"classes/CardResponse.html":{}}}],["src/api/entities",{"_index":202,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1767,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["src/api/occupation/cqrs/command/create",{"_index":1464,"title":{},"body":{"classes/CreateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/delete",{"_index":1901,"title":{},"body":{"classes/DeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/restore",{"_index":3290,"title":{},"body":{"classes/RestoreOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/soft",{"_index":3545,"title":{},"body":{"classes/SoftDeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/update",{"_index":3684,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/event/create",{"_index":1504,"title":{},"body":{"classes/CreateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/delete",{"_index":1911,"title":{},"body":{"classes/DeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/restore",{"_index":3295,"title":{},"body":{"classes/RestoreOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/soft",{"_index":3550,"title":{},"body":{"classes/SoftDeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/update",{"_index":3695,"title":{},"body":{"classes/UpdateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/handler/command/create",{"_index":1472,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/delete",{"_index":1905,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/restore",{"_index":3291,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/soft",{"_index":3546,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/update",{"_index":3686,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/create",{"_index":1511,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/delete",{"_index":1914,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/restore",{"_index":3296,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/soft",{"_index":3551,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/update",{"_index":3696,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/query/get",{"_index":2142,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["src/api/occupation/cqrs/query/get",{"_index":2136,"title":{},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaQuery.html":{}}}],["src/api/occupation/domain/dto/create",{"_index":1500,"title":{},"body":{"classes/CreateOccupationDto.html":{}}}],["src/api/occupation/domain/dto/get",{"_index":2211,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts",{"_index":2826,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:1",{"_index":2827,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:10",{"_index":2829,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:6",{"_index":2830,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:7",{"_index":2831,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:8",{"_index":2828,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:9",{"_index":2832,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/update",{"_index":3693,"title":{},"body":{"classes/UpdateOccupationDto.html":{}}}],["src/api/occupation/domain/entities/occupation.entity",{"_index":622,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts",{"_index":2833,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:29",{"_index":2841,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:33",{"_index":2843,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:40",{"_index":2845,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:43",{"_index":2838,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:46",{"_index":2836,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:53",{"_index":2839,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:56",{"_index":2846,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:59",{"_index":2840,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/occupation.controller.ts",{"_index":2757,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:18",{"_index":2773,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:27",{"_index":2776,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:36",{"_index":2780,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:47",{"_index":2768,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:56",{"_index":2791,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:68",{"_index":2771,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:77",{"_index":2788,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:86",{"_index":2784,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.module.ts",{"_index":2852,"title":{},"body":{"modules/OccupationModule.html":{}}}],["src/api/occupation/occupation.service.ts",{"_index":2873,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:108",{"_index":2880,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:122",{"_index":2886,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:136",{"_index":2885,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:25",{"_index":2876,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:28",{"_index":2881,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:40",{"_index":2882,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:53",{"_index":2884,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:74",{"_index":2878,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:90",{"_index":2888,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/web/request/create",{"_index":1515,"title":{},"body":{"classes/CreateOccupationRequest.html":{}}}],["src/api/occupation/web/request/get",{"_index":2231,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{}}}],["src/api/occupation/web/request/update",{"_index":3698,"title":{},"body":{"classes/UpdateOccupationRequest.html":{}}}],["src/api/occupation/web/response/occupation",{"_index":2865,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["src/api/profile/cqrs/command/create",{"_index":1520,"title":{},"body":{"classes/CreateProfileCommand.html":{}}}],["src/api/profile/cqrs/command/delete",{"_index":1917,"title":{},"body":{"classes/DeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/restore",{"_index":3298,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["src/api/profile/cqrs/command/shift",{"_index":3380,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["src/api/profile/cqrs/command/soft",{"_index":3553,"title":{},"body":{"classes/SoftDeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/transfer",{"_index":3642,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["src/api/profile/cqrs/command/update",{"_index":3699,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["src/api/profile/cqrs/event/create",{"_index":1567,"title":{},"body":{"classes/CreateProfileEvent.html":{}}}],["src/api/profile/cqrs/event/delete",{"_index":1924,"title":{},"body":{"classes/DeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/restore",{"_index":3304,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["src/api/profile/cqrs/event/shift",{"_index":3390,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["src/api/profile/cqrs/event/soft",{"_index":3558,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/update",{"_index":3711,"title":{},"body":{"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["src/api/profile/cqrs/handler/command/create",{"_index":1528,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/delete",{"_index":1920,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/restore",{"_index":3300,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/shift",{"_index":3384,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/soft",{"_index":3554,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/update",{"_index":3701,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/event/create",{"_index":1573,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/delete",{"_index":1926,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/restore",{"_index":3308,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/shift",{"_index":3397,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/soft",{"_index":3561,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/update",{"_index":3712,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/query/get",{"_index":2154,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["src/api/profile/cqrs/query/get",{"_index":2151,"title":{},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["src/api/profile/domain/dto/create",{"_index":1559,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["src/api/profile/domain/dto/get",{"_index":2240,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["src/api/profile/domain/dto/id",{"_index":2484,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["src/api/profile/domain/dto/update",{"_index":3710,"title":{},"body":{"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/api/profile/domain/entities/profile.entity",{"_index":625,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts",{"_index":3017,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:100",{"_index":3022,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:106",{"_index":3030,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:112",{"_index":3038,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:118",{"_index":3032,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:125",{"_index":3026,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:128",{"_index":3044,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:131",{"_index":3027,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:31",{"_index":3028,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:34",{"_index":3047,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:40",{"_index":3042,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:47",{"_index":3046,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:53",{"_index":3040,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:68",{"_index":3043,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:82",{"_index":3036,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:88",{"_index":3025,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:94",{"_index":3041,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/enum/role",{"_index":4181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/profile/domain/request/create",{"_index":1578,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["src/api/profile/domain/request/get",{"_index":2256,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["src/api/profile/domain/request/shift",{"_index":3402,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["src/api/profile/domain/request/update",{"_index":3720,"title":{},"body":{"classes/UpdateProfileRequest.html":{}}}],["src/api/profile/domain/response/profile.response.ts",{"_index":3071,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:2",{"_index":3073,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:3",{"_index":3074,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:4",{"_index":3075,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:6",{"_index":3072,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/profile.controller.ts",{"_index":2932,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:108",{"_index":2946,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:117",{"_index":2953,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:126",{"_index":2950,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:135",{"_index":2971,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:40",{"_index":2956,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:49",{"_index":2962,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:59",{"_index":2966,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:68",{"_index":2960,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:78",{"_index":2968,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:89",{"_index":2978,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:98",{"_index":2975,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.module.ts",{"_index":3055,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/api/profile/profile.service.ts",{"_index":3076,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:102",{"_index":3104,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:142",{"_index":3100,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:158",{"_index":3090,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:171",{"_index":3092,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:179",{"_index":3094,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:197",{"_index":3091,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:210",{"_index":3088,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:231",{"_index":3097,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:25",{"_index":3082,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:28",{"_index":3084,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:48",{"_index":3086,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:61",{"_index":3102,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:74",{"_index":3106,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/social",{"_index":627,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1635,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1942,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":3235,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/restore",{"_index":3323,"title":{},"body":{"classes/RestoreUserCommand.html":{}}}],["src/api/user/cqrs/command/set",{"_index":3367,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/soft",{"_index":3574,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/update",{"_index":3734,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserRoleCommand.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1744,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1954,"title":{},"body":{"classes/DeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/login",{"_index":2657,"title":{},"body":{"classes/LoginOfUserEvent.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":3245,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/restore",{"_index":3330,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["src/api/user/cqrs/event/set",{"_index":3375,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/soft",{"_index":3581,"title":{},"body":{"classes/SoftDeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/update",{"_index":3795,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1641,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1945,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":3240,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/restore",{"_index":3325,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":3370,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/soft",{"_index":3577,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":3737,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1751,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1958,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":2659,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":3251,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/restore",{"_index":3332,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":3377,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/soft",{"_index":3583,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":3802,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":2288,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["src/api/user/cqrs/query/get",{"_index":2282,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["src/api/user/domain/dto/create",{"_index":572,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{}}}],["src/api/user/domain/dto/generate",{"_index":2092,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["src/api/user/domain/dto/get",{"_index":2346,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["src/api/user/domain/dto/list",{"_index":2635,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["src/api/user/domain/dto/update",{"_index":3789,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{}}}],["src/api/user/domain/dto/user",{"_index":575,"title":{},"body":{"controllers/AppTestE2eController.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":574,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":3926,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:101",{"_index":3949,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:106",{"_index":3933,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:112",{"_index":3934,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:115",{"_index":3958,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:118",{"_index":3937,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:34",{"_index":3938,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:37",{"_index":3947,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:41",{"_index":3962,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:49",{"_index":3950,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:57",{"_index":3939,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:64",{"_index":3936,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:67",{"_index":3946,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:70",{"_index":3952,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:77",{"_index":3943,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:80",{"_index":3955,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:87",{"_index":3951,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:90",{"_index":3957,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:93",{"_index":3954,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:96",{"_index":3960,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":4201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1756,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["src/api/user/domain/response/user",{"_index":3970,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":4004,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":4006,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":4008,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":4009,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":4007,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":4005,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.module.ts",{"_index":3998,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":4010,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:111",{"_index":4037,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:120",{"_index":4025,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:124",{"_index":4030,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:128",{"_index":4044,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:136",{"_index":4042,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:150",{"_index":4020,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:155",{"_index":4023,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:160",{"_index":4027,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:164",{"_index":4026,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:33",{"_index":4017,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:36",{"_index":4018,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:40",{"_index":4032,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:44",{"_index":4036,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:48",{"_index":4039,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:52",{"_index":4021,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:56",{"_index":4024,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:64",{"_index":4040,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:77",{"_index":4034,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:86",{"_index":4028,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/web/user.controller.ts",{"_index":3831,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:112",{"_index":3857,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:129",{"_index":3867,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:145",{"_index":3877,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:164",{"_index":3885,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:179",{"_index":3879,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:197",{"_index":3882,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:216",{"_index":3870,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:232",{"_index":3849,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:248",{"_index":3861,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:36",{"_index":3845,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:51",{"_index":3865,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:67",{"_index":3874,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:81",{"_index":3851,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:96",{"_index":3854,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app.controller.ts",{"_index":439,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:31",{"_index":448,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":596,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:54",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":535,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":536,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":4217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":2057,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["src/middleware/request",{"_index":3258,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["src/middleware/response",{"_index":3274,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1781,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1783,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":4280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1193,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":2013,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["src/util/exception/errorenum.ts",{"_index":4161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":2038,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["src/util/global/extend",{"_index":3621,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["src/util/pipe/is",{"_index":570,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["ssl",{"_index":1807,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1978,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1964,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":4066,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":4243,"title":{},"body":{"index.html":{}}}],["state",{"_index":212,"title":{},"body":{"entities/AddressEntity.html":{}}}],["static",{"_index":2653,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":467,"title":{},"body":{"controllers/AppController.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CommandErrorException.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/EntityCreationException.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"controllers/ProfileController.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":2054,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":2558,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":2559,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":4147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":3618,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":3619,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":2468,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":2619,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":873,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":875,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":213,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardEvent.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["strip",{"_index":2005,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":726,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":3590,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":3608,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":630,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{}}}],["stripeventrepository",{"_index":660,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":728,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1987,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":4149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":3956,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":633,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscriptionentity.discountcodes",{"_index":1989,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1980,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":2566,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":2546,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":2928,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":661,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1965,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":465,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":311,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":1090,"title":{},"body":{"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/ConnectedCardEntity.html":{},"classes/EntityCreationException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('duplicate",{"_index":1996,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["super('invalid",{"_index":2489,"title":{},"body":{"classes/InvalidIdException.html":{},"classes/InvalidUsernameException.html":{}}}],["super('mail",{"_index":1992,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"classes/MailRequiredException.html":{}}}],["super('new",{"_index":3343,"title":{},"body":{"classes/SamePasswordException.html":{}}}],["super('not",{"_index":2733,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["super('occupation",{"_index":2864,"title":{},"body":{"classes/OccupationNotFoundException.html":{}}}],["super('query",{"_index":3136,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["super('unauthorized",{"_index":3651,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":4003,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":2000,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":2727,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":4202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":4238,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":2562,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":4252,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":4253,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1812,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["tax_rate",{"_index":2548,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":2520,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":2437,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":540,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{}}}],["test/test",{"_index":538,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["testapi",{"_index":4244,"title":{},"body":{"index.html":{}}}],["text",{"_index":1391,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":463,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":2133,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["then((occupationdto",{"_index":2908,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then((occupationsdto",{"_index":2911,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then((socialnetworkdto",{"_index":3527,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["then((socialnetworksdto",{"_index":3524,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["then(async",{"_index":1857,"title":{},"body":{"classes/DeleteCardCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["then(card",{"_index":168,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["then(cardconnected",{"_index":3223,"title":{},"body":{"classes/RemoveConnectedCardCommandHandler.html":{}}}],["then(cards",{"_index":2113,"title":{},"body":{"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["then(newconnectedcard",{"_index":103,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{}}}],["then(occupation",{"_index":2209,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["then(occupationentity",{"_index":1498,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["then(occupations",{"_index":2145,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["then(profile",{"_index":2237,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["then(socialnetwork",{"_index":2267,"title":{},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["then(socialnetworkentity",{"_index":1612,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["then(socialnetworks",{"_index":2170,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["thibaud",{"_index":4221,"title":{},"body":{"index.html":{}}}],["things",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["this.addressrepository.query('delete",{"_index":733,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1428,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1433,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1430,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":318,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":315,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":2036,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":142,"title":{},"body":{"classes/AddConnectedCardEventHandler.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddViewCountCardEventHandler.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":420,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":578,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":581,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.getallusers",{"_index":587,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":469,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getuser(userid",{"_index":589,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.removeuser(useriddto.userid",{"_index":585,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.authenticationservice.login(login",{"_index":2651,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":838,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":816,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":846,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":814,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":849,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":806,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository",{"_index":79,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["this.cardrepository.createquerybuilder('card",{"_index":2189,"title":{},"body":{"classes/GetCardWithCriteriaQueryHandler.html":{}}}],["this.cardrepository.find",{"_index":2103,"title":{},"body":{"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{}}}],["this.cardrepository.query('delete",{"_index":696,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.cardrepository.restore(command.id",{"_index":3284,"title":{},"body":{"classes/RestoreCardCommandHandler.html":{}}}],["this.cardrepository.softdelete(command.id",{"_index":3540,"title":{},"body":{"classes/SoftDeleteCardCommandHandler.html":{}}}],["this.client.emit('create",{"_index":1437,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":3354,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1875,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":381,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":921,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":698,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":697,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository",{"_index":99,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":700,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":702,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":3635,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":2433,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":3638,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":704,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":2473,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":104,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1613,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":1720,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.generatepassword",{"_index":4059,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateuniquereferralcode",{"_index":1702,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.getuserbyreferralcode(code",{"_index":1722,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":708,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":706,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":2453,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":710,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.createuserdto.mail",{"_index":1695,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedemail(command.mail",{"_index":3200,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedemail(command.user.mail",{"_index":3754,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.createuserdto.username",{"_index":1691,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.user.username",{"_index":3752,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":3199,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicateofdeletedmail(command.user.mail",{"_index":3756,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicateofdeletedusername(command.user.username",{"_index":3755,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isvalidemail(command.createuserdto.mail",{"_index":1698,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidemail(command.mail",{"_index":3203,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.createuserdto.password",{"_index":1696,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":3201,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.updateusercredentialdto.newpassword",{"_index":3786,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.isvalidusername(command.createuserdto.username",{"_index":1699,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidusername(command.username",{"_index":3205,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":712,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":929,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":943,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger_console.log('new",{"_index":3185,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":3982,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":714,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":2458,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":2464,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":716,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":729,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository",{"_index":1333,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["this.occupationrepository.createquerybuilder('occupation",{"_index":2223,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["this.occupationrepository.delete(occupation.id).catch",{"_index":1909,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["this.occupationrepository.find",{"_index":1485,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["this.occupationrepository.query('delete",{"_index":718,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.restore(command.occupationid",{"_index":3294,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["this.occupationrepository.softdelete(occupation.id).catch",{"_index":3549,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["this.occupationservice.createoccupation(createoccupationrequest).catch(error",{"_index":2812,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.deleteoccupation(occupationid).catch(error",{"_index":2819,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getalloccupation().catch(error",{"_index":2805,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationbyid(occupationid).catch(error",{"_index":2808,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationwithcriteria(getoccupationswithcriteriarequest).catch(error",{"_index":2809,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.restoreoccupation(occupationid).catch(error",{"_index":2825,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.softdeleteoccupation(occupationid).catch(error",{"_index":2822,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.updateoccupation(occupationid",{"_index":2815,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.password",{"_index":3983,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":720,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository",{"_index":164,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profilerepository.createquerybuilder('profile",{"_index":2247,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["this.profilerepository.find",{"_index":2158,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["this.profilerepository.query('delete",{"_index":722,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.remove(profile",{"_index":1923,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["this.profilerepository.restore(command.profileid",{"_index":3303,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["this.profilerepository.save(newprofile).then(profile",{"_index":1556,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["this.profilerepository.save(profile",{"_index":3388,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["this.profilerepository.softdelete",{"_index":3557,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["this.profilerepository.update(profile.id",{"_index":3706,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profiles",{"_index":3967,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profiles.push(profile",{"_index":3968,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profileservice.createprofile(profile).catch(error",{"_index":3010,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(profileid).catch(error",{"_index":3012,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(requestuser.user.id).catch(error",{"_index":3014,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getmyprofile(id",{"_index":2995,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(id).catch(error",{"_index":3001,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(userid).catch(error",{"_index":2999,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofiles().catch(error",{"_index":2992,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofileswithcriteria(getprofileswithcriteriarequest).catch(error",{"_index":3002,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.restoreprofile(profileid).catch(error",{"_index":3016,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(id",{"_index":3008,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(profileid",{"_index":3005,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.querybus",{"_index":2906,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["this.querybus.execute",{"_index":3132,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.querybus.execute(new",{"_index":382,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":731,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1685,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1727,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.socialnetworkrepository",{"_index":1327,"title":{},"body":{"classes/CreateCardCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["this.socialnetworkrepository.createquerybuilder('socialnetwork",{"_index":2273,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["this.socialnetworkrepository.find",{"_index":1604,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":723,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.socialnetworkservice",{"_index":3452,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.createsocialnetwork(createsocialnetworkrequest).catch(error",{"_index":3456,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.deletesocialnetwork(socialnetworkid).catch(error",{"_index":3458,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.getallsocialnetwork().catch(error",{"_index":3449,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.getsocialnetworkbyid(socialnetworkid).catch(error",{"_index":3451,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.restoresocialnetwork(socialnetworkid).catch(error",{"_index":3460,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.stripeventrepository.query('delete",{"_index":725,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":727,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":2454,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":3637,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":3975,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository",{"_index":1542,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":2366,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1952,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find",{"_index":745,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.find().then(userlist",{"_index":2341,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1723,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":744,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":2291,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":695,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.restore(command.id",{"_index":3328,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["this.userrepository.save",{"_index":734,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1705,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.softdelete",{"_index":743,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":3243,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.userrepository.update(verifyduplicatemailwithdeleted.id",{"_index":3762,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":3894,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteme(requestuser.user.id",{"_index":3922,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":3901,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findme(user.id",{"_index":3908,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":3904,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findwithcriteria(getuserwithcriteriadto",{"_index":3906,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.fulldelete(id",{"_index":3925,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generateuserfrommail(generateuserdto",{"_index":3897,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":2629,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":3919,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":836,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.restoreuser(userid.userid",{"_index":3900,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":817,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(requestuser.user.id",{"_index":3915,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":3910,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(requestuser.user.id",{"_index":3916,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateroles(id",{"_index":3913,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1425,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(command.updateusercredentialdto.password",{"_index":3787,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":2328,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["thresholdpercent",{"_index":2474,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":86,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":235,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":3620,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["timestamps",{"_index":1098,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":2664,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":4263,"title":{"todo.html":{}},"body":{}}],["token",{"_index":777,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command",{"_index":3241,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command.ts",{"_index":3236,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:1",{"_index":3237,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":3238,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":3252,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["token.event.ts",{"_index":3246,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:2",{"_index":3248,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":3247,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":3249,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":794,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":2610,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["token.strategy",{"_index":874,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":2612,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:12",{"_index":2614,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":2616,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":912,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{}}}],["total_amount",{"_index":2551,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":2553,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":2521,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":2522,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":2728,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":2723,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts:3",{"_index":2725,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":966,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":1097,"title":{},"body":{"entities/CardEntity.html":{}}}],["transferprofiletousercommand",{"_index":3641,"title":{"classes/TransferProfileToUserCommand.html":{}},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["transform",{"_index":2584,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":2585,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":3964,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":335,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":357,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":3610,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":3613,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":3591,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":3592,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":227,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":3611,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":2541,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":3148,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":3143,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":1262,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@length(2",{"_index":2842,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["true})@maxlength(255",{"_index":1022,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":75,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1846,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AddConnectedCardCommand.html":{},"classes/AddConnectedCardCommandHandler.html":{},"classes/AddConnectedCardEvent.html":{},"classes/AddConnectedCardEventHandler.html":{},"classes/AddConnectedCardRequest.html":{},"classes/AddSavedCardCommand.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddSavedCardEventHandler.html":{},"classes/AddSavedCardRequest.html":{},"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardEvent.html":{},"classes/CreateCardEventHandler.html":{},"classes/CreateCardRequest.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteCardCommand.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteCardEventHandler.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQuery.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQuery.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSavedCardWithProfileIdQuery.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommand.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveConnectedCardEventHandler.html":{},"classes/RemoveConnectedCardRequest.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RemoveSavedCardCommand.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RemoveSavedCardRequest.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreCardCommand.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreCardEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteCardCommand.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteCardEventHandler.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateCardRequest.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1407,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":2652,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":2655,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":2656,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":2654,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":4273,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":967,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateCardRequest.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":1093,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateCardCommandHandler.html":{}}}],["typeorm",{"_index":64,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveConnectedCardCommandHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":2446,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":431,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":641,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":432,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1784,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1785,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":3262,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":2068,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":2073,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":2071,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":3647,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{}}}],["undefined",{"_index":447,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["undefined})@httpcode(201)@useguards(undefined",{"_index":2955,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@isemail",{"_index":1036,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":1074,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":285,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":2392,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":4178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":2045,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":4262,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1885,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":2129,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":781,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":3414,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:14",{"_index":3417,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":3418,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":3416,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":3487,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(card.id",{"_index":172,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["update(cardtoupdate.id",{"_index":3675,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["update(command.occupationid",{"_index":3692,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["update(socialnetwork.id",{"_index":3726,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["update(userid",{"_index":3875,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatecardcommand",{"_index":3652,"title":{"classes/UpdateCardCommand.html":{}},"body":{"classes/UpdateCardCommand.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["updatecardcommandhandler",{"_index":1127,"title":{"classes/UpdateCardCommandHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/UpdateCardCommandHandler.html":{}}}],["updatecardevent",{"_index":3661,"title":{"classes/UpdateCardEvent.html":{}},"body":{"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateCardEventHandler.html":{}}}],["updatecardeventhandler",{"_index":1142,"title":{"classes/UpdateCardEventHandler.html":{}},"body":{"modules/CardModule.html":{},"classes/UpdateCardEventHandler.html":{}}}],["updatecardrequest",{"_index":3680,"title":{"classes/UpdateCardRequest.html":{}},"body":{"classes/UpdateCardRequest.html":{}}}],["updated",{"_index":3676,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{},"classes/UpdateCardEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updated_at",{"_index":250,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":214,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/GroupMembershipResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":262,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":249,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatedfrom",{"_index":2352,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updatedoccupationentity",{"_index":3689,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["updatedto",{"_index":2353,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updateme",{"_index":3840,"title":{},"body":{"controllers/UserController.html":{}}}],["updateme(requestuser",{"_index":3878,"title":{},"body":{"controllers/UserController.html":{}}}],["updatemyprofile",{"_index":2942,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updatemyprofile(@req",{"_index":3007,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatemyprofile(id",{"_index":3103,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatemyprofile(requestuser",{"_index":2972,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateoccupation",{"_index":2765,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupation(occupationid",{"_index":2789,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupationcommand",{"_index":2897,"title":{"classes/UpdateOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationcommandhandler",{"_index":2857,"title":{"classes/UpdateOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationdto",{"_index":2895,"title":{"classes/UpdateOccupationDto.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{}}}],["updateoccupationevent",{"_index":3694,"title":{"classes/UpdateOccupationEvent.html":{}},"body":{"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationeventhandler",{"_index":2859,"title":{"classes/UpdateOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationrequest",{"_index":2887,"title":{"classes/UpdateOccupationRequest.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationRequest.html":{}}}],["updateoccupationsprofilecommand",{"_index":3111,"title":{"classes/UpdateOccupationsProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofilecommandhandler",{"_index":3060,"title":{"classes/UpdateOccupationsProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofiledto",{"_index":3709,"title":{"classes/UpdateOccupationsProfileDto.html":{}},"body":{"classes/UpdateOccupationsProfileDto.html":{}}}],["updateoccupationsprofileevent",{"_index":3702,"title":{"classes/UpdateOccupationsProfileEvent.html":{}},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updateoccupationsprofileeventhandler",{"_index":3068,"title":{"classes/UpdateOccupationsProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updatepassword",{"_index":3841,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(requestuser",{"_index":3880,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(userid",{"_index":4041,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile",{"_index":2943,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updateprofile(@param('id",{"_index":3004,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":3105,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofile(profileid",{"_index":2976,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofilecommand",{"_index":3109,"title":{"classes/UpdateProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["updateprofilecommandhandler",{"_index":3062,"title":{"classes/UpdateProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["updateprofiledto",{"_index":3126,"title":{"classes/UpdateProfileDto.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{}}}],["updateprofileevent",{"_index":3715,"title":{"classes/UpdateProfileEvent.html":{}},"body":{"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofileeventhandler",{"_index":3061,"title":{"classes/UpdateProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofilerequest",{"_index":2973,"title":{"classes/UpdateProfileRequest.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["updateprofilerequest.id",{"_index":3124,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid",{"_index":3125,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid.length",{"_index":3123,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.roleprofile",{"_index":3128,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.usernameprofile",{"_index":3127,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updaterole",{"_index":3842,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(@param('id",{"_index":3912,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(id",{"_index":3883,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroles",{"_index":4016,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(userid",{"_index":4043,"title":{},"body":{"injectables/UserService.html":{}}}],["updatesocialnetwork",{"_index":3427,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["updatesocialnetwork(socialnetworkid",{"_index":3440,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["updatesocialnetworkcommand",{"_index":3522,"title":{"classes/UpdateSocialNetworkCommand.html":{}},"body":{"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkcommandhandler",{"_index":3495,"title":{"classes/UpdateSocialNetworkCommandHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkevent",{"_index":3724,"title":{"classes/UpdateSocialNetworkEvent.html":{}},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["updatesocialnetworkevent(command.id",{"_index":3727,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkeventhandler",{"_index":3496,"title":{"classes/UpdateSocialNetworkEventHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["updatesocialnetworkrequest",{"_index":3441,"title":{"classes/UpdateSocialNetworkRequest.html":{}},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["updatetimestamp",{"_index":3626,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":3733,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercommand(userid",{"_index":4053,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":3736,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialcommand",{"_index":3767,"title":{"classes/UpdateUserCredentialCommand.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercredentialcommandhandler",{"_index":3773,"title":{"classes/UpdateUserCredentialCommandHandler.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialdto",{"_index":3769,"title":{"classes/UpdateUserCredentialDto.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateusercredentialevent",{"_index":3777,"title":{"classes/UpdateUserCredentialEvent.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateusercredentialevent(command.userid",{"_index":3788,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["updateusercredentialeventhandler",{"_index":3801,"title":{"classes/UpdateUserCredentialEventHandler.html":{}},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateuserdto",{"_index":3735,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserevent",{"_index":3749,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{}}}],["updateuserevent(command.userid",{"_index":3759,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateuserevent(verifyduplicatemailwithdeleted.id",{"_index":3765,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":3807,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["updateuserrolecommand",{"_index":3809,"title":{"classes/UpdateUserRoleCommand.html":{}},"body":{"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"injectables/UserService.html":{}}}],["updateuserrolecommandhandler",{"_index":3813,"title":{"classes/UpdateUserRoleCommandHandler.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateuserroleevent",{"_index":3815,"title":{"classes/UpdateUserRoleEvent.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updateuserroleevent(command",{"_index":3819,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["updateuserroleeventhandler",{"_index":3826,"title":{"classes/UpdateUserRoleEventHandler.html":{}},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["updating",{"_index":174,"title":{},"body":{"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{}}}],["uppercase",{"_index":2508,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":1296,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["urls",{"_index":968,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["usage_limit",{"_index":1983,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1966,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":2059,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":2061,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2466,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":3138,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":3931,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":293,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":833,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":758,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":765,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":810,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":313,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":565,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":547,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":215,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CardModule.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@useguards(undefined",{"_index":3873,"title":{},"body":{"controllers/UserController.html":{}}}],["user.command",{"_index":1642,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":1636,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:1",{"_index":3575,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1943,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1638,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1639,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:5",{"_index":3644,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["user.currenthashedrefreshtoken",{"_index":827,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":573,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1730,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenerateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:10",{"_index":3806,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1739,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1735,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1731,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":2094,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:5",{"_index":2093,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:6",{"_index":3804,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1733,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":1752,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["user.event.ts",{"_index":1745,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:2",{"_index":1956,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1955,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1749,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1747,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1748,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.id",{"_index":818,"title":{},"body":{"controllers/AuthController.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{}}}],["user.interface",{"_index":790,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":3273,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["user.jwttoken",{"_index":829,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.mail",{"_index":1726,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user.password",{"_index":831,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["user.profiles",{"_index":3045,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.profiles.map(profile",{"_index":2254,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["user.query",{"_index":919,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":2332,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:1",{"_index":2333,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":2334,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":3157,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1678,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1757,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:10",{"_index":1761,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:11",{"_index":1765,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1762,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1760,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1764,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:16",{"_index":1763,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:3",{"_index":1758,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":3886,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":3164,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1725,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":877,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":918,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":264,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CardModule.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":306,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["user/domain/response/user",{"_index":798,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/domain/response/user.response",{"_index":801,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":353,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":354,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":2316,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["user?.roles.includes(role",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":4168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":2065,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":2069,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":3830,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userentity",{"_index":252,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CardModule.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{}}}],["userentity.addresses",{"_index":253,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":2752,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":3616,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":3156,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":3163,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userid",{"_index":564,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetAllCardWithUserIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/IsCardOwnerWithUserIdQuery.html":{},"classes/IsProfileOwnerWithUserIsQuery.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"injectables/UserService.html":{}}}],["useriddto",{"_index":555,"title":{"interfaces/UserIdDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{}}}],["userlist",{"_index":3972,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":2342,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse",{"_index":2337,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"classes/UserListResponse.html":{}}}],["userlistresponse.userlist",{"_index":2344,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":2343,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlogindto",{"_index":3976,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{}}}],["userloginresponse",{"_index":797,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{}}}],["usermodule",{"_index":326,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":735,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/InvalidUsernameException.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1673,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["username.exception.ts",{"_index":1998,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.exception.ts:3",{"_index":1999,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.length",{"_index":1728,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["username.query",{"_index":2301,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["username.query.ts",{"_index":2296,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:1",{"_index":2298,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":2299,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":2649,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1562,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["usernotfoundexception",{"_index":3107,"title":{"classes/UserNotFoundException.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":666,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["userresponse",{"_index":800,"title":{"classes/UserResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["userroleenum",{"_index":305,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1710,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["users",{"_index":560,"title":{},"body":{"controllers/AppTestE2eController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1724,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["usersenderid",{"_index":4167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":327,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userusername",{"_index":2327,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["userusername.password",{"_index":2329,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["util/config/database.configuration",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":3180,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1535,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["util/exception/error",{"_index":61,"title":{},"body":{"classes/AddConnectedCardCommandHandler.html":{},"classes/AddSavedCardCommandHandler.html":{},"classes/AddViewCountCardCommandHandler.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateCardCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllCardQueryHandler.html":{},"classes/GetAllCardWithProfileIdQueryHandler.html":{},"classes/GetAllCardWithUserIdQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetCardByIdQueryHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSavedCardWithProfileIdQueryHandler.html":{},"classes/GetSavedCardWithUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/IsCardOwnerWithUserIdQueryHandler.html":{},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteCardCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["v_0.0.4",{"_index":4248,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":4200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":2490,"title":{},"body":{"classes/InvalidMailException.html":{}}}],["validate",{"_index":776,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(cardupdated",{"_index":3673,"title":{},"body":{"classes/UpdateCardCommandHandler.html":{}}}],["validate(command.user",{"_index":3757,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validate(login",{"_index":2646,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newoccupationentity",{"_index":1494,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["validate(newprofile",{"_index":1553,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["validate(newsocialnetworkentity",{"_index":1610,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["validate(newuser",{"_index":1703,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":2632,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":2615,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updatedoccupationentity",{"_index":3691,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["validated",{"_index":4186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":2556,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":755,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":774,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":2493,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":267,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateCardCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":122,"title":{},"body":{"classes/AddConnectedCardEvent.html":{},"classes/AddSavedCardEvent.html":{},"classes/AddViewCountCardEvent.html":{},"classes/CreateCardEvent.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteCardEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetCardWithCriteriaQuery.html":{},"classes/GetCardWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveConnectedCardEvent.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveSavedCardEvent.html":{},"classes/RestoreCardEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteCardEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateCardEvent.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":219,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variables",{"_index":4276,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":2130,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1412,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1418,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1435,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1427,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["verifyduplicatemailwithdeleted",{"_index":3760,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.deletedat",{"_index":3761,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.mail",{"_index":3763,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.username",{"_index":3766,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifypassword",{"_index":2320,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":2321,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["version",{"_index":1432,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["view",{"_index":185,"title":{},"body":{"classes/AddViewCountCardCommand.html":{},"classes/AddViewCountCardCommandHandler.html":{},"classes/AddViewCountCardEvent.html":{},"classes/AddViewCountCardEventHandler.html":{},"modules/CardModule.html":{}}}],["viewed",{"_index":198,"title":{},"body":{"classes/AddViewCountCardEventHandler.html":{}}}],["void",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1879,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":4218,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":4199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":4159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":2425,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":4229,"title":{},"body":{"index.html":{}}}],["warning",{"_index":4172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web/request/create",{"_index":2799,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/request/get",{"_index":2797,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/request/update",{"_index":2894,"title":{},"body":{"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/response/occupation",{"_index":2796,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["web/response/social",{"_index":3446,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/user.controller",{"_index":3999,"title":{},"body":{"modules/UserModule.html":{}}}],["website",{"_index":1226,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":969,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":1096,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":1000,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":1095,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":970,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["whocansendmessagesenums",{"_index":1297,"title":{},"body":{"classes/CreateCardCommand.html":{},"classes/UpdateCardCommand.html":{}}}],["whocansharecardenum",{"_index":1002,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":1094,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":971,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardCommand.html":{},"classes/UpdateCardRequest.html":{}}}],["winston",{"_index":1788,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":4281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":1011,"title":{},"body":{"classes/CardDto.html":{},"entities/CardEntity.html":{},"classes/CardResponse.html":{},"classes/CreateCardCommand.html":{},"classes/CreateCardRequest.html":{},"classes/UpdateCardRequest.html":{}}}],["with.enum.ts",{"_index":4157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdeleted",{"_index":746,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/DeleteCardCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetCardWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreCardCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["world",{"_index":445,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1759,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/InvalidIdException.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z\\\\d@$!%*#?&]{6",{"_index":1689,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z])(?=.*[a",{"_index":3781,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["z])(?=.*\\\\d)(?=.*[@$!%*#?&])[a",{"_index":1688,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":3782,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["za",{"_index":1687,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["zip_code",{"_index":255,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":216,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":328,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/CardModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddConnectedCardCommand.html":{"url":"classes/AddConnectedCardCommand.html","title":"class - AddConnectedCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddConnectedCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/add-connected-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/add-connected-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/add-connected-card.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/add-connected-card.command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddConnectedCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly connectedCardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddConnectedCardCommandHandler.html":{"url":"classes/AddConnectedCardCommandHandler.html","title":"class - AddConnectedCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddConnectedCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/add-connected-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, connectedCardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/add-connected-card.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: AddConnectedCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/add-connected-card.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AddConnectedCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { AddConnectedCardCommand } from '../../command/add-connected-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { ConnectedCardEntity } from '../../../domain/entities/connected-card.entity';\nimport { AddConnectedCardEvent } from '../../event/add-connected-card.event';\n\n@CommandHandler(AddConnectedCardCommand)\nexport class AddConnectedCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: AddConnectedCardCommand): Promise {\n    try {\n      const cardWhoRequest: CardEntity = await this.cardRepository\n        .findOneOrFail({\n          relations: ['connectedCards'],\n          where: [\n            {\n              id: command.cardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card of sender not found');\n        });\n\n      const cardToConnect: CardEntity = await this.cardRepository\n        .findOneOrFail({\n          relations: ['connectedCards'],\n          where: [\n            {\n              id: command.connectedCardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card of receiver not found');\n        });\n\n      cardWhoRequest.connectedCardOne.forEach(card => {\n        if (card.id === cardToConnect.id) {\n          throw new Error('Card already connected');\n        }\n      });\n      cardWhoRequest.connectedCardTwo.forEach(card => {\n        if (card.id === cardToConnect.id) {\n          throw new Error('Card already connected');\n        }\n      });\n      await this.connectedCardRepository\n        .save(\n          new ConnectedCardEntity({\n            cardEntityOne: cardWhoRequest,\n            cardEntityTwo: cardToConnect,\n          }),\n        )\n        .then(newConnectedCard => {\n          this.eventBus.publish(\n            new AddConnectedCardEvent({\n              id: newConnectedCard.id,\n              connectedCardId: newConnectedCard.cardEntityTwo.id,\n            }),\n          );\n        })\n        .catch(() => {\n          throw new Error('Error while saving connected card');\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'AddConnectedCardCommandHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddConnectedCardEvent.html":{"url":"classes/AddConnectedCardEvent.html","title":"class - AddConnectedCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddConnectedCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/add-connected-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/add-connected-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-connected-card.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-connected-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'add-connected-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-connected-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-connected-card.event.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddConnectedCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly connectedCardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'add-connected-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddConnectedCardEventHandler.html":{"url":"classes/AddConnectedCardEventHandler.html","title":"class - AddConnectedCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddConnectedCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/add-connected-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/add-connected-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: AddConnectedCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/add-connected-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AddConnectedCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AddConnectedCardEvent } from '../../event/add-connected-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(AddConnectedCardEvent)\nexport class AddConnectedCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: AddConnectedCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.id + ' connected with card: ' + event.connectedCardId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddConnectedCardRequest.html":{"url":"classes/AddConnectedCardRequest.html","title":"class - AddConnectedCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddConnectedCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/add-connected-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/add-connected-card.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/add-connected-card.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/add-connected-card.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddConnectedCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly connectedCardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSavedCardCommand.html":{"url":"classes/AddSavedCardCommand.html","title":"class - AddSavedCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSavedCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/add-saved-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/add-saved-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/add-saved-card.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/add-saved-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddSavedCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly cardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSavedCardCommandHandler.html":{"url":"classes/AddSavedCardCommandHandler.html","title":"class - AddSavedCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSavedCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/add-saved-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/add-saved-card.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: AddSavedCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/add-saved-card.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AddSavedCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { AddSavedCardCommand } from '../../command/add-saved-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { AddSavedCardEvent } from '../../event/add-saved-card.event';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\n\n@CommandHandler(AddSavedCardCommand)\nexport class AddSavedCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: AddSavedCardCommand): Promise {\n    try {\n      const profileEntity = await this.profileRepository\n        .findOneOrFail({\n          where: [\n            {\n              id: command.profileId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.cardRepository\n        .findOneOrFail({\n          relations: ['profilesWhoSavedCard'],\n          where: [\n            {\n              id: command.cardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        })\n        .then(card => {\n          if (card.profilesWhoSavedCard.find(profile => profile.id === profileEntity.id)) {\n            throw new Error('Card already saved');\n          }\n          this.cardRepository\n            .update(card.id, {\n              profilesWhoSavedCard: [...card.profilesWhoSavedCard, profileEntity],\n            })\n            .then(() => {\n              this.eventBus.publish(\n                new AddSavedCardEvent({\n                  cardId: command.cardId,\n                }),\n              );\n            })\n            .catch(() => {\n              throw new Error('Error while updating in database');\n            });\n        });\n    } catch (e) {\n      await this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'AddSavedCardCommandHandler',\n          localisation: 'card',\n          error: e.message,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSavedCardEvent.html":{"url":"classes/AddSavedCardEvent.html","title":"class - AddSavedCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSavedCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/add-saved-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/add-saved-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-saved-card.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'add-saved-card-handler'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-saved-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-saved-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-saved-card.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddSavedCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly cardId: string;\n  public readonly method: string = 'add-saved-card-handler';\n  public readonly module: string = 'card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSavedCardEventHandler.html":{"url":"classes/AddSavedCardEventHandler.html","title":"class - AddSavedCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSavedCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/add-saved-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/add-saved-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: AddSavedCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/add-saved-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AddSavedCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AddSavedCardEvent } from '../../event/add-saved-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(AddSavedCardEvent)\nexport class AddSavedCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: AddSavedCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' saved for profile: ' + event.profileId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSavedCardRequest.html":{"url":"classes/AddSavedCardRequest.html","title":"class - AddSavedCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSavedCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/add-saved-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/add-saved-card.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/add-saved-card.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/add-saved-card.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddSavedCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddViewCountCardCommand.html":{"url":"classes/AddViewCountCardCommand.html","title":"class - AddViewCountCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddViewCountCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/add-view-count-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/add-view-count-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/add-view-count-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddViewCountCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddViewCountCardCommandHandler.html":{"url":"classes/AddViewCountCardCommandHandler.html","title":"class - AddViewCountCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddViewCountCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/add-view-count-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/add-view-count-card.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: AddViewCountCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/add-view-count-card.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AddViewCountCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { AddViewCountCardCommand } from '../../command/add-view-count-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { AddViewCountCardEvent } from '../../event/add-view-count-card.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(AddViewCountCardCommand)\nexport class AddViewCountCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: AddViewCountCardCommand): Promise {\n    try {\n      await this.cardRepository\n        .findOneOrFail({\n          where: [\n            {\n              id: command.cardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        })\n        .then(card => {\n          this.cardRepository\n            .update(card.id, {\n              numberOfShares: card.numberOfShares++,\n            })\n            .then(() => {\n              this.eventBus.publish(\n                new AddViewCountCardEvent({\n                  cardId: command.cardId,\n                }),\n              );\n            })\n            .catch(() => {\n              throw new Error('Error while updating in database');\n            });\n        });\n    } catch (e) {\n      await this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'AddViewCountCardCommandHandler',\n          localisation: 'card',\n          error: e.message,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddViewCountCardEvent.html":{"url":"classes/AddViewCountCardEvent.html","title":"class - AddViewCountCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddViewCountCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/add-view-count-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/add-view-count-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-view-count-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'add-view-count'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-view-count-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/add-view-count-card.event.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddViewCountCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n\n  public readonly module: string = 'card';\n  public readonly method: string = 'add-view-count';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddViewCountCardEventHandler.html":{"url":"classes/AddViewCountCardEventHandler.html","title":"class - AddViewCountCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddViewCountCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/add-view-count-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/add-view-count-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: AddViewCountCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/add-view-count-card.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AddViewCountCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from 'src/api/api-log/api-log.service';\nimport { AddViewCountCardEvent } from '../../event/add-view-count-card.event';\n\n@EventsHandler(AddViewCountCardEvent)\nexport class AddViewCountCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: AddViewCountCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' has been viewed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_ApiLogModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_ApiMailModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nAppModule -->\n\nSocialNetworkModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            OccupationModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SocialNetworkModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from './api/api-landing-page/api-landing-page.module';\nimport { ProfileModule } from './api/profile/profile.module';\nimport { OccupationModule } from './api/occupation/occupation.module';\nimport { SocialNetworkModule } from './api/social-network/social-network.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    CqrsModule,\n    // ________ Module ________\n    ApiMailModule,\n    ApiLogModule,\n    HealthCheckModule,\n    ApiLandingPageModule,\n\n    // ________ Module Application ________\n    UserModule,\n    AuthModule,\n    ProfileModule,\n    OccupationModule,\n    SocialNetworkModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                            \n                                deleteUserTest\n                            \n                            \n                                getAllUsersTest\n                            \n                            \n                                getUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserTest\n                        \n                    \n                \n            \n            \n                \ndeleteUserTest(userIdDto: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UsePipes(new IsTestEnvironmentPipe())@Delete('/api/test/remove-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdDto\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersTest\n                        \n                    \n                \n            \n            \n                \ngetAllUsersTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-all-users-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTest\n                        \n                    \n                \n            \n            \n                \ngetUserTest(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { UserIdDto } from '../../src/api/user/domain/dto/user-id.dto';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n\n  @HttpCode(204)\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Delete('/api/test/remove-user-test')\n  deleteUserTest(@Body() userIdDto: UserIdDto): Promise {\n    return this.appService.removeUser(userIdDto.userId);\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-all-users-test')\n  getAllUsersTest(): Promise {\n    return this.appService.getAllUsers();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-user-test')\n  getUserTest(@Body() userId: string): Promise {\n    return this.appService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/card/domain/entities/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/social-network/domain/entities/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport { CardEntity } from '../../src/api/card/domain/entities/card.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/social-network/domain/entities/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/card/domain/entities/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      mail: createUserDto.mail,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n\n  async removeUser(userId: string): Promise {\n    await this.userRepository.softDelete({ id: userId });\n  }\n\n  async getUser(userId: string): Promise {\n    return await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return await this.userRepository.find({\n      withDeleted: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    try {\n      return await this.authService.signup(signUpDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        400,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    try {\n      return await this.authService.getUserFromAuthToken(data);\n    } catch (e) {\n      throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginQueryHandler } from '../user/cqrs/handler/query/get-user-login.query-handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginQueryHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto): Promise {\n    return new UserResponse({\n      ...(await this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.mail, signUpDto.password))),\n    });\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new Error('Invalid token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardDto.html":{"url":"classes/CardDto.html","title":"class - CardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/domain/dto/card.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                    Optional\n                                connectedCardsId\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                emails\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                groupMembershipsId\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                mediaUrl\n                            \n                            \n                                    Optional\n                                messagesCount\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupationsId\n                            \n                            \n                                owner\n                            \n                            \n                                    Optional\n                                phones\n                            \n                            \n                                    Optional\n                                savedById\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                    Optional\n                                socialNetworkName\n                            \n                            \n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                    Optional\n                                typeOfCardEnum\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                    Optional\n                                whoCanCommunicateWithEnum\n                            \n                            \n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/domain/dto/card.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        connectedCardsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupMembershipsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mediaUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messagesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialNetworkName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanCommunicateWithEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/dto/card.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../enum/type-of-card.enum';\nimport { WhoCanShareCardEnum } from '../enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from '../enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../enum/who-can-communicate-with.enum';\nimport { TransferableStatusCardEnum } from '../enum/transferable-status-card.enum';\n\nexport class CardDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  id: string;\n  socialName?: string;\n  isOwnerPro: boolean;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n  phones?: string[];\n  emails?: string[];\n  urls?: string[];\n  birthday?: Date;\n  notes?: string;\n  numberOfShares: number;\n  owner: string;\n  connectedCardsId?: string[];\n  savedById?: string[];\n  occupationsId?: string[];\n  groupMembershipsId?: string[];\n  mediaUrl?: string;\n  messagesCount?: number;\n  socialNetworkName?: string;\n  typeOfCardEnum?: TypeOfCardEnum;\n  whoCanShareCardEnums?: WhoCanShareCardEnum[];\n  whoCanSeeCardInformationEnums?: WhoCanSeeCardInformationEnum[];\n  whoCanCommunicateWithEnum?: WhoCanCommunicateWithEnum[];\n  transferableStatusCardEnum?: TransferableStatusCardEnum[];\n  createdAt?: Date;\n  updatedAt?: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/domain/entities/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanCommunicateWithEnum\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:156\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanCommunicateWithEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/card.entity.ts:140\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { WhoCanSeeCardInformationEnum } from '../enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../enum/who-can-communicate-with.enum';\nimport { TypeOfCardEnum } from '../enum/type-of-card.enum';\nimport { SocialNetworkEntity } from '../../../social-network/domain/entities/social-network.entity';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { MediaEntity } from '../../../entities-to-create/media.entity';\nimport { GroupMembershipEntity } from '../../../entities-to-create/group-membership.entity';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { TransferableStatusCardEnum } from '../enum/transferable-status-card.enum';\nimport { MessageEntity } from '../../../entities-to-create/message.entity';\nimport { WhoCanShareCardEnum } from '../enum/who-can-share-card.enum';\nimport { OccupationEntity } from '../../../occupation/domain/entities/occupation.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity extends BaseEntity {\n  constructor(partial: Partial) {\n    super();\n    Object.assign(this, partial);\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity;\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanCommunicateWithEnum: WhoCanCommunicateWithEnum[];\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_CardModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nApiLogModule->CardModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nCardModule -->\n\nApiLogService->CardModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/card/card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CardController } from './card.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { SocialNetworkEntity } from '../social-network/domain/entities/social-network.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CardEntity } from './domain/entities/card.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { CardService } from './card.service';\nimport { AddConnectedCardCommandHandler } from './cqrs/handler/command/add-connected-card.command-handler';\nimport { AddSavedCardCommandHandler } from './cqrs/handler/command/add-saved-card.command-handler';\nimport { CreateCardCommandHandler } from './cqrs/handler/command/create-card.command-handler';\nimport { DeleteCardCommandHandler } from './cqrs/handler/command/delete-card.command-handler';\nimport { RemoveConnectedCardCommandHandler } from './cqrs/handler/command/remove-connected-card.command-handler';\nimport { RestoreCardCommandHandler } from './cqrs/handler/command/restore-card.command-handler';\nimport { SoftDeleteCardCommandHandler } from './cqrs/handler/command/soft-delete-card.command-handler';\nimport { GetAllCardWithProfileIdQueryHandler } from './cqrs/handler/query/get-all-card-with-profile-id.query-handler';\nimport { GetAllCardWithUserIdQueryHandler } from './cqrs/handler/query/get-all-card-with-user-id.query-handler';\nimport { GetCardWithCriteriaQueryHandler } from './cqrs/handler/query/get-card-with-criteria.query-handler';\nimport { GetSavedCardWithProfileIdQueryHandler } from './cqrs/handler/query/get-saved-card-with-profile-id.query-handler';\nimport { GetSavedCardWithUserIdQueryHandler } from './cqrs/handler/query/get-saved-card-with-user-id.query-handler';\nimport { IsCardOwnerWithUserIdQueryHandler } from './cqrs/handler/query/is-card-owner-with-user-id.query-handler';\nimport { IsProfileOwnerWithUserIsQueryHandler } from './cqrs/handler/query/is-profile-owner-with-user-id.query-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { UpdateCardCommandHandler } from './cqrs/handler/command/update-card.command-handler';\nimport { GetAllCardQueryHandler } from './cqrs/handler/query/get-all-card.query-handler';\nimport { GetCardByIdQueryHandler } from './cqrs/handler/query/get-card-by-id.query-handler';\nimport { AddConnectedCardEventHandler } from './cqrs/handler/event/add-connected-card.event-handler';\nimport { AddSavedCardEventHandler } from './cqrs/handler/event/add-saved-card.event-handler';\nimport { AddViewCountCardCommandHandler } from './cqrs/handler/command/add-view-count-card.command-handler';\nimport { AddViewCountCardEventHandler } from './cqrs/handler/event/add-view-count-card.event-handler';\nimport { CreateCardEventHandler } from './cqrs/handler/event/create-card.event-handler';\nimport { DeleteCardEventHandler } from './cqrs/handler/event/delete-card.event-handler';\nimport { RemoveConnectedCardEventHandler } from './cqrs/handler/event/remove-connected-card.event-handler';\nimport { RestoreCardEventHandler } from './cqrs/handler/event/restore-card.event-handler';\nimport { SoftDeleteCardEventHandler } from './cqrs/handler/event/soft-delete-card.event-handler';\nimport { UpdateCardEventHandler } from './cqrs/handler/event/update-card.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, SocialNetworkEntity, CardEntity, ProfileEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [CardController],\n  providers: [\n    CardService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    AddConnectedCardCommandHandler,\n    AddSavedCardCommandHandler,\n    AddViewCountCardCommandHandler,\n    CreateCardCommandHandler,\n    DeleteCardCommandHandler,\n    RemoveConnectedCardCommandHandler,\n    RestoreCardCommandHandler,\n    SoftDeleteCardCommandHandler,\n    UpdateCardCommandHandler,\n    // Query handlers\n    GetAllCardQueryHandler,\n    GetAllCardWithProfileIdQueryHandler,\n    GetAllCardWithUserIdQueryHandler,\n    GetCardByIdQueryHandler,\n    GetCardWithCriteriaQueryHandler,\n    GetSavedCardWithProfileIdQueryHandler,\n    GetSavedCardWithUserIdQueryHandler,\n    IsCardOwnerWithUserIdQueryHandler,\n    IsProfileOwnerWithUserIsQueryHandler,\n    // event handlers\n    AddConnectedCardEventHandler,\n    AddSavedCardEventHandler,\n    AddViewCountCardEventHandler,\n    CreateCardEventHandler,\n    DeleteCardEventHandler,\n    RemoveConnectedCardEventHandler,\n    RestoreCardEventHandler,\n    SoftDeleteCardEventHandler,\n    UpdateCardEventHandler,\n  ],\n})\nexport class CardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardResponse.html":{"url":"classes/CardResponse.html","title":"class - CardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/response/card.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                    Optional\n                                connectedCards\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                emails\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                mediaUrl\n                            \n                            \n                                    Optional\n                                messagesCount\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                    Optional\n                                phones\n                            \n                            \n                                    Optional\n                                savedBy\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                    Optional\n                                socialNetwork\n                            \n                            \n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                    Optional\n                                whoCanCommunicateWithEnum\n                            \n                            \n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/response/card.response.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        connectedCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mediaUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messagesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanCommunicateWithEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/response/card.response.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProfileResponse } from '../../../profile/domain/response/profile.response';\nimport { OccupationResponse } from '../../../occupation/web/response/occupation-response';\nimport { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\nimport { WhoCanShareCardEnum } from '../../domain/enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from '../../domain/enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../../domain/enum/who-can-communicate-with.enum';\nimport { TransferableStatusCardEnum } from '../../domain/enum/transferable-status-card.enum';\nimport { SocialNetworkResponse } from '../../../social-network/web/response/social-network.response';\nimport { GroupMembershipResponse } from '../../../entities-to-create/response/group-membership.response';\n\nexport class CardResponse {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  id: string;\n  socialName?: string;\n  isOwnerPro: boolean;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n  phones?: string[];\n  emails?: string[];\n  urls?: string[];\n  birthday?: Date;\n  notes?: string;\n  numberOfShares: number;\n  owner: ProfileResponse;\n  connectedCards?: CardResponse[];\n  savedBy?: ProfileResponse[];\n  occupations?: OccupationResponse[];\n  groupMemberships?: GroupMembershipResponse[];\n  mediaUrl?: string;\n  messagesCount?: number;\n  socialNetwork?: SocialNetworkResponse;\n  typeOfCardEnum: TypeOfCardEnum;\n  whoCanShareCardEnums?: WhoCanShareCardEnum[];\n  whoCanSeeCardInformationEnums?: WhoCanSeeCardInformationEnum[];\n  whoCanCommunicateWithEnum?: WhoCanCommunicateWithEnum[];\n  transferableStatusCardEnum?: TransferableStatusCardEnum[];\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandErrorException.html":{"url":"classes/CommandErrorException.html","title":"class - CommandErrorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandErrorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/command-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/command-error.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class CommandErrorException extends HttpException {\n  constructor() {\n    super(\n      {\n        status: 500,\n        message: 'Command execution failed',\n      },\n      500,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/domain/entities/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/card/domain/entities/connected-card.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from '../../../entities-to-create/conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from '../card/domain/entities/connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardCommand.html":{"url":"classes/CreateCardCommand.html","title":"class - CreateCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/create-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                address\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                birthday\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                companyName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                jobTitle\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                phone\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                socialName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                socialNetworkId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                    Public\n                                    Readonly\n                                typeOfCardEnum\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                url\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanSendMessagesEnums\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        jobTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        socialNetworkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/create-card.command.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\nimport { WhoCanShareCardEnum } from '../../domain/enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from '../../domain/enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../../domain/enum/who-can-communicate-with.enum';\nimport { TransferableStatusCardEnum } from '../../domain/enum/transferable-status-card.enum';\n\nexport class CreateCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly typeOfCardEnum: TypeOfCardEnum;\n  public readonly socialName?: string;\n  public readonly firstName?: string;\n  public readonly lastName?: string;\n  public readonly email?: string;\n  public readonly phone?: string[];\n  public readonly companyName?: string;\n  public readonly jobTitle?: string;\n  public readonly address?: string;\n  public readonly url?: string[];\n  public readonly birthday?: Date;\n  public readonly occupationsId?: string[];\n  public readonly socialNetworkId?: string;\n  public readonly whoCanShareCardEnums?: WhoCanShareCardEnum[];\n  public readonly whoCanSeeCardInformationEnums?: WhoCanSeeCardInformationEnum[];\n  public readonly whoCanSendMessagesEnums?: WhoCanCommunicateWithEnum[];\n  public readonly transferableStatusCardEnum?: TransferableStatusCardEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardCommandHandler.html":{"url":"classes/CreateCardCommandHandler.html","title":"class - CreateCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/create-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, profileRepository: Repository, occupationRepository: Repository, socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/create-card.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/create-card.command-handler.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateCardCommand } from '../../command/create-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\nimport { SocialNetworkEntity } from '../../../../social-network/domain/entities/social-network.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { TypeOfCardEnum } from '../../../domain/enum/type-of-card.enum';\nimport { CreateCardEvent } from '../../event/create-card.event';\n\n@CommandHandler(CreateCardCommand)\nexport class CreateCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateCardCommand): Promise {\n    try {\n      const newCard = new CardEntity({\n        ...command,\n      });\n      newCard.owner = await this.profileRepository\n        .findOneOrFail({\n          where: [\n            {\n              id: command.profileId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      if (command.typeOfCardEnum === TypeOfCardEnum.SOCIAL_NETWORK) {\n        newCard.socialNetwork = await this.socialNetworkRepository\n          .findOneOrFail({\n            where: [\n              {\n                id: command.socialNetworkId,\n              },\n            ],\n          })\n          .catch(() => {\n            throw new Error('Social Network not found');\n          });\n      }\n\n      if (command.occupationsId != undefined) {\n        for (const occupationId of command.occupationsId) {\n          const occupation = await this.occupationRepository\n            .findOneOrFail({\n              where: [\n                {\n                  id: occupationId,\n                },\n              ],\n            })\n            .catch(() => {\n              throw new Error('Occupation not found');\n            });\n          newCard.occupations.push(occupation);\n        }\n      }\n\n      await this.cardRepository\n        .save(newCard)\n        .then(() => {\n          this.eventBus.publish(\n            new CreateCardEvent({\n              cardId: newCard.id,\n            }),\n          );\n        })\n        .catch(() => {\n          throw new Error('Error saving card');\n        });\n    } catch (error) {\n      await this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateCardCommandHandler',\n          localisation: 'card',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardEvent.html":{"url":"classes/CreateCardEvent.html","title":"class - CreateCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/create-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/create-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/create-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/create-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/create-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/create-card.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly profileId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'create-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardEventHandler.html":{"url":"classes/CreateCardEventHandler.html","title":"class - CreateCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/create-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/create-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/create-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateCardEvent } from '../../event/create-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateCardEvent)\nexport class CreateCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' created for profile: ' + event.profileId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCardRequest.html":{"url":"classes/CreateCardRequest.html","title":"class - CreateCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/create-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                    Optional\n                                connectedCardsId\n                            \n                            \n                                    Optional\n                                emails\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                groupMembershipsId\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                mediaUrl\n                            \n                            \n                                    Optional\n                                messagesCount\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupationsId\n                            \n                            \n                                owner\n                            \n                            \n                                    Optional\n                                phones\n                            \n                            \n                                    Optional\n                                savedById\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                    Optional\n                                socialNetworkName\n                            \n                            \n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                    Optional\n                                typeOfCardEnum\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                    Optional\n                                whoCanCommunicateWithEnum\n                            \n                            \n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/create-card.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        connectedCardsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupMembershipsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mediaUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messagesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialNetworkName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanCommunicateWithEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/create-card.request.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\nimport { WhoCanShareCardEnum } from '../../domain/enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from '../../domain/enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../../domain/enum/who-can-communicate-with.enum';\nimport { TransferableStatusCardEnum } from '../../domain/enum/transferable-status-card.enum';\n\nexport class CreateCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  socialName?: string;\n  isOwnerPro: boolean;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n  phones?: string[];\n  emails?: string[];\n  urls?: string[];\n  birthday?: Date;\n  notes?: string;\n  numberOfShares: number;\n  owner: string;\n  connectedCardsId?: string[];\n  savedById?: string[];\n  occupationsId?: string[];\n  groupMembershipsId?: string[];\n  mediaUrl?: string;\n  messagesCount?: number;\n  socialNetworkName?: string;\n  typeOfCardEnum?: TypeOfCardEnum;\n  whoCanShareCardEnums?: WhoCanShareCardEnum[];\n  whoCanSeeCardInformationEnums?: WhoCanSeeCardInformationEnum[];\n  whoCanCommunicateWithEnum?: WhoCanCommunicateWithEnum[];\n  transferableStatusCardEnum?: TransferableStatusCardEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommand.html":{"url":"classes/CreateOccupationCommand.html","title":"class - CreateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/create-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateOccupationDto } from '../../domain/dto/create-occupation.dto';\n\nexport class CreateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly createOccupationDto: CreateOccupationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommandHandler.html":{"url":"classes/CreateOccupationCommandHandler.html","title":"class - CreateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateOccupationCommand } from '../../command/create-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\n\n@CommandHandler(CreateOccupationCommand)\nexport class CreateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.createOccupationDto.name) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n      const newOccupationEntity: OccupationEntity = new OccupationEntity({\n        ...command.createOccupationDto,\n      });\n      const err = await validate(newOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      return this.occupationRepository\n        .save(newOccupationEntity)\n        .then(occupationEntity => {\n          this.eventBus.publish(\n            new CreateOccupationEvent({\n              occupationId: occupationEntity.id,\n            }),\n          );\n          return new OccupationDto({\n            ...occupationEntity,\n          });\n        })\n        .catch(() => {\n          throw new Error('Occupation not created');\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationDto.html":{"url":"classes/CreateOccupationDto.html","title":"class - CreateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/create-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEvent.html":{"url":"classes/CreateOccupationEvent.html","title":"class - CreateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/create-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'create-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEventHandler.html":{"url":"classes/CreateOccupationEventHandler.html","title":"class - CreateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateOccupationEvent)\nexport class CreateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been created',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationRequest.html":{"url":"classes/CreateOccupationRequest.html","title":"class - CreateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/create-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommand.html":{"url":"classes/CreateProfileCommand.html","title":"class - CreateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/create-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createProfileDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateProfileDto } from '../../domain/dto/create-profile.dto';\n\nexport class CreateProfileCommand {\n  public readonly userId: string;\n  public readonly occupationsId: string[];\n  public readonly createProfileDto: CreateProfileDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommandHandler.html":{"url":"classes/CreateProfileCommandHandler.html","title":"class - CreateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/create-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { CreateProfileCommand } from '../../command/create-profile.command';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(CreateProfileCommand)\nexport class CreateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateProfileCommand): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      const newProfile = new ProfileEntity({\n        user: user,\n        ...command.createProfileDto,\n      });\n\n      if (command.occupationsId.length > 0) {\n        const occupationPromises: Promise[] = command.occupationsId.map(async occupationId => {\n          return await this.occupationRepository\n            .findOneOrFail({\n              where: [{ id: occupationId }],\n            })\n            .catch(() => {\n              throw new Error('Occupation not found');\n            });\n        });\n        const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n        if (occupations.length > 0) {\n          newProfile.occupations = occupations;\n        }\n      }\n\n      const err = await validate(newProfile);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedProfile = await this.profileRepository.save(newProfile).then(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n      this.eventBus.publish(\n        new CreateProfileEvent({\n          profileResponse: new ProfileResponse(savedProfile),\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileDto {\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEvent.html":{"url":"classes/CreateProfileEvent.html","title":"class - CreateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/create-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProfileResponse } from '../../domain/response/profile.response';\n\nexport class CreateProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'create-profile';\n  public readonly profileResponse: ProfileResponse;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEventHandler.html":{"url":"classes/CreateProfileEventHandler.html","title":"class - CreateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/create-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateProfileEvent)\nexport class CreateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' + event.profileResponse.id + ' created for user with id: ' + event.profileResponse.userId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileRequest.html":{"url":"classes/CreateProfileRequest.html","title":"class - CreateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/create-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                idUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileRequest {\n  public readonly usernameProfile: string;\n  public readonly idUser: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkCommand.html":{"url":"classes/CreateSocialNetworkCommand.html","title":"class - CreateSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/create-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkCommandHandler.html":{"url":"classes/CreateSocialNetworkCommandHandler.html","title":"class - CreateSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateSocialNetworkCommand } from '../../command/create-social-network.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { CreateSocialNetworkEvent } from '../../event/create-social-network.event';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { validate } from 'class-validator';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(CreateSocialNetworkCommand)\nexport class CreateSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateSocialNetworkCommand): Promise {\n    try {\n      const socialNetwork = await this.socialNetworkRepository.find();\n      if (socialNetwork.length > 0) {\n        socialNetwork.forEach(socialNetwork => {\n          if (socialNetwork.name === command.name) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n\n      const newSocialNetworkEntity: SocialNetworkEntity = new SocialNetworkEntity({\n        ...command,\n      });\n\n      const err = await validate(newSocialNetworkEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      this.socialNetworkRepository\n        .save(newSocialNetworkEntity)\n        .then(socialNetworkEntity => {\n          this.eventBus.publish(new CreateSocialNetworkEvent(socialNetworkEntity.id));\n        })\n        .catch(() => {\n          throw new Error('SocialNetwork not created');\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateSocialNetworkCommandHandler',\n          localisation: 'SocialNetwork',\n          error: e.message,\n        }),\n      );\n      throw new Error('SocialNetwork not created');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkEvent.html":{"url":"classes/CreateSocialNetworkEvent.html","title":"class - CreateSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/create-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'create-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkEventHandler.html":{"url":"classes/CreateSocialNetworkEventHandler.html","title":"class - CreateSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { CreateSocialNetworkEvent } from '../../event/create-social-network.event';\n\n@EventsHandler(CreateSocialNetworkEvent)\nexport class CreateSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been created',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkRequest.html":{"url":"classes/CreateSocialNetworkRequest.html","title":"class - CreateSocialNetworkRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/create-social-network.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventBus\n                            \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n    public readonly eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      if (command.createUserDto.username) {\n        if (await this.isDuplicatedUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.createUserDto.mail) {\n        if (await this.isDuplicatedEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n\n      if (!this.isValidPassword(command.createUserDto.password)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n        );\n        throw new InvalidPasswordException();\n      }\n\n      if (command.createUserDto.mail) {\n        if (!this.isValidEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n          );\n          throw new InvalidMailException();\n        }\n      }\n\n      if (command.createUserDto.username) {\n        if (!this.isValidUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n          );\n          throw new InvalidUsernameException();\n        }\n      }\n\n      const newUser: UserEntity = new UserEntity({\n        ...command.createUserDto,\n        referralCode: await this.generateUniqueReferralCode(),\n      });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        mail: savedUser.mail,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n        referralCode: savedUser.referralCode,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'CreateUser', error: error }));\n      throw error;\n    }\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  mail?: string;\n\n  @ApiProperty()\n  @Length(5, 20)\n  username?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'create-user';\n  constructor(public readonly userId: string, public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                referralCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly mail: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n\n  public readonly referralCode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/card/domain/entities/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../api/social-network/domain/entities/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\nimport { CardEntity } from '../../api/card/domain/entities/card.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCardCommand.html":{"url":"classes/DeleteCardCommand.html","title":"class - DeleteCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/delete-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/delete-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/delete-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCardCommandHandler.html":{"url":"classes/DeleteCardCommandHandler.html","title":"class - DeleteCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/delete-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/delete-card.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/delete-card.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteCardCommand } from '../../command/delete-card.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteCardEvent } from '../../event/delete-card.event';\n\n@CommandHandler(DeleteCardCommand)\nexport class DeleteCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteCardCommand): Promise {\n    try {\n      if (!command.id) {\n        throw new Error('Card id not provided');\n      }\n\n      await this.cardRepository\n        .findOneOrFail({\n          withDeleted: true,\n          where: [\n            {\n              id: command.id,\n            },\n          ],\n        })\n        .then(async card => {\n          this.cardRepository\n            .delete(card.id)\n            .then(() => {\n              this.eventBus.publish(\n                new DeleteCardEvent({\n                  cardId: command.id,\n                }),\n              );\n            })\n            .catch(() => {\n              throw new Error('Error while deleting in database');\n            });\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n    } catch (e) {\n      await this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'DeleteCardCommandHandler',\n          localisation: 'card',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCardEvent.html":{"url":"classes/DeleteCardEvent.html","title":"class - DeleteCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/delete-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/delete-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/delete-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/delete-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/delete-card.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'delete-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCardEventHandler.html":{"url":"classes/DeleteCardEventHandler.html","title":"class - DeleteCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/delete-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/delete-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/delete-card.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteCardEvent } from '../../event/delete-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteCardEvent)\nexport class DeleteCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, HttpStatus, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status !== undefined) {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', HttpStatus.SERVICE_UNAVAILABLE);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommand.html":{"url":"classes/DeleteOccupationCommand.html","title":"class - DeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommandHandler.html":{"url":"classes/DeleteOccupationCommandHandler.html","title":"class - DeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { DeleteOccupationCommand } from '../../command/delete-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteOccupationCommand)\nexport class DeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          withDeleted: true,\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.delete(occupation.id).catch(() => {\n        throw new Error('Occupation not deleted');\n      });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'DeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEvent.html":{"url":"classes/DeleteOccupationEvent.html","title":"class - DeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEventHandler.html":{"url":"classes/DeleteOccupationEventHandler.html","title":"class - DeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteOccupationEvent } from '../../event/delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteOccupationEvent)\nexport class DeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.occupationId + ' have been deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommand.html":{"url":"classes/DeleteProfileCommand.html","title":"class - DeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommandHandler.html":{"url":"classes/DeleteProfileCommandHandler.html","title":"class - DeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteProfileCommand } from '../../command/delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(DeleteProfileCommand)\nexport class DeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.remove(profile);\n      this.eventBus.publish(\n        new DeleteProfileEvent({\n          deleteProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEvent.html":{"url":"classes/DeleteProfileEvent.html","title":"class - DeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteProfileCommand\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteProfileCommand } from '../command/delete-profile.command';\n\nexport class DeleteProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'delete-profile';\n  public readonly deleteProfileCommand: DeleteProfileCommand;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEventHandler.html":{"url":"classes/DeleteProfileEventHandler.html","title":"class - DeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\n\n@EventsHandler(DeleteProfileEvent)\nexport class DeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.deleteProfileCommand.id + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkCommand.html":{"url":"classes/DeleteSocialNetworkCommand.html","title":"class - DeleteSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/delete-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/delete-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/delete-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkCommandHandler.html":{"url":"classes/DeleteSocialNetworkCommandHandler.html","title":"class - DeleteSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteSocialNetworkCommand } from '../../command/delete-social-network.command';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteSocialNetworkEvent } from '../../event/delete-social-network.event';\n\n@CommandHandler(DeleteSocialNetworkCommand)\nexport class DeleteSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        withDeleted: true,\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .delete(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new DeleteSocialNetworkEvent(socialNetwork.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not deleted');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkEvent.html":{"url":"classes/DeleteSocialNetworkEvent.html","title":"class - DeleteSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/delete-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'delete-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkEventHandler.html":{"url":"classes/DeleteSocialNetworkEventHandler.html","title":"class - DeleteSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteSocialNetworkEvent } from '../../event/delete-social-network.event';\n\n@EventsHandler(DeleteSocialNetworkEvent)\nexport class DeleteSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { InvalidIdException } from '../../../../../util/exception/custom-http-exception/invalid-id.exception';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw new InvalidIdException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'delete-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateMailException.html":{"url":"classes/DuplicateMailException.html","title":"class - DuplicateMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateMailException extends HttpException {\n  constructor() {\n    super('Mail already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateNameException.html":{"url":"classes/DuplicateNameException.html","title":"class - DuplicateNameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateNameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-name.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-name.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class DuplicateNameException extends HttpException {\n  constructor() {\n    super('Duplicate name', 409);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from '../card/domain/entities/connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../social-network/domain/entities/social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityCreationException.html":{"url":"classes/EntityCreationException.html","title":"class - EntityCreationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityCreationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/entity-creation.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/entity-creation.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class EntityCreationException extends HttpException {\n  constructor() {\n    super(\n      {\n        status: 500,\n        message: 'Entity creation failed',\n      },\n      500,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateUserDto.html":{"url":"classes/GenerateUserDto.html","title":"class - GenerateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/generate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class GenerateUserDto {\n  public readonly mail: string;\n  public readonly roles: UserRoleEnum[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardQuery.html":{"url":"classes/GetAllCardQuery.html","title":"class - GetAllCardQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-all-card.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllCardQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardQueryHandler.html":{"url":"classes/GetAllCardQueryHandler.html","title":"class - GetAllCardQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-all-card.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-all-card.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-all-card.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Repository } from 'typeorm';\nimport { GetAllCardQuery } from '../../query/get-all-card.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllCardQuery)\nexport class GetAllCardQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    try {\n      return await this.cardRepository.find({\n        relations: ['occupation', 'owner', 'socialNetwork'],\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetAllCardQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardWithProfileIdQuery.html":{"url":"classes/GetAllCardWithProfileIdQuery.html","title":"class - GetAllCardWithProfileIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardWithProfileIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-all-card-with-profile-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-all-card-with-profile-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-all-card-with-profile-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllCardWithProfileIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardWithProfileIdQueryHandler.html":{"url":"classes/GetAllCardWithProfileIdQueryHandler.html","title":"class - GetAllCardWithProfileIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardWithProfileIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-all-card-with-profile-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-all-card-with-profile-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllCardWithProfileIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-all-card-with-profile-id.query-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllCardWithProfileIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { GetAllCardWithProfileIdQuery } from '../../query/get-all-card-with-profile-id.query';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllCardWithProfileIdQuery)\nexport class GetAllCardWithProfileIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetAllCardWithProfileIdQuery): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: {\n            id: query.profileId,\n          },\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      return await this.cardRepository\n        .find({\n          relations: ['occupation', 'owner', 'socialNetwork'],\n          where: [\n            {\n              owner: {\n                id: profile.id,\n              },\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Cards not found');\n        })\n        .then(cards => {\n          return cards;\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetAllCardWithProfileIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardWithUserIdQuery.html":{"url":"classes/GetAllCardWithUserIdQuery.html","title":"class - GetAllCardWithUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardWithUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-all-card-with-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-all-card-with-user-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-all-card-with-user-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllCardWithUserIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllCardWithUserIdQueryHandler.html":{"url":"classes/GetAllCardWithUserIdQueryHandler.html","title":"class - GetAllCardWithUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllCardWithUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-all-card-with-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-all-card-with-user-id.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllCardWithUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-all-card-with-user-id.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllCardWithUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { GetAllCardWithUserIdQuery } from '../../query/get-all-card-with-user-id.query';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllCardWithUserIdQuery)\nexport class GetAllCardWithUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetAllCardWithUserIdQuery): Promise {\n    try {\n      return await this.cardRepository.find({\n        relations: ['occupation', 'owner', 'owner.user', 'socialNetwork'],\n        loadRelationIds: true,\n        loadEagerRelations: true,\n        where: [\n          {\n            owner: {\n              user: {\n                id: query.userId,\n              },\n            },\n          },\n        ],\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetAllCardWithUserIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQuery.html":{"url":"classes/GetAllOccupationQuery.html","title":"class - GetAllOccupationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-all-occupation.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get-all-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllOccupationQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'get-all-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQueryHandler.html":{"url":"classes/GetAllOccupationQueryHandler.html","title":"class - GetAllOccupationQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from '../../query/get-all-occupation.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllOccupationQuery)\nexport class GetAllOccupationQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    return await this.occupationRepository\n      .find()\n      .then(occupations => {\n        return occupations.map(occupation => {\n          return new OccupationDto(occupation);\n        });\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetAllOccupationQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Error while getting all occupations');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQuery.html":{"url":"classes/GetAllProfileQuery.html","title":"class - GetAllProfileQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-all-profile.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllProfileQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQueryHandler.html":{"url":"classes/GetAllProfileQueryHandler.html","title":"class - GetAllProfileQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllProfileQuery } from '../../query/get-all-profile.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\n\n@QueryHandler(GetAllProfileQuery)\nexport class GetAllProfileQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    try {\n      const profiles = await this.profileRepository.find();\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetAllProfileQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllSocialNetworkQuery.html":{"url":"classes/GetAllSocialNetworkQuery.html","title":"class - GetAllSocialNetworkQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllSocialNetworkQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-all-social-network.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllSocialNetworkQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllSocialNetworkQueryHandler.html":{"url":"classes/GetAllSocialNetworkQueryHandler.html","title":"class - GetAllSocialNetworkQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllSocialNetworkQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllSocialNetworkQuery } from '../../query/get-all-social-network.query';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetAllSocialNetworkQuery)\nexport class GetAllSocialNetworkQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    return await this.socialNetworkRepository\n      .find()\n      .then(socialNetworks => {\n        return socialNetworks.map(socialNetwork => {\n          return new SocialNetworkDto(socialNetwork);\n        });\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetAllSocialNetworkQueryHandler',\n            localisation: 'SocialNetwork',\n            error: error.message,\n          }),\n        );\n        throw new Error('Error while getting all social networks');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCardByIdQuery.html":{"url":"classes/GetCardByIdQuery.html","title":"class - GetCardByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCardByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-card-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-card-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetCardByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCardByIdQueryHandler.html":{"url":"classes/GetCardByIdQueryHandler.html","title":"class - GetCardByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCardByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-card-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-card-by-id.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetCardByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-card-by-id.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetCardByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetCardByIdQuery } from '../../query/get-card-by-id.query';\nimport { Repository } from 'typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetCardByIdQuery)\nexport class GetCardByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetCardByIdQuery): Promise {\n    try {\n      return await this.cardRepository\n        .findOneOrFail({\n          relations: ['occupation', 'owner', 'socialNetwork'],\n          where: [\n            {\n              id: query.id,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetCardByIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCardWithCriteriaQuery.html":{"url":"classes/GetCardWithCriteriaQuery.html","title":"class - GetCardWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCardWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-card-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                companyName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                firstname\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isOwnerPro\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                lastname\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                typeOfCardEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-card-with-criteria.query.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\n\nexport class GetCardWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly isDeleted?: boolean = false;\n  public readonly isOwnerPro?: boolean;\n  public readonly firstname?: string;\n  public readonly lastname?: string;\n  public readonly companyName?: string;\n  public readonly typeOfCardEnum?: TypeOfCardEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCardWithCriteriaQueryHandler.html":{"url":"classes/GetCardWithCriteriaQueryHandler.html","title":"class - GetCardWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCardWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-card-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-card-with-criteria.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetCardWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-card-with-criteria.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetCardWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetCardWithCriteriaQuery } from '../../query/get-card-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetCardWithCriteriaQuery)\nexport class GetCardWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetCardWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.cardRepository.createQueryBuilder('card');\n      queryBuilder.setFindOptions({\n        relations: ['owner', 'occupations', 'socialNetwork', 'owner.user'],\n      });\n\n      if (query.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.isOwnerPro !== undefined) {\n        queryBuilder.setFindOptions({\n          where: {\n            isOwnerPro: query.isOwnerPro,\n          },\n        });\n      }\n\n      if (query.companyName != undefined) {\n        queryBuilder.setFindOptions({\n          where: {\n            companyName: query.companyName,\n          },\n        });\n      }\n\n      if (query.typeOfCardEnum != undefined) {\n        queryBuilder.setFindOptions({\n          where: {\n            typeOfCardEnum: query.typeOfCardEnum,\n          },\n        });\n      }\n\n      if (query.firstname != undefined) {\n        queryBuilder.setFindOptions({\n          where: {\n            firstname: query.firstname,\n          },\n        });\n      }\n\n      if (query.lastname != undefined) {\n        queryBuilder.setFindOptions({\n          where: {\n            lastname: query.lastname,\n          },\n        });\n      }\n\n      return await queryBuilder\n        .getMany()\n        .then(cards => {\n          return cards;\n        })\n        .catch(() => {\n          throw new Error('Error while getting cards');\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetCardWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCardWithCriteriaRequest.html":{"url":"classes/GetCardWithCriteriaRequest.html","title":"class - GetCardWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCardWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/get-card-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                cardType\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/get-card-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        cardType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/get-card-with-criteria.request.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/get-card-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetCardWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly isDeleted?: boolean = false;\n\n  public readonly cardType?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQuery.html":{"url":"classes/GetOccupationByIdQuery.html","title":"class - GetOccupationByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQueryHandler.html":{"url":"classes/GetOccupationByIdQueryHandler.html","title":"class - GetOccupationByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetOccupationByIdQuery } from '../../query/get-occupation-by-id.query';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationByIdQuery)\nexport class GetOccupationByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationByIdQuery): Promise {\n    return await this.occupationRepository\n      .findOneOrFail({\n        where: [{ id: query.occupationId }],\n      })\n      .then(occupation => {\n        return new OccupationDto(occupation);\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetOccupationByIdQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Occupation not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaDto.html":{"url":"classes/GetOccupationWithCriteriaDto.html","title":"class - GetOccupationWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQuery.html":{"url":"classes/GetOccupationWithCriteriaQuery.html","title":"class - GetOccupationWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                criteria\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        criteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetOccupationWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetOccupationWithCriteriaDto } from '../../domain/dto/get-occupation-with-criteria.dto';\n\nexport class GetOccupationWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n  public readonly criteria: GetOccupationWithCriteriaDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQueryHandler.html":{"url":"classes/GetOccupationWithCriteriaQueryHandler.html","title":"class - GetOccupationWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { GetOccupationWithCriteriaQuery } from '../../query/get-occupation-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationWithCriteriaQuery)\nexport class GetOccupationWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.occupationRepository.createQueryBuilder('occupation');\n\n      if (query.criteria.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.criteria.name) {\n        queryBuilder.where('occupation.name = :nameOccupation', {\n          nameOccupation: query.criteria.name,\n        });\n      }\n\n      const occupations = await queryBuilder.getMany();\n\n      return occupations.map(\n        occupation =>\n          new OccupationDto({\n            ...occupation,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'occupation',\n          handler: 'GetOccupationWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaRequest.html":{"url":"classes/GetOccupationWithCriteriaRequest.html","title":"class - GetOccupationWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/get-occupation-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQuery.html":{"url":"classes/GetProfileByIdQuery.html","title":"class - GetProfileByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfileByIdQuery {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQueryHandler.html":{"url":"classes/GetProfileByIdQueryHandler.html","title":"class - GetProfileByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileByIdQuery } from '../../query/get-profile-by-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetProfileByIdQuery)\nexport class GetProfileByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileByIdQuery): Promise {\n    try {\n      return await this.profileRepository\n        .findOneOrFail({\n          relations: ['user'],\n          where: [\n            {\n              id: query.id,\n            },\n          ],\n        })\n        .then(profile => new ProfileResponse({ ...profile, userId: profile.user?.id }));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileByIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaDto.html":{"url":"classes/GetProfileWithCriteriaDto.html","title":"class - GetProfileWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/get-profile-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfileWithCriteriaDto {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQuery.html":{"url":"classes/GetProfileWithCriteriaQuery.html","title":"class - GetProfileWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getProfileWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getProfileWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetProfileWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetProfileWithCriteriaDto } from '../../domain/dto/get-profile-with-criteria.dto';\n\nexport class GetProfileWithCriteriaQuery {\n  public readonly getProfileWithCriteriaDto: GetProfileWithCriteriaDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQueryHandler.html":{"url":"classes/GetProfileWithCriteriaQueryHandler.html","title":"class - GetProfileWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileWithCriteriaQuery } from '../../query/get-profile-with-criteria.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetProfileWithCriteriaQuery)\nexport class GetProfileWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.profileRepository.createQueryBuilder('profile');\n\n      if (query.getProfileWithCriteriaDto.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.getProfileWithCriteriaDto.usernameProfile) {\n        queryBuilder.where('profile.usernameProfile = :usernameProfile', {\n          usernameProfile: query.getProfileWithCriteriaDto.usernameProfile,\n        });\n      }\n\n      const profiles = await queryBuilder.getMany();\n\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQuery.html":{"url":"classes/GetProfilesByUserIdQuery.html","title":"class - GetProfilesByUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfilesByUserIdQuery {\n  public readonly id: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQueryHandler.html":{"url":"classes/GetProfilesByUserIdQueryHandler.html","title":"class - GetProfilesByUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfilesByUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfilesByUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfilesByUserIdQuery } from '../../query/get-profiles-by-user-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\n\n@QueryHandler(GetProfilesByUserIdQuery)\nexport class GetProfilesByUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async execute(query: GetProfilesByUserIdQuery): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: query.id }],\n          relations: ['profile'],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      return user.profiles.map(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesWithCriteriaRequest.html":{"url":"classes/GetProfilesWithCriteriaRequest.html","title":"class - GetProfilesWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/get-profiles-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfilesWithCriteriaRequest {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSavedCardWithProfileIdQuery.html":{"url":"classes/GetSavedCardWithProfileIdQuery.html","title":"class - GetSavedCardWithProfileIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSavedCardWithProfileIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-saved-card-with-profile-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-saved-card-with-profile-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-saved-card-with-profile-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSavedCardWithProfileIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSavedCardWithProfileIdQueryHandler.html":{"url":"classes/GetSavedCardWithProfileIdQueryHandler.html","title":"class - GetSavedCardWithProfileIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSavedCardWithProfileIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-saved-card-with-profile-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-saved-card-with-profile-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSavedCardWithProfileIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-saved-card-with-profile-id.query-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSavedCardWithProfileIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetSavedCardWithProfileIdQuery } from '../../query/get-saved-card-with-profile-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\n\n@QueryHandler(GetSavedCardWithProfileIdQuery)\nexport class GetSavedCardWithProfileIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSavedCardWithProfileIdQuery): Promise {\n    try {\n      const profile: ProfileEntity = await this.profileRepository\n        .findOneOrFail({\n          where: {\n            id: query.profileId,\n          },\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      return await this.cardRepository.find({\n        relations: ['occupation', 'owner', 'profilesWhoSavedCard', 'socialNetwork'],\n        where: [\n          {\n            profilesWhoSavedCard: {\n              id: profile.id,\n            },\n          },\n        ],\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetSavedCardWithProfileIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSavedCardWithUserIdQuery.html":{"url":"classes/GetSavedCardWithUserIdQuery.html","title":"class - GetSavedCardWithUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSavedCardWithUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/get-saved-card-with-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/get-saved-card-with-user-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/get-saved-card-with-user-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSavedCardWithUserIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSavedCardWithUserIdQueryHandler.html":{"url":"classes/GetSavedCardWithUserIdQueryHandler.html","title":"class - GetSavedCardWithUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSavedCardWithUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/get-saved-card-with-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/get-saved-card-with-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSavedCardWithUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/get-saved-card-with-user-id.query-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSavedCardWithUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { GetSavedCardWithUserIdQuery } from '../../query/get-saved-card-with-user-id.query';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetSavedCardWithUserIdQuery)\nexport class GetSavedCardWithUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSavedCardWithUserIdQuery): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [\n            {\n              id: query.userId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      return await this.cardRepository\n        .find({\n          relations: ['occupation', 'socialNetwork', 'owner', 'profilesWhoSavedCard', 'profilesWhoSavedCard.user'],\n          where: [\n            {\n              profilesWhoSavedCard: {\n                user: {\n                  id: user.id,\n                },\n              },\n            },\n          ],\n        })\n        .then(cards => {\n          return cards;\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'GetSavedCardWithUserIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkByIdQuery.html":{"url":"classes/GetSocialNetworkByIdQuery.html","title":"class - GetSocialNetworkByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-social-network-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/query/get-social-network-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkByIdQueryHandler.html":{"url":"classes/GetSocialNetworkByIdQueryHandler.html","title":"class - GetSocialNetworkByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSocialNetworkByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSocialNetworkByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { GetSocialNetworkByIdQuery } from '../../query/get-social-network-by-id.query';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetSocialNetworkByIdQuery)\nexport class GetSocialNetworkByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSocialNetworkByIdQuery): Promise {\n    return await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: query.id }],\n      })\n      .then(socialNetwork => {\n        return new SocialNetworkDto(socialNetwork);\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetSocialNetworkByIdQueryHandler',\n            localisation: 'SocialNetwork',\n            error: error.message,\n          }),\n        );\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaQuery.html":{"url":"classes/GetSocialNetworkWithCriteriaQuery.html","title":"class - GetSocialNetworkWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly isDeleted: boolean = false;\n\n  public readonly name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{"url":"classes/GetSocialNetworkWithCriteriaQueryHandler.html","title":"class - GetSocialNetworkWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSocialNetworkWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSocialNetworkWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { GetSocialNetworkWithCriteriaQuery } from '../../query/get-social-network-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetSocialNetworkWithCriteriaQuery)\nexport class GetSocialNetworkWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSocialNetworkWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.socialNetworkRepository.createQueryBuilder('socialNetwork');\n      if (query.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.name) {\n        queryBuilder.where('socialNetwork.name = :nameSocialNetwork', {\n          nameSocialNetwork: query.name,\n        });\n      }\n\n      const socialNetworks = await queryBuilder.getMany();\n\n      return socialNetworks.map(\n        socialNetwork =>\n          new SocialNetworkDto({\n            ...socialNetwork,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'socialNetwork',\n          handler: 'GetSocialNetworkWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaRequest.html":{"url":"classes/GetSocialNetworkWithCriteriaRequest.html","title":"class - GetSocialNetworkWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/get-social-network-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly isDeleted: boolean;\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ mail: query.email }],\n        select: ['id', 'mail', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesQueryHandler.html","title":"class - GetUserIfRefreshTokenMatchesQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'mail', 'currentHashedRefreshToken', 'roles'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'GetUserIfRefreshTokenMatchesQueryHandler',\n          error: error,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQueryHandler.html":{"url":"classes/GetUserLoginQueryHandler.html","title":"class - GetUserLoginQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ mail: query.username }],\n          select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQueryHandler.html":{"url":"classes/GetUserQueryHandler.html","title":"class - GetUserQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaDto.html":{"url":"classes/GetUserWithCriteriaDto.html","title":"class - GetUserWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/get-user-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserWithCriteriaDto {\n  public readonly createdFrom?: Date;\n  public readonly createdTo?: Date;\n\n  public readonly updatedFrom?: Date;\n  public readonly updatedTo?: Date;\n\n  public readonly deletedFrom?: Date;\n  public readonly deletedTo?: Date;\n  public readonly isDeleted?: boolean;\n\n  public readonly role?: string;\n\n  public readonly username?: string;\n  public readonly mail?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQuery.html":{"url":"classes/GetUserWithCriteriaQuery.html","title":"class - GetUserWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getUserWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getUserWithCriteriaDto\n                                                  \n                                                        \n                                                                        GetUserWithCriteriaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getUserWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetUserWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetUserWithCriteriaDto } from '../../domain/dto/get-user-with-criteria.dto';\n\nexport class GetUserWithCriteriaQuery {\n  constructor(public readonly getUserWithCriteriaDto: GetUserWithCriteriaDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQueryHandler.html":{"url":"classes/GetUserWithCriteriaQueryHandler.html","title":"class - GetUserWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserWithCriteriaQuery } from '../../query/get-user-with-criteria.query';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetUserWithCriteriaQuery)\nexport class GetUserWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserWithCriteriaQuery): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (query.getUserWithCriteriaDto.isDeleted) {\n      queryBuilder.setFindOptions({ withDeleted: true });\n    }\n\n    if (query.getUserWithCriteriaDto.createdFrom) {\n      queryBuilder.andWhere('user.createdAt >= :from', { from: query.getUserWithCriteriaDto.createdFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.createdTo) {\n      queryBuilder.andWhere('user.createdAt = :from', { from: query.getUserWithCriteriaDto.updatedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.updatedTo) {\n      queryBuilder.andWhere('user.updatedAt = :from', { from: query.getUserWithCriteriaDto.deletedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.deletedTo) {\n      queryBuilder.andWhere('user.deletedAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\nimport { CardEntity } from '../card/domain/entities/card.entity';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupMembershipResponse.html":{"url":"classes/GroupMembershipResponse.html","title":"class - GroupMembershipResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupMembershipResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/response/group-membership.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                groupId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/response/group-membership.response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GroupMembershipResponse {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly groupId: string;\n  public readonly profileId: string;\n  public readonly isDeleted?: boolean;\n  public readonly createdAt?: Date;\n  public readonly updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdProfileDto.html":{"url":"classes/IdProfileDto.html","title":"class - IdProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/id-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdProfileDto {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIdException.html":{"url":"classes/InvalidIdException.html","title":"class - InvalidIdException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIdException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-id.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-id.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidIdException extends HttpException {\n  constructor(message?: string) {\n    super('Invalid Id' + message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidMailException.html":{"url":"classes/InvalidMailException.html","title":"class - InvalidMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidMailException extends HttpException {\n  constructor() {\n    super('Mail is not valid', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUsernameException.html":{"url":"classes/InvalidUsernameException.html","title":"class - InvalidUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidUsernameException extends HttpException {\n  constructor() {\n    super('Invalid username exception', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsCardOwnerWithUserIdQuery.html":{"url":"classes/IsCardOwnerWithUserIdQuery.html","title":"class - IsCardOwnerWithUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsCardOwnerWithUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/is-card-owner-with-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/is-card-owner-with-user-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/is-card-owner-with-user-id.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/is-card-owner-with-user-id.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IsCardOwnerWithUserIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsCardOwnerWithUserIdQueryHandler.html":{"url":"classes/IsCardOwnerWithUserIdQueryHandler.html","title":"class - IsCardOwnerWithUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsCardOwnerWithUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/is-card-owner-with-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/is-card-owner-with-user-id.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: IsCardOwnerWithUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/is-card-owner-with-user-id.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                IsCardOwnerWithUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { IsCardOwnerWithUserIdQuery } from '../../query/is-card-owner-with-user-id.query';\nimport { Repository } from 'typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@QueryHandler(IsCardOwnerWithUserIdQuery)\nexport class IsCardOwnerWithUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: IsCardOwnerWithUserIdQuery): Promise {\n    try {\n      const card = await this.cardRepository\n        .findOneOrFail({\n          relations: ['owner', 'owner.user'],\n          where: [\n            {\n              owner: {\n                user: {\n                  id: query.userId,\n                },\n              },\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n\n      return card.owner.id === query.userId;\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'card',\n          handler: 'IsCardOwnerWithUserIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsProfileOwnerWithUserIsQuery.html":{"url":"classes/IsProfileOwnerWithUserIsQuery.html","title":"class - IsProfileOwnerWithUserIsQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsProfileOwnerWithUserIsQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/query/is-profile-owner-with-user-is.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/query/is-profile-owner-with-user-is.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/is-profile-owner-with-user-is.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/query/is-profile-owner-with-user-is.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IsProfileOwnerWithUserIsQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsProfileOwnerWithUserIsQueryHandler.html":{"url":"classes/IsProfileOwnerWithUserIsQueryHandler.html","title":"class - IsProfileOwnerWithUserIsQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsProfileOwnerWithUserIsQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/query/is-profile-owner-with-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/query/is-profile-owner-with-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: IsProfileOwnerWithUserIsQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/query/is-profile-owner-with-user-id.query-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                IsProfileOwnerWithUserIsQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { IsProfileOwnerWithUserIsQuery } from '../../query/is-profile-owner-with-user-is.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(IsProfileOwnerWithUserIsQuery)\nexport class IsProfileOwnerWithUserIsQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: IsProfileOwnerWithUserIsQuery): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          relations: ['owner', 'owner.user'],\n          where: [\n            {\n              user: {\n                id: query.userId,\n              },\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      return profile.user.id === query.userId;\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'IsProfileOwnerWithUserIsQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListRolesDto.html":{"url":"classes/ListRolesDto.html","title":"class - ListRolesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListRolesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/list-roles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class ListRolesDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n      passwordField: 'password',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'login-user';\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailRequiredException.html":{"url":"classes/MailRequiredException.html","title":"class - MailRequiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailRequiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/mail-required.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/mail-required.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class MailRequiredException extends HttpException {\n  constructor() {\n    super('Mail is required', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from '../card/domain/entities/card.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from '../card/domain/entities/card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotTheOwnerException.html":{"url":"classes/NotTheOwnerException.html","title":"class - NotTheOwnerException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotTheOwnerException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/not-the-owner.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/not-the-owner.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class NotTheOwnerException extends HttpException {\n  constructor() {\n    super('Not the owner', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OccupationController.html":{"url":"controllers/OccupationController.html","title":"controller - OccupationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OccupationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /occupation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupations\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationsWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationsWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationsWithCriteria(getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getOccupationsWithCriteriaRequest\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/soft-delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { OccupationService } from './occupation.service';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\n\n@Controller('/occupation')\n@ApiTags('Occupation')\nexport class OccupationController {\n  constructor(private readonly occupationService: OccupationService) {}\n\n  @Get('/public/')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getAllOccupations(): Promise {\n    return await this.occupationService.getAllOccupation().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getOccupationById(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.getOccupationById(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getOccupationsWithCriteria(\n    @Body() getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest,\n  ): Promise {\n    return await this.occupationService.getOccupationWithCriteria(getOccupationsWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createOccupation(@Body() createOccupationRequest: CreateOccupationRequest): Promise {\n    return await this.occupationService.createOccupation(createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateOccupation(\n    @Param('id') occupationId: string,\n    @Body() createOccupationRequest: CreateOccupationRequest,\n  ): Promise {\n    return await this.occupationService.updateOccupation(occupationId, createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.deleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/soft-delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async softDeleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.softDeleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.restoreOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationDto.html":{"url":"classes/OccupationDto.html","title":"class - OccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/entities/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})@Length(2, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { Length } from 'class-validator';\nimport { CardEntity } from '../../../card/domain/entities/card.entity';\n\n@Entity('occupation')\nexport class OccupationEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  @Length(2, 20)\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OccupationModule.html":{"url":"modules/OccupationModule.html","title":"module - OccupationModule","body":"\n                   \n\n\n\n\n    Modules\n    OccupationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_imports\n\n\n\ncluster_OccupationModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/occupation/occupation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            OccupationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OccupationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from './domain/entities/occupation.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { OccupationController } from './occupation.controller';\nimport { OccupationService } from './occupation.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { RestoreOccupationCommandHandler } from './cqrs/handler/command/restore-occupation.command-handler';\nimport { SoftDeleteOccupationCommandHandler } from './cqrs/handler/command/soft-delete-occupation.command-handler';\nimport { GetAllOccupationQueryHandler } from './cqrs/handler/query/get-all-occupation.query-handler';\nimport { GetOccupationByIdQueryHandler } from './cqrs/handler/query/get-occupation-by-id.query-handler';\nimport { GetOccupationWithCriteriaQueryHandler } from './cqrs/handler/query/get-occupation-with-criteria.query-handler';\nimport { CreateOccupationEventHandler } from './cqrs/handler/event/create-occupation.event-handler';\nimport { SoftDeleteOccupationEventHandler } from './cqrs/handler/event/soft-delete-occupation.event-handler';\nimport { CreateOccupationCommandHandler } from './cqrs/handler/command/create-occupation.command-handler';\nimport { UpdateOccupationCommandHandler } from './cqrs/handler/command/update-occupation.command-handler';\nimport { RestoreOccupationEventHandler } from './cqrs/handler/event/restore-occupation.event-handler';\nimport { DeleteOccupationCommandHandler } from './cqrs/handler/command/delete-occupation.command-handler';\nimport { UpdateOccupationEventHandler } from './cqrs/handler/event/update-occupation.event-handler';\nimport { DeleteOccupationEventHandler } from './cqrs/handler/event/delete-occupation.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [OccupationController],\n  providers: [\n    OccupationService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateOccupationCommandHandler,\n    DeleteOccupationCommandHandler,\n    RestoreOccupationCommandHandler,\n    SoftDeleteOccupationCommandHandler,\n    UpdateOccupationCommandHandler,\n    // Query handlers\n    GetAllOccupationQueryHandler,\n    GetOccupationByIdQueryHandler,\n    GetOccupationWithCriteriaQueryHandler,\n    // Event handlers\n    CreateOccupationEventHandler,\n    DeleteOccupationEventHandler,\n    SoftDeleteOccupationEventHandler,\n    UpdateOccupationEventHandler,\n    RestoreOccupationEventHandler,\n  ],\n})\nexport class OccupationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationNotFoundException.html":{"url":"classes/OccupationNotFoundException.html","title":"class - OccupationNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/occupation-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/occupation-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class OccupationNotFoundException extends HttpException {\n  constructor() {\n    super('Occupation not found', 404);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationResponse.html":{"url":"classes/OccupationResponse.html","title":"class - OccupationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/response/occupation-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/response/occupation-response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationResponse {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OccupationService.html":{"url":"injectables/OccupationService.html","title":"injectable - OccupationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OccupationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupation\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/occupation.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(occupationRequest: CreateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupation()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    occupationRequest\n                                    \n                                                UpdateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from './cqrs/query/get-all-occupation.query';\nimport { QueryErrorException } from '../../util/exception/custom-http-exception/query-error.exception';\nimport { OccupationDto } from './domain/dto/occupation.dto';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { OccupationNotFoundException } from '../../util/exception/custom-http-exception/occupation-not-found.exception';\nimport { GetOccupationByIdQuery } from './cqrs/query/get-occupation-by-id.query';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { GetOccupationWithCriteriaQuery } from './cqrs/query/get-occupation-with-criteria.query';\nimport { GetOccupationWithCriteriaDto } from './domain/dto/get-occupation-with-criteria.dto';\nimport { CreateOccupationCommand } from './cqrs/command/create-occupation.command';\nimport { CreateOccupationDto } from './domain/dto/create-occupation.dto';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { DuplicateNameException } from '../../util/exception/custom-http-exception/duplicate-name.exception';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\nimport { UpdateOccupationRequest } from './web/request/update-occupation.request';\nimport { UpdateOccupationDto } from './domain/dto/update-occupation.dto';\nimport { UpdateOccupationCommand } from './cqrs/command/update-occupation.command';\nimport { DeleteOccupationCommand } from './cqrs/command/delete-occupation.command';\nimport { SoftDeleteOccupationCommand } from './cqrs/command/soft-delete-occupation.command';\nimport { RestoreOccupationCommand } from './cqrs/command/restore-occupation.command';\n\n@Injectable()\nexport class OccupationService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async getAllOccupation(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllOccupationQuery({})).then((occupationsDto: OccupationDto[]) => {\n        return occupationsDto.map(occupationDto => {\n          return new OccupationResponse(occupationDto);\n        });\n      });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationById(occupationId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetOccupationByIdQuery({ occupationId: occupationId }))\n        .then((occupationDto: OccupationDto) => {\n          return new OccupationResponse(occupationDto);\n        });\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetOccupationWithCriteriaQuery({\n            criteria: new GetOccupationWithCriteriaDto({\n              name: criteria.name,\n              isDeleted: criteria.isDeleted,\n            }),\n          }),\n        )\n        .then((occupationsDto: OccupationDto[]) => {\n          return occupationsDto.map(occupationDto => {\n            return new OccupationResponse(occupationDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async createOccupation(occupationRequest: CreateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateOccupationCommand({\n          createOccupationDto: new CreateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateOccupationCommand({\n          occupationId: occupationId,\n          updateOccupationDto: new UpdateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async deleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async softDeleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async restoreOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteMyProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getAllProfiles\n                            \n                            \n                                    Async\n                                getMyProfiles\n                            \n                            \n                                    Async\n                                getProfileById\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(profile: CreateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create-profile')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyProfile(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@ApiResponse({status: 200, description: 'List of profiles', content: undefined})@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfiles(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-my-profiles')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileById(requestUser: RequestUser, profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/with-user-id/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfilesWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(requestUser: RequestUser, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(profileId: string, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProfileService } from './profile.service';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\n\n@Controller('profile')\n@ApiTags('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * @api {get} /profile Get all profiles\n   * @apiName GetallProfiles\n   * @apiGroup Profile\n   * @apiVersion 0.0.8\n   * @apiDescription Get all profiles\n   * @apiSuccess {Object[]} profiles List of profiles\n   */\n  @Get('/admin/')\n  @ApiResponse({\n    status: 200,\n    description: 'List of profiles',\n    content: {\n      'application/json': {\n        example: [\n          { id: 1, name: 'Profile 1' },\n          { id: 2, name: 'Profile 2' },\n        ],\n      },\n    },\n  })\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAllProfiles(): Promise {\n    return await this.profileService.getProfiles().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getProfileById(@Req() requestUser: RequestUser, @Param('id') profileId: string): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getMyProfile(id, profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/admin/with-user-id/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfileByUserId(@Param('id') userId: string): Promise {\n    return await this.profileService.getProfileByUserId(userId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/get-my-profiles')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMyProfiles(@Req() requestUser: RequestUser): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getProfileByUserId(id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfilesWithCriteria(\n    @Body() getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    return await this.profileService.getProfilesWithCriteria(getProfilesWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateProfile(@Param('id') profileId: string, @Body() profile: UpdateProfileRequest): Promise {\n    return await this.profileService.updateProfile(profileId, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/public/update-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMyProfile(@Req() requestUser: RequestUser, @Body() profile: UpdateProfileRequest): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.updateProfile(id, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create-profile')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createProfile(@Body() profile: CreateProfileRequest): Promise {\n    return await this.profileService.createProfile(profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.deleteProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMyProfile(@Req() requestUser: RequestUser): Promise {\n    return await this.profileService.deleteProfile(requestUser.user.id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.restoreProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                roleProfile\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: RoleProfileEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../../../user/domain/entities/user.entity';\nimport { OccupationEntity } from '../../../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from '../../../entities-to-create/company-employee.entity';\nimport { MediaEntity } from '../../../entities-to-create/media.entity';\nimport { JoinedConversation } from '../../../entities-to-create/joined-conversation.entity';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { RoleProfileEnum } from '../enum/role-profile.enum';\nimport { CardEntity } from '../../../card/domain/entities/card.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n  @Column({ type: 'enum', enum: RoleProfileEnum, default: RoleProfileEnum.CLASSIC })\n  roleProfile: RoleProfileEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { ProfileEntity } from './domain/entities/profile.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { CreateProfileCommandHandler } from './cqrs/handler/command/create-profile.command-handler';\nimport { ShiftProfileOwnerCommandHandler } from './cqrs/handler/command/shift-profile-owner.command-handler';\nimport { UpdateOccupationsProfileCommandHandler } from './cqrs/handler/command/update-occupations-profile.command-handler';\nimport { GetProfilesByUserIdQueryHandler } from './cqrs/handler/query/get-profiles-by-user-id.query-handler';\nimport { GetAllProfileQueryHandler } from './cqrs/handler/query/get-all-profile.query-handler';\nimport { GetProfileWithCriteriaQueryHandler } from './cqrs/handler/query/get-profile-with-criteria.query-handler';\nimport { DeleteProfileEventHandler } from './cqrs/handler/event/delete-profile.event-handler';\nimport { UpdateProfileEventHandler } from './cqrs/handler/event/update-profile.event-handler';\nimport { DeleteProfileCommandHandler } from './cqrs/handler/command/delete-profile.command-handler';\nimport { GetProfileByIdQueryHandler } from './cqrs/handler/query/get-profile-by-id.query-handler';\nimport { UpdateProfileCommandHandler } from './cqrs/handler/command/update-profile.command-handler';\nimport { SoftDeleteProfileEventHandler } from './cqrs/handler/event/soft-delete-profile.event-handler';\nimport { CreateProfileEventHandler } from './cqrs/handler/event/create-profile.event-handler';\nimport { ShiftProfileOwnerEventHandler } from './cqrs/handler/event/shift-profile-owner.event-handler';\nimport { SoftDeleteProfileCommandHandler } from './cqrs/handler/command/soft-delete-profile.command-handler';\nimport { UpdateOccupationsProfileEventHandler } from './cqrs/handler/event/update-occupations-profile.event-handler';\nimport { RestoreProfileCommandHandler } from './cqrs/handler/command/restore-profile.command-handler';\nimport { RestoreProfileEventHandler } from './cqrs/handler/event/restore-profile.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, ProfileEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [ProfileController],\n  providers: [\n    ProfileService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateProfileCommandHandler,\n    DeleteProfileCommandHandler,\n    ShiftProfileOwnerCommandHandler,\n    SoftDeleteProfileCommandHandler,\n    UpdateProfileCommandHandler,\n    UpdateOccupationsProfileCommandHandler,\n    RestoreProfileCommandHandler,\n    // Query handlers\n    GetProfileByIdQueryHandler,\n    GetProfilesByUserIdQueryHandler,\n    GetAllProfileQueryHandler,\n    GetProfileWithCriteriaQueryHandler,\n    // Event handlers\n    CreateProfileEventHandler,\n    DeleteProfileEventHandler,\n    ShiftProfileOwnerEventHandler,\n    SoftDeleteProfileEventHandler,\n    UpdateProfileEventHandler,\n    UpdateOccupationsProfileEventHandler,\n    RestoreProfileEventHandler,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileResponse.html":{"url":"classes/ProfileResponse.html","title":"class - ProfileResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/response/profile.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProfileResponse {\n  public readonly id: string;\n  public readonly userId: string;\n  public readonly usernameProfile: string;\n\n  public readonly isDeleted?: boolean;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getMyProfile\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfiles\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                shiftProfileOwner\n                            \n                            \n                                    Async\n                                softDeleteProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/profile.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(createProfileRequest: CreateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileRequest\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfile(userId: string, profileId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfileWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        shiftProfileOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shiftProfileOwnerRequest\n                                    \n                                                ShiftProfileOwnerRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { CreateProfileCommand } from './cqrs/command/create-profile.command';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { InvalidParameterEntityException } from '../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { DeleteProfileCommand } from './cqrs/command/delete-profile.command';\nimport { UpdateProfileCommand } from './cqrs/command/update-profile.command';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\nimport { SoftDeleteProfileCommand } from './cqrs/command/soft-delete-profile.command';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { UpdateOccupationsProfileCommand } from './cqrs/command/update-occupations-profile.command';\nimport { ShiftProfileOwnerCommand } from './cqrs/command/shift-profile-owner.command';\nimport { ShiftProfileOwnerRequest } from './domain/request/shift-profile-owner.request';\nimport { GetProfileByIdQuery } from './cqrs/query/get-profile-by-id.query';\nimport { GetAllProfileQuery } from './cqrs/query/get-all-profile.query';\nimport { GetProfileWithCriteriaQuery } from './cqrs/query/get-profile-with-criteria.query';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { GetProfilesByUserIdQuery } from './cqrs/query/get-profiles-by-user-id.query';\nimport { NotTheOwnerException } from '../../util/exception/custom-http-exception/not-the-owner.exception';\nimport { RestoreProfileCommand } from './cqrs/command/restore-profile.command';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createProfile(createProfileRequest: CreateProfileRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateProfileCommand({\n          createProfileDto: {\n            usernameProfile: createProfileRequest.usernameProfile,\n            roleProfile: createProfileRequest.roleProfile,\n          },\n          userId: createProfileRequest.idUser,\n          occupationsId: createProfileRequest.occupationsId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async deleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async softDeleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: updateProfileRequest.id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: updateProfileRequest.id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: updateProfileRequest.id,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== id) {\n            throw new Error('User is not he owner of the profile');\n          }\n        });\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new ShiftProfileOwnerCommand({\n          profileId: shiftProfileOwnerRequest.profileId,\n          userId: shiftProfileOwnerRequest.userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else throw new Error(e);\n    }\n  }\n\n  // Get\n  async getProfile(id: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileByIdQuery({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async getProfiles(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllProfileQuery());\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfilesWithCriteria(\n    getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileWithCriteriaQuery({\n          getProfileWithCriteriaDto: {\n            usernameProfile: getProfileWithCriteriaRequest.usernameProfile,\n            roleProfile: getProfileWithCriteriaRequest.roleProfile,\n            isDeleted: getProfileWithCriteriaRequest.isDeleted,\n          },\n        }),\n      );\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfileByUserId(userId: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfilesByUserIdQuery({\n          id: userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      throw new Error(e);\n    }\n  }\n\n  async getMyProfile(userId: string, profileId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: profileId,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== userId) {\n            throw new Error('User is not he owner of the profile');\n          }\n          return profile;\n        });\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async restoreProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreProfileCommand({\n          profileId: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryErrorException.html":{"url":"classes/QueryErrorException.html","title":"class - QueryErrorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryErrorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/query-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/query-error.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class QueryErrorException extends HttpException {\n  constructor() {\n    super('Query Error', 500);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 20})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 20 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, mail: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly mail: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): void {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n      );\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.mail)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n      );\n      throw new DuplicateMailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n      );\n      throw new InvalidPasswordException();\n    }\n\n    if (command.mail) {\n      if (!this.isValidEmail(command.mail)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n        );\n        throw new InvalidMailException();\n      }\n    }\n\n    if (command.username) {\n      if (!this.isValidUsername(command.username)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n        );\n        throw new InvalidUsernameException();\n      }\n    }\n\n    const newUser = new UserEntity({\n      mail: command.mail,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n      referralCode: await this.generateUniqueReferralCode(),\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid parameters :' + err }),\n      );\n      throw new InvalidParameterEntityException(err);\n    }\n\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return insertedUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveConnectedCardCommand.html":{"url":"classes/RemoveConnectedCardCommand.html","title":"class - RemoveConnectedCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveConnectedCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/remove-connected-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/remove-connected-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/remove-connected-card.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/remove-connected-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveConnectedCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly connectedCardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveConnectedCardCommandHandler.html":{"url":"classes/RemoveConnectedCardCommandHandler.html","title":"class - RemoveConnectedCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveConnectedCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/remove-connected-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, connectedCardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/remove-connected-card.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveConnectedCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/remove-connected-card.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveConnectedCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { RemoveConnectedCardEvent } from '../../event/remove-connected-card.event';\nimport { RemoveConnectedCardCommand } from '../../command/remove-connected-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ConnectedCardEntity } from '../../../domain/entities/connected-card.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RemoveConnectedCardCommand)\nexport class RemoveConnectedCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveConnectedCardCommand): Promise {\n    try {\n      const cardWhoRequest: CardEntity = await this.cardRepository\n        .findOneOrFail({\n          relations: ['connectedCards'],\n          where: [\n            {\n              id: command.id,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card of sender not found');\n        });\n\n      const cardToDisconnect: CardEntity = await this.cardRepository\n        .findOneOrFail({\n          relations: ['connectedCards'],\n          where: [\n            {\n              id: command.connectedCardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card of receiver not found');\n        });\n\n      if (cardWhoRequest.connectedCardOne.map(card => card.id).includes(cardToDisconnect.id)) {\n        await this.connectedCardRepository\n          .findOneOrFail({\n            relations: ['cardOne', 'cardTwo'],\n            where: [\n              {\n                cardEntityOne: {\n                  id: cardWhoRequest.id,\n                },\n                cardEntityTwo: {\n                  id: cardToDisconnect.id,\n                },\n              },\n            ],\n          })\n          .then(cardConnected => {\n            this.connectedCardRepository\n              .delete(cardConnected.id)\n              .then(() => {\n                this.eventBus.publish(\n                  new RemoveConnectedCardEvent({\n                    cardId: cardWhoRequest.id,\n                    connectedCardId: cardToDisconnect.id,\n                  }),\n                );\n              })\n              .catch(() => {\n                throw new Error('Error while deleting relation');\n              });\n          })\n          .catch(() => {\n            throw new Error('Error while fetching relation');\n          });\n      } else {\n        await this.connectedCardRepository\n          .findOneOrFail({\n            relations: ['cardOne', 'cardTwo'],\n            where: [\n              {\n                cardEntityOne: {\n                  id: cardToDisconnect.id,\n                },\n                cardEntityTwo: {\n                  id: cardWhoRequest.id,\n                },\n              },\n            ],\n          })\n          .then(cardConnected => {\n            this.connectedCardRepository\n              .delete(cardConnected.id)\n              .then(() => {\n                this.eventBus.publish(\n                  new RemoveConnectedCardEvent({\n                    cardId: cardToDisconnect.id,\n                    connectedCardId: cardWhoRequest.id,\n                  }),\n                );\n              })\n              .catch(() => {\n                throw new Error('Error while deleting relation');\n              });\n          })\n          .catch(() => {\n            throw new Error('Error while fetching relation');\n          });\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveConnectedCardEvent.html":{"url":"classes/RemoveConnectedCardEvent.html","title":"class - RemoveConnectedCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveConnectedCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/remove-connected-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/remove-connected-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-connected-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-connected-card.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-connected-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-connected-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-connected-card.event.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveConnectedCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly connectedCardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'remove-connected-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveConnectedCardEventHandler.html":{"url":"classes/RemoveConnectedCardEventHandler.html","title":"class - RemoveConnectedCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveConnectedCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/remove-connected-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/remove-connected-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RemoveConnectedCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/remove-connected-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveConnectedCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveConnectedCardEvent } from '../../event/remove-connected-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveConnectedCardEvent)\nexport class RemoveConnectedCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RemoveConnectedCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' disconnected with card: ' + event.connectedCardId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveConnectedCardRequest.html":{"url":"classes/RemoveConnectedCardRequest.html","title":"class - RemoveConnectedCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveConnectedCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/remove-connected-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectedCardId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/remove-connected-card.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/remove-connected-card.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectedCardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/remove-connected-card.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveConnectedCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly connectedCardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RemoveRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'remove-refresh-token';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveSavedCardCommand.html":{"url":"classes/RemoveSavedCardCommand.html","title":"class - RemoveSavedCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveSavedCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/remove-saved-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/remove-saved-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/remove-saved-card.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/remove-saved-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveSavedCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly cardId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveSavedCardEvent.html":{"url":"classes/RemoveSavedCardEvent.html","title":"class - RemoveSavedCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveSavedCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/remove-saved-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/remove-saved-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-saved-card.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-saved-card-handler'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-saved-card.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-saved-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/remove-saved-card.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveSavedCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n  public readonly cardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'remove-saved-card-handler';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveSavedCardRequest.html":{"url":"classes/RemoveSavedCardRequest.html","title":"class - RemoveSavedCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveSavedCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/remove-saved-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/remove-saved-card.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/remove-saved-card.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/remove-saved-card.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveSavedCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreCardCommand.html":{"url":"classes/RestoreCardCommand.html","title":"class - RestoreCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/restore-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/restore-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/restore-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreCardCommandHandler.html":{"url":"classes/RestoreCardCommandHandler.html","title":"class - RestoreCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/restore-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/restore-card.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/restore-card.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreCardCommand } from '../../command/restore-card.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { RestoreCardEvent } from '../../event/restore-card.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RestoreCardCommand)\nexport class RestoreCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreCardCommand): Promise {\n    try {\n      await this.cardRepository\n        .findOneOrFail({\n          withDeleted: true,\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n\n      await this.cardRepository.restore(command.id);\n      this.eventBus.publish(\n        new RestoreCardEvent({\n          cardId: command.id,\n        }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'RestoreCardCommandHandler',\n          localisation: 'card',\n          error: error.message,\n        }),\n      );\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreCardEvent.html":{"url":"classes/RestoreCardEvent.html","title":"class - RestoreCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/restore-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/restore-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/restore-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/restore-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/restore-card.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'restore-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreCardEventHandler.html":{"url":"classes/RestoreCardEventHandler.html","title":"class - RestoreCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/restore-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/restore-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/restore-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreCardEvent } from '../../event/restore-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreCardEvent)\nexport class RestoreCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommand.html":{"url":"classes/RestoreOccupationCommand.html","title":"class - RestoreOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/restore-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommandHandler.html":{"url":"classes/RestoreOccupationCommandHandler.html","title":"class - RestoreOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Repository } from 'typeorm';\nimport { RestoreOccupationCommand } from '../../command/restore-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(RestoreOccupationCommand)\nexport class RestoreOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreOccupationCommand): Promise {\n    try {\n      await this.occupationRepository\n        .findOneOrFail({\n          withDeleted: true,\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n\n      await this.occupationRepository.restore(command.occupationId);\n      this.eventBus.publish(\n        new RestoreOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEvent.html":{"url":"classes/RestoreOccupationEvent.html","title":"class - RestoreOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/restore-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'restore-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEventHandler.html":{"url":"classes/RestoreOccupationEventHandler.html","title":"class - RestoreOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreOccupationEvent)\nexport class RestoreOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommand.html":{"url":"classes/RestoreProfileCommand.html","title":"class - RestoreProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/restore-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommandHandler.html":{"url":"classes/RestoreProfileCommandHandler.html","title":"class - RestoreProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreProfileCommand } from '../../command/restore-profile.command';\n\n@CommandHandler(RestoreProfileCommand)\nexport class RestoreProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreProfileCommand): Promise {\n    try {\n      await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.restore(command.profileId);\n      this.eventBus.publish(\n        new RestoreProfileEvent({\n          profileId: command.profileId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEvent.html":{"url":"classes/RestoreProfileEvent.html","title":"class - RestoreProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/restore-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'restore-profile';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEventHandler.html":{"url":"classes/RestoreProfileEventHandler.html","title":"class - RestoreProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\n\n@EventsHandler(RestoreProfileEvent)\nexport class RestoreProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.profileId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkCommand.html":{"url":"classes/RestoreSocialNetworkCommand.html","title":"class - RestoreSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/restore-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/restore-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/restore-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkCommandHandler.html":{"url":"classes/RestoreSocialNetworkCommandHandler.html","title":"class - RestoreSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreSocialNetworkCommand } from '../../command/restore-social-network.command';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreSocialNetworkEvent } from '../../event/restore-social-network.event';\n\n@CommandHandler(RestoreSocialNetworkCommand)\nexport class RestoreSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n        withDeleted: true,\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .restore(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new RestoreSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not restored');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkEvent.html":{"url":"classes/RestoreSocialNetworkEvent.html","title":"class - RestoreSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/restore-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'restore-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkEventHandler.html":{"url":"classes/RestoreSocialNetworkEventHandler.html","title":"class - RestoreSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreSocialNetworkEvent } from '../../event/restore-social-network.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreSocialNetworkEvent)\nexport class RestoreSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommand.html":{"url":"classes/RestoreUserCommand.html","title":"class - RestoreUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/restore-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommandHandler.html":{"url":"classes/RestoreUserCommandHandler.html","title":"class - RestoreUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreUserCommand } from '../../command/restore-user.command';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RestoreUserCommand)\nexport class RestoreUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreUserCommand): Promise {\n    try {\n      if (!command.id) throw new Error('User id is required');\n      try {\n        await this.userRepository.findOneOrFail({ where: [{ id: command.id }], withDeleted: true });\n      } catch (e) {\n        throw new Error('User not found');\n      }\n      await this.userRepository.restore(command.id);\n      this.eventBus.publish(new RestoreUserEvent(command.id));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RestoreUserCommandHandler', error }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEvent.html":{"url":"classes/RestoreUserEvent.html","title":"class - RestoreUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/restore-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'restore-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEventHandler.html":{"url":"classes/RestoreUserEventHandler.html","title":"class - RestoreUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreUserEvent)\nexport class RestoreUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SamePasswordException.html":{"url":"classes/SamePasswordException.html","title":"class - SamePasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SamePasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/same-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/same-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class SamePasswordException extends HttpException {\n  constructor() {\n    super('New password is the same as old password', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'SetCurrentRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommand.html":{"url":"classes/ShiftProfileOwnerCommand.html","title":"class - ShiftProfileOwnerCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/shift-profile-owner.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerCommand {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommandHandler.html":{"url":"classes/ShiftProfileOwnerCommandHandler.html","title":"class - ShiftProfileOwnerCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: ShiftProfileOwnerCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                ShiftProfileOwnerCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerCommand } from '../../command/shift-profile-owner.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\n\n@CommandHandler(ShiftProfileOwnerCommand)\nexport class ShiftProfileOwnerCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: ShiftProfileOwnerCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      profile.user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n      await this.profileRepository.save(profile);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEvent.html":{"url":"classes/ShiftProfileOwnerEvent.html","title":"class - ShiftProfileOwnerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/shift-profile-owner.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'shift-profile-owner'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerEvent {\n  public readonly id: string;\n  public readonly owner: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'shift-profile-owner';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEventHandler.html":{"url":"classes/ShiftProfileOwnerEventHandler.html","title":"class - ShiftProfileOwnerEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: ShiftProfileOwnerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ShiftProfileOwnerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerEvent } from '../../event/shift-profile-owner.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(ShiftProfileOwnerEvent)\nexport class ShiftProfileOwnerEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: ShiftProfileOwnerEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' have been shifted to user with id: ' + event.owner + '',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerRequest.html":{"url":"classes/ShiftProfileOwnerRequest.html","title":"class - ShiftProfileOwnerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/shift-profile-owner.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerRequest {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  mail: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialNetworkController.html":{"url":"controllers/SocialNetworkController.html","title":"controller - SocialNetworkController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialNetworkController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/social-network.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                social-network\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSocialNetwork\n                            \n                            \n                                    Async\n                                deleteSocialNetwork\n                            \n                            \n                                    Async\n                                getAllSocialNetworks\n                            \n                            \n                                    Async\n                                getSocialNetworkById\n                            \n                            \n                                    Async\n                                getSocialNetworksWithCriteria\n                            \n                            \n                                    Async\n                                restoreSocialNetwork\n                            \n                            \n                                    Async\n                                updateSocialNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSocialNetwork(createSocialNetworkRequest: CreateSocialNetworkRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSocialNetworkRequest\n                                    \n                                                CreateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSocialNetwork(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSocialNetworks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSocialNetworks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkById(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworksWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworksWithCriteria(getSocialNetworksWithCriteriaRequest: GetSocialNetworkWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getSocialNetworksWithCriteriaRequest\n                                    \n                                                GetSocialNetworkWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSocialNetwork(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSocialNetwork(socialNetworkId: string, createSocialNetworkRequest: UpdateSocialNetworkRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createSocialNetworkRequest\n                                    \n                                                UpdateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { SocialNetworkService } from './social-network.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateSocialNetworkRequest } from './web/request/create-social-network.request';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { SocialNetworkResponse } from './web/response/social-network.response';\nimport { GetSocialNetworkWithCriteriaRequest } from './web/request/get-social-network-with-criteria.request';\nimport { UpdateSocialNetworkRequest } from './web/request/update-social-network.request';\n\n@Controller('social-network')\n@ApiTags('SocialNetwork')\nexport class SocialNetworkController {\n  constructor(private readonly socialNetworkService: SocialNetworkService) {}\n\n  @Get('/public/')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getAllSocialNetworks(): Promise {\n    return await this.socialNetworkService.getAllSocialNetwork().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getSocialNetworkById(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.getSocialNetworkById(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getSocialNetworksWithCriteria(\n    @Body() getSocialNetworksWithCriteriaRequest: GetSocialNetworkWithCriteriaRequest,\n  ): Promise {\n    return await this.socialNetworkService\n      .getSocialNetworkWithCriteria(getSocialNetworksWithCriteriaRequest)\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  @Post('/admin/create')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createSocialNetwork(@Body() createSocialNetworkRequest: CreateSocialNetworkRequest): Promise {\n    return await this.socialNetworkService.createSocialNetwork(createSocialNetworkRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateSocialNetwork(\n    @Param('id') socialNetworkId: string,\n    @Body() createSocialNetworkRequest: UpdateSocialNetworkRequest,\n  ): Promise {\n    return await this.socialNetworkService\n      .updateSocialNetwork(socialNetworkId, createSocialNetworkRequest)\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  @Delete('/admin/delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteSocialNetwork(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.deleteSocialNetwork(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreSocialNetwork(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.restoreSocialNetwork(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialNetworkDto.html":{"url":"classes/SocialNetworkDto.html","title":"class - SocialNetworkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialNetworkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/domain/dto/social-network.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialNetworkDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/domain/entities/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                color\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from '../../../card/domain/entities/card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity extends BaseEntity {\n  constructor(partial: Partial) {\n    super();\n    Object.assign(this, partial);\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  @Column()\n  color: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialNetworkModule.html":{"url":"modules/SocialNetworkModule.html","title":"module - SocialNetworkModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialNetworkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SocialNetworkModule\n\n\n\ncluster_SocialNetworkModule_providers\n\n\n\ncluster_SocialNetworkModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nSocialNetworkModule -->\n\nApiLogModule->SocialNetworkModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nSocialNetworkModule -->\n\nApiLogService->SocialNetworkModule\n\n\n\n\n\nSocialNetworkService\n\nSocialNetworkService\n\nSocialNetworkModule -->\n\nSocialNetworkService->SocialNetworkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/social-network/social-network.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            SocialNetworkService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialNetworkController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SocialNetworkEntity } from './domain/entities/social-network.entity';\nimport { SocialNetworkController } from './social-network.controller';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetAllSocialNetworkQueryHandler } from './cqrs/handler/query/get-all-social-network.query-handler';\nimport { GetSocialNetworkWithCriteriaQueryHandler } from './cqrs/handler/query/get-social-network-with-criteria.query-handler';\nimport { RestoreSocialNetworkEventHandler } from './cqrs/handler/event/restore-social-network.event-handler';\nimport { SoftDeleteSocialNetworkEventHandler } from './cqrs/handler/event/soft-delete-social-network.event-handler';\nimport { DeleteSocialNetworkCommandHandler } from './cqrs/handler/command/delete-social-network.command-handler';\nimport { CreateSocialNetworkEventHandler } from './cqrs/handler/event/create-social-network.event-handler';\nimport { CreateSocialNetworkCommandHandler } from './cqrs/handler/command/create-social-network.command-handler';\nimport { GetSocialNetworkByIdQueryHandler } from './cqrs/handler/query/get-social-network-by-id.query-handler';\nimport { DeleteSocialNetworkEventHandler } from './cqrs/handler/event/delete-social-network.event-handler';\nimport { RestoreSocialNetworkCommandHandler } from './cqrs/handler/command/restore-social-network.command-handler';\nimport { SocialNetworkService } from './social-network.service';\nimport { UpdateSocialNetworkCommandHandler } from './cqrs/handler/command/update-social-network.command-handler';\nimport { UpdateSocialNetworkEventHandler } from './cqrs/handler/event/update-social-network.event-handler';\nimport { SoftDeleteSocialNetworkCommandHandler } from './cqrs/handler/command/soft-delete-social-network.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, SocialNetworkEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [SocialNetworkController],\n  providers: [\n    SocialNetworkService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateSocialNetworkCommandHandler,\n    DeleteSocialNetworkCommandHandler,\n    RestoreSocialNetworkCommandHandler,\n    SoftDeleteSocialNetworkCommandHandler,\n    UpdateSocialNetworkCommandHandler,\n    // Query handlers\n    GetAllSocialNetworkQueryHandler,\n    GetSocialNetworkByIdQueryHandler,\n    GetSocialNetworkWithCriteriaQueryHandler,\n    // Event handlers\n    CreateSocialNetworkEventHandler,\n    DeleteSocialNetworkEventHandler,\n    SoftDeleteSocialNetworkEventHandler,\n    UpdateSocialNetworkEventHandler,\n    RestoreSocialNetworkEventHandler,\n  ],\n})\nexport class SocialNetworkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialNetworkResponse.html":{"url":"classes/SocialNetworkResponse.html","title":"class - SocialNetworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialNetworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/response/social-network.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/response/social-network.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialNetworkResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialNetworkService.html":{"url":"injectables/SocialNetworkService.html","title":"injectable - SocialNetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialNetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/social-network.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSocialNetwork\n                            \n                            \n                                    Async\n                                deleteSocialNetwork\n                            \n                            \n                                    Async\n                                getAllSocialNetwork\n                            \n                            \n                                    Async\n                                getSocialNetworkById\n                            \n                            \n                                    Async\n                                getSocialNetworkWithCriteria\n                            \n                            \n                                    Async\n                                restoreSocialNetwork\n                            \n                            \n                                    Async\n                                updateSocialNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/social-network.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSocialNetwork(socialNetworkRequest: CreateSocialNetworkRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkRequest\n                                    \n                                                CreateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSocialNetwork(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSocialNetwork()\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkById(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkWithCriteria(criteria: GetSocialNetworkWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                GetSocialNetworkWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSocialNetwork(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSocialNetwork(socialNetworkId: string, socialNetworkRequest: UpdateSocialNetworkRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socialNetworkRequest\n                                    \n                                                UpdateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateSocialNetworkRequest } from './web/request/create-social-network.request';\nimport { CreateSocialNetworkCommand } from './cqrs/command/create-social-network.command';\nimport { UpdateSocialNetworkRequest } from './web/request/update-social-network.request';\nimport { GetSocialNetworkWithCriteriaQuery } from './cqrs/query/get-social-network-with-criteria.query';\nimport { DeleteSocialNetworkCommand } from './cqrs/command/delete-social-network.command';\nimport { GetAllSocialNetworkQuery } from './cqrs/query/get-all-social-network.query';\nimport { GetSocialNetworkWithCriteriaRequest } from './web/request/get-social-network-with-criteria.request';\nimport { QueryErrorException } from '../../util/exception/custom-http-exception/query-error.exception';\nimport { RestoreSocialNetworkCommand } from './cqrs/command/restore-social-network.command';\nimport { SocialNetworkDto } from './domain/dto/social-network.dto';\nimport { SocialNetworkResponse } from './web/response/social-network.response';\nimport { UpdateSocialNetworkCommand } from './cqrs/command/update-social-network.command';\nimport { GetSocialNetworkByIdQuery } from './cqrs/query/get-social-network-by-id.query';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { EntityCreationException } from '../../util/exception/custom-http-exception/entity-creation.exception';\nimport { DuplicateNameException } from '../../util/exception/custom-http-exception/duplicate-name.exception';\nimport { CommandErrorException } from '../../util/exception/custom-http-exception/command-error.exception';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\n\n@Injectable()\nexport class SocialNetworkService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async getAllSocialNetwork(): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetAllSocialNetworkQuery())\n        .then((socialNetworksDto: SocialNetworkDto[]) => {\n          return socialNetworksDto.map(socialNetworkDto => {\n            return new SocialNetworkResponse(socialNetworkDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async getSocialNetworkById(socialNetworkId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetSocialNetworkByIdQuery({ id: socialNetworkId }))\n        .then((socialNetworkDto: SocialNetworkDto) => {\n          return new SocialNetworkResponse(socialNetworkDto);\n        });\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new QueryErrorException();\n    }\n  }\n\n  async getSocialNetworkWithCriteria(criteria: GetSocialNetworkWithCriteriaRequest): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetSocialNetworkWithCriteriaQuery({\n            name: criteria.name,\n            isDeleted: criteria.isDeleted,\n          }),\n        )\n        .then((socialNetworksDto: SocialNetworkDto[]) => {\n          return socialNetworksDto.map(socialNetworkDto => {\n            return new SocialNetworkResponse(socialNetworkDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async createSocialNetwork(socialNetworkRequest: CreateSocialNetworkRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateSocialNetworkCommand({\n          name: socialNetworkRequest.name,\n          url: socialNetworkRequest.url,\n          icon: socialNetworkRequest.icon,\n          color: socialNetworkRequest.color,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Duplicated name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else if (error.message === 'SocialNetwork not created') throw new EntityCreationException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async updateSocialNetwork(socialNetworkId: string, socialNetworkRequest: UpdateSocialNetworkRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateSocialNetworkCommand({\n          color: socialNetworkRequest.color,\n          icon: socialNetworkRequest.icon,\n          url: socialNetworkRequest.url,\n          name: socialNetworkRequest.name,\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async deleteSocialNetwork(socialNetworkId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteSocialNetworkCommand({\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async restoreSocialNetwork(socialNetworkId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreSocialNetworkCommand({\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteCardCommand.html":{"url":"classes/SoftDeleteCardCommand.html","title":"class - SoftDeleteCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/soft-delete-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/soft-delete-card.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/soft-delete-card.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteCardCommandHandler.html":{"url":"classes/SoftDeleteCardCommandHandler.html","title":"class - SoftDeleteCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/soft-delete-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/soft-delete-card.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/soft-delete-card.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteCardCommand } from '../../command/soft-delete-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { SoftDeleteCardEvent } from '../../event/soft-delete-card.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SoftDeleteCardCommand)\nexport class SoftDeleteCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteCardCommand): Promise {\n    try {\n      await this.cardRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n\n      await this.cardRepository.softDelete(command.id);\n      this.eventBus.publish(\n        new SoftDeleteCardEvent({\n          cardId: command.id,\n        }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'SoftDeleteCardCommandHandler',\n          localisation: 'card',\n          error: error.message,\n        }),\n      );\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteCardEvent.html":{"url":"classes/SoftDeleteCardEvent.html","title":"class - SoftDeleteCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/soft-delete-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/soft-delete-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/soft-delete-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/soft-delete-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/soft-delete-card.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'soft-delete-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteCardEventHandler.html":{"url":"classes/SoftDeleteCardEventHandler.html","title":"class - SoftDeleteCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/soft-delete-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/soft-delete-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/soft-delete-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteCardEvent } from '../../event/soft-delete-card.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteCardEvent)\nexport class SoftDeleteCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommand.html":{"url":"classes/SoftDeleteOccupationCommand.html","title":"class - SoftDeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/soft-delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommandHandler.html":{"url":"classes/SoftDeleteOccupationCommandHandler.html","title":"class - SoftDeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { SoftDeleteOccupationCommand } from '../../command/soft-delete-occupation.command';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(SoftDeleteOccupationCommand)\nexport class SoftDeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.softDelete(occupation.id).catch(() => {\n        throw new Error('Occupation not soft deleted');\n      });\n      this.eventBus.publish(\n        new SoftDeleteOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'SoftDeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEvent.html":{"url":"classes/SoftDeleteOccupationEvent.html","title":"class - SoftDeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/soft-delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'soft-delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEventHandler.html":{"url":"classes/SoftDeleteOccupationEventHandler.html","title":"class - SoftDeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteOccupationEvent)\nexport class SoftDeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommand.html":{"url":"classes/SoftDeleteProfileCommand.html","title":"class - SoftDeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/soft-delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommandHandler.html":{"url":"classes/SoftDeleteProfileCommandHandler.html","title":"class - SoftDeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileCommand } from '../../command/soft-delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\n\n@CommandHandler(SoftDeleteProfileCommand)\nexport class SoftDeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.softDelete({\n        id: profile.id,\n      });\n      this.eventBus.publish(\n        new SoftDeleteProfileEvent({\n          id: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEvent.html":{"url":"classes/SoftDeleteProfileEvent.html","title":"class - SoftDeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/soft-delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileEvent {\n  public readonly id: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'soft-delete-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEventHandler.html":{"url":"classes/SoftDeleteProfileEventHandler.html","title":"class - SoftDeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteProfileEvent)\nexport class SoftDeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkCommand.html":{"url":"classes/SoftDeleteSocialNetworkCommand.html","title":"class - SoftDeleteSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/soft-delete-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/soft-delete-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/soft-delete-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkCommandHandler.html":{"url":"classes/SoftDeleteSocialNetworkCommandHandler.html","title":"class - SoftDeleteSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteSocialNetworkCommand } from '../../command/soft-delete-social-network.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteSocialNetworkEvent } from '../../event/soft-delete-social-network.event';\n\n@CommandHandler(SoftDeleteSocialNetworkCommand)\nexport class SoftDeleteSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .softDelete(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new SoftDeleteSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not deleted');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkEvent.html":{"url":"classes/SoftDeleteSocialNetworkEvent.html","title":"class - SoftDeleteSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/soft-delete-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'soft-delete-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkEventHandler.html":{"url":"classes/SoftDeleteSocialNetworkEventHandler.html","title":"class - SoftDeleteSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { SoftDeleteSocialNetworkEvent } from '../../event/soft-delete-social-network.event';\n\n@EventsHandler(SoftDeleteSocialNetworkEvent)\nexport class SoftDeleteSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommand.html":{"url":"classes/SoftDeleteUserCommand.html","title":"class - SoftDeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/soft-delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommandHandler.html":{"url":"classes/SoftDeleteUserCommandHandler.html","title":"class - SoftDeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserCommand } from '../../command/soft-delete-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\n\n@CommandHandler(SoftDeleteUserCommand)\nexport class SoftDeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteUserCommand): Promise {\n    try {\n      await this.userRepository\n        .findOneOrFail({\n          where: { id: command.userId },\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      await this.userRepository.softDelete({\n        id: command.userId,\n      });\n      this.eventBus.publish(new SoftDeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEvent.html":{"url":"classes/SoftDeleteUserEvent.html","title":"class - SoftDeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/soft-delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEventHandler.html":{"url":"classes/SoftDeleteUserEventHandler.html","title":"class - SoftDeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteUserEvent)\nexport class SoftDeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferProfileToUserCommand.html":{"url":"classes/TransferProfileToUserCommand.html","title":"class - TransferProfileToUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferProfileToUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/transfer-profile-to-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loginDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignInDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SignInDto } from '../../../auth/dto/sign-in.dto';\n\nexport class TransferProfileToUserCommand {\n  public readonly userId: string;\n  public readonly loginDto: SignInDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardCommand.html":{"url":"classes/UpdateCardCommand.html","title":"class - UpdateCardCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/command/update-card.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                address\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                birthday\n                            \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                companyName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                jobTitle\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                phone\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                socialName\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                socialNetworkId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                    Public\n                                    Readonly\n                                typeOfCardEnum\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                url\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanSendMessagesEnums\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        jobTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        socialNetworkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/command/update-card.command.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\n\nexport class UpdateCardCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly profileId: string;\n  public readonly typeOfCardEnum: TypeOfCardEnum;\n  public readonly socialName?: string;\n  public readonly firstName?: string;\n  public readonly lastName?: string;\n  public readonly email?: string;\n  public readonly phone?: string[];\n  public readonly companyName?: string;\n  public readonly jobTitle?: string;\n  public readonly address?: string;\n  public readonly url?: string[];\n  public readonly birthday?: Date;\n  public readonly occupationsId?: string[];\n  public readonly whoCanShareCardEnums?: string[];\n  public readonly whoCanSeeCardInformationEnums?: string[];\n  public readonly whoCanSendMessagesEnums?: string[];\n  public readonly transferableStatusCardEnum?: string[];\n  public readonly socialNetworkId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardCommandHandler.html":{"url":"classes/UpdateCardCommandHandler.html","title":"class - UpdateCardCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/command/update-card.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardRepository: Repository, profileRepository: Repository, occupationRepository: Repository, socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/command/update-card.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateCardCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/command/update-card.command-handler.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateCardCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateCardCommand } from '../../command/update-card.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CardEntity } from '../../../domain/entities/card.entity';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../../profile/domain/entities/profile.entity';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\nimport { SocialNetworkEntity } from '../../../../social-network/domain/entities/social-network.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { validate } from 'class-validator';\nimport { UpdateCardEvent } from '../../event/update-card.event';\n\n@CommandHandler(UpdateCardCommand)\nexport class UpdateCardCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateCardCommand): Promise {\n    try {\n      const cardToUpdate = await this.cardRepository\n        .findOneOrFail({\n          relations: ['owner', 'socialNetwork', 'occupations'],\n          where: [\n            {\n              id: command.cardId,\n            },\n          ],\n        })\n        .catch(() => {\n          throw new Error('Card not found');\n        });\n\n      if (command.profileId != undefined) {\n        if (cardToUpdate.owner.id !== command.profileId) {\n          cardToUpdate.owner = await this.profileRepository\n            .findOneOrFail({\n              where: [\n                {\n                  id: command.profileId,\n                },\n              ],\n            })\n            .catch(() => {\n              throw new Error('Profile not found');\n            })\n            .then(profile => {\n              return profile;\n            });\n        }\n      }\n\n      if (command.socialNetworkId != undefined) {\n        if (cardToUpdate.socialNetwork.id !== command.socialNetworkId) {\n          cardToUpdate.socialNetwork = await this.socialNetworkRepository\n            .findOneOrFail({\n              where: [\n                {\n                  id: command.socialNetworkId,\n                },\n              ],\n            })\n            .catch(() => {\n              throw new Error('Social Network not found');\n            })\n            .then(socialNetwork => {\n              return socialNetwork;\n            });\n        }\n      }\n\n      if (command.occupationsId != undefined) {\n        for (const occupationId of command.occupationsId) {\n          if (!cardToUpdate.occupations.find(occupation => occupation.id === occupationId)) {\n            const occupation = await this.occupationRepository\n              .findOneOrFail({\n                where: [\n                  {\n                    id: occupationId,\n                  },\n                ],\n              })\n              .catch(() => {\n                throw new Error('Occupation not found');\n              })\n              .then(occupation => {\n                return occupation;\n              });\n            cardToUpdate.occupations.push(occupation);\n          }\n        }\n      }\n\n      const cardUpdated = new CardEntity({\n        ...cardToUpdate,\n      });\n      const err = await validate(cardUpdated);\n      if (err.length > 0) {\n        throw new Error(err.toString());\n      }\n\n      await this.cardRepository\n        .update(cardToUpdate.id, cardUpdated)\n        .then(() => {\n          this.eventBus.publish(\n            new UpdateCardEvent({\n              cardId: command.cardId,\n            }),\n          );\n        })\n        .catch(() => {\n          throw new Error('Card not updated');\n        });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          error: error.message,\n          handler: 'UpdateCardCommandHandler',\n          localisation: 'card',\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardEvent.html":{"url":"classes/UpdateCardEvent.html","title":"class - UpdateCardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/event/update-card.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cardId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/event/update-card.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/update-card.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/update-card.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                    \n                        \n                                Defined in src/api/card/cqrs/event/update-card.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateCardEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly cardId: string;\n  public readonly module: string = 'card';\n  public readonly method: string = 'update-card';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardEventHandler.html":{"url":"classes/UpdateCardEventHandler.html","title":"class - UpdateCardEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/cqrs/handler/event/update-card.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/cqrs/handler/event/update-card.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateCardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/card/cqrs/handler/event/update-card.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateCardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from 'src/api/api-log/api-log.service';\nimport { UpdateCardEvent } from '../../event/update-card.event';\n\n@EventsHandler(UpdateCardEvent)\nexport class UpdateCardEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateCardEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Card with id: ' + event.cardId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCardRequest.html":{"url":"classes/UpdateCardRequest.html","title":"class - UpdateCardRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCardRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/card/web/request/update-card.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                cardId\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                    Optional\n                                connectedCardsId\n                            \n                            \n                                    Optional\n                                emails\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                groupMembershipsId\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                mediaUrl\n                            \n                            \n                                    Optional\n                                messagesCount\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupationsId\n                            \n                            \n                                owner\n                            \n                            \n                                    Optional\n                                phones\n                            \n                            \n                                profileId\n                            \n                            \n                                    Optional\n                                savedById\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                    Optional\n                                socialNetworkName\n                            \n                            \n                                    Optional\n                                transferableStatusCardEnum\n                            \n                            \n                                    Optional\n                                typeOfCardEnum\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                    Optional\n                                whoCanCommunicateWithEnum\n                            \n                            \n                                    Optional\n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                    Optional\n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/card/web/request/update-card.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        connectedCardsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupMembershipsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mediaUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messagesCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialNetworkName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanCommunicateWithEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/card/web/request/update-card.request.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOfCardEnum } from '../../domain/enum/type-of-card.enum';\nimport { WhoCanShareCardEnum } from '../../domain/enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from '../../domain/enum/who-can-see-card-information.enum';\nimport { WhoCanCommunicateWithEnum } from '../../domain/enum/who-can-communicate-with.enum';\nimport { TransferableStatusCardEnum } from '../../domain/enum/transferable-status-card.enum';\n\nexport class UpdateCardRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  cardId: string;\n  profileId: string;\n  socialName?: string;\n  isOwnerPro: boolean;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n  phones?: string[];\n  emails?: string[];\n  urls?: string[];\n  birthday?: Date;\n  notes?: string;\n  numberOfShares: number;\n  owner: string;\n  connectedCardsId?: string[];\n  savedById?: string[];\n  occupationsId?: string[];\n  groupMembershipsId?: string[];\n  mediaUrl?: string;\n  messagesCount?: number;\n  socialNetworkName?: string;\n  typeOfCardEnum?: TypeOfCardEnum;\n  whoCanShareCardEnums?: WhoCanShareCardEnum[];\n  whoCanSeeCardInformationEnums?: WhoCanSeeCardInformationEnum[];\n  whoCanCommunicateWithEnum?: WhoCanCommunicateWithEnum[];\n  transferableStatusCardEnum?: TransferableStatusCardEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommand.html":{"url":"classes/UpdateOccupationCommand.html","title":"class - UpdateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/update-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateOccupationDto } from '../../domain/dto/update-occupation.dto';\n\nexport class UpdateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly updateOccupationDto: UpdateOccupationDto;\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommandHandler.html":{"url":"classes/UpdateOccupationCommandHandler.html","title":"class - UpdateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UpdateOccupationCommand } from '../../command/update-occupation.command';\n\n@CommandHandler(UpdateOccupationCommand)\nexport class UpdateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.updateOccupationDto.name && occupation.id !== command.occupationId) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n\n      const updatedOccupationEntity: OccupationEntity = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        })\n        .then(occupationEntity => {\n          return new OccupationEntity({\n            ...occupationEntity,\n            ...command.updateOccupationDto,\n          });\n        });\n      const err = await validate(updatedOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      await this.occupationRepository\n        .update(command.occupationId, updatedOccupationEntity)\n        .catch(() => {\n          throw new Error('Occupation not updated');\n        })\n        .then(async () => {\n          await this.eventBus.publish(\n            new UpdateOccupationCommand({\n              occupationId: command.occupationId,\n            }),\n          );\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'UpdateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationDto.html":{"url":"classes/UpdateOccupationDto.html","title":"class - UpdateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/update-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEvent.html":{"url":"classes/UpdateOccupationEvent.html","title":"class - UpdateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/update-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'update-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEventHandler.html":{"url":"classes/UpdateOccupationEventHandler.html","title":"class - UpdateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationEvent } from '../../event/update-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationEvent)\nexport class UpdateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationRequest.html":{"url":"classes/UpdateOccupationRequest.html","title":"class - UpdateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/update-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommand.html":{"url":"classes/UpdateOccupationsProfileCommand.html","title":"class - UpdateOccupationsProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-occupations-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileCommand {\n  public readonly id: string;\n  public readonly occupations: string[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommandHandler.html":{"url":"classes/UpdateOccupationsProfileCommandHandler.html","title":"class - UpdateOccupationsProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationsProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationsProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileCommand } from '../../command/update-occupations-profile.command';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(UpdateOccupationsProfileCommand)\nexport class UpdateOccupationsProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationsProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      const occupationPromises: Promise[] = command.occupations.map(async occupationId => {\n        return await this.occupationRepository\n          .findOneOrFail({\n            where: [{ id: occupationId }],\n          })\n          .catch(() => {\n            throw new Error('Occupation not found');\n          });\n      });\n      const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n      if (occupations.length == 0) {\n        throw new Error('Occupations not found');\n      }\n\n      await this.profileRepository.update(profile.id, {\n        occupations: occupations,\n      });\n      this.eventBus.publish(\n        new UpdateOccupationsProfileEvent({\n          listOfOccupationId: command.occupations,\n          profileId: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileDto.html":{"url":"classes/UpdateOccupationsProfileDto.html","title":"class - UpdateOccupationsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-occupations-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateOccupationsProfileDto {\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEvent.html":{"url":"classes/UpdateOccupationsProfileEvent.html","title":"class - UpdateOccupationsProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-occupations-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                listOfOccupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        listOfOccupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupations-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileEvent {\n  public readonly listOfOccupationId: string[];\n  public readonly profileId: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-occupations-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEventHandler.html":{"url":"classes/UpdateOccupationsProfileEventHandler.html","title":"class - UpdateOccupationsProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationsProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationsProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationsProfileEvent)\nexport class UpdateOccupationsProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: UpdateOccupationsProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' +\n        event.profileId +\n        ' occupation have been updated with id: ' +\n        event.listOfOccupationId.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommand.html":{"url":"classes/UpdateProfileCommand.html","title":"class - UpdateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileDto } from '../../domain/dto/update-profile.dto';\n\nexport class UpdateProfileCommand {\n  public readonly id: string;\n  public readonly updateProfileDto: UpdateProfileDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommandHandler.html":{"url":"classes/UpdateProfileCommandHandler.html","title":"class - UpdateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { UpdateProfileCommand } from '../../command/update-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateProfileCommand)\nexport class UpdateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      await this.profileRepository.update(profile.id, command.updateProfileDto);\n      this.eventBus.publish(\n        new UpdateProfileEvent({\n          updateProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileDto {\n  public readonly usernameProfile?: string;\n  public readonly roleProfile?: RoleProfileEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEvent.html":{"url":"classes/UpdateProfileEvent.html","title":"class - UpdateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileCommand } from '../command/update-profile.command';\n\nexport class UpdateProfileEvent {\n  public readonly updateProfileCommand: UpdateProfileCommand;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEventHandler.html":{"url":"classes/UpdateProfileEventHandler.html","title":"class - UpdateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateProfileEvent)\nexport class UpdateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.updateProfileCommand.updateProfileDto + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileRequest.html":{"url":"classes/UpdateProfileRequest.html","title":"class - UpdateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/update-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileRequest {\n  public readonly id: string;\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkCommand.html":{"url":"classes/UpdateSocialNetworkCommand.html","title":"class - UpdateSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/update-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkCommandHandler.html":{"url":"classes/UpdateSocialNetworkCommandHandler.html","title":"class - UpdateSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateSocialNetworkCommand } from '../../command/update-social-network.command';\nimport { Repository } from 'typeorm';\nimport { UpdateSocialNetworkEvent } from '../../event/update-social-network.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\n\n@CommandHandler(UpdateSocialNetworkCommand)\nexport class UpdateSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .update(socialNetwork.id, {\n            ...command,\n          })\n          .then(async () => {\n            await this.eventBus.publish(new UpdateSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not updated');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkEvent.html":{"url":"classes/UpdateSocialNetworkEvent.html","title":"class - UpdateSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/update-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'update-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkEventHandler.html":{"url":"classes/UpdateSocialNetworkEventHandler.html","title":"class - UpdateSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateSocialNetworkEvent } from '../../event/update-social-network.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateSocialNetworkEvent)\nexport class UpdateSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkRequest.html":{"url":"classes/UpdateSocialNetworkRequest.html","title":"class - UpdateSocialNetworkRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/update-social-network.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedMail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      if (command.user.username) {\n        if (await this.isDuplicatedUsername(command.user.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.user.mail) {\n        if (await this.isDuplicatedEmail(command.user.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n      if ((await this.userRepository.findOne({ where: [{ id: command.userId }] })) === undefined) {\n        throw new Error('User not found');\n      }\n\n      await this.isDuplicateOfDeletedUsername(command.user.username || '');\n      await this.isDuplicateOfDeletedMail(command.user.mail || '');\n\n      const err = await validate(command.user);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'UpdateUserCommandHandler',\n          error: error,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ mail: mail }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null && verifyDuplicateMailWithDeleted.deletedAt !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        mail: 'deleted' + verifyDuplicateMailWithDeleted.mail + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n\n  private async isDuplicateOfDeletedUsername(username: string): Promise {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ username: username }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        username: 'deleted' + verifyDuplicateMailWithDeleted.username + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommand.html":{"url":"classes/UpdateUserCredentialCommand.html","title":"class - UpdateUserCredentialCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-credential.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                updateUserCredentialDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserCredentialDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserCredentialDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserCredentialDto } from '../../domain/dto/update-user-credential.dto';\n\nexport class UpdateUserCredentialCommand {\n  public readonly userId: string;\n  public readonly updateUserCredentialDto: UpdateUserCredentialDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommandHandler.html":{"url":"classes/UpdateUserCredentialCommandHandler.html","title":"class - UpdateUserCredentialCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCredentialCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCredentialCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCredentialCommand } from '../../command/update-user-credential.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(UpdateUserCredentialCommand)\nexport class UpdateUserCredentialCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: UpdateUserCredentialCommand): Promise {\n    try {\n      if (command.updateUserCredentialDto.newPassword == command.updateUserCredentialDto.password) {\n        throw new Error('New password is the same as old password');\n      }\n      if (!this.isValidPassword(command.updateUserCredentialDto.newPassword)) {\n        throw new Error('Invalid password');\n      }\n      const user = await this.userRepository.findOne({\n        where: { id: command.userId },\n        select: ['id', 'password'],\n      });\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      if (!(await this.verifyPassword(command.updateUserCredentialDto.password, user.password))) {\n        throw new Error('Invalid old password');\n      }\n\n      await this.userRepository.update(command.userId, { password: command.updateUserCredentialDto.newPassword });\n      await this.eventBus.publish(new UpdateUserCredentialEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserCredentialCommandHandler', error: error }),\n      );\n      throw error;\n    }\n  }\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialDto.html":{"url":"classes/UpdateUserCredentialDto.html","title":"class - UpdateUserCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialDto {\n  public readonly username: string;\n  public readonly password: string;\n\n  public readonly newPassword: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEvent.html":{"url":"classes/UpdateUserCredentialEvent.html","title":"class - UpdateUserCredentialEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-credential.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-credential'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-credential';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEventHandler.html":{"url":"classes/UpdateUserCredentialEventHandler.html","title":"class - UpdateUserCredentialEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserCredentialEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserCredentialEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\n\n@EventsHandler(UpdateUserCredentialEvent)\nexport class UpdateUserCredentialEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserCredentialEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  mail?: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username?: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommand.html":{"url":"classes/UpdateUserRoleCommand.html","title":"class - UpdateUserRoleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-role.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../domain/enum/user-role.enum';\n\nexport class UpdateUserRoleCommand {\n  public readonly userId: string;\n  public readonly roles: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommandHandler.html":{"url":"classes/UpdateUserRoleCommandHandler.html","title":"class - UpdateUserRoleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserRoleCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserRoleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleCommand } from '../../command/update-user-role.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateUserRoleCommand)\nexport class UpdateUserRoleCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserRoleCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, { roles: command.roles });\n      await this.eventBus.publish(new UpdateUserRoleEvent(command));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserRoleCommandHandler', error: error }),\n      );\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEvent.html":{"url":"classes/UpdateUserRoleEvent.html","title":"class - UpdateUserRoleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-role.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateUserRoleCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateUserRoleCommand: UpdateUserRoleCommand)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateUserRoleCommand\n                                                  \n                                                        \n                                                                        UpdateUserRoleCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-role'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserRoleCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserRoleCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserRoleCommand } from '../command/update-user-role.command';\n\nexport class UpdateUserRoleEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-role';\n  constructor(public readonly updateUserRoleCommand: UpdateUserRoleCommand) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEventHandler.html":{"url":"classes/UpdateUserRoleEventHandler.html","title":"class - UpdateUserRoleEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserRoleEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserRoleEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserRoleEvent)\nexport class UpdateUserRoleEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserRoleEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'User with id: ' +\n        event.updateUserRoleCommand.userId +\n        ' updated role with ' +\n        event.updateUserRoleCommand.roles.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/web/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMe\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/public/delete-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@Post('/admin/criteria')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/full-delete/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/generate-user-from-mail')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(requestUser: RequestUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Post('/admin/restore-user')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMe(requestUser: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(requestUser: RequestUser, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-password')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: string, roles: ListRolesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Put('/admin/:id/role')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                ListRolesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from '../user.service';\nimport { CreateUserDto } from '../domain/dto/create-user.dto';\nimport { CreateUserResponse } from '../domain/response/create-user.response';\nimport { UpdateUserDto } from '../domain/dto/update-user.dto';\nimport { RequestUser } from '../../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from '../domain/response/user.response';\nimport { RoleGuard } from '../../auth/guards/role.guard';\nimport { UserRoleEnum } from '../domain/enum/user-role.enum';\nimport { GetUserWithCriteriaDto } from '../domain/dto/get-user-with-criteria.dto';\nimport { UpdateUserCredentialDto } from '../domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from '../domain/dto/generate-user.dto';\nimport { ListRolesDto } from '../domain/dto/list-roles.dto';\nimport { UserIdDto } from '../domain/dto/user-id.dto';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/admin/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/admin/generate-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async generateUserFromMail(@Body() generateUserDto: GenerateUserDto): Promise {\n    try {\n      return await this.userService.generateUserFromMail(generateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Post('/admin/restore-user')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreUser(@Body() userId: UserIdDto): Promise {\n    try {\n      return await this.userService.restoreUser(userId.userId);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n  @Get('/admin/')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findAll(): Promise {\n    try {\n      return await this.userService.findAll();\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findOne(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.findOne(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @Post('/admin/criteria')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findWithCriteria(\n    @Body() getUserWithCriteriaDto: GetUserWithCriteriaDto,\n  ): Promise {\n    try {\n      return await this.userService.findWithCriteria(getUserWithCriteriaDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/public/get-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      const { user } = requestUser;\n      return await this.userService.findMe(user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async update(\n    @Param('id') userId: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(userId, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Put('/admin/:id/role')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateRole(@Param('id') id: string, @Body() roles: ListRolesDto): Promise {\n    try {\n      return await this.userService.updateRoles(id, roles.roles);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMe(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(requestUser.user.id, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-password')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updatePassword(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserCredentialDto: UpdateUserCredentialDto,\n  ): Promise {\n    try {\n      return await this.userService.updatePassword(requestUser.user.id, updateUserCredentialDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  remove(@Req() requestUser: RequestUser, @Param('id') id: string): Promise {\n    try {\n      return this.userService.remove(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/public/delete-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async deleteMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      return await this.userService.deleteMe(requestUser.user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/full-delete/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async fullDelete(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.fullDelete(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                    Public\n                                    Optional\n                                referralCode\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:57\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:77\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:49\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true, nullable: true })\n  mail?: string;\n\n  @Column()\n  @Column({ unique: true, nullable: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  @Column({ unique: true, nullable: true })\n  public referralCode?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  // ______________________________________________________\n  // Methods\n  // ______________________________________________________\n  @BeforeInsert()\n  private async addProfile(): Promise {\n    if (!this.profiles) {\n      this.profiles = [];\n    }\n    const profile = new ProfileEntity({});\n    this.profiles.push(profile);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdDto.html":{"url":"interfaces/UserIdDto.html","title":"interface - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-id.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserIdDto {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './web/user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginQueryHandler } from './cqrs/handler/query/get-user-login.query-handler';\nimport { GetUserIfRefreshTokenMatchesQueryHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.query-handler';\nimport { GetUserQueryHandler } from './cqrs/handler/query/get-user.query-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { SoftDeleteUserCommandHandler } from './cqrs/handler/command/soft-delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetUserWithCriteriaQueryHandler } from './cqrs/handler/query/get-user-with-criteria.query-handler';\nimport { UpdateUserCredentialCommandHandler } from './cqrs/handler/command/update-user-credential.command-handler';\nimport { UpdateUserRoleCommandHandler } from './cqrs/handler/command/update-user-role.command-handler';\nimport { RestoreUserCommandHandler } from './cqrs/handler/command/restore-user.command-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    SoftDeleteUserCommandHandler,\n    UpdateUserCredentialCommandHandler,\n    UpdateUserRoleCommandHandler,\n    RestoreUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginQueryHandler,\n    GetUserIfRefreshTokenMatchesQueryHandler,\n    GetUserQueryHandler,\n    GetUserWithCriteriaQueryHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly mail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Private\n                                generatePassword\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoles(userId: string, roles: UserRoleEnum[])\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                UserRoleEnum[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\nimport { SoftDeleteUserCommand } from './cqrs/command/soft-delete-user.command';\nimport { GetUserWithCriteriaQuery } from './cqrs/query/get-user-with-criteria.query';\nimport { GetUserWithCriteriaDto } from './domain/dto/get-user-with-criteria.dto';\nimport { RestoreUserCommand } from './cqrs/command/restore-user.command';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\nimport { UpdateUserRoleCommand } from './cqrs/command/update-user-role.command';\nimport { UpdateUserCredentialCommand } from './cqrs/command/update-user-credential.command';\nimport { UpdateUserCredentialDto } from './domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from './domain/dto/generate-user.dto';\nimport { DeleteMailCommand } from '../api-landing-page/cqrs/command/delete-mail.command';\nimport { DuplicateMailException } from '../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { MailRequiredException } from '../../util/exception/custom-http-exception/mail-required.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { SamePasswordException } from '../../util/exception/custom-http-exception/same-password.exception';\nimport { InvalidPasswordException } from '../../util/exception/custom-http-exception/invalid-password.exception';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string): Promise {\n    return await this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string): Promise {\n    return await this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string): Promise {\n    return await this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return await this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserQuery(id));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserCommand(userId, updateUserDto));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Mail already exists' || error instanceof DuplicateMailException)\n        throw new DuplicateMailException();\n      else if (error instanceof DuplicateUsernameException || error.message === 'Username already exists') {\n        throw new DuplicateUsernameException();\n      } else throw Error('not handled error');\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.commandBus.execute(new SoftDeleteUserCommand(id));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async generateUserFromMail(generateUserDto: GenerateUserDto): Promise {\n    try {\n      if (!generateUserDto) throw new Error('Mail is required');\n      if ((await this.queryBus.execute(new GetUserWithCriteriaQuery({ mail: generateUserDto.mail }))).length > 0)\n        throw new Error('Mail already exists');\n      const user = await this.commandBus.execute(\n        new CreateUserCommand(\n          new CreateUserDto({\n            mail: generateUserDto.mail,\n            password: this.generatePassword(),\n            roles: generateUserDto.roles ? generateUserDto.roles : [UserRoleEnum.PUBLIC],\n          }),\n        ),\n      );\n      try {\n        await this.commandBus.execute(new DeleteMailCommand({ mail: generateUserDto.mail }));\n      } catch (error) {}\n      return user;\n    } catch (error) {\n      if (error.message === 'Mail is required') throw new MailRequiredException();\n      else if (error.message === 'Mail already exists') throw new DuplicateMailException();\n      else throw error;\n    }\n  }\n\n  async restoreUser(userId: string): Promise {\n    try {\n      return await this.commandBus.execute(new RestoreUserCommand({ id: userId }));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto): Promise {\n    return await this.queryBus.execute(new GetUserWithCriteriaQuery(getUserWithCriteriaDto));\n  }\n\n  async getMe(userId: string): Promise {\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  async updateRoles(userId: string, roles: UserRoleEnum[]): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserRoleCommand({ userId: userId, roles: roles }));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateUserCredentialCommand({ userId: userId, updateUserCredentialDto: updateUserCredentialDto }),\n      );\n    } catch (error) {\n      if (error.message === 'New password is the same as old password') throw new SamePasswordException();\n      else if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Invalid password') throw new InvalidPasswordException();\n      else if (error.message === 'Invalid old password') throw new InvalidPasswordException();\n      else throw error;\n    }\n  }\n\n  async deleteMe(userId: string): Promise {\n    if (!!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.commandBus.execute(new SoftDeleteUserCommand(userId));\n  }\n\n  async findMe(userId: string): Promise {\n    if (!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  private generatePassword(): string {\n    return 'Pt' + Math.random().toString(10).split('.')[1] + '!';\n  }\n\n  async fullDelete(id: string): Promise {\n    return await this.commandBus.execute(new DeleteUserCommand({ userId: id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.1.0 - 2023-04-03\nFeatures\n\nmodule card\npush to pprod\n\n0.0.10 - 2023-04-02\nFeatures\n\nmodule social-network\n\n0.0.9 - 2023-04-02\nFeatures\n\nmodule occupation\n\n0.0.8 - 2023-03-29\nFeatures\n\nmodule profile\nno test e2e\n\n0.0.7 - 2023-03-29\nFeatures\n\nmodule user\ntest e2e\n\n0.0.6 - 2023-03-18\nFeatures\n\napi-mail module\napi-landing-page module\nrefactor api-log\nfix things\n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            RoleProfileEnum   (src/.../role-profile.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/profile/domain/enum/role-profile.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleProfileEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 COMPANY\n                            \n                        \n                        \n                            \n                                Value : COMPANY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/card/domain/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/card/domain/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/card/domain/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/card/domain/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/card/domain/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OccupationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialNetworkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CardModule\n\n\n\ncluster_CardModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SocialNetworkModule\n\n\n\ncluster_SocialNetworkModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nSocialNetworkModule -->\n\nApiLogModule->SocialNetworkModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nApiLogModule->CardModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\nSocialNetworkModule -->\n\nApiLogService->SocialNetworkModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\nCardModule -->\n\nApiLogService->CardModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nSocialNetworkModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCardService\n\nCardService\n\nCardModule -->\n\nCardService->CardModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nSocialNetworkService\n\nSocialNetworkService\n\nSocialNetworkModule -->\n\nSocialNetworkService->SocialNetworkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    290 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-mail-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      return roles.some(role => user?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
