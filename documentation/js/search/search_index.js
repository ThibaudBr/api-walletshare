var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.024,1,2.661]],["body/entities/AddressEntity.html",[0,0.99,1,2.574,2,1.032,3,0.064,4,0.075,5,0.069,6,2.934,7,2.503,8,0.151,9,0.63,10,5.817,11,3.44,12,5.817,13,1.873,14,2.115,15,1.532,16,5.381,17,6.568,18,6.568,19,6.568,20,6.568,21,1.918,22,1.532,23,5.381,24,0.55,25,0.008,26,1.193,27,2.427,28,5.035,29,6.289,30,4.705,31,5.877,32,0.426,33,2.827,34,3.649,35,2.304,36,4.39,37,3.649,38,2.875,39,3.421,40,3.297,41,2.827,42,2.827,43,2.6,44,2.503,45,3.556,46,4.928,47,2.827,48,2.503,49,3.556,50,2.827,51,1.77,52,2.827,53,3.557,54,4.39,55,1.493,56,2.827,57,2.827,58,2.827,59,2.827,60,2.827,61,2.503,62,3.556,63,2.827,64,2.113,65,4.39,66,2.827,67,3.887,68,2.827,69,0.419,70,3.106,71,1.77,72,1.817,73,2.731,74,1.111,75,1.77,76,0.771,77,1.898,78,1.484,79,4.584,80,5.653,81,0.24,82,1.235,83,0.681,84,2.004,85,0.075,86,5.468,87,0.004,88,0.004]],["title/modules/ApiLogModule.html",[89,1.83,90,2.901]],["body/modules/ApiLogModule.html",[3,0.128,4,0.149,5,0.138,25,0.008,69,0.572,81,0.307,83,0.471,85,0.149,87,0.006,88,0.006,89,2.886,90,5.584,91,3.174,92,4.035,93,4.985,94,4.985,95,4.584,96,4.575,97,3.599,98,3.599,99,3.779,100,3.174,101,5.629,102,4.575,103,1.27,104,3.441,105,3.441,106,4.243,107,5.394,108,2.857,109,5.072,110,3.441,111,3.06,112,3.174,113,3.99,114,3.599,115,4.243,116,4.243,117,4.243,118,4.243,119,3.99,120,4.985,121,4.985,122,2.857]],["title/injectables/ApiLogService.html",[95,2.382,123,1.349]],["body/injectables/ApiLogService.html",[3,0.128,4,0.15,5,0.139,8,0.301,24,0.43,25,0.008,32,0.366,69,0.544,81,0.308,83,0.6,85,0.15,87,0.006,88,0.006,95,3.762,99,5.289,100,4.442,103,1.274,108,2.866,123,2.131,124,2.537,125,5,126,1.796,127,7.169,128,0.907,129,3.61,130,5.298,131,5.646,132,1.101,133,0.938,134,4.583,135,7.169,136,5.065,137,5.646,138,4.815,139,1.385,140,3.762,141,3.61,142,4.002,143,4.002,144,3.61,145,1.966,146,5.646]],["title/controllers/AppController.html",[147,2.466,148,3.421]],["body/controllers/AppController.html",[3,0.113,4,0.132,5,0.122,8,0.265,25,0.008,26,1.039,27,1.445,32,0.254,69,0.512,81,0.271,85,0.132,87,0.006,88,0.006,103,1.121,104,3.037,122,2.522,126,1.653,139,1.219,147,3.586,148,4.973,149,4.399,150,7.273,151,4.968,152,6.988,153,3.586,154,7.748,155,7.748,156,4.973,157,2.607,158,4.968,159,6.597,160,6.597,161,4.025,162,4.735,163,4.399,164,5.842,165,3.745,166,2.913,167,4.968,168,4.968,169,2.368,170,1.121,171,4.025,172,4.399,173,4.968,174,4.025,175,4.025,176,4.399,177,4.968,178,6.559,179,4.968,180,4.968,181,3.037,182,4.025,183,3.037,184,4.025,185,1.651,186,4.968]],["title/modules/AppModule.html",[89,1.83,187,3.217]],["body/modules/AppModule.html",[3,0.084,4,0.098,5,0.091,24,0.322,25,0.008,32,0.189,38,1.416,69,0.615,81,0.202,83,0.529,85,0.098,87,0.005,88,0.005,89,2.799,90,4.918,91,2.083,92,3.027,95,4.037,96,3.432,97,2.362,98,2.362,100,3.027,102,3.432,103,0.834,105,2.258,106,2.785,107,4.767,108,1.875,114,3.432,115,2.785,116,2.785,117,4.047,118,4.047,119,3.805,122,2.725,126,0.926,132,0.568,133,0.483,139,0.906,140,1.939,148,4.767,162,4.918,163,3.271,185,1.228,187,6.372,188,3.271,189,3.271,190,3.271,191,5.452,192,5.452,193,5.452,194,5.452,195,3.694,196,3.694,197,5.368,198,6.941,199,3.694,200,3.694,201,5.368,202,3.694,203,4.047,204,3.694,205,2.619,206,1.529,207,3.694,208,3.271,209,3.694,210,2.785,211,3.694,212,3.271,213,3.271,214,3.694,215,3.694,216,3.805,217,2.993,218,2.785,219,3.694,220,6.324,221,4.047,222,3.694,223,2.785,224,3.694,225,3.694,226,3.694,227,3.694,228,3.694,229,3.694,230,3.694,231,3.271,232,3.694,233,4.349,234,1.286,235,2.48,236,2.619,237,2.619,238,2.619,239,2.619,240,4.349,241,2.993,242,2.993,243,2.619,244,3.694,245,3.694]],["title/injectables/AppService.html",[123,1.349,162,2.901]],["body/injectables/AppService.html",[3,0.147,4,0.172,5,0.16,8,0.346,25,0.008,26,1.097,32,0.332,69,0.449,81,0.354,85,0.172,87,0.007,88,0.007,103,1.465,123,2.324,124,2.919,126,1.959,139,1.593,150,7.707,154,5.751,155,5.751,162,4.998,185,2.159,246,5.751,247,6.494]],["title/controllers/AppTestE2eController.html",[147,2.466,248,3.421]],["body/controllers/AppTestE2eController.html",[3,0.113,4,0.133,5,0.123,8,0.267,22,1.888,24,0.3,25,0.008,27,1.929,32,0.339,64,1.522,69,0.569,81,0.273,83,0.419,85,0.133,87,0.006,88,0.006,103,1.13,122,2.542,126,1.662,132,0.769,133,0.655,139,1.627,147,3.604,162,3.201,169,2.386,170,1.13,185,2.204,248,4.999,249,5.605,250,5.605,251,5.671,252,4.434,253,7.01,254,5.872,255,7.916,256,5.007,257,4.999,258,5.007,259,2.89,260,4.434,261,4.961,262,5.007,263,5.007,264,3.774,265,4.056,266,5.007,267,4.452,268,4.434,269,4.434,270,5.605,271,4.056,272,5.007,273,3.774,274,3.201,275,4.056,276,5.007,277,5.007,278,5.007,279,5.007,280,5.007]],["title/modules/AppTestE2eModule.html",[89,1.83,281,3.421]],["body/modules/AppTestE2eModule.html",[1,3.225,3,0.087,4,0.101,5,0.094,6,3.18,25,0.008,34,2.887,64,1.672,69,0.641,81,0.209,85,0.101,87,0.005,88,0.005,89,2.218,91,2.154,92,3.102,96,3.516,97,2.442,98,2.442,102,3.516,103,0.862,114,3.516,122,2.792,187,5.515,205,2.708,206,1.582,248,4.858,249,2.88,250,2.88,251,4.12,267,5.224,268,4.871,269,3.383,275,3.095,281,6.186,282,3.383,283,3.383,284,3.821,285,3.821,286,3.821,287,3.821,288,2.704,289,3.095,290,3.095,291,3.225,292,2.708,293,2.565,294,3.225,295,2.708,296,1.939,297,2.887,298,3.095,299,3.362,300,2.708,301,3.693,302,3.102,303,3.095,304,3.225,305,2.708,306,2.565,307,3.362,308,3.095,309,3.225,310,2.708,311,2.077,312,2.99,313,3.095,314,3.225,315,3.095,316,3.102,317,3.095,318,3.362,319,3.095,320,2.622,321,2.88,322,3.362,323,2.708,324,2.708,325,3.516,326,2.708,327,2.88,328,2.887,329,2.88,330,3.102,331,2.88,332,3.362,333,2.565,334,2.88,335,3.383]],["title/injectables/AppTestE2eService.html",[123,1.349,267,3.047]],["body/injectables/AppTestE2eService.html",[1,1.443,3,0.056,4,0.065,5,0.06,6,2.992,8,0.131,11,1.573,22,0.701,24,0.236,25,0.008,32,0.251,34,1.292,64,0.748,69,0.611,76,0.671,81,0.134,83,0.329,84,1.745,85,0.065,87,0.003,88,0.003,103,0.555,123,1.17,124,1.106,126,0.986,128,0.632,132,0.605,133,0.515,139,0.966,145,3.009,170,1.95,185,1.308,206,1.019,249,4.235,250,4.235,251,3.592,253,4.975,254,3.485,259,2.051,260,3.485,261,3.603,267,2.642,273,1.855,274,1.573,275,1.994,288,1.21,289,1.994,290,1.994,291,1.443,292,1.745,293,1.652,294,1.443,295,1.745,296,1.249,297,1.292,298,1.994,299,1.504,300,1.745,301,2.642,302,1.388,303,1.994,304,1.443,305,1.745,306,1.652,307,1.504,308,1.994,309,1.443,310,1.745,311,1.338,312,1.338,313,1.994,314,1.443,315,1.994,316,1.388,317,1.994,318,1.504,319,1.994,320,1.173,321,1.855,322,1.504,323,1.745,324,1.745,325,1.573,326,1.745,327,1.855,328,1.292,329,1.855,330,1.388,331,1.855,332,1.504,333,1.652,334,1.855,336,2.179,337,2.451,338,1.249,339,4.77,340,4.918,341,4.918,342,4.918,343,4.918,344,4.918,345,4.918,346,4.918,347,4.918,348,4.918,349,4.918,350,4.918,351,4.918,352,4.918,353,4.918,354,4.918,355,4.918,356,4.918,357,4.918,358,4.918,359,4.918,360,4.918,361,2.461,362,1.998,363,2.461,364,2.461,365,1.249,366,2.642,367,1.249,368,2.461,369,2.461,370,2.461,371,2.461,372,2.461,373,2.461,374,2.461,375,2.461,376,2.461,377,2.461,378,2.461,379,2.461,380,2.461,381,2.461,382,2.461,383,2.461,384,2.461,385,2.461,386,2.461,387,2.461,388,2.461,389,3.33,390,2.461,391,2.461,392,1.745,393,2.461,394,2.461,395,2.461,396,2.461,397,2.179,398,2.461,399,1.573,400,2.461,401,2.179,402,2.461,403,1.443,404,2.461,405,2.179,406,2.461,407,2.179,408,2.461,409,2.179,410,2.461,411,1.652,412,2.461,413,1.745,414,2.461,415,1.994,416,2.461,417,1.994,418,2.461,419,1.573,420,2.461,421,1.994,422,2.461,423,2.179,424,2.461,425,1.745,426,2.461,427,1.652,428,2.461,429,2.461,430,2.461,431,2.461,432,0.993,433,2.461,434,1.075,435,2.461,436,1.106,437,2.461,438,1.745,439,1.292,440,2.461]],["title/controllers/AuthController.html",[147,2.466,441,3.421]],["body/controllers/AuthController.html",[3,0.068,4,0.08,5,0.074,8,0.16,22,0.854,24,0.427,25,0.008,26,0.784,27,2.071,32,0.364,64,2.051,69,0.584,78,1.575,81,0.164,83,0.596,85,0.08,87,0.004,88,0.004,103,0.677,108,1.523,122,1.523,126,1.152,132,1.094,133,0.932,139,1.747,145,1.045,147,1.631,161,2.431,165,2.262,166,1.76,169,1.43,170,1.037,181,5.108,182,2.431,185,2.367,259,2.791,264,2.262,265,2.431,337,3.087,389,2.4,441,3.465,442,2.657,443,2.431,444,2.262,445,4.597,446,4.597,447,2.375,448,4.597,449,4.07,450,4.597,451,3.001,452,5.61,453,3.001,454,3.001,455,4.114,456,3.001,457,3.001,458,3.001,459,3.001,460,3.001,461,3.001,462,3.001,463,3.001,464,3.001,465,2.657,466,5.047,467,3.001,468,3.001,469,4.597,470,3.001,471,2.81,472,2.592,473,3.001,474,2.657,475,2.657,476,2.657,477,3.572,478,2.431,479,2.127,480,4.211,481,2.657,482,2.262,483,3.001,484,2.657,485,2.431,486,1.76,487,2.015,488,3.001,489,2.657,490,3.15,491,2.431,492,2.262,493,3.001,494,1.692,495,3.001,496,1.834,497,4.597,498,2.127,499,2.657,500,2.657,501,3.001,502,3.001,503,3.001,504,2.657,505,3.001,506,3.001,507,3.001,508,3.001,509,3.001,510,2.662,511,4.597,512,3.001,513,3.001,514,3.001,515,3.001,516,3.001,517,4.597,518,2.412,519,1.807,520,4.597,521,3.724,522,4.597,523,4.597,524,4.947,525,3.001,526,3.001,527,3.001,528,3.001,529,3.001,530,4.597,531,3.001,532,3.001,533,3.001,534,4.947,535,3.001,536,3.001,537,3.001,538,3.001,539,3.001,540,3.001,541,3.001,542,3.001,543,3.001,544,4.597,545,3.001,546,3.001,547,3.001,548,3.001,549,1.918,550,3.001]],["title/modules/AuthModule.html",[89,1.83,191,3.217]],["body/modules/AuthModule.html",[3,0.08,4,0.094,5,0.087,22,1.009,25,0.008,64,1.077,69,0.626,78,1.859,81,0.193,83,0.516,85,0.094,87,0.004,88,0.004,89,2.1,90,4.846,91,1.998,92,2.936,95,3.978,96,3.329,97,2.265,98,2.265,100,2.936,102,3.329,103,0.799,104,3.183,105,2.166,106,2.671,107,5.129,108,1.798,109,3.691,110,2.166,111,1.926,112,1.998,113,3.691,114,3.329,115,2.671,116,2.671,117,4.653,118,4.653,119,4.376,120,3.137,122,2.643,191,6.365,205,2.511,206,1.467,217,2.87,231,3.137,441,4.653,447,1.506,477,5.469,478,2.87,490,4.274,491,2.87,551,3.137,552,3.543,553,3.137,554,3.137,555,5.373,556,5.373,557,5.373,558,3.543,559,5.207,560,5.207,561,2.166,562,3.543,563,3.543,564,3.543,565,3.543,566,2.87,567,4.218,568,2.87,569,3.925,570,3.543,571,4.218,572,1.233,573,3.543,574,3.543,575,3.543,576,3.691,577,3.543,578,3.137,579,3.925,580,3.543,581,2.87,582,3.925,583,3.543,584,3.137,585,3.137,586,3.543,587,3.137,588,3.543,589,3.543,590,3.543,591,3.543,592,3.543,593,3.543,594,3.543,595,3.137]],["title/injectables/AuthService.html",[123,1.349,477,2.901]],["body/injectables/AuthService.html",[3,0.069,4,0.08,5,0.075,8,0.162,22,0.864,24,0.46,25,0.008,26,1.245,32,0.38,64,0.922,69,0.555,78,1.593,81,0.166,83,0.598,85,0.08,87,0.004,88,0.004,103,0.685,123,1.378,124,1.364,126,1.162,128,0.487,132,1.099,133,0.936,139,1.755,145,1.614,169,1.446,185,2.377,259,2.299,337,2.941,389,1.163,432,1.224,444,3.494,447,1.29,449,4.105,465,4.105,466,4.809,472,4.327,475,2.687,476,2.687,477,2.964,498,2.151,499,2.687,500,2.687,510,3.041,518,2.433,519,1.822,524,4.981,566,2.458,572,1.056,584,4.981,587,4.105,596,2.687,597,2.239,598,6.298,599,4.636,600,4.636,601,4.636,602,3.494,603,3.034,604,7.152,605,6.589,606,6.028,607,3.034,608,3.034,609,4.636,610,3.034,611,3.002,612,4.636,613,4.636,614,3.034,615,4.636,616,3.034,617,3.034,618,4.636,619,5.102,620,3.034,621,3.034,622,2.287,623,1.649,624,1.711,625,4.228,626,2.458,627,2.458,628,2.151,629,3.034,630,2.037,631,4.636,632,2.458,633,2.151,634,2.687,635,2.687,636,3.034,637,3.034,638,3.034,639,1.54,640,3.756,641,3.034,642,1.492,643,1.326,644,4.105,645,2.687,646,3.756,647,3.112,648,4.557,649,4.636,650,3.034,651,3.034,652,3.034,653,6.298,654,4.747,655,6.298,656,3.034,657,4.105,658,3.034,659,3.034,660,3.034,661,3.034,662,4.636,663,3.034,664,2.458,665,3.034]],["title/entities/CardEntity.html",[0,1.024,288,2.231]],["body/entities/CardEntity.html",[0,0.65,2,0.616,3,0.038,4,0.045,5,0.041,6,2.958,8,0.09,9,0.541,13,1.312,14,1.481,15,1.073,21,1.343,24,0.511,25,0.008,26,1.11,27,2.461,32,0.432,35,1.512,37,3.216,38,3.33,39,4.119,40,3.601,43,2.292,51,1.162,53,1.689,55,2.664,69,0.505,70,2.672,71,1.52,72,1.56,73,1.913,74,0.664,75,1.52,76,0.46,81,0.157,82,0.738,83,0.141,85,0.045,87,0.002,88,0.002,133,1.014,157,2.858,183,1.032,288,1.416,294,3.41,296,0.857,304,2.612,306,1.133,312,2.421,314,2.612,316,2.512,320,2.772,322,2.723,324,1.197,392,2.042,403,0.99,411,3.357,413,2.042,415,4.051,419,2.848,666,1.495,667,3.768,668,3.337,669,3.768,670,3.768,671,3.768,672,3.768,673,3.768,674,3.768,675,3.768,676,3.337,677,3.768,678,3.768,679,3.053,680,2.84,681,3.768,682,3.768,683,3.768,684,5.001,685,4.823,686,5.427,687,3.768,688,3.768,689,3.768,690,3.768,691,4.105,692,1.688,693,5.001,694,1.688,695,2.612,696,3.944,697,2.881,698,5.177,699,4.809,700,1.688,701,2.881,702,1.688,703,1.688,704,1.688,705,5.688,706,5.506,707,1.688,708,4.454,709,1.688,710,1.688,711,2.551,712,2.881,713,1.688,714,1.688,715,1.495,716,1.842,717,1.688,718,1.688,719,1.079,720,2.881,721,1.688,722,2.881,723,1.688,724,1.688,725,1.842,726,2.334,727,2.881,728,1.934,729,1.688,730,1.688,731,1.934,732,2.881,733,1.688,734,1.688,735,2.881,736,1.688,737,1.688,738,2.881,739,1.688,740,1.688,741,2.881,742,1.688,743,1.688,744,3.545,745,1.688,746,1.688,747,1.688,748,1.688,749,3.337,750,1.688,751,3.337,752,1.688,753,3.337,754,1.688,755,2.172,756,2.53,757,2.932,758,1.761,759,1.032,760,1.368,761,3.768,762,1.368,763,3.768,764,1.495,765,1.688,766,1.688,767,2.042,768,2.881,769,1.272,770,1.272,771,1.495,772,1.688,773,1.197,774,1.368,775,1.688,776,1.368,777,2.537,778,5.001,779,1.688,780,0.738,781,1.688,782,1.688,783,1.688,784,1.688,785,0.718]],["title/entities/CompanyEmployeeEntity.html",[0,1.024,291,2.661]],["body/entities/CompanyEmployeeEntity.html",[0,0.935,2,1.513,3,0.094,4,0.11,5,0.102,6,2.918,8,0.221,9,0.968,11,5.11,13,2.347,14,2.65,15,1.919,21,2.403,24,0.492,25,0.008,26,0.818,27,2.389,32,0.42,34,3.839,35,3.059,38,2.235,43,2.99,51,2.351,55,1.983,69,0.506,70,1.672,71,2.719,72,2.791,73,3.422,74,1.629,75,2.719,76,1.13,77,2.783,81,0.226,85,0.11,87,0.005,88,0.005,157,2.176,291,3.418,292,5.942,320,3.486,419,4.927,439,3.538,705,4.394,706,4.394,759,2.534,777,3.309,780,1.811,785,1.762,786,3.671,787,5.829,788,4.145,789,4.145,790,4.145,791,4.145,792,5.829,793,4.145,794,5.97,795,4.145,796,4.145,797,3.671,798,4.145,799,4.145,800,2.534,801,4.121,802,2.534,803,4.145]],["title/entities/CompanyEntity.html",[0,1.024,34,2.382]],["body/entities/CompanyEntity.html",[0,0.874,1,3.256,2,0.88,3,0.055,4,0.064,5,0.059,6,2.999,8,0.128,9,0.697,10,4.296,11,2.475,12,4.296,13,1.689,14,1.907,15,1.381,21,1.729,24,0.513,25,0.008,26,1.221,27,2.491,32,0.438,34,2.032,35,1.266,37,4.028,38,3.391,39,3.131,40,3.529,43,2.428,51,1.561,55,0.82,67,4.296,69,0.449,70,3.152,71,1.956,72,2.008,73,1.965,74,0.948,75,1.956,76,0.658,81,0.132,83,0.465,84,4.311,85,0.064,87,0.003,88,0.003,133,1.149,153,2.636,291,3.807,293,1.619,312,3.708,316,3.661,320,3.095,411,3.728,434,2.12,679,3.93,691,5.785,695,2.27,698,3.936,699,3.728,719,2.475,731,1.619,755,2.918,756,2.599,757,2.844,758,2.965,759,1.474,770,1.818,773,1.709,777,2.688,780,1.054,785,1.025,800,1.474,801,2.965,802,1.474,804,2.135,805,4.296,806,4.851,807,3.93,808,4.851,809,4.851,810,4.851,811,4.296,812,4.851,813,4.296,814,2.411,815,3.872,816,2.411,817,2.411,818,3.428,819,2.411,820,2.411,821,2.411,822,2.411,823,2.411,824,2.411,825,2.411,826,3.872,827,2.411,828,2.411,829,2.411,830,2.411,831,2.411,832,3.872,833,2.411,834,2.411,835,3.428,836,2.411,837,2.411,838,2.411,839,2.411,840,2.411,841,2.135,842,2.411]],["title/entities/ConnectedCardEntity.html",[0,1.024,294,2.661]],["body/entities/ConnectedCardEntity.html",[0,1.284,2,1.462,3,0.091,4,0.106,5,0.098,6,2.893,8,0.213,9,0.95,13,2.303,14,2.601,15,1.884,21,2.358,24,0.487,25,0.008,26,0.798,27,2.365,32,0.415,35,2.986,38,1.536,39,4.062,40,4.297,43,2.957,51,2.295,69,0.457,71,2.668,72,2.739,73,3.359,74,1.575,75,2.668,76,1.092,81,0.219,83,0.335,85,0.106,87,0.005,88,0.005,288,4.263,294,3.336,295,5.89,296,2.033,297,3.781,311,2.177,397,3.547,399,5.198,719,2.561,758,3.478,777,3.272,780,1.75,785,1.703,800,2.448,801,4.045,802,2.448,843,3.547,844,6.617,845,6.617,846,5.69,847,4.006,848,5.69,849,4.006,850,3.547,851,4.006,852,4.006,853,4.006,854,4.006,855,4.006,856,4.289]],["title/entities/ConversationEntity.html",[0,1.024,297,2.382]],["body/entities/ConversationEntity.html",[0,1.199,2,1.331,3,0.083,4,0.097,5,0.09,6,2.961,8,0.194,9,0.901,13,2.184,14,2.467,15,1.786,21,2.237,24,0.503,25,0.008,26,0.968,27,2.442,32,0.429,37,2.79,38,2.038,43,2.863,51,2.144,69,0.529,70,2.531,71,2.531,72,2.598,74,1.433,75,2.531,76,0.994,81,0.199,83,0.305,85,0.097,87,0.005,88,0.005,156,4.73,294,4.489,296,1.85,297,2.79,302,4.317,309,4.489,311,1.981,314,4.044,330,3.889,399,2.33,403,3.679,413,3.768,427,3.569,676,5.557,695,4.044,696,5.557,719,2.33,757,4.3,758,3.249,760,2.953,774,2.953,777,3.169,780,1.593,785,1.55,857,3.228,858,6.275,859,5.083,860,5.316,861,3.645,862,3.645,863,3.645,864,3.645,865,5.316,866,3.645,867,3.645,868,5.316,869,3.645,870,5.316,871,3.645,872,5.316,873,3.645,874,3.645,875,2.747,876,2.953,877,2.953]],["title/classes/CreateLogDto.html",[81,0.248,136,2.774]],["body/classes/CreateLogDto.html",[3,0.07,4,0.082,5,0.076,8,0.165,9,0.676,24,0.533,25,0.008,26,1.229,27,2.514,32,0.442,37,4.5,38,3.394,69,0.393,81,0.169,85,0.082,87,0.004,88,0.004,99,5.844,133,1.159,136,2.876,166,1.814,171,4.612,174,4.612,183,3.48,264,4.291,521,6.254,643,2.488,725,3.008,744,2.193,878,0.486,879,5.844,880,2.739,881,5.693,882,5.693,883,5.693,884,5.693,885,5.693,886,4.291,887,5.693,888,5.693,889,5.693,890,5.693,891,4.612,892,6.734,893,3.094,894,4.594,895,3.094,896,3.094,897,3.094,898,6.059,899,7.72,900,3.094,901,4.705,902,3.094,903,3.094,904,6.843,905,3.094,906,3.639,907,3.094,908,3.094,909,3.094,910,3.094,911,3.094,912,3.094,913,3.094,914,3.094,915,3.094,916,3.094,917,3.159,918,3.094]],["title/classes/CreateUserCommand.html",[81,0.248,919,3.217]],["body/classes/CreateUserCommand.html",[3,0.14,4,0.163,5,0.151,8,0.328,9,1.087,24,0.454,25,0.008,32,0.387,69,0.426,81,0.336,83,0.515,85,0.163,87,0.007,88,0.007,128,0.989,132,0.946,133,0.806,142,4.365,170,1.849,261,5.399,274,3.937,597,2.154,878,0.967,919,5.365,920,7.256,921,4.642,922,6.158,923,5.453,924,5.453,925,2.935]],["title/classes/CreateUserCommandHandler.html",[81,0.248,926,3.421]],["body/classes/CreateUserCommandHandler.html",[3,0.082,4,0.096,5,0.089,8,0.192,9,0.757,15,1.026,24,0.374,25,0.008,27,1.048,32,0.318,64,2.085,69,0.587,76,0.983,81,0.288,82,1.575,83,0.441,85,0.096,87,0.005,88,0.005,126,1.321,128,0.847,132,0.81,133,0.69,139,0.884,170,1.407,185,1.198,206,1.492,234,1.835,259,1.924,337,2.331,338,1.829,339,3.705,362,3.482,365,1.829,367,2.676,389,2.63,432,2.514,434,2.724,439,1.891,471,2.203,494,2.032,496,2.203,510,3.103,518,3.831,519,2.997,572,1.254,597,1.775,639,1.829,642,1.771,643,3.19,728,4.185,878,0.566,919,5.174,926,3.974,927,6.074,928,4.901,929,1.619,930,4.185,931,2.767,932,2.716,933,2.919,934,3.539,935,2.716,936,2.304,937,2.419,938,3.603,939,1.891,940,4.419,941,5.52,942,3.388,943,3.737,944,3.191,945,4.419,946,3.191,947,3.737,948,2.419,949,2.419,950,3.191,951,3.539,952,2.919,953,2.716,954,3.191,955,3.603,956,3.191,957,3.603,958,2.919,959,3.191,960,2.919,961,3.191,962,5.272,963,3.539,964,3.603,965,5.272,966,3.603,967,3.603,968,3.603,969,3.603,970,3.603,971,3.603,972,3.191,973,3.603,974,3.603,975,3.603,976,3.603,977,3.191,978,5.52,979,3.603,980,3.603,981,3.191]],["title/classes/CreateUserDto.html",[81,0.248,261,2.661]],["body/classes/CreateUserDto.html",[3,0.114,4,0.134,5,0.124,8,0.269,9,0.957,24,0.495,25,0.008,26,1.19,27,2.31,30,2.846,32,0.422,69,0.516,79,4.563,81,0.364,82,2.205,83,0.422,85,0.134,87,0.006,88,0.006,128,0.81,132,0.775,133,0.977,166,2.959,261,3.909,273,6.393,432,3.011,434,3.262,436,3.355,439,3.918,494,4.21,496,3.085,767,4.725,800,4.075,801,5.047,802,3.085,878,0.793,892,6.223,982,4.089,983,6.667,984,5.047,985,5.047,986,5.047,987,5.047,988,5.047,989,5.047,990,5.401,991,5.047,992,5.903,993,3.577,994,3.804]],["title/classes/CreateUserEvent.html",[81,0.248,995,3.421]],["body/classes/CreateUserEvent.html",[3,0.112,4,0.131,5,0.121,8,0.263,9,0.944,22,2.242,24,0.491,25,0.008,26,1.273,32,0.419,55,2.236,69,0.342,81,0.27,83,0.413,85,0.131,87,0.006,88,0.006,89,3.176,128,1.056,132,0.759,133,0.647,142,3.503,170,2.047,261,5.239,274,3.16,597,2.582,611,3.908,878,0.776,995,4.956,996,7.466,997,3.503,998,5.812,999,4.376,1000,4.004,1001,2.955,1002,4.414,1003,4.942,1004,4.942,1005,4.004,1006,4.942]],["title/classes/CreateUserEventHandler.html",[81,0.248,1007,3.421]],["body/classes/CreateUserEventHandler.html",[3,0.122,4,0.143,5,0.133,8,0.288,24,0.418,25,0.008,32,0.356,69,0.564,81,0.295,83,0.583,85,0.143,87,0.006,88,0.006,103,1.22,108,2.744,126,1.747,128,0.868,129,3.456,130,5.212,132,1.071,133,0.912,134,4.457,138,3.304,139,1.326,140,3.659,141,3.456,144,3.456,145,1.882,170,1.22,234,2.427,549,3.456,572,1.882,878,0.849,929,2.429,995,6.146,1007,5.255,1008,6.834,1009,4.78,1010,4.717,1011,4.262,1012,3.629,1013,4.262,1014,3.456,1015,4.088,1016,3.304,1017,5.406,1018,5.406,1019,3.629,1020,3.304]],["title/classes/CreateUserResponse.html",[81,0.248,951,3.047]],["body/classes/CreateUserResponse.html",[3,0.111,4,0.13,5,0.121,8,0.262,9,0.941,13,2.565,15,2.098,24,0.504,25,0.008,26,1.181,32,0.43,43,2.45,64,1.494,69,0.453,81,0.268,83,0.411,85,0.13,87,0.006,88,0.006,128,0.789,132,0.755,133,0.643,170,2.077,432,2.972,434,3.22,439,3.867,494,4.155,496,3.005,597,2.62,800,4.005,801,5.146,802,3.005,878,0.772,951,4.399,993,3.485,1021,7.609,1022,4.354,1023,4.917,1024,3.485,1025,4.917,1026,4.917,1027,4.917,1028,4.917,1029,4.917,1030,4.354]],["title/injectables/CustomHealthCheckService.html",[123,1.349,1031,3.047]],["body/injectables/CustomHealthCheckService.html",[3,0.127,4,0.148,5,0.138,8,0.298,24,0.335,25,0.008,32,0.364,69,0.571,81,0.305,83,0.468,85,0.148,87,0.006,88,0.006,103,1.263,123,2.119,124,2.515,126,1.786,128,0.899,132,0.86,133,0.732,139,1.373,169,2.667,170,1.263,185,1.86,259,2.602,337,2.934,389,2.145,572,1.948,606,7.065,640,4.534,1031,4.786,1032,5.015,1033,6.947,1034,5.56,1035,4.956,1036,8.259,1037,5.596,1038,5.596,1039,5.596,1040,5.053,1041,5.596,1042,4.218,1043,3.757,1044,4.534,1045,4.534]],["title/injectables/DatabaseConfiguration.html",[123,1.349,203,3.421]],["body/injectables/DatabaseConfiguration.html",[1,3.117,2,2.192,3,0.063,4,0.074,5,0.068,8,0.148,24,0.36,25,0.008,32,0.142,34,2.79,38,3.001,64,1.616,69,0.62,81,0.151,85,0.074,87,0.004,88,0.004,103,0.626,119,4.256,123,1.286,124,1.246,126,1.084,139,0.68,185,2.164,203,3.26,206,1.148,212,7.755,234,0.965,251,2.765,257,4.907,288,2.613,289,2.247,290,2.247,291,3.117,292,1.966,293,1.862,294,3.117,295,1.966,296,1.408,297,2.79,298,2.247,299,3.25,300,1.966,301,2.904,302,2.998,303,2.247,304,3.117,305,1.966,306,1.862,307,3.25,308,2.247,309,3.117,310,1.966,311,1.507,312,2.889,313,2.247,314,3.117,315,2.247,316,2.998,317,2.247,318,3.25,319,2.247,320,2.534,321,2.091,322,3.25,323,1.966,324,1.966,325,3.399,326,1.966,327,2.091,328,2.79,329,2.091,330,2.998,331,2.091,332,3.25,333,1.862,334,2.091,432,2.421,436,2.698,518,1.456,519,1.09,582,3.26,639,1.408,642,1.363,643,2.323,654,2.091,698,3.066,716,2.765,1046,2.456,1047,6.004,1048,2.773,1049,5.316,1050,4.325,1051,2.773,1052,1.862,1053,2.456,1054,2.456,1055,2.773,1056,5.317,1057,4.325,1058,6.004,1059,6.004,1060,5.317,1061,2.773,1062,2.773,1063,2.773,1064,6.004,1065,2.773,1066,2.773,1067,2.773,1068,6.004,1069,4.325,1070,4.325,1071,4.325,1072,2.773,1073,6.004,1074,2.773,1075,5.317,1076,2.773,1077,4.325,1078,2.773,1079,2.773,1080,2.773,1081,2.773,1082,2.773,1083,2.773,1084,2.773,1085,2.773,1086,2.773,1087,2.773,1088,2.773,1089,2.773,1090,2.773,1091,2.773,1092,2.773,1093,2.773,1094,2.773,1095,4.325,1096,2.773,1097,2.773,1098,2.773,1099,2.773,1100,2.773,1101,2.773,1102,2.773,1103,2.773,1104,2.773,1105,2.773,1106,2.773,1107,2.773,1108,2.456,1109,2.773]],["title/classes/DeleteUserCommand.html",[81,0.248,1110,3.217]],["body/classes/DeleteUserCommand.html",[3,0.142,4,0.166,5,0.154,8,0.334,9,1.1,24,0.459,25,0.008,26,1.208,32,0.391,81,0.343,83,0.525,85,0.166,87,0.007,88,0.007,128,1.008,132,0.965,133,0.822,170,1.865,597,2.18,611,4.101,878,0.986,921,4.734,925,2.993,1110,5.429,1111,7.319,1112,3.839,1113,6.28,1114,6.28]],["title/classes/DeleteUserCommandHandler.html",[81,0.248,1115,3.421]],["body/classes/DeleteUserCommandHandler.html",[3,0.102,4,0.12,5,0.111,8,0.24,9,0.887,24,0.422,25,0.008,32,0.387,55,1.533,64,1.37,69,0.591,76,1.23,81,0.246,83,0.517,85,0.12,87,0.005,88,0.005,103,1.017,110,2.756,111,2.451,112,2.542,126,1.548,128,0.992,132,0.949,133,0.809,139,1.106,145,1.57,206,1.866,234,2.151,259,2.256,337,2.637,338,2.289,339,3.85,362,3.136,365,2.289,367,2.289,389,1.728,519,2.429,572,1.57,597,2.007,639,2.289,642,2.216,643,2.7,878,0.708,928,5.51,929,2.026,930,4.733,931,3.243,933,3.653,934,4.149,935,3.399,936,2.882,937,3.027,939,2.366,1001,2.026,1009,2.644,1052,5.092,1110,5.376,1115,5.314,1116,7.036,1117,5.368,1118,5.472,1119,6.179,1120,4.509,1121,3.196,1122,3.993,1123,2.542,1124,4.509,1125,4.509,1126,3.95,1127,4.509,1128,3.196]],["title/classes/DeleteUserEvent.html",[81,0.248,1121,3.217]],["body/classes/DeleteUserEvent.html",[3,0.12,4,0.14,5,0.13,8,0.282,9,0.988,22,2.304,24,0.485,25,0.008,26,1.286,32,0.413,55,2.341,81,0.289,83,0.443,85,0.14,87,0.006,88,0.006,89,3.382,128,1.105,132,0.814,133,0.694,170,2.023,597,2.553,611,3.857,878,0.833,997,3.757,998,5.945,1000,4.294,1001,3.094,1002,4.622,1005,4.294,1112,3.24,1121,4.879,1129,7.427,1130,4.294,1131,4.693]],["title/classes/DeleteUserEventHandler.html",[81,0.248,1132,3.421]],["body/classes/DeleteUserEventHandler.html",[3,0.122,4,0.143,5,0.133,8,0.288,24,0.418,25,0.008,32,0.356,69,0.564,81,0.295,83,0.583,85,0.143,87,0.006,88,0.006,103,1.22,108,2.744,126,1.747,128,0.868,129,3.456,130,5.212,132,1.071,133,0.912,134,4.457,138,3.304,139,1.326,140,3.659,141,3.456,144,3.456,145,1.882,170,1.22,234,2.427,549,3.456,572,1.882,878,0.849,929,2.429,1009,4.78,1010,4.717,1011,4.262,1012,3.629,1013,4.262,1014,3.456,1015,4.088,1016,3.304,1019,3.629,1020,3.304,1121,5.779,1122,4.787,1132,5.255,1133,6.834,1134,5.406]],["title/entities/DiscountCodeEntity.html",[0,1.024,299,2.774]],["body/entities/DiscountCodeEntity.html",[0,1.189,2,1.315,3,0.082,4,0.096,5,0.089,6,2.954,8,0.192,9,0.895,13,2.17,14,2.45,15,1.775,21,2.222,24,0.542,25,0.008,26,0.74,27,2.436,28,4.901,32,0.428,43,3.21,51,2.126,69,0.431,70,3.075,71,2.514,72,2.581,74,1.416,75,2.514,76,0.983,79,4.193,81,0.288,82,1.575,83,0.638,85,0.096,87,0.005,88,0.005,299,3.222,300,6.015,328,4.002,401,3.191,725,4.875,731,2.419,755,3.974,756,3.539,777,3.157,780,1.575,785,1.532,1135,2.919,1136,5.52,1137,6.234,1138,5.52,1139,5.52,1140,5.05,1141,6.234,1142,3.603,1143,3.603,1144,4.668,1145,5.52,1146,3.603,1147,5.272,1148,3.603,1149,4.668,1150,4.668,1151,3.603,1152,3.603,1153,4.668,1154,3.603,1155,3.603,1156,3.603,1157,3.603,1158,5.272,1159,3.603,1160,5.52,1161,6.074,1162,2.554,1163,5.05,1164,3.603]],["title/classes/DuplicateEmailException.html",[81,0.248,945,3.217]],["body/classes/DuplicateEmailException.html",[3,0.146,4,0.17,5,0.158,25,0.008,32,0.328,69,0.444,81,0.351,85,0.17,87,0.007,88,0.007,103,1.45,128,1.341,623,4.538,624,3.625,647,4.316,878,1.01,942,4.223,943,5.507,945,5.507,1165,4.555,1166,5.693,1167,3.395,1168,6.428,1169,6.428,1170,4.846,1171,4.846]],["title/classes/DuplicateUsernameException.html",[81,0.248,940,3.217]],["body/classes/DuplicateUsernameException.html",[3,0.146,4,0.17,5,0.158,25,0.008,32,0.328,69,0.444,81,0.351,85,0.17,87,0.007,88,0.007,103,1.45,128,1.341,623,4.538,624,3.625,647,4.316,878,1.01,940,5.507,942,4.223,943,5.507,1165,4.555,1167,3.395,1170,4.846,1171,4.846,1172,5.693,1173,6.428,1174,6.428]],["title/modules/EntitiesToMoveModule.html",[89,1.83,192,3.217]],["body/modules/EntitiesToMoveModule.html",[0,0.998,1,3.577,3,0.1,4,0.117,5,0.109,6,1.54,11,2.829,25,0.008,34,3.201,69,0.644,77,2.971,81,0.242,85,0.117,87,0.005,88,0.005,89,2.46,91,2.495,102,2.829,103,0.998,114,2.829,122,2.246,192,4.324,205,3.136,206,1.832,213,3.918,233,6.096,288,2.999,291,3.577,293,2.971,294,3.577,296,3.096,297,3.201,299,3.729,301,4.095,302,3.44,304,3.577,306,2.971,307,3.729,309,3.577,311,3.315,312,3.315,314,3.577,316,3.44,318,3.729,320,2.907,322,3.729,324,3.136,325,3.9,327,3.335,328,3.201,330,3.44,332,3.729,335,3.918,403,2.594,759,2.705,760,3.585,770,3.335,773,3.136,774,3.585,776,3.585,841,3.918,875,3.335,876,3.585,877,3.585,1162,3.136,1175,4.425,1176,3.918,1177,3.918,1178,3.918,1179,4.425,1180,4.425,1181,3.918]],["title/classes/ErrorCustomEvent.html",[81,0.248,1123,2.559]],["body/classes/ErrorCustomEvent.html",[3,0.124,4,0.145,5,0.134,8,0.291,9,1.008,24,0.491,25,0.008,26,1.292,32,0.418,81,0.298,83,0.457,85,0.145,87,0.006,88,0.006,111,4.603,113,6.003,128,0.878,132,0.84,133,0.716,170,2.035,597,2.542,643,3.701,878,0.859,925,2.606,1123,3.96,1182,6.861,1183,4.842,1184,8.188,1185,5.468,1186,5.468,1187,7.759]],["title/classes/ErrorCustomEventHandler.html",[81,0.248,109,3.217]],["body/classes/ErrorCustomEventHandler.html",[3,0.089,4,0.104,5,0.096,8,0.208,9,0.803,24,0.47,25,0.008,26,1,32,0.401,38,1.498,53,3.277,55,1.329,69,0.542,81,0.213,83,0.546,85,0.104,87,0.005,88,0.005,95,3.738,100,2.203,105,2.388,109,3.962,111,4.387,112,4.655,126,1.4,128,0.627,132,0.859,133,0.731,136,3.989,139,0.959,140,2.933,143,2.769,145,3.035,169,1.862,170,1.984,216,5.049,234,1.946,510,1.661,519,1.536,572,1.36,643,1.707,878,0.614,879,2.623,894,4.381,906,2.498,917,3.752,929,1.756,932,4.213,935,2.945,1001,1.756,1010,3.989,1011,3.416,1013,3.416,1015,2.291,1016,2.388,1118,3.46,1123,4.017,1182,6.539,1188,4.919,1189,4.919,1190,4.919,1191,4.919,1192,2.945,1193,4.213,1194,3.165,1195,4.213,1196,3.907,1197,2.769,1198,2.769,1199,3.907,1200,4.213,1201,2.945,1202,4.213,1203,2.945,1204,2.769,1205,2.945,1206,3.46,1207,2.945,1208,2.945,1209,3.165,1210,3.46,1211,2.945,1212,3.165,1213,2.945,1214,3.907,1215,2.945,1216,3.907,1217,3.165,1218,3.907,1219,2.945]],["title/classes/ErrorExceptionFilter.html",[81,0.248,1220,3.676]],["body/classes/ErrorExceptionFilter.html",[3,0.123,4,0.144,5,0.134,8,0.29,24,0.326,25,0.008,32,0.278,46,3.853,69,0.484,81,0.297,83,0.455,85,0.144,87,0.006,88,0.006,103,1.227,126,1.753,132,0.835,133,0.711,139,1.334,140,3.673,181,4.277,234,2.436,455,3.673,486,3.188,510,3.474,519,2.137,622,4.098,623,3.803,624,4.364,642,4.016,654,4.098,878,0.854,978,4.814,1060,6.852,1220,5.669,1221,6.196,1222,4.814,1223,7.738,1224,6.998,1225,8.171,1226,5.436,1227,6.998,1228,5.436,1229,5.436,1230,5.436,1231,5.436,1232,5.436,1233,5.436,1234,5.436,1235,5.436,1236,5.436,1237,5.436]],["title/injectables/ErrorLoggingMiddleware.html",[123,1.349,223,3.421]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.077,4,0.09,5,0.083,8,0.18,9,0.723,24,0.463,25,0.008,26,0.934,32,0.381,38,1.298,53,2.952,55,1.151,69,0.534,81,0.185,83,0.503,85,0.09,87,0.004,88,0.004,89,1.365,95,3.493,100,1.909,103,0.764,105,2.069,123,1.497,124,1.521,126,1.261,128,0.544,132,0.773,133,0.659,136,3.674,139,0.831,143,2.4,145,2.95,157,3.154,169,1.614,170,1.933,181,4.068,185,1.125,216,4.718,223,3.795,234,1.179,235,2.273,236,2.4,237,5.042,238,2.4,239,2.4,240,4.079,241,2.743,242,2.743,243,2.4,337,2.248,389,1.298,455,3.493,479,2.4,480,4.531,486,1.985,510,2.83,518,1.777,519,1.331,639,1.718,642,1.664,643,2.2,879,2.273,886,3.795,894,4.035,906,2.164,917,3.38,981,2.998,1001,1.521,1188,4.531,1189,4.531,1190,4.531,1191,4.531,1192,2.552,1193,3.795,1195,3.795,1197,2.4,1198,2.4,1200,3.795,1201,2.552,1202,3.795,1203,2.552,1204,2.4,1205,4.531,1206,2.998,1207,2.552,1208,2.552,1209,2.743,1210,2.998,1211,2.552,1212,2.743,1213,2.552,1215,2.552,1217,2.743,1219,2.552,1238,6.837,1239,2.552,1240,3.795,1241,5.035,1242,4.079,1243,6.656,1244,2.998,1245,2.743,1246,2.998,1247,2.743,1248,4.079,1249,3.795,1250,2.743,1251,2.743,1252,2.743,1253,2.743,1254,4.079,1255,2.743,1256,2.743,1257,2.743,1258,2.743,1259,2.743,1260,2.743,1261,2.998,1262,2.998,1263,2.998,1264,2.998,1265,2.998,1266,2.998,1267,2.998,1268,2.743,1269,2.743,1270,2.743,1271,2.743,1272,2.743]],["title/classes/GetUserByEmailQuery.html",[81,0.248,1273,3.421]],["body/classes/GetUserByEmailQuery.html",[3,0.141,4,0.165,5,0.153,8,0.331,9,1.093,22,2.343,24,0.456,25,0.008,26,1.204,32,0.389,81,0.339,83,0.52,85,0.165,87,0.007,88,0.007,128,0.999,132,0.955,133,0.814,170,1.857,434,3.747,597,2.167,878,0.977,925,2.964,1273,5.739,1274,5.525,1275,5.506,1276,6.218,1277,6.218,1278,6.218]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.248,1279,3.421]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.113,4,0.132,5,0.122,8,0.265,13,1.729,15,1.414,21,1.771,22,2.246,24,0.395,25,0.008,32,0.337,64,1.51,69,0.568,76,1.355,81,0.271,83,0.552,85,0.132,87,0.006,88,0.006,126,1.653,128,1.059,132,1.013,133,0.863,139,1.219,145,1.729,185,1.651,206,2.057,234,2.297,259,2.408,337,2.77,338,2.522,339,4.005,362,3.349,365,2.522,367,2.522,389,1.904,434,2.883,436,2.233,439,2.607,518,2.607,572,1.729,639,2.522,642,2.442,643,2.883,878,0.78,929,2.233,931,3.462,932,3.745,939,2.607,1273,5.948,1279,4.973,1280,4.973,1281,6.393,1282,4.973,1283,4.025,1284,4.676,1285,3.335,1286,3.521,1287,3.335,1288,4.968,1289,3.521,1290,4.968,1291,3.521,1292,4.025,1293,3.521]],["title/classes/GetUserByUsernameQuery.html",[81,0.248,1294,3.421]],["body/classes/GetUserByUsernameQuery.html",[3,0.141,4,0.165,5,0.153,8,0.331,9,1.093,22,2.343,24,0.456,25,0.008,26,1.204,32,0.389,81,0.339,83,0.52,85,0.165,87,0.007,88,0.007,128,0.999,132,0.955,133,0.814,170,1.857,432,3.459,597,2.167,878,0.977,925,2.964,1274,5.525,1294,5.739,1295,5.506,1296,4.687,1297,6.218,1298,6.218]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.248,1299,3.421]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.113,4,0.132,5,0.122,8,0.265,13,1.729,15,1.414,21,1.771,22,2.246,24,0.395,25,0.008,32,0.337,64,1.51,69,0.568,76,1.355,81,0.271,83,0.552,85,0.132,87,0.006,88,0.006,126,1.653,128,1.059,132,1.013,133,0.863,139,1.219,145,1.729,185,1.651,206,2.057,234,2.297,259,2.408,337,2.77,338,2.522,339,4.005,362,3.349,365,2.522,367,2.522,389,1.904,432,2.661,436,2.233,439,2.607,518,2.607,572,1.729,639,2.522,642,2.442,643,2.883,878,0.78,929,2.233,931,3.462,932,3.745,939,2.607,1280,4.973,1282,4.973,1283,4.025,1284,4.676,1285,3.335,1286,3.521,1287,3.335,1289,3.521,1291,3.521,1292,4.025,1293,3.521,1294,5.948,1299,4.973,1300,6.393,1301,4.968,1302,4.399]],["title/classes/GetUserHandler.html",[81,0.248,1303,3.421]],["body/classes/GetUserHandler.html",[3,0.109,4,0.128,5,0.118,8,0.257,15,1.371,22,1.371,24,0.387,25,0.008,32,0.33,64,1.464,69,0.591,76,1.314,81,0.263,83,0.541,85,0.128,87,0.006,88,0.006,126,1.619,128,1.038,132,0.993,133,0.846,139,1.182,145,1.677,185,2.148,206,1.994,234,2.25,259,2.359,337,2.728,338,2.445,339,3.956,362,3.28,365,2.445,367,2.445,389,2.477,510,2.048,519,1.894,572,1.677,630,5.233,632,3.902,878,0.757,931,3.392,939,2.528,1280,4.897,1282,4.897,1284,4.581,1285,3.234,1286,3.414,1287,3.234,1289,3.414,1303,4.872,1304,4.266,1305,4.817,1306,4.817,1307,3.95,1308,3.631,1309,5.875,1310,4.817,1311,4.817,1312,4.817,1313,5.723,1314,4.817,1315,4.817,1316,4.817,1317,4.817]],["title/classes/GetUserIfRefreshTokenMatchesHandler.html",[81,0.248,1318,3.421]],["body/classes/GetUserIfRefreshTokenMatchesHandler.html",[3,0.102,4,0.12,5,0.111,8,0.24,15,1.759,22,2.392,24,0.37,25,0.008,32,0.316,64,1.37,69,0.581,76,1.23,81,0.246,83,0.517,85,0.12,87,0.005,88,0.005,110,2.756,111,2.451,112,2.542,126,1.548,128,0.992,132,0.949,133,0.809,139,1.106,145,2.151,185,1.499,206,1.866,234,2.151,259,2.256,337,2.637,338,2.289,339,3.85,362,3.136,365,2.289,366,4.149,367,2.289,389,2.369,432,1.818,434,1.97,447,3.225,472,4.277,510,2.627,572,1.57,639,2.289,642,2.216,643,2.7,878,0.708,931,3.243,939,2.366,1117,5.137,1123,2.542,1126,2.882,1128,3.196,1280,4.733,1282,4.733,1284,4.38,1285,3.027,1286,3.196,1287,3.027,1291,3.196,1313,3.993,1318,5.314,1319,3.993,1320,4.509,1321,5.376,1322,4.509,1323,3.993,1324,4.509,1325,3.993,1326,3.399,1327,6.179,1328,4.509,1329,4.509]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.248,1321,3.217]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.129,4,0.151,5,0.14,8,0.303,9,1.033,22,2.364,24,0.473,25,0.008,26,1.263,32,0.404,81,0.31,83,0.475,85,0.151,87,0.006,88,0.006,128,0.912,132,0.873,133,0.743,170,1.975,447,3.531,472,4.683,597,2.439,611,4.084,878,0.892,925,2.707,1274,5.575,1321,5.101,1330,5.03,1331,5.886,1332,5.03,1333,5.68,1334,7.196]],["title/classes/GetUserLoginHandler.html",[81,0.248,576,3.217]],["body/classes/GetUserLoginHandler.html",[3,0.084,4,0.098,5,0.091,8,0.196,13,1.866,14,2.107,15,1.526,21,1.911,22,2.097,24,0.379,25,0.008,26,1.079,32,0.323,64,1.121,69,0.573,76,1.006,81,0.201,83,0.528,85,0.098,87,0.005,88,0.005,103,0.832,126,1.343,128,0.861,132,0.97,133,0.827,139,1.315,145,2.565,185,2.1,206,1.526,234,1.866,259,2.531,337,2.875,338,1.872,339,3.52,362,2.721,365,1.872,366,3.599,367,1.872,389,2.824,432,2.547,434,2.76,436,2.409,439,2.814,510,2.279,518,3.639,519,2.107,567,4.343,568,2.987,572,1.284,576,3.8,619,2.987,623,2.004,624,2.079,633,4.915,634,3.265,639,1.872,642,1.813,643,2.76,644,4.747,645,4.747,646,4.343,647,3.599,878,0.579,931,2.814,939,1.935,1009,2.162,1117,4.849,1126,3.427,1280,4.656,1282,4.241,1284,3.8,1285,2.476,1286,2.614,1287,2.476,1291,3.8,1292,4.343,1293,3.8,1302,4.747,1325,4.747,1335,3.265,1336,5.361,1337,3.687,1338,3.687,1339,5.361,1340,6.935,1341,3.687,1342,2.614,1343,3.265,1344,3.687,1345,7.687,1346,5.361,1347,5.361,1348,5.361,1349,3.687]],["title/classes/GetUserLoginQuery.html",[81,0.248,633,3.217]],["body/classes/GetUserLoginQuery.html",[3,0.132,4,0.154,5,0.143,8,0.31,9,1.049,22,2.385,24,0.479,25,0.008,26,1.269,32,0.408,81,0.318,83,0.487,85,0.154,87,0.006,88,0.006,128,0.934,132,0.894,133,0.762,170,1.987,432,3.379,597,2.457,619,6.992,633,5.179,878,0.914,925,2.773,1274,5.625,1296,4.386,1350,5.153,1351,5.819,1352,7.307]],["title/classes/GetUserQuery.html",[81,0.248,630,3.047]],["body/classes/GetUserQuery.html",[3,0.141,4,0.165,5,0.153,8,0.331,9,1.093,24,0.456,25,0.008,26,1.204,32,0.389,81,0.339,83,0.52,85,0.165,87,0.007,88,0.007,128,0.999,132,0.955,133,1.077,170,1.857,597,2.167,611,4.087,630,5.112,878,0.977,925,2.964,1024,4.408,1112,3.801,1274,5.525,1353,5.506,1354,6.218,1355,6.218]],["title/entities/GroupEntity.html",[0,1.024,302,2.559]],["body/entities/GroupEntity.html",[0,1.164,2,1.277,3,0.079,4,0.093,5,0.086,6,2.894,8,0.186,9,0.88,13,2.133,14,2.408,15,1.744,21,2.184,24,0.49,25,0.008,26,0.949,27,2.378,30,1.972,32,0.418,37,4.095,38,3.304,39,3.813,40,4.352,43,2.822,51,2.08,69,0.498,70,2.08,71,2.471,72,2.536,74,1.375,75,2.471,76,0.954,81,0.281,82,1.528,83,0.566,85,0.093,87,0.004,88,0.004,297,3.549,302,2.908,304,3.965,306,2.348,311,1.901,312,4.241,399,3.297,403,3.024,411,4.54,695,3.024,698,4.793,699,3.463,711,4.567,716,4.323,719,3.297,757,3.592,758,3.745,773,2.479,777,2.799,785,1.487,807,4.963,850,3.097,856,5.097,963,3.463,994,3.888,1356,3.097,1357,6.127,1358,6.127,1359,6.127,1360,5.157,1361,5.157,1362,3.497,1363,5.157,1364,3.497,1365,3.497,1366,3.497,1367,3.497,1368,5.157,1369,3.497,1370,3.497,1371,3.497,1372,5.157,1373,3.497,1374,3.497,1375,3.497]],["title/entities/GroupMembershipEntity.html",[0,1.024,304,2.661]],["body/entities/GroupMembershipEntity.html",[0,1.299,2,1.487,3,0.092,4,0.108,5,0.1,6,2.905,8,0.217,9,0.959,13,2.325,14,2.625,15,1.901,21,2.38,24,0.49,25,0.008,26,0.808,27,2.377,32,0.417,35,3.022,38,2.207,39,4.093,40,3.945,43,2.973,51,2.322,55,1.959,69,0.502,70,1.643,71,2.693,72,2.765,73,3.39,74,1.602,75,2.693,76,1.111,81,0.222,83,0.341,85,0.108,87,0.005,88,0.005,157,2.138,288,3.908,296,2.068,302,4.483,304,3.376,305,5.916,392,4.734,403,4.256,405,3.608,705,4.341,706,4.341,777,3.291,780,1.78,785,1.732,797,3.608,875,3.071,1376,3.608,1377,6.679,1378,5.758,1379,4.074,1380,4.074,1381,4.074,1382,5.758,1383,4.074,1384,4.074,1385,5.034,1386,4.074,1387,4.074,1388,4.074,1389,4.074]],["title/controllers/HealthCheckController.html",[147,2.466,1390,3.421]],["body/controllers/HealthCheckController.html",[3,0.112,4,0.131,5,0.121,8,0.263,25,0.008,27,1.434,32,0.252,69,0.566,81,0.269,85,0.131,87,0.006,88,0.006,103,1.112,104,5.007,122,2.502,126,1.644,139,1.209,147,2.679,152,5.812,153,3.567,156,4.947,157,2.587,161,3.993,164,5.812,165,3.716,166,2.89,169,2.349,171,3.993,172,4.365,174,3.993,175,3.993,176,4.365,178,4.365,182,3.993,183,3.013,184,3.993,185,1.638,210,4.947,259,2.396,443,3.993,1031,4.954,1032,4.196,1034,6.191,1043,3.309,1044,3.993,1045,3.993,1390,4.947,1391,4.365,1392,9.067,1393,4.929,1394,7.867,1395,4.929,1396,7.867,1397,3.494,1398,4.365,1399,4.365,1400,4.929,1401,4.929,1402,4.929]],["title/modules/HealthCheckModule.html",[89,1.83,193,3.217]],["body/modules/HealthCheckModule.html",[3,0.125,4,0.146,5,0.135,25,0.008,55,1.87,69,0.6,81,0.3,85,0.146,87,0.006,88,0.006,89,2.843,91,3.101,92,3.975,96,4.507,97,3.516,98,3.516,102,4.507,103,1.241,113,4.997,114,3.516,122,3.578,193,6.153,210,4.145,233,6.648,571,5.711,572,1.914,1031,5.828,1032,3.516,1034,4.997,1042,4.145,1181,4.87,1390,5.865,1397,3.898,1398,4.87,1399,4.87,1403,4.87,1404,4.87,1405,5.499,1406,7.049,1407,5.499,1408,5.314,1409,5.499]],["title/classes/HealthCheckQuery.html",[81,0.248,1040,3.217]],["body/classes/HealthCheckQuery.html",[3,0.16,4,0.187,5,0.173,25,0.007,81,0.385,85,0.187,87,0.007,88,0.007,878,1.107,1032,4.506,1040,5.816,1410,6.241,1411,6.241]],["title/classes/HealthCheckQueryHandler.html",[81,0.248,1408,3.421]],["body/classes/HealthCheckQueryHandler.html",[3,0.098,4,0.115,5,0.107,8,0.231,24,0.26,25,0.008,32,0.308,69,0.516,81,0.237,83,0.363,85,0.115,87,0.005,88,0.005,126,1.509,128,0.967,132,0.667,133,0.568,139,1.066,145,2.73,185,1.444,234,2.097,259,2.962,337,2.586,389,1.665,519,1.708,572,1.512,582,4.54,654,3.274,878,0.682,929,1.952,931,3.918,1032,4.42,1034,3.079,1040,3.079,1042,5.627,1043,4.044,1044,3.519,1045,3.519,1117,5.085,1240,3.274,1282,4.641,1287,2.916,1397,3.079,1408,4.54,1412,6.122,1413,4.344,1414,8.113,1415,8.319,1416,8.319,1417,8.319,1418,4.344,1419,4.344,1420,4.344,1421,4.344,1422,4.344,1423,4.344,1424,4.344,1425,6.023,1426,6.023,1427,6.023,1428,4.344,1429,4.344,1430,4.344,1431,7.465,1432,6.023,1433,4.344,1434,4.344,1435,4.344,1436,3.847,1437,4.344,1438,4.344,1439,4.344,1440,3.847,1441,3.847,1442,4.344,1443,4.344,1444,4.344,1445,4.344]],["title/classes/HealthCheckResponse.html",[81,0.248,1043,3.047]],["body/classes/HealthCheckResponse.html",[3,0.139,4,0.162,5,0.15,8,0.326,9,1.082,24,0.452,25,0.008,32,0.385,69,0.423,81,0.334,83,0.512,85,0.162,87,0.007,88,0.007,128,0.982,132,0.94,133,0.801,170,1.844,597,2.146,878,0.961,925,2.916,1032,5.223,1043,5.061,1397,4.337,1446,7.235,1447,5.418,1448,8.528,1449,6.118,1450,8.758,1451,6.118,1452,6.118]],["title/classes/InvalidParameterEntityException.html",[81,0.248,947,3.217]],["body/classes/InvalidParameterEntityException.html",[3,0.125,4,0.147,5,0.136,24,0.424,25,0.008,32,0.283,69,0.489,81,0.386,82,2.417,83,0.463,85,0.147,87,0.006,88,0.006,103,1.248,128,0.888,132,1.087,133,0.724,183,3.381,185,2.352,413,3.921,510,2.352,623,4.24,624,3.119,647,4.75,878,0.869,942,3.846,947,5.015,948,4.75,949,4.75,1165,4.149,1167,3.092,1453,4.481,1454,7.076,1455,8.5,1456,5.531,1457,5.531,1458,6.266,1459,4.898,1460,3.536,1461,4.169,1462,5.531,1463,5.531,1464,5.531,1465,5.531,1466,5.531]],["title/classes/InvalidPasswordException.html",[81,0.248,1467,3.421]],["body/classes/InvalidPasswordException.html",[3,0.14,4,0.163,5,0.151,25,0.008,32,0.315,69,0.426,81,0.336,85,0.163,87,0.007,88,0.007,103,1.389,128,1.316,436,3.401,623,4.453,624,3.472,647,4.134,725,3.937,878,0.967,942,4.113,948,5.081,1165,4.438,1167,3.307,1460,3.937,1461,4.642,1467,5.705,1468,5.453,1469,6.158,1470,6.158,1471,6.158,1472,6.158,1473,8.194,1474,6.158,1475,7.568,1476,6.158]],["title/entities/InvoicesEntity.html",[0,1.024,307,2.774]],["body/entities/InvoicesEntity.html",[0,0.541,2,0.876,3,0.054,4,0.064,5,0.059,6,2.96,8,0.128,9,0.694,13,1.683,14,1.9,15,1.376,21,1.723,24,0.553,25,0.008,26,1.193,27,2.456,28,5.398,29,6.315,30,4.724,31,5.919,32,0.431,35,1.259,37,2.024,38,0.92,43,2.423,51,1.555,55,0.816,69,0.334,70,3.318,71,1.95,72,2.001,73,1.957,74,0.943,75,1.95,76,0.654,79,4.915,80,5.652,81,0.21,82,1.048,83,0.673,85,0.064,86,5.508,87,0.003,88,0.003,133,0.505,153,3.297,183,1.466,307,2.357,328,3.4,425,3.427,668,4.281,725,4.794,744,2.733,777,2.682,780,1.048,785,1.02,1136,4.281,1144,3.414,1145,2.124,1161,5.737,1162,1.701,1163,1.944,1477,2.124,1478,6.066,1479,4.834,1480,4.834,1481,4.834,1482,4.834,1483,4.834,1484,6.066,1485,4.834,1486,4.834,1487,4.834,1488,4.834,1489,2.399,1490,3.856,1491,2.399,1492,3.856,1493,2.399,1494,3.856,1495,2.399,1496,3.856,1497,2.399,1498,3.856,1499,2.399,1500,3.856,1501,2.399,1502,2.399,1503,2.399,1504,2.399,1505,2.399,1506,6.066,1507,2.399,1508,2.399,1509,2.399,1510,3.856,1511,2.399,1512,2.399,1513,2.399,1514,3.856,1515,4.834,1516,2.399,1517,3.856,1518,2.399,1519,3.856,1520,2.399,1521,2.399,1522,3.856,1523,2.399,1524,3.414,1525,2.399,1526,2.399,1527,2.399,1528,2.399,1529,2.399,1530,2.399,1531,2.399,1532,2.399]],["title/classes/IsTestEnvironmentPipe.html",[81,0.248,270,3.421]],["body/classes/IsTestEnvironmentPipe.html",[3,0.129,4,0.151,5,0.14,8,0.303,24,0.34,25,0.008,32,0.29,69,0.393,81,0.31,83,0.475,85,0.151,87,0.006,88,0.006,103,1.282,126,1.803,132,0.873,133,0.743,139,1.394,185,1.888,234,2.505,235,3.813,236,4.026,237,4.026,238,4.026,239,4.026,251,5.05,270,5.424,271,5.83,518,2.981,519,2.233,623,3.087,624,3.203,878,0.892,1001,3.234,1056,5.03,1533,5.03,1534,7.899,1535,7.196,1536,7.196,1537,8.568,1538,6.995,1539,8.305,1540,5.68,1541,5.68,1542,5.68,1543,5.68,1544,5.68,1545,5.68]],["title/entities/JoinedConversation.html",[0,1.024,309,2.661]],["body/entities/JoinedConversation.html",[0,1.353,2,1.575,3,0.098,4,0.114,5,0.106,6,2.948,8,0.23,9,0.989,13,2.398,14,2.708,15,1.961,21,2.455,24,0.498,25,0.008,26,1.045,27,2.416,32,0.424,35,3.146,43,3.028,51,2.417,69,0.476,70,2.778,71,2.778,72,2.851,73,3.496,74,1.696,75,2.778,76,1.177,81,0.235,83,0.361,85,0.114,87,0.005,88,0.005,297,3.906,309,3.515,310,6.001,311,2.345,320,3.859,399,5,409,3.821,419,4.404,759,2.637,777,3.351,780,1.885,785,1.834,856,5.192,1546,3.821,1547,6.888,1548,4.314,1549,4.314,1550,4.314,1551,4.314,1552,4.314,1553,4.314,1554,4.314,1555,4.314,1556,4.314,1557,4.314,1558,4.314]],["title/injectables/JwtAuthenticationGuard.html",[123,1.349,1559,3.676]],["body/injectables/JwtAuthenticationGuard.html",[3,0.152,4,0.178,5,0.165,25,0.008,55,2.287,69,0.552,81,0.367,85,0.178,87,0.007,88,0.007,103,1.517,123,2.373,124,3.022,561,4.11,1167,2.938,1559,6.466,1560,5.447,1561,5.954,1562,5.447,1563,5.954]],["title/injectables/JwtRefreshGuard.html",[123,1.349,487,3.047]],["body/injectables/JwtRefreshGuard.html",[3,0.151,4,0.176,5,0.163,25,0.008,55,2.263,69,0.548,81,0.363,85,0.176,87,0.007,88,0.007,103,1.501,123,2.358,124,2.99,447,3.372,472,3.752,487,5.325,561,4.067,1167,2.907,1560,5.39,1562,5.39,1563,5.892,1564,5.892]],["title/injectables/JwtRefreshTokenStrategy.html",[123,1.349,555,3.217]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.106,4,0.124,5,0.115,8,0.248,24,0.379,25,0.008,26,0.654,32,0.323,38,1.788,69,0.596,81,0.255,83,0.529,85,0.124,87,0.005,88,0.005,103,1.052,123,1.88,124,2.096,126,1.584,128,0.749,132,0.971,133,0.827,139,1.144,169,2.223,170,1.052,185,2.102,259,2.308,337,2.683,389,1.788,447,3.27,452,3.131,455,4.45,471,3.865,472,2.63,484,4.13,485,3.778,486,2.734,490,4.675,491,3.778,510,1.983,555,4.482,561,2.851,567,5.122,568,3.778,625,5.164,626,3.778,627,3.778,648,5.812,657,4.13,664,3.778,1167,2.038,1331,3.306,1460,2.981,1565,6.353,1566,4.13,1567,4.663,1568,4.663,1569,6.323,1570,4.663,1571,3.778,1572,4.13,1573,3.778,1574,3.515,1575,4.766,1576,3.778,1577,4.13,1578,4.13,1579,5.599,1580,5.122,1581,4.13,1582,4.663,1583,4.663]],["title/injectables/JwtStrategy.html",[123,1.349,556,3.217]],["body/injectables/JwtStrategy.html",[3,0.111,4,0.13,5,0.12,8,0.261,15,1.392,24,0.391,25,0.008,26,0.686,32,0.334,64,1.486,69,0.603,76,1.334,78,2.567,81,0.267,83,0.546,85,0.13,87,0.006,88,0.006,103,1.104,123,1.941,124,2.198,126,1.636,128,1.048,132,1.003,133,0.854,139,1.2,145,1.703,170,1.104,185,2.17,206,2.025,259,2.383,337,2.749,338,2.483,339,3.981,362,3.314,365,2.483,367,2.483,389,1.875,455,3.857,471,3.991,486,2.868,556,4.628,561,2.99,585,4.331,625,5.265,626,3.962,627,3.962,648,3.962,664,3.962,1167,2.137,1289,3.467,1460,3.127,1571,3.962,1572,4.331,1573,3.962,1574,3.687,1575,3.687,1576,3.962,1577,4.331,1578,4.331,1579,4.331,1580,3.962,1581,4.331,1584,4.331,1585,4.891,1586,6.529,1587,4.891]],["title/injectables/LocalAuthenticationGuard.html",[123,1.349,482,3.421]],["body/injectables/LocalAuthenticationGuard.html",[3,0.153,4,0.179,5,0.166,25,0.008,69,0.554,81,0.37,85,0.179,87,0.007,88,0.007,103,1.528,123,2.383,124,3.043,482,6.041,561,4.139,1167,2.959,1562,5.486,1588,5.996,1589,6.772]],["title/injectables/LocalStrategy.html",[123,1.349,557,3.217]],["body/injectables/LocalStrategy.html",[3,0.12,4,0.141,5,0.131,8,0.283,24,0.413,25,0.008,26,1.207,32,0.352,64,1.615,69,0.58,78,2.789,81,0.29,83,0.577,85,0.141,87,0.006,88,0.006,103,1.199,123,2.05,124,2.389,126,1.728,128,0.853,132,1.059,133,0.902,139,1.304,169,2.533,185,1.767,259,2.517,337,2.863,436,3.641,471,4.215,477,5.179,478,4.306,557,4.888,561,3.249,602,5.198,1167,2.322,1460,3.398,1571,4.306,1573,4.306,1574,4.006,1576,4.306,1590,6.779,1591,4.706,1592,5.315,1593,5.315,1594,6.896,1595,6.896,1596,5.315,1597,4.706,1598,5.315,1599,5.315]],["title/classes/LoggingTypeEnum.html",[81,0.248,906,2.901]],["body/classes/LoggingTypeEnum.html",[3,0.127,4,0.148,5,0.138,8,0.298,9,1.024,24,0.47,25,0.008,26,1.101,32,0.401,55,2.668,81,0.305,85,0.148,87,0.006,88,0.006,99,5.545,170,2.044,181,5.214,455,4.477,643,3.727,878,0.879,906,4.557,1001,3.526,1197,5.854,1600,4.534,1601,8.021,1602,5.596,1603,5.596,1604,5.596]],["title/classes/LoginOfUserEvent.html",[81,0.248,1342,3.217]],["body/classes/LoginOfUserEvent.html",[3,0.142,4,0.166,5,0.154,8,0.334,9,1.1,24,0.459,25,0.008,26,1.208,32,0.391,81,0.343,83,0.525,85,0.166,87,0.007,88,0.007,128,1.008,132,0.965,133,0.822,170,1.865,432,3.47,597,2.18,878,0.986,925,2.993,997,4.451,1130,5.087,1296,4.734,1342,5.429,1605,7.319,1606,6.28]],["title/classes/LoginOfUserEventHandler.html",[81,0.248,1607,3.421]],["body/classes/LoginOfUserEventHandler.html",[3,0.122,4,0.143,5,0.133,8,0.288,24,0.418,25,0.008,32,0.356,69,0.564,81,0.295,83,0.583,85,0.143,87,0.006,88,0.006,103,1.22,108,2.744,126,1.747,128,0.868,129,3.456,130,5.212,132,1.071,133,0.912,134,4.457,138,3.304,139,1.326,140,3.659,141,3.456,144,3.456,145,1.882,170,1.22,234,2.427,549,3.456,572,1.882,878,0.849,929,2.429,1009,4.78,1010,4.717,1011,4.262,1012,3.629,1013,4.262,1014,3.456,1015,4.088,1016,3.304,1019,3.629,1020,3.304,1342,5.779,1343,4.787,1607,5.255,1608,6.834,1609,5.406]],["title/entities/MediaEntity.html",[0,1.024,312,2.466]],["body/entities/MediaEntity.html",[0,1.091,2,1.171,3,0.073,4,0.085,5,0.079,6,2.95,8,0.171,9,0.836,13,2.026,14,2.288,15,1.657,21,2.075,24,0.502,25,0.008,26,0.909,27,2.437,32,0.428,34,4.339,39,4.826,40,4.651,43,2.733,51,1.95,69,0.481,70,2.347,71,2.347,72,2.409,74,1.261,75,2.347,76,0.875,77,2.154,81,0.175,83,0.268,85,0.085,87,0.004,88,0.004,288,3.592,296,1.629,302,4.277,312,2.629,320,3.941,403,3.799,411,2.154,597,1.657,719,4.849,758,4.772,759,1.961,777,3.025,780,1.402,785,1.364,875,2.418,1610,2.841,1611,5.821,1612,5.821,1613,5.821,1614,5.821,1615,5.821,1616,5.154,1617,5.821,1618,5.821,1619,4.836,1620,3.208,1621,4.836,1622,3.208,1623,4.836,1624,3.208,1625,3.208,1626,3.208,1627,4.836,1628,3.208,1629,4.836,1630,3.208,1631,3.208,1632,3.208,1633,4.836,1634,3.208,1635,4.836,1636,3.208,1637,3.208]],["title/entities/MessageEntity.html",[0,1.024,314,2.661]],["body/entities/MessageEntity.html",[0,1.35,2,1.571,3,0.098,4,0.114,5,0.106,6,2.946,8,0.229,9,0.988,13,2.395,14,2.705,15,1.959,21,2.452,24,0.497,25,0.008,26,1.044,27,2.414,32,0.424,35,3.141,39,3.375,40,3.253,43,3.026,51,2.414,69,0.476,70,2.775,71,2.775,72,2.848,73,3.492,74,1.692,75,2.775,76,1.174,81,0.235,83,0.36,85,0.114,87,0.005,88,0.005,156,5.186,288,3.977,296,2.185,297,3.903,311,2.34,314,3.509,399,4.996,413,3.051,597,2.303,777,3.349,780,1.881,785,1.83,1638,3.812,1639,6.092,1640,5.985,1641,4.305,1642,4.305,1643,5.985,1644,4.305,1645,4.305,1646,4.305,1647,4.305,1648,4.305]],["title/classes/NoUserTraceException.html",[81,0.248,1649,3.676]],["body/classes/NoUserTraceException.html",[3,0.145,4,0.169,5,0.157,22,2.37,25,0.008,32,0.326,69,0.441,81,0.349,85,0.169,87,0.007,88,0.007,128,1.337,646,5.173,878,1.003,942,4.205,949,4.287,1165,4.537,1167,3.381,1649,6.268,1650,6.852,1651,5.654,1652,8.325,1653,6.385,1654,6.385,1655,6.385,1656,6.385]],["title/entities/NotificationEntity.html",[0,1.024,330,2.559]],["body/entities/NotificationEntity.html",[0,1.015,2,1.065,3,0.066,4,0.077,5,0.072,6,2.892,8,0.155,9,0.788,13,1.911,14,2.158,15,1.563,21,1.957,22,1.563,24,0.545,25,0.008,26,1.063,27,2.386,28,4.142,29,5.308,30,3.971,31,3.645,32,0.419,35,2.881,37,4.167,38,3.044,39,3.971,40,3.827,43,2.634,44,2.584,45,3.645,46,4.991,48,2.584,49,3.645,51,1.814,53,3.618,55,2.099,61,2.584,62,3.645,64,2.14,69,0.487,70,2.84,71,1.814,72,1.862,73,3.132,74,1.147,75,1.814,76,0.796,78,1.531,79,3.356,80,4.138,81,0.246,82,1.275,83,0.634,85,0.077,86,4.651,87,0.004,88,0.004,153,3.623,157,1.531,297,3.696,311,1.586,320,3.356,330,2.537,399,3.51,419,3.51,427,1.959,716,2.876,726,2.364,744,4.373,759,1.784,777,2.915,780,1.275,785,1.241,917,1.959,1657,2.584,1658,5.49,1659,6.665,1660,6.665,1661,4.499,1662,2.918,1663,2.918,1664,2.918,1665,2.918,1666,2.918,1667,4.499,1668,2.918,1669,2.918,1670,4.499,1671,2.918,1672,2.918,1673,5.902,1674,2.918,1675,2.918,1676,4.499,1677,2.918,1678,2.918,1679,2.918]],["title/entities/OccupationEntity.html",[0,1.024,316,2.559]],["body/entities/OccupationEntity.html",[0,0.933,2,1.51,3,0.094,4,0.11,5,0.102,6,2.965,8,0.22,9,0.967,13,2.344,14,2.647,15,1.917,21,2.4,24,0.502,25,0.008,26,1.026,27,2.437,32,0.428,34,4.192,37,2.171,38,2.231,43,2.988,51,2.347,69,0.505,70,2.347,71,2.716,72,2.788,74,1.626,75,2.716,76,1.128,77,2.777,81,0.226,83,0.563,85,0.11,87,0.005,88,0.005,288,3.927,296,2.099,316,3.282,320,3.807,691,3.118,716,3.721,731,4.521,756,4.906,759,2.528,777,3.307,780,1.807,785,1.759,963,3.907,1680,3.663,1681,5.963,1682,5.963,1683,5.963,1684,5.82,1685,4.136,1686,5.82,1687,4.136,1688,4.136,1689,4.136,1690,4.136,1691,4.136,1692,5.82,1693,4.136,1694,4.136,1695,4.136]],["title/entities/PlanEntity.html",[0,1.024,318,2.774]],["body/entities/PlanEntity.html",[0,1.225,2,1.37,3,0.085,4,0.099,5,0.092,6,2.98,8,0.2,9,0.916,13,2.221,14,2.508,15,1.816,21,2.274,24,0.544,25,0.008,26,1.085,27,2.458,28,4.981,29,5.271,30,3.943,32,0.432,43,2.893,51,2.19,69,0.375,70,3.119,71,2.573,72,2.641,74,1.475,75,2.573,76,1.023,81,0.205,83,0.716,85,0.099,86,5.271,87,0.005,88,0.005,153,4.032,318,3.319,328,4.059,417,3.04,695,2.2,725,4.944,757,3.184,777,3.201,780,1.64,785,1.596,1140,5.169,1162,2.66,1163,4.399,1696,3.323,1697,6.38,1698,7.419,1699,7.419,1700,3.753,1701,3.753,1702,3.753,1703,5.43,1704,6.992,1705,3.753,1706,3.753,1707,3.753,1708,3.753,1709,3.753,1710,5.43,1711,3.753,1712,3.753]],["title/entities/ProfileEntity.html",[0,1.024,320,2.163]],["body/entities/ProfileEntity.html",[0,0.86,2,0.864,3,0.054,4,0.063,5,0.058,6,2.855,8,0.126,9,0.688,11,1.513,13,1.667,14,1.883,15,1.364,21,1.707,22,1.715,24,0.486,25,0.008,26,0.771,27,2.36,32,0.415,34,3.379,35,1.242,38,3.144,39,4.711,40,4.458,43,2.408,51,1.538,64,1.669,69,0.503,70,1.932,71,1.932,72,1.983,73,1.936,74,0.93,75,1.932,76,0.645,77,1.589,78,1.242,81,0.129,83,0.566,85,0.063,87,0.003,88,0.003,133,1.093,157,2.883,288,3.328,291,3.221,293,1.589,296,1.201,309,3.775,311,1.286,312,3.68,316,3.097,320,1.818,330,3.097,392,4.563,411,3.688,415,4.45,419,3.062,427,2.56,679,3.88,695,3.532,698,5.922,699,5.507,719,2.438,731,2.56,755,3.61,756,3.216,757,3.775,758,2.928,770,1.784,773,1.677,777,2.665,780,1.034,785,1.006,807,3.88,811,4.241,818,3.377,835,3.377,856,4.141,859,3.88,876,1.917,877,1.917,1682,4.241,1713,2.095,1714,4.79,1715,4.79,1716,4.79,1717,4.79,1718,4.79,1719,2.366,1720,3.813,1721,3.813,1722,2.366,1723,2.366,1724,2.366,1725,2.366,1726,3.813,1727,2.366,1728,3.813,1729,2.366,1730,3.813,1731,3.813,1732,5.493,1733,2.366,1734,3.813,1735,2.366,1736,3.813,1737,2.366,1738,2.366,1739,3.813,1740,3.813,1741,2.366,1742,2.366,1743,3.813,1744,2.366,1745,2.366,1746,3.813,1747,2.366,1748,2.366]],["title/entities/ReferralCodeEntity.html",[0,1.024,332,2.774]],["body/entities/ReferralCodeEntity.html",[0,0.767,2,1.24,3,0.077,4,0.09,5,0.083,6,2.824,8,0.181,9,0.725,13,2.097,15,1.715,21,2.147,22,1.898,24,0.522,25,0.008,26,0.936,27,2.31,30,1.916,32,0.406,37,3.499,38,2.556,43,3.088,46,3.578,51,1.37,64,2.466,69,0.492,70,2.429,71,2.036,73,3.057,74,1.336,75,2.036,76,0.927,78,1.783,80,3.805,81,0.276,82,1.485,85,0.09,87,0.004,88,0.004,166,1.992,184,4.089,328,3.918,332,3.086,333,5.447,425,4.269,438,4.269,680,4.54,716,3.227,758,3.086,769,3.805,892,6.116,898,6.611,963,2.281,992,4.47,1135,2.752,1162,2.408,1749,4.879,1750,6.023,1751,6.023,1752,5.048,1753,5.048,1754,4.089,1755,4.47,1756,3.397,1757,3.397,1758,3.397,1759,3.397,1760,3.397,1761,6.667,1762,3.397,1763,3.397,1764,3.397,1765,5.048,1766,5.048,1767,5.048,1768,5.048,1769,3.397,1770,3.397,1771,3.397,1772,5.048,1773,3.397,1774,3.397,1775,3.397,1776,3.397,1777,3.397,1778,3.397,1779,5.048,1780,3.397,1781,5.048,1782,3.397,1783,3.397,1784,3.397]],["title/classes/RegisterCommand.html",[81,0.248,628,3.217]],["body/classes/RegisterCommand.html",[3,0.128,4,0.149,5,0.138,8,0.3,9,1.027,24,0.496,25,0.008,26,1.297,32,0.423,81,0.307,83,0.471,85,0.149,87,0.006,88,0.006,128,0.904,132,0.865,133,0.737,170,2.046,432,3.338,434,3.734,436,3.84,597,2.557,628,5.072,878,0.884,925,2.683,1296,4.243,1785,4.985,1786,5.629,1787,7.866]],["title/classes/RegisterEvent.html",[81,0.248,1788,3.217]],["body/classes/RegisterEvent.html",[3,0.144,4,0.168,5,0.156,8,0.338,9,1.107,24,0.462,25,0.008,26,1.212,32,0.394,81,0.346,83,0.531,85,0.168,87,0.007,88,0.007,128,1.018,132,0.974,133,0.83,170,1.873,597,2.194,611,4.115,878,0.996,925,3.023,1112,3.877,1788,5.462,1789,5.617,1790,6.343,1791,6.343]],["title/classes/RegisterEventHandler.html",[81,0.248,579,3.421]],["body/classes/RegisterEventHandler.html",[3,0.122,4,0.143,5,0.132,8,0.287,9,0.999,15,1.981,22,1.981,24,0.323,25,0.008,32,0.356,55,1.833,69,0.563,81,0.294,83,0.451,85,0.143,87,0.006,88,0.006,103,1.216,126,1.744,132,0.828,133,0.705,139,1.322,234,2.423,519,2.736,572,1.876,579,5.246,581,6.243,878,0.847,929,2.422,1001,2.422,1010,4.711,1011,4.254,1013,4.254,1015,3.16,1016,3.295,1052,4.672,1054,4.773,1194,4.367,1283,4.367,1788,5.773,1792,6.825,1793,7.707,1794,6.959,1795,5.39,1796,4.773,1797,5.39,1798,5.39,1799,6.162,1800,6.959,1801,5.39]],["title/classes/RegisterHandler.html",[81,0.248,569,3.421]],["body/classes/RegisterHandler.html",[3,0.07,4,0.082,5,0.076,8,0.166,9,0.678,24,0.411,25,0.008,26,1.111,32,0.369,53,2.769,64,1.435,69,0.582,76,0.848,78,1.632,81,0.258,82,1.358,83,0.574,85,0.082,87,0.004,88,0.004,110,1.9,111,1.69,112,1.753,126,1.183,128,0.758,132,1.109,133,0.897,139,1.565,145,2.961,185,2.4,206,1.287,234,1.644,259,2.636,337,2.961,338,1.578,339,3.237,362,2.397,365,1.578,366,3.17,367,1.578,389,2.768,432,2.572,434,2.786,436,2.566,438,2.204,471,1.9,510,2.428,518,3.347,519,2.838,569,3.559,572,1.082,628,4.52,728,2.087,878,0.488,930,3.833,931,2.478,934,3.17,936,1.987,937,2.087,940,3.347,941,5.647,942,3.466,943,3.347,944,2.753,945,3.347,946,2.753,947,2.204,948,3.17,949,2.087,950,2.753,956,4.182,958,3.825,959,2.753,960,2.518,961,2.753,972,2.753,1117,4.587,1123,1.753,1126,4.384,1170,3.559,1171,3.559,1461,3.559,1467,3.559,1788,2.204,1796,2.753,1802,2.753,1803,5.71,1804,4.722,1805,4.722,1806,4.722,1807,4.722,1808,3.109,1809,4.722,1810,3.109,1811,4.722,1812,3.109,1813,4.722,1814,3.109,1815,3.109,1816,3.109,1817,3.109,1818,3.109,1819,3.109,1820,4.722,1821,3.109,1822,3.109,1823,3.109,1824,6.377,1825,6.377,1826,3.109,1827,3.109,1828,3.109,1829,3.109,1830,3.109,1831,3.109,1832,3.109,1833,4.722,1834,4.722,1835,3.109,1836,3.109,1837,3.109]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.248,1838,3.217]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.141,4,0.165,5,0.153,8,0.331,9,1.093,24,0.456,25,0.008,26,1.204,32,0.389,81,0.339,83,0.52,85,0.165,87,0.007,88,0.007,128,0.999,132,0.955,133,0.814,170,1.857,447,3.499,597,2.167,611,4.087,878,0.977,925,2.964,1112,3.801,1838,5.397,1839,7.287,1840,5.038,1841,5.506,1842,5.506]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.248,1843,3.421]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.111,4,0.13,5,0.12,8,0.261,24,0.391,25,0.008,32,0.334,64,1.486,69,0.581,76,1.334,81,0.267,83,0.546,85,0.13,87,0.006,88,0.006,110,2.99,111,2.658,112,2.758,126,1.636,128,1.048,132,1.003,133,0.854,139,1.2,145,2.273,157,2.567,206,2.025,234,2.273,259,2.383,337,2.749,338,2.483,339,3.981,362,3.314,365,2.483,367,2.483,389,1.875,447,3.334,572,1.703,639,2.483,642,2.404,643,2.853,878,0.768,929,2.198,930,4.934,931,3.427,934,4.384,936,3.127,937,3.284,939,2.567,1014,3.127,1117,5.246,1123,2.758,1126,3.127,1128,3.467,1326,3.687,1838,5.559,1843,5.54,1844,6.508,1845,5.559,1846,4.891,1847,4.891,1848,4.891,1849,3.962]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.248,1850,3.421]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.118,4,0.139,5,0.128,8,0.278,9,0.98,22,2.292,24,0.482,25,0.008,26,1.284,32,0.411,55,2.32,81,0.285,83,0.437,85,0.139,87,0.006,88,0.006,89,3.368,128,1.095,132,0.803,133,0.684,170,2.018,447,3.55,597,2.546,611,3.837,878,0.821,998,5.919,1001,3.066,1002,4.58,1112,3.195,1850,5.142,1851,7.394,1852,4.235,1853,4.629,1854,4.629,1855,4.629,1856,4.629]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.248,1857,3.421]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.121,4,0.142,5,0.131,8,0.285,24,0.415,25,0.008,32,0.354,69,0.561,81,0.292,83,0.579,85,0.142,87,0.006,88,0.006,103,1.206,108,2.713,126,1.734,128,0.858,129,3.417,130,5.19,132,1.063,133,0.906,134,4.425,138,3.267,139,1.311,140,3.632,141,3.417,144,3.417,145,1.861,170,1.206,234,2.409,447,3.452,549,3.417,572,1.861,878,0.84,929,2.402,1010,4.692,1011,4.231,1012,3.588,1013,4.231,1014,3.417,1015,4.058,1016,3.267,1019,3.588,1020,3.267,1850,6.12,1857,5.217,1858,6.797,1859,6.12,1860,5.345,1861,5.345]],["title/injectables/RequestLoggingMiddleware.html",[123,1.349,218,3.421]],["body/injectables/RequestLoggingMiddleware.html",[3,0.078,4,0.091,5,0.084,8,0.183,9,0.731,24,0.449,25,0.008,26,0.941,32,0.383,38,1.317,53,2.983,55,1.168,69,0.536,81,0.187,83,0.507,85,0.091,87,0.004,88,0.004,95,3.518,100,1.937,103,0.775,105,2.099,123,1.513,124,1.543,126,1.275,128,0.551,132,0.782,133,0.666,136,3.705,139,0.843,140,2.671,143,2.434,145,2.959,157,3.756,169,1.637,170,1.938,181,4.097,216,4.751,218,3.836,234,1.196,235,2.306,236,2.434,237,5.073,238,2.434,239,2.434,243,4.297,455,3.518,479,2.434,480,4.569,486,2.014,510,3.043,519,1.35,879,2.306,886,3.836,891,4.122,894,4.07,906,2.196,917,3.416,1001,1.543,1188,4.569,1189,4.569,1190,4.569,1191,4.569,1192,2.589,1193,3.836,1195,4.569,1197,2.434,1198,2.434,1200,3.836,1201,2.589,1202,3.836,1203,2.589,1204,2.434,1205,4.569,1207,2.589,1208,2.589,1209,2.782,1211,2.589,1213,2.589,1215,2.589,1219,2.589,1239,2.589,1240,3.836,1242,4.122,1244,3.041,1245,2.782,1246,3.041,1247,2.782,1248,4.122,1249,3.836,1250,2.782,1251,2.782,1252,4.122,1253,2.782,1254,4.122,1255,2.782,1256,2.782,1257,2.782,1258,2.782,1259,2.782,1260,2.782,1261,3.041,1268,2.782,1269,2.782,1270,2.782,1271,4.122,1272,2.782,1580,2.782,1862,6.869,1863,4.506,1864,3.041,1865,3.041,1866,3.434,1867,4.506,1868,3.041,1869,3.041,1870,3.434,1871,3.434,1872,3.434,1873,3.434]],["title/interfaces/RequestUser.html",[452,3.047,1874,3.217]],["body/interfaces/RequestUser.html",[3,0.146,4,0.17,5,0.158,8,0.342,9,1.116,22,2.469,24,0.385,25,0.008,64,2.636,69,0.537,78,3.374,85,0.17,87,0.007,88,0.007,452,5.216,455,4.382,486,3.769,1167,3.395,1874,4.557,1875,5.208,1876,5.693,1877,5.693]],["title/injectables/ResponseLoggingMiddleware.html",[123,1.349,221,3.421]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.078,4,0.091,5,0.085,8,0.184,9,0.733,24,0.465,25,0.008,26,0.942,32,0.383,38,1.321,53,2.991,55,1.172,69,0.519,81,0.188,83,0.508,85,0.091,87,0.004,88,0.004,89,1.39,95,3.524,100,1.944,103,0.778,105,2.107,123,1.517,124,1.549,126,1.278,128,0.553,132,0.784,133,0.668,136,3.713,139,0.846,143,2.443,145,2.961,157,3.762,169,1.643,170,1.939,181,4.104,185,1.146,216,4.306,221,3.846,234,1.2,235,2.314,236,2.443,237,5.08,238,2.443,239,2.443,240,4.133,241,2.792,242,4.133,243,4.759,337,2.272,389,1.321,455,3.524,479,2.443,480,4.579,486,2.021,510,3.047,519,1.355,879,2.314,886,3.846,891,4.133,894,4.078,917,2.314,1001,1.549,1188,4.579,1189,4.579,1190,4.579,1191,4.579,1192,2.598,1193,3.846,1195,3.846,1198,2.443,1200,3.846,1201,2.598,1202,3.846,1203,2.598,1204,2.443,1205,3.846,1207,2.598,1208,2.598,1211,2.598,1212,2.792,1213,2.598,1215,2.598,1217,2.792,1219,2.598,1239,2.598,1240,3.846,1242,4.133,1245,2.792,1247,2.792,1248,4.133,1249,3.846,1250,2.792,1251,2.792,1252,2.792,1253,2.792,1254,4.133,1255,2.792,1256,2.792,1257,2.792,1258,2.792,1259,2.792,1260,2.792,1262,3.052,1263,3.052,1264,3.052,1265,3.052,1266,3.052,1267,3.052,1268,2.792,1269,2.792,1270,2.792,1271,2.792,1272,2.792,1863,4.518,1864,3.052,1865,3.052,1867,4.518,1868,3.052,1869,3.052,1878,6.877,1879,3.447,1880,3.447]],["title/classes/RoleGroupMembershipEnum.html",[81,0.248,1385,3.421]],["body/classes/RoleGroupMembershipEnum.html",[3,0.125,4,0.147,5,0.136,6,2.863,8,0.295,9,1.016,24,0.467,25,0.008,26,1.095,32,0.399,55,2.654,81,0.302,85,0.147,87,0.006,88,0.006,170,2.039,403,4.822,680,6.407,878,0.869,1001,3.506,1385,5.334,1601,8.004,1881,6.662,1882,4.898,1883,7.527,1884,8.5,1885,5.531,1886,5.531,1887,5.531]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.248,1888,3.217]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.13,4,0.152,5,0.141,8,0.306,9,1.041,24,0.476,25,0.008,26,1.266,32,0.406,81,0.314,83,0.481,85,0.152,87,0.006,88,0.006,128,0.923,132,0.883,133,0.752,170,1.981,447,3.546,597,2.448,611,4.099,878,0.903,925,2.74,1331,5.912,1332,5.09,1840,4.657,1841,5.09,1842,6.421,1888,5.14,1889,7.386,1890,5.332]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.248,1891,3.421]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.107,4,0.125,5,0.116,8,0.252,24,0.383,25,0.008,32,0.326,64,1.438,69,0.588,76,1.291,81,0.258,83,0.534,85,0.125,87,0.006,88,0.006,110,2.893,111,2.572,112,2.669,126,1.6,128,1.026,132,0.981,133,0.836,139,1.161,145,2.223,206,1.959,234,2.223,259,2.331,337,2.704,338,2.402,339,3.928,362,3.242,365,2.402,366,4.288,367,2.402,389,2.448,438,3.355,447,3.29,510,2.012,572,1.648,639,2.402,642,2.327,643,2.791,878,0.743,929,2.127,930,4.853,931,3.352,933,3.834,934,4.288,936,3.026,937,3.178,939,2.484,1117,5.202,1123,2.669,1126,3.026,1128,3.355,1194,3.834,1326,4.814,1845,5.485,1849,3.834,1888,5.485,1890,4.947,1891,5.449,1892,6.401,1893,4.733,1894,4.733,1895,4.733]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.248,1896,3.421]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.11,4,0.129,5,0.12,8,0.259,9,0.934,22,2.228,24,0.489,25,0.008,26,1.295,32,0.417,55,2.213,81,0.266,83,0.407,85,0.129,87,0.006,88,0.006,89,3.156,128,1.045,132,0.748,133,0.637,170,2.042,447,3.569,597,2.576,611,3.888,878,0.764,998,5.782,999,4.309,1001,2.924,1002,4.369,1331,5.782,1852,3.942,1853,4.309,1854,4.309,1855,4.309,1856,4.309,1890,5.366,1896,4.905,1897,7.433,1898,4.866]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.248,1899,3.421]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.12,4,0.14,5,0.13,8,0.282,24,0.412,25,0.008,32,0.351,69,0.559,81,0.288,83,0.575,85,0.14,87,0.006,88,0.006,103,1.193,108,2.683,126,1.722,128,0.849,129,3.379,130,5.168,132,1.056,133,0.899,134,4.393,138,3.231,139,1.297,140,3.606,141,3.379,144,3.379,145,1.84,170,1.193,234,2.392,447,3.437,549,3.379,572,1.84,878,0.83,929,2.375,1010,4.667,1011,4.2,1012,3.548,1013,4.2,1014,3.379,1015,4.029,1016,3.231,1019,3.548,1020,3.231,1859,6.094,1890,5.168,1896,6.094,1899,5.179,1900,6.761,1901,5.285,1902,5.285]],["title/classes/SignInDto.html",[81,0.248,1903,3.676]],["body/classes/SignInDto.html",[3,0.139,4,0.162,5,0.15,8,0.326,9,1.082,24,0.452,25,0.008,26,1.197,27,2.193,32,0.385,69,0.423,79,5.213,81,0.411,82,2.673,85,0.162,87,0.007,88,0.007,432,3.295,436,3.672,769,4.612,878,0.961,1754,4.957,1903,6.107,1904,6.619,1905,5.418,1906,5.418,1907,6.118,1908,6.118,1909,5.418,1910,5.418]],["title/classes/SignUpDto.html",[81,0.248,466,3.217]],["body/classes/SignUpDto.html",[3,0.132,4,0.154,5,0.143,8,0.31,9,1.049,24,0.479,25,0.008,26,1.236,27,2.324,32,0.408,69,0.402,79,5.276,81,0.399,82,2.543,85,0.154,87,0.006,88,0.006,432,3.221,434,3.49,436,3.59,466,5.179,767,5.179,769,4.386,878,0.914,1754,4.714,1904,6.787,1906,5.153,1909,5.153,1910,5.153,1911,5.153,1912,5.153,1913,5.819,1914,5.819,1915,5.819]],["title/entities/SocialNetworkEntity.html",[0,1.024,322,2.774]],["body/entities/SocialNetworkEntity.html",[0,1.657,2,1.336,3,0.083,4,0.097,5,0.09,6,2.879,8,0.195,9,0.903,13,2.405,14,2.716,15,2.091,21,2.463,24,0.486,25,0.008,26,1.208,27,2.359,32,0.414,43,3.22,51,2.15,69,0.368,70,3.192,71,2.536,72,2.603,74,1.438,75,2.536,76,0.998,81,0.291,83,0.662,85,0.097,87,0.005,88,0.005,153,2.897,288,3.768,296,1.857,322,3.844,323,5.862,421,2.964,695,2.145,757,3.126,776,6.807,777,3.174,780,1.599,785,1.556,1681,5.569,1916,3.24,1917,6.289,1918,8.402,1919,7.344,1920,7.344,1921,5.331,1922,3.659,1923,3.659,1924,3.659,1925,3.659,1926,3.659,1927,3.659,1928,3.659,1929,3.659,1930,3.659,1931,3.24,1932,3.659,1933,7.914,1934,3.659,1935,2.758,1936,3.659]],["title/entities/StripEventEntity.html",[0,1.024,325,2.901]],["body/entities/StripEventEntity.html",[0,1.661,2,2.15,3,0.133,4,0.156,5,0.145,6,2.563,8,0.314,9,1.153,15,2.287,24,0.353,25,0.008,26,1.033,27,1.714,32,0.301,55,2.004,69,0.407,74,3.157,76,1.607,81,0.402,83,0.616,85,0.156,87,0.006,88,0.006,325,5.38,326,5.219,423,5.217,597,2.287,777,3.048,1167,2.574,1931,5.217,1937,5.217,1938,5.891,1939,4.772,1940,5.891]],["title/entities/SubscriptionEntity.html",[0,1.024,328,2.382]],["body/entities/SubscriptionEntity.html",[0,1.012,2,1.06,3,0.066,4,0.077,5,0.071,6,2.921,8,0.155,9,0.786,13,1.906,14,2.152,15,1.893,21,1.951,22,1.893,24,0.531,25,0.008,26,0.864,27,2.414,28,4.132,32,0.424,35,2.353,37,3.689,38,2.695,43,3.281,51,1.808,55,0.988,64,2.136,69,0.486,70,2.955,71,2.208,72,2.266,73,2.779,74,1.142,75,2.208,76,0.792,78,1.524,81,0.245,82,1.269,83,0.556,85,0.077,87,0.004,88,0.004,133,0.92,153,1.579,183,1.775,299,4.296,301,1.95,307,4.296,318,4.296,328,2.353,407,4.848,417,4.435,425,2.059,597,2.483,695,1.703,731,1.95,744,3.178,756,3.01,757,2.628,777,2.91,780,1.269,785,1.235,963,1.95,1138,4.848,1139,4.848,1149,3.97,1150,3.97,1153,3.97,1160,5.89,1176,2.572,1177,2.572,1178,2.572,1941,2.572,1942,5.474,1943,5.474,1944,5.474,1945,5.474,1946,2.905,1947,2.905,1948,4.483,1949,2.905,1950,2.905,1951,2.905,1952,4.483,1953,2.905,1954,4.483,1955,2.905,1956,2.905,1957,2.572,1958,2.905,1959,3.97,1960,3.97,1961,4.483,1962,4.483,1963,4.483,1964,4.483,1965,2.905,1966,4.483,1967,2.905,1968,2.905,1969,4.483,1970,2.905,1971,3.97,1972,2.905]],["title/classes/TimestampEntityExtendEntity.html",[81,0.248,1973,3.676]],["body/classes/TimestampEntityExtendEntity.html",[3,0.097,4,0.113,5,0.105,8,0.228,9,0.855,13,2.386,14,2.695,21,2.443,24,0.484,25,0.008,27,1.994,32,0.412,43,3.019,45,4.826,46,5.722,49,4.826,62,4.826,69,0.296,70,2.99,76,1.166,81,0.233,83,0.675,85,0.113,87,0.005,88,0.005,126,1.493,139,1.682,140,4.237,519,2.915,597,2.607,699,4.978,726,5.554,878,0.672,1167,2.603,1939,5.554,1973,4.826,1974,7.335,1975,7.335,1976,3.786,1977,7.414,1978,7.414,1979,7.414,1980,4.276,1981,4.276,1982,5.957,1983,5.957,1984,4.276,1985,4.276,1986,4.276,1987,4.276,1988,4.276,1989,7.414,1990,5.957,1991,6.855]],["title/interfaces/TokenPayload.html",[625,3.047,1874,3.217]],["body/interfaces/TokenPayload.html",[3,0.153,4,0.179,5,0.166,8,0.359,9,1.148,24,0.404,25,0.008,26,1.196,85,0.179,87,0.007,88,0.007,611,4.201,625,5.37,1874,4.783,1875,5.466,1992,5.975,1993,5.975]],["title/classes/UnauthorizedRequestException.html",[81,0.248,1994,3.676]],["body/classes/UnauthorizedRequestException.html",[3,0.146,4,0.171,5,0.158,25,0.008,32,0.33,69,0.446,81,0.352,85,0.171,87,0.007,88,0.007,103,1.455,128,1.343,455,3.385,623,4.545,624,3.637,878,1.013,942,4.231,1165,4.565,1167,3.402,1994,6.307,1995,6.894,1996,5.712,1997,6.45,1998,6.45,1999,6.45]],["title/classes/UpdateUserCommand.html",[81,0.248,2000,3.217]],["body/classes/UpdateUserCommand.html",[3,0.131,4,0.153,5,0.142,8,0.308,9,1.045,22,2.452,24,0.477,25,0.008,26,1.173,32,0.407,69,0.4,81,0.316,83,0.484,85,0.153,87,0.006,88,0.006,128,0.929,132,0.888,133,0.757,170,1.984,274,3.697,597,2.452,611,3.984,878,0.908,921,4.36,923,5.121,924,6.445,925,2.757,1112,3.535,2000,5.159,2001,7.402,2002,5.784,2003,4.685]],["title/classes/UpdateUserCommandHandler.html",[81,0.248,2004,3.421]],["body/classes/UpdateUserCommandHandler.html",[3,0.091,4,0.106,5,0.099,8,0.214,9,0.818,15,1.143,22,1.622,24,0.397,25,0.008,32,0.368,55,1.365,64,1.732,69,0.6,76,1.095,81,0.311,82,1.754,83,0.477,85,0.106,87,0.005,88,0.005,103,0.906,110,2.454,111,2.182,112,2.264,126,1.428,128,0.915,132,1.018,133,0.746,139,0.985,145,1.397,185,1.334,206,1.662,234,1.984,259,2.08,337,2.478,338,2.037,339,3.66,362,2.892,365,2.037,367,2.037,389,2.539,471,3.483,510,2.423,518,2.99,519,2.834,572,1.397,597,1.886,639,2.037,642,1.973,643,2.895,728,2.695,878,0.63,928,5.311,929,1.804,930,4.448,931,2.99,934,3.826,935,3.026,936,2.566,937,2.695,939,2.107,958,3.252,960,3.252,1001,1.804,1009,2.354,1052,4.841,1117,5.243,1123,2.264,1126,3.643,1128,2.845,1289,2.845,1307,3.483,1308,3.026,1849,3.252,2000,5.111,2004,4.993,2005,6.743,2006,5.698,2007,5.698,2008,4.014,2009,4.014,2010,4.014,2011,4.014,2012,4.014,2013,2.845,2014,3.554,2015,4.014,2016,4.014,2017,4.014,2018,4.014,2019,4.014,2020,4.014,2021,4.014]],["title/classes/UpdateUserDto.html",[81,0.248,2002,3.047]],["body/classes/UpdateUserDto.html",[3,0.133,4,0.155,5,0.144,8,0.312,9,1.053,24,0.48,25,0.008,26,1.238,27,2.134,30,3.301,32,0.409,69,0.405,79,4.896,81,0.4,82,2.558,85,0.155,87,0.006,88,0.006,133,0.96,432,3.23,434,3.5,436,3.6,767,5.199,878,0.92,982,4.743,990,4.743,994,5.529,1912,5.184,2002,4.924,2022,7.435,2023,5.855,2024,5.855,2025,5.855,2026,5.855]],["title/classes/UpdateUserEvent.html",[81,0.248,2013,3.217]],["body/classes/UpdateUserEvent.html",[3,0.12,4,0.14,5,0.13,8,0.282,9,0.988,22,2.304,24,0.485,25,0.008,26,1.286,32,0.413,55,2.341,81,0.289,83,0.443,85,0.14,87,0.006,88,0.006,89,3.382,128,1.105,132,0.814,133,0.694,170,2.023,597,2.553,611,3.857,878,0.833,997,3.757,998,5.945,1000,4.294,1001,3.094,1002,4.622,1005,4.294,1112,3.24,1130,4.294,1131,4.693,2013,4.879,2027,7.427]],["title/classes/UpdateUserEventHandler.html",[81,0.248,2028,3.421]],["body/classes/UpdateUserEventHandler.html",[3,0.122,4,0.143,5,0.133,8,0.288,24,0.418,25,0.008,32,0.356,69,0.564,81,0.295,83,0.583,85,0.143,87,0.006,88,0.006,103,1.22,108,2.744,126,1.747,128,0.868,129,3.456,130,5.212,132,1.071,133,0.912,134,4.457,138,3.304,139,1.326,140,3.659,141,3.456,144,3.456,145,1.882,170,1.22,234,2.427,549,3.456,572,1.882,878,0.849,929,2.429,1009,4.78,1010,4.717,1011,4.262,1012,3.629,1013,4.262,1014,3.456,1015,4.088,1016,3.304,1019,3.629,1020,3.304,2013,5.779,2014,4.787,2028,5.255,2029,6.834,2030,5.406]],["title/controllers/UserController.html",[147,2.466,2031,3.421]],["body/controllers/UserController.html",[3,0.083,4,0.098,5,0.09,8,0.196,15,1.972,22,1.524,24,0.441,25,0.008,26,1.078,27,2.141,32,0.376,69,0.589,81,0.201,83,0.58,85,0.098,87,0.005,88,0.005,103,0.83,122,1.868,126,1.341,132,1.064,133,0.907,139,1.806,142,2.609,147,2,165,2.774,166,2.158,169,1.754,170,0.83,185,2.553,259,3.071,261,4.504,264,4.035,265,2.981,274,3.422,337,2.36,389,1.411,443,2.981,447,1.565,452,4.652,455,3.311,479,2.609,481,3.259,485,2.981,487,2.471,489,3.259,490,3.558,492,2.774,494,2.075,496,2.249,504,3.259,510,1.565,519,1.447,534,4.74,623,2.91,639,1.868,642,1.809,643,2.339,951,2.471,952,2.981,953,2.774,954,3.259,1307,2.249,1308,2.774,1935,4.035,2002,5.454,2003,2.981,2031,4.035,2032,3.259,2033,4.74,2034,6.135,2035,4.74,2036,4.74,2037,3.259,2038,5.353,2039,3.68,2040,3.68,2041,3.68,2042,3.259,2043,5.353,2044,3.68,2045,3.259,2046,3.68,2047,3.68,2048,3.68,2049,3.68,2050,3.68,2051,3.68,2052,3.68,2053,5.353,2054,3.259,2055,3.68,2056,3.68,2057,3.68,2058,3.68,2059,3.68,2060,3.68,2061,3.68,2062,3.68,2063,3.68,2064,3.68,2065,3.68,2066,3.68,2067,3.68,2068,3.68,2069,3.68,2070,3.68,2071,3.68,2072,3.68]],["title/entities/UserEntity.html",[0,1.024,64,1.379]],["body/entities/UserEntity.html",[0,0.867,1,3.239,2,2.361,3,0.054,4,0.063,5,0.059,8,0.127,9,0.692,13,1.679,14,1.896,15,1.373,21,1.719,22,1.935,24,0.502,25,0.008,26,1.094,27,2.435,30,1.348,32,0.428,37,3.177,38,3.08,40,3.003,43,2.419,51,1.55,53,3.239,55,1.879,64,1.168,69,0.504,70,2.851,71,1.945,72,1.996,74,0.94,75,1.945,76,0.652,81,0.263,82,1.044,83,0.2,84,4.584,85,0.063,87,0.003,88,0.003,133,0.925,153,2.621,157,1.254,301,1.605,320,2.633,321,1.802,328,2.9,329,1.802,330,3.115,331,1.802,332,4.156,333,1.605,334,1.802,419,2.458,425,2.725,427,2.581,432,1.945,434,2.971,436,2.721,439,2.531,494,2.719,496,1.461,597,2.077,691,1.802,695,3.792,705,2.898,706,2.898,715,3.404,716,4.52,757,3.986,767,2.725,777,2.287,780,1.044,785,1.016,800,1.461,801,2.948,802,1.461,805,4.27,859,3.906,963,3.237,977,2.116,990,1.936,993,1.694,994,1.802,1075,3.404,1108,3.404,1140,3.906,1167,1.044,1291,3.916,1326,3.635,1436,3.404,1460,1.528,1683,4.27,1799,3.404,1939,3.114,1957,2.116,1959,4.892,1960,4.892,2073,2.116,2074,4.822,2075,4.822,2076,4.822,2077,4.822,2078,4.822,2079,3.844,2080,2.39,2081,2.39,2082,3.844,2083,2.39,2084,2.39,2085,2.39,2086,2.39,2087,2.39,2088,2.39,2089,5.525,2090,3.844,2091,3.404,2092,3.844,2093,2.39,2094,4.892,2095,6.054,2096,2.39,2097,3.844,2098,2.39,2099,2.39,2100,3.844,2101,2.39,2102,4.892,2103,3.844,2104,2.39,2105,2.39,2106,3.844,2107,2.39,2108,2.39,2109,3.844,2110,2.39,2111,2.39,2112,2.39,2113,2.39,2114,2.116,2115,3.844]],["title/classes/UserListResponse.html",[81,0.248,1309,3.421]],["body/classes/UserListResponse.html",[3,0.135,4,0.158,5,0.146,8,0.317,9,1.063,24,0.444,25,0.008,32,0.378,69,0.411,81,0.325,83,0.497,85,0.158,87,0.006,88,0.006,128,0.955,132,0.913,133,0.778,597,2.296,878,0.934,953,4.482,1024,4.215,1307,5.413,1309,5.583,2091,7.143,2116,6.535,2117,5.265,2118,8.066,2119,7.406,2120,7.406,2121,7.406]],["title/classes/UserLoginDto.html",[81,0.248,2122,3.676]],["body/classes/UserLoginDto.html",[3,0.124,4,0.145,5,0.135,8,0.292,9,1.01,24,0.466,25,0.008,26,1.277,27,2.047,32,0.397,69,0.379,81,0.299,83,0.459,85,0.145,87,0.006,88,0.006,128,0.88,132,0.842,133,0.718,166,3.215,170,1.957,436,3.964,597,2.469,602,6.39,878,0.861,892,6.39,2122,5.7,2123,7.259,2124,4.856,2125,7.036,2126,5.483,2127,5.483,2128,5.483,2129,5.483,2130,5.483]],["title/classes/UserLoginResponse.html",[81,0.248,498,3.217]],["body/classes/UserLoginResponse.html",[3,0.099,4,0.116,5,0.107,8,0.233,9,0.869,13,2.415,15,1.975,21,2.473,24,0.517,25,0.008,26,1.225,32,0.441,43,2.8,64,1.329,69,0.418,81,0.239,83,0.366,85,0.116,87,0.005,88,0.005,128,0.702,132,0.672,133,1.091,170,2.072,432,2.798,434,3.032,436,3.118,439,3.642,472,3.913,494,3.913,496,2.674,498,4.289,597,2.657,800,3.699,801,4.97,802,2.674,878,0.687,993,3.1,1024,3.1,1030,3.873,2116,7.072,2131,3.873,2132,4.374,2133,4.374,2134,4.374,2135,4.374,2136,4.374,2137,4.374,2138,4.374,2139,4.374,2140,4.374]],["title/modules/UserModule.html",[89,1.83,194,3.217]],["body/modules/UserModule.html",[3,0.082,4,0.096,5,0.089,22,1.956,25,0.008,64,1.099,69,0.635,81,0.197,83,0.303,85,0.096,87,0.005,88,0.005,89,2.132,90,4.881,91,2.04,92,2.981,95,4.007,96,3.38,97,2.312,98,2.312,100,2.981,102,3.38,103,0.816,104,3.231,105,2.211,106,2.727,107,3.985,108,1.836,113,6.148,114,3.38,115,2.727,116,2.727,117,2.727,118,2.727,119,2.564,121,3.203,122,2.683,194,5.94,205,2.564,206,1.497,217,2.93,447,3.108,472,2.04,490,4.306,571,4.283,572,1.259,576,3.747,578,3.203,595,3.203,926,3.985,928,4.194,936,2.312,939,1.898,1007,3.985,1009,4.029,1015,2.121,1115,3.985,1132,3.985,1279,3.985,1281,2.93,1285,2.428,1299,3.985,1300,2.93,1303,3.985,1318,3.985,1607,3.985,1843,3.985,1845,3.747,1857,3.985,1859,3.985,1890,3.38,1891,3.985,1899,3.985,2004,3.985,2028,3.985,2031,4.709,2054,3.203,2141,3.617,2142,3.617,2143,3.617,2144,3.617,2145,3.617,2146,3.617,2147,7.311,2148,3.617,2149,3.617,2150,3.617,2151,3.617,2152,3.617,2153,3.617,2154,3.617,2155,3.617,2156,3.617,2157,3.617,2158,3.617,2159,3.617,2160,6.247]],["title/classes/UserNotFoundException.html",[81,0.248,2161,3.676]],["body/classes/UserNotFoundException.html",[3,0.146,4,0.171,5,0.158,25,0.008,32,0.33,69,0.446,81,0.352,85,0.171,87,0.007,88,0.007,103,1.455,128,1.343,623,4.545,624,3.637,878,1.013,942,4.231,1165,4.565,1167,3.402,1293,4.572,2161,6.307,2162,6.894,2163,5.712,2164,6.45,2165,6.45,2166,6.45]],["title/classes/UserResponse.html",[81,0.248,1307,2.774]],["body/classes/UserResponse.html",[3,0.118,4,0.139,5,0.128,8,0.278,9,0.98,15,2.162,24,0.5,25,0.008,26,1.202,32,0.427,69,0.361,81,0.285,83,0.437,85,0.139,87,0.006,88,0.006,128,0.839,132,0.803,133,1.093,170,2.064,432,3.063,434,3.318,439,3.986,494,4.282,496,3.195,597,2.604,800,4.17,801,5.234,802,3.195,878,0.821,993,3.705,1024,3.705,1307,4.17,2167,4.629,2168,5.227,2169,5.227,2170,5.227,2171,5.227,2172,5.227]],["title/injectables/UserService.html",[123,1.349,490,2.559]],["body/injectables/UserService.html",[3,0.06,4,0.071,5,0.065,8,0.142,15,1.474,22,0.757,24,0.464,25,0.008,26,1.261,30,2.361,32,0.41,64,0.809,69,0.575,81,0.145,83,0.647,85,0.071,87,0.004,88,0.004,103,0.6,123,1.245,124,1.196,126,1.049,128,0.427,132,1.188,133,1.012,139,1.935,142,1.886,145,2.044,169,1.268,170,0.945,185,2.571,259,2.969,261,3.743,274,2.677,337,3.36,389,1.02,447,2.201,472,2.361,490,2.361,510,1.131,518,1.397,519,1.046,572,0.926,582,3.156,605,6.002,606,5.745,611,3.602,622,3.902,630,2.811,632,2.156,635,5.653,640,4.755,725,3.309,728,1.786,919,1.886,928,3.475,939,1.397,951,1.786,952,2.156,953,2.006,1110,1.886,1307,1.626,1308,2.006,1321,1.886,1323,2.356,1331,1.886,1749,5.171,1755,3.708,1838,1.886,1845,2.968,1888,1.886,1890,1.701,1935,3.156,2000,1.886,2002,4.933,2003,2.156,2033,3.708,2034,5.198,2035,3.708,2036,3.708,2037,3.708,2042,3.708,2045,3.708,2102,2.356,2173,2.356,2174,4.187,2175,5.176,2176,4.187,2177,4.187,2178,4.187,2179,4.187,2180,2.661,2181,2.661,2182,2.661,2183,2.661,2184,2.661,2185,4.187,2186,2.661,2187,2.661,2188,4.187,2189,2.661,2190,4.187,2191,2.661,2192,2.661,2193,4.187,2194,2.661,2195,4.187,2196,2.661,2197,4.187,2198,2.661,2199,2.661,2200,2.661,2201,2.661,2202,4.187,2203,2.661,2204,2.661,2205,2.661,2206,2.356,2207,2.661,2208,2.661,2209,2.661,2210,2.661,2211,2.661,2212,2.661,2213,2.661,2214,2.661,2215,2.661,2216,2.661,2217,4.187,2218,2.661,2219,2.661,2220,2.661,2221,2.661,2222,2.661,2223,2.661,2224,2.661]],["title/changelog.html",[2225,2.682,2226,2.682,2227,3.783]],["body/changelog.html",[0,1.694,2,2.219,25,0.006,87,0.006,88,0.006,104,3.716,138,3.716,175,4.925,251,3.886,427,4.081,438,5.322,444,5.66,471,3.716,602,4.582,1002,4.081,1020,5.443,1749,4.925,1935,4.582,2228,5.383,2229,8.742,2230,8.742,2231,6.079,2232,8.742,2233,6.079,2234,6.079,2235,6.079,2236,6.079,2237,6.079,2238,6.079,2239,6.079,2240,6.079,2241,6.079,2242,6.079,2243,6.079,2244,6.079,2245,6.079,2246,5.383,2247,5.383]],["title/contributing.html",[2225,2.682,2226,2.682,2248,3.35]],["body/contributing.html",[25,0.007,87,0.007,88,0.007,2248,6.506]],["title/coverage.html",[2249,5.496]],["body/coverage.html",[0,1.818,1,0.992,5,0.042,6,2.805,7,1.497,22,1.822,24,0.101,25,0.008,34,0.888,64,0.514,81,0.498,87,0.002,88,0.002,95,0.888,99,2.533,100,0.954,109,1.199,111,1.568,112,0.954,123,2.244,125,1.497,136,1.034,147,2.721,148,1.275,149,1.497,162,1.081,203,1.275,210,1.275,218,1.275,221,1.275,223,1.275,243,1.199,246,1.497,248,1.275,249,2.175,250,2.175,251,2.412,252,1.497,261,0.992,267,1.135,270,1.275,271,1.37,273,1.275,288,0.831,291,0.992,292,1.199,294,0.992,295,1.199,297,0.888,299,1.034,300,1.199,302,0.954,304,0.992,305,1.199,307,1.034,309,0.992,310,1.199,312,0.919,314,0.992,316,0.954,318,1.034,320,0.806,322,1.034,323,1.199,325,1.081,326,1.199,328,0.888,330,0.954,332,1.034,333,1.135,336,1.497,403,0.992,441,1.275,442,1.497,447,2.98,452,1.135,466,1.199,472,1.627,477,1.081,482,1.275,487,1.135,490,0.954,492,1.275,498,1.199,519,0.665,555,1.199,556,1.199,557,1.199,569,1.275,576,1.199,579,1.275,581,1.37,596,1.497,625,1.135,628,1.199,630,1.135,633,1.199,666,1.497,728,6.317,786,1.497,804,1.497,843,1.497,857,1.497,879,1.135,880,1.497,906,1.081,919,1.199,920,1.497,921,2.844,926,1.275,927,1.497,928,2.533,929,3.393,940,1.199,942,3.164,943,2.045,945,1.199,947,1.199,948,1.937,949,1.135,951,1.135,982,2.337,995,1.275,996,1.497,997,3.161,1007,1.275,1008,1.497,1009,2.615,1021,1.497,1022,1.497,1031,1.135,1032,3.2,1033,1.497,1034,1.199,1035,1.497,1040,1.199,1042,1.275,1043,1.135,1046,1.497,1052,1.135,1110,1.199,1111,1.497,1115,1.275,1116,1.497,1121,1.199,1123,0.954,1129,1.497,1132,1.275,1133,1.497,1135,2.337,1165,3.413,1166,1.497,1172,1.497,1182,2.337,1183,1.497,1197,1.199,1220,1.37,1221,1.497,1222,1.497,1238,1.497,1239,2.844,1273,1.275,1274,3.361,1275,1.497,1279,1.275,1280,3.361,1281,1.37,1294,1.275,1295,1.497,1299,1.275,1300,1.37,1303,1.275,1304,1.497,1307,1.034,1309,1.275,1318,1.275,1319,1.497,1321,1.199,1330,1.497,1335,1.497,1342,1.199,1350,1.497,1353,1.497,1356,1.497,1376,1.497,1385,1.275,1390,1.275,1391,1.497,1408,1.275,1410,1.497,1411,1.497,1412,1.497,1440,1.497,1446,1.497,1447,1.497,1453,1.37,1467,1.275,1468,1.497,1477,1.497,1533,1.497,1546,1.497,1559,1.37,1560,2.337,1561,1.497,1564,1.497,1565,1.497,1566,1.497,1584,1.497,1588,1.497,1590,1.497,1591,1.497,1600,1.37,1605,1.497,1607,1.275,1608,1.497,1610,1.497,1638,1.497,1649,1.37,1650,1.497,1651,1.497,1657,1.497,1680,1.497,1696,1.497,1713,1.497,1785,1.497,1788,1.199,1789,1.497,1792,1.497,1802,1.497,1838,1.199,1839,1.497,1840,2.337,1843,1.275,1844,1.497,1845,2.045,1850,1.275,1851,1.497,1852,2.337,1857,1.275,1858,1.497,1859,2.175,1862,1.497,1874,2.045,1876,1.497,1877,1.497,1878,1.497,1881,1.37,1882,1.497,1888,1.199,1889,1.497,1890,2.851,1891,1.275,1892,1.497,1896,1.275,1897,1.497,1899,1.275,1900,1.497,1903,1.37,1904,2.337,1905,1.497,1911,1.497,1916,1.497,1937,1.497,1941,1.497,1973,1.37,1974,1.497,1975,1.497,1976,1.497,1992,1.497,1993,1.497,1994,1.37,1995,1.497,1996,1.497,2000,1.199,2001,1.497,2002,1.135,2004,1.275,2005,1.497,2013,1.199,2022,1.497,2027,1.497,2028,1.275,2029,1.497,2031,1.275,2032,1.497,2073,1.497,2116,2.337,2117,1.497,2122,1.37,2123,1.497,2124,1.497,2131,1.497,2161,1.37,2162,1.497,2163,1.497,2167,1.497,2173,1.497,2249,1.497,2250,1.497,2251,1.691,2252,1.691,2253,8.499,2254,1.691,2255,7.01,2256,6.133,2257,1.691,2258,5.821,2259,8.461,2260,1.497,2261,4.46,2262,7.308,2263,1.691,2264,1.691,2265,5.006,2266,1.691,2267,1.691,2268,1.691,2269,1.497,2270,1.497,2271,1.497,2272,1.497,2273,1.497,2274,1.497,2275,1.497,2276,1.497,2277,1.691,2278,1.691]],["title/dependencies.html",[92,3.08,2279,3.35]],["body/dependencies.html",[25,0.008,76,1.483,81,0.382,82,2.376,87,0.006,88,0.006,92,3.066,103,1.227,108,2.759,166,3.188,206,2.25,208,4.814,366,3.65,486,4.103,561,3.323,566,4.404,572,1.893,1053,4.814,1249,4.098,1397,3.853,1538,4.814,1574,5.833,1575,5.275,1597,6.196,2114,4.814,2280,7.738,2281,6.998,2282,5.436,2283,6.998,2284,5.436,2285,5.436,2286,5.436,2287,5.436,2288,5.436,2289,5.436,2290,6.998,2291,5.436,2292,5.436,2293,5.436,2294,5.436,2295,5.436,2296,5.436,2297,5.436,2298,5.436,2299,5.436,2300,5.436,2301,5.436,2302,5.436,2303,5.436,2304,5.436,2305,5.436,2306,5.436,2307,5.436,2308,5.436,2309,5.436,2310,5.436,2311,5.436]],["title/miscellaneous/enumerations.html",[2312,2.312,2313,4.836]],["body/miscellaneous/enumerations.html",[3,0.112,6,2.801,8,0.175,11,3.152,22,0.937,25,0.008,83,0.275,87,0.004,88,0.004,99,3.31,132,0.506,183,3.014,392,3.495,421,3.994,432,1.327,434,1.438,436,1.479,494,2.78,597,1.403,622,3.716,643,2.868,680,2.481,685,4.366,686,4.366,749,4.366,751,4.366,753,4.366,762,3.994,764,4.366,771,4.366,794,4.366,813,4.366,894,3.31,1001,4.244,1170,4.456,1171,4.456,1198,2.333,1293,3.495,1461,3.716,1524,4.366,1600,5.317,1673,4.366,1881,2.667,1883,5.234,1971,4.366,2312,2.012,2313,2.915,2314,3.292,2315,4.93,2316,3.292,2317,3.292,2318,4.93,2319,3.292,2320,4.93,2321,3.292,2322,4.93,2323,5.911,2324,4.93,2325,4.93,2326,4.93,2327,4.93,2328,3.292,2329,7.379,2330,3.292,2331,3.292,2332,4.93,2333,5.911,2334,4.93,2335,4.93,2336,4.93,2337,4.93,2338,3.292,2339,3.292,2340,3.292,2341,3.292,2342,3.292,2343,3.292,2344,3.292,2345,3.292,2346,3.292,2347,3.292,2348,3.292,2349,4.93,2350,4.93,2351,4.93,2352,4.93,2353,4.93,2354,3.292,2355,3.292,2356,3.292,2357,3.292,2358,4.93,2359,6.564,2360,4.93,2361,6.564,2362,4.93,2363,4.93,2364,4.93,2365,4.93,2366,3.292,2367,4.93,2368,4.93,2369,4.93,2370,3.292,2371,4.93,2372,4.93,2373,3.292,2374,4.93,2375,4.93,2376,3.292,2377,4.93,2378,4.93,2379,5.911,2380,6.564,2381,4.93,2382,4.93,2383,4.93,2384,4.93,2385,4.93,2386,4.93]],["title/miscellaneous/functions.html",[2312,2.312,2387,4.836]],["body/miscellaneous/functions.html",[8,0.377,25,0.008,87,0.007,88,0.007,139,1.736,259,2.582,2269,6.264,2270,7.698,2312,4.324,2387,6.264,2388,7.074]],["title/index.html",[8,0.202,2225,2.682,2226,2.682]],["body/index.html",[25,0.007,87,0.007,88,0.007,92,4.276,104,5.016,153,3.358,235,4.148,257,4.657,762,5.005,2247,5.471,2250,5.471,2389,6.178,2390,6.178,2391,6.178,2392,6.178,2393,6.178,2394,6.178,2395,6.178,2396,6.178,2397,6.178,2398,6.178,2399,6.178,2400,6.178,2401,6.178,2402,6.178,2403,8.782,2404,6.178,2405,7.583,2406,6.178,2407,6.178,2408,6.178,2409,6.178,2410,6.178,2411,6.178,2412,6.178,2413,8.206,2414,6.178,2415,6.178,2416,6.178,2417,6.178,2418,7.583,2419,6.178]],["title/license.html",[2225,2.682,2226,2.682,2420,3.35]],["body/license.html",[25,0.007,87,0.007,88,0.007]],["title/modules.html",[91,3.5]],["body/modules.html",[25,0.007,87,0.007,88,0.007,90,4.152,91,3.662,187,4.603,191,4.603,192,4.603,193,4.603,194,4.603,281,4.895,1441,5.751,2421,9.045,2422,9.045,2423,9.045,2424,9.148,2425,6.494]],["title/overview.html",[2426,5.496]],["body/overview.html",[2,1.69,25,0.008,87,0.005,88,0.005,90,5.41,91,2.611,92,3.548,93,4.099,94,4.099,95,4.341,96,4.022,97,2.96,98,2.96,122,2.35,124,2.081,162,4.569,187,6.528,188,4.099,189,4.099,190,4.099,191,6.55,192,5.066,193,5.684,194,6.188,267,4.798,281,6.235,282,4.099,283,4.099,477,5.41,490,4.324,551,4.099,553,4.099,554,4.099,555,5.066,556,5.066,557,5.066,878,0.727,1031,4.798,1403,4.099,1404,4.099,1875,3.75,2426,4.099,2427,4.629,2428,4.099,2429,4.629,2430,4.629,2431,4.629,2432,4.629]],["title/properties.html",[9,0.784,2279,3.35]],["body/properties.html",[9,1.016,25,0.008,87,0.007,88,0.007,153,3.845,1204,5.014,1639,6.264,2228,6.264,2420,6.264,2433,7.074]],["title/todo.html",[2206,3.35,2225,2.682,2226,2.682]],["body/todo.html",[25,0.007,26,0.918,76,1.783,84,4.635,87,0.007,88,0.007,104,3.997,181,4.798,257,4.929,434,2.857,444,6.34,474,5.79,699,4.39,1020,5.454,1575,4.929,2094,5.79,2246,5.79,2434,6.539,2435,6.539,2436,6.539,2437,6.539,2438,6.539,2439,6.539,2440,7.849,2441,6.539,2442,7.849,2443,6.539]],["title/miscellaneous/typealiases.html",[2312,2.312,2444,5.462]],["body/miscellaneous/typealiases.html",[8,0.371,24,0.418,25,0.007,87,0.007,88,0.007,942,3.788,948,4.68,949,5.473,1165,4.087,1453,6.604,1458,7.219,1459,6.172,2312,4.261,2445,6.97,2446,6.97]],["title/miscellaneous/variables.html",[2312,2.312,2447,4.836]],["body/miscellaneous/variables.html",[3,0.108,8,0.254,22,1.358,24,0.435,25,0.008,26,0.669,55,2.64,81,0.26,87,0.006,88,0.006,123,1.418,169,2.273,170,1.076,185,2.412,259,1.741,337,1.784,389,2.461,439,2.503,455,3.369,487,3.202,490,3.62,492,4.839,494,2.689,510,3.085,519,1.875,521,5.2,1001,3.489,1052,4.31,1167,2.084,1460,3.049,1616,4.223,2260,4.223,2271,4.223,2272,5.684,2273,4.223,2274,5.684,2275,4.223,2276,5.684,2312,2.915,2428,4.223,2447,4.223,2448,4.769,2449,4.769,2450,4.769,2451,4.769,2452,4.769,2453,6.419,2454,4.769,2455,4.769,2456,4.769,2457,4.769,2458,4.769,2459,4.769,2460,4.769,2461,4.769,2462,4.769,2463,4.769,2464,4.769,2465,4.769,2466,4.769,2467,4.769,2468,4.769,2469,4.769,2470,4.769,2471,4.769,2472,4.769,2473,4.769,2474,4.769,2475,4.769,2476,4.769,2477,4.769,2478,4.769,2479,4.769,2480,4.769,2481,4.769,2482,4.769,2483,4.769,2484,4.769,2485,4.769,2486,4.769,2487,4.769]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":728,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.2",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":2228,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1445,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2254,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2253,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2255,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2258,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1580,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":438,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{}}}],["10.0.2",{"_index":2284,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":1431,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["10})@column({unique",{"_index":1756,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["15",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2430,"title":{},"body":{"overview.html":{}}}],["2",{"_index":2432,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":990,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["20)@column({unique",{"_index":2112,"title":{},"body":{"entities/UserEntity.html":{}}}],["20)@isnotempty",{"_index":2025,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["2023",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2429,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":2356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["3.0.8",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1375,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":1370,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":1435,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":1430,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":121,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/UserModule.html":{}}}],["300mb",{"_index":1426,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{}}}],["3102",{"_index":591,"title":{},"body":{"modules/AuthModule.html":{}}}],["3103",{"_index":594,"title":{},"body":{"modules/AuthModule.html":{}}}],["3201",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1471,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["4.0.1",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["4210",{"_index":1767,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":2428,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1440,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["500000",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1064,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1755,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"injectables/UserService.html":{}}}],["6.2.1",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":2431,"title":{},"body":{"overview.html":{}}}],["7",{"_index":2427,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":1783,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":1769,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":1768,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9.0.0",{"_index":2280,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":777,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":2115,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":1753,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":2216,"title":{},"body":{"injectables/UserService.html":{}}}],["accesstokencookie",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":525,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":530,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":998,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["active",{"_index":2368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":1020,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"changelog.html":{},"todo.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":815,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":841,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":2079,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["addresses",{"_index":805,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":360,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":1883,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1252,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":1873,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":2445,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1433,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":2213,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":1170,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":1478,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":2396,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":2367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":104,"title":{},"body":{"modules/ApiLogModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/HealthCheckController.html":{},"modules/UserModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1055,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":592,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":116,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1188,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api_type",{"_index":1189,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api_version",{"_index":1190,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apidescription",{"_index":176,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apigroup",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apiloggerservice",{"_index":1193,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":90,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":95,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiname",{"_index":171,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["apiproperty",{"_index":892,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":984,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":986,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@length(5",{"_index":989,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":988,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":895,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":1752,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":904,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":898,"title":{},"body":{"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apisuccess",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":1401,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":167,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":2059,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":881,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":894,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1195,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apiversion",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["app",{"_index":268,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":148,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":162,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":248,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":281,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":267,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":1539,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1225,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":2393,"title":{},"body":{"index.html":{}}}],["array",{"_index":706,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":337,"title":{},"body":{"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":1561,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/guards/jwt",{"_index":2055,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guards/role.guard",{"_index":2057,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2056,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":441,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":1594,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1562,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":1563,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":1589,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":191,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1639,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":477,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1441,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":389,"title":{},"body":{"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":806,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":807,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":1939,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":366,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1349,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1328,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":1895,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":1829,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":437,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":2092,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":1766,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":667,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":264,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogDto.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":2270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":2391,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2424,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2421,"title":{},"body":{"modules.html":{}}}],["call",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":2361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":392,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":296,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":843,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"coverage.html":{}}}],["card.entity.ts:27",{"_index":854,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":851,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":847,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":849,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":852,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":855,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":853,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":763,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":2329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":1736,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":1739,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":1747,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":288,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["cardentity.connectedcardone",{"_index":846,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":848,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":1378,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":1619,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":1640,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":1684,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":1921,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":844,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":845,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":1611,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":340,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":1681,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["case",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["catch(exception",{"_index":1224,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["category",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":2227,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":1472,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":2215,"title":{},"body":{"injectables/UserService.html":{}}}],["check",{"_index":1392,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":1407,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1391,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:27",{"_index":1395,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":1405,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1042,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check.query.ts",{"_index":1411,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check.response",{"_index":1045,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":1447,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check.response.ts:3",{"_index":1451,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":1452,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":1399,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1035,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":1039,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1038,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":1412,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check/cqrs/query/health",{"_index":1410,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check/custom",{"_index":1033,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check/domain/response/health",{"_index":1446,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check/health",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["checkhealth",{"_index":1036,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":2012,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":1930,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":878,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["cleardatabasetest",{"_index":253,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":134,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["client_address",{"_index":1490,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":1492,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":1494,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":1479,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":1480,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":130,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["clientsmodule",{"_index":106,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":115,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":1481,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilogmodule",{"_index":93,"title":{},"body":{"modules/ApiLogModule.html":{},"overview.html":{}}}],["cluster_apilogmodule_providers",{"_index":94,"title":{},"body":{"modules/ApiLogModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":282,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":284,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":283,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":554,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":1403,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":1404,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2141,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":2143,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2142,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":549,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["code",{"_index":1749,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["code.entity",{"_index":301,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1135,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{},"coverage.html":{}}}],["code.entity.ts:19",{"_index":1770,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1152,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":1758,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1148,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":1780,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1146,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":1773,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1154,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":1775,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1151,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":1764,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1159,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":1760,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":1777,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1156,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1142,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1157,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1143,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":2320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":705,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@length(5",{"_index":2111,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":715,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":691,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":726,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":1957,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":936,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createuserdto",{"_index":957,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.email",{"_index":966,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":969,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":1828,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.user",{"_index":2019,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":2020,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.username",{"_index":1830,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":938,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1120,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":1815,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":1847,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/set",{"_index":1893,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/update",{"_index":2009,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandbus",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":937,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":955,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1124,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":1817,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":1848,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":1894,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":2015,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["communicate",{"_index":771,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":1682,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":787,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company_account",{"_index":2378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":1496,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":395,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":1498,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":1500,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":1482,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":1720,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":1721,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":291,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyemployeeentity.company",{"_index":826,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":342,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":1621,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":1686,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":1734,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":1623,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":1612,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":668,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":1613,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":341,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":1483,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":2406,"title":{},"body":{"index.html":{}}}],["config",{"_index":567,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":2089,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":2440,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1108,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":760,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":397,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":696,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":697,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":701,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":294,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"coverage.html":{}}}],["connectedcardentity.conversation",{"_index":860,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":669,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":343,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":670,"title":{},"body":{"entities/CardEntity.html":{}}}],["const",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":1458,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":1463,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":1466,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":128,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":144,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1192,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(authenticationservice",{"_index":1592,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":129,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["constructor(commandbus",{"_index":2180,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":922,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(email",{"_index":1276,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":1454,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(healthcheckservice",{"_index":1413,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":1449,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(jwtservice",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(localisation",{"_index":1185,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["constructor(login",{"_index":2125,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(module",{"_index":999,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["constructor(partial",{"_index":800,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(public",{"_index":925,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["constructor(querybus",{"_index":1037,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1332,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(userid",{"_index":1112,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1296,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":338,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["constructor(users",{"_index":2119,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":1567,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":1470,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{}}}],["context.switchtohttp().getrequest",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":2248,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":2390,"title":{},"body":{"index.html":{}}}],["controller",{"_index":147,"title":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('health",{"_index":1400,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('user",{"_index":2058,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":122,"title":{},"body":{"modules/ApiLogModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":399,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":311,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":1546,"title":{},"body":{"entities/JoinedConversation.html":{},"coverage.html":{}}}],["conversation.entity.ts:21",{"_index":1552,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":1555,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":1554,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":1549,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":1550,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":1556,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":1551,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":1363,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":1558,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":1548,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":1643,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":297,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"coverage.html":{}}}],["conversationentity.notifications",{"_index":1661,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":344,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":1357,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":524,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["coverage",{"_index":2249,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs/command/create",{"_index":2199,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":2203,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":2200,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/set",{"_index":2201,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2204,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/event",{"_index":580,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":2146,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":2159,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":570,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":2152,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/set",{"_index":2150,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2151,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2153,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":2154,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":2157,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":2155,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/set",{"_index":2156,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/update",{"_index":2158,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":2147,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":1409,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":2202,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1041,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1002,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/UpdateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":334,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{},"coverage.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":289,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/card.entity.ts",{"_index":666,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["create/card.entity.ts:100",{"_index":702,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":739,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":734,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":713,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":721,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":723,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":742,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":745,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":754,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":750,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":752,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":703,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":746,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":704,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":714,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":740,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":717,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":710,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":718,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":694,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":737,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":709,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":748,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":692,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":724,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":730,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":729,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":743,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":736,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":700,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":292,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/company.entity",{"_index":290,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/company.entity.ts",{"_index":804,"title":{},"body":{"entities/CompanyEntity.html":{},"coverage.html":{}}}],["create/company.entity.ts:104",{"_index":822,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":838,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":823,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":828,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":829,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":837,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":817,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":824,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":839,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":814,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":840,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":820,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":821,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":834,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":825,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":827,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":831,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":833,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":836,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":819,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":816,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":295,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/conversation.entity",{"_index":298,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":857,"title":{},"body":{"entities/ConversationEntity.html":{},"coverage.html":{}}}],["create/conversation.entity.ts:24",{"_index":867,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":862,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":861,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":866,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":871,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":869,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":873,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":863,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":874,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":864,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":300,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["create/entities",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":2348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":1881,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":2358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":2370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":2373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":2379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":305,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["create/group.entity",{"_index":303,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":1356,"title":{},"body":{"entities/GroupEntity.html":{},"coverage.html":{}}}],["create/group.entity.ts:24",{"_index":1367,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":1371,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":1369,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":1364,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":1373,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":1362,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":1365,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":1374,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":1366,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":308,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":1477,"title":{},"body":{"entities/InvoicesEntity.html":{},"coverage.html":{}}}],["create/invoices.entity.ts:103",{"_index":1513,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":1502,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":1521,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":1504,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":1509,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":1489,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":1503,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":1511,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":1499,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":1497,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":1501,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":1493,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":1491,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":1495,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":1505,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":1516,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":1520,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":1518,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":1508,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":310,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"coverage.html":{}}}],["create/media.entity",{"_index":313,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/media.entity.ts",{"_index":1610,"title":{},"body":{"entities/MediaEntity.html":{},"coverage.html":{}}}],["create/media.entity.ts:22",{"_index":1631,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":1632,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":1630,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":1628,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":1636,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":1634,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":1620,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":1624,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":1622,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":1625,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":1637,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":1626,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":315,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":1638,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["create/message.entity.ts:20",{"_index":1647,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":1642,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":1641,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":1644,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":1645,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":1648,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":1646,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":331,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":1657,"title":{},"body":{"entities/NotificationEntity.html":{},"coverage.html":{}}}],["create/notification.entity.ts:23",{"_index":1666,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":1672,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":1665,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":1674,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":1668,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":1669,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":1677,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":1671,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":1662,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":1663,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":1675,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":1664,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/occupation.entity",{"_index":317,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/occupation.entity.ts",{"_index":1680,"title":{},"body":{"entities/OccupationEntity.html":{},"coverage.html":{}}}],["create/occupation.entity.ts:21",{"_index":1690,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":1691,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":1693,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":1687,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":1685,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":1688,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":1694,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":1689,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":319,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":1696,"title":{},"body":{"entities/PlanEntity.html":{},"coverage.html":{}}}],["create/plan.entity.ts:19",{"_index":1707,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":1708,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":1702,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":1709,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":1706,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":1705,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":1711,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":1700,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":1712,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":1701,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/profile.entity",{"_index":321,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/profile.entity.ts",{"_index":1713,"title":{},"body":{"entities/ProfileEntity.html":{},"coverage.html":{}}}],["create/profile.entity.ts:105",{"_index":1735,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:111",{"_index":1729,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:118",{"_index":1723,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:121",{"_index":1742,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:124",{"_index":1724,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:30",{"_index":1725,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:33",{"_index":1745,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:40",{"_index":1744,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:46",{"_index":1737,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:61",{"_index":1741,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:75",{"_index":1733,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:81",{"_index":1722,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:87",{"_index":1738,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:93",{"_index":1719,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:99",{"_index":1727,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/referal",{"_index":333,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["create/social",{"_index":323,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["create/strip",{"_index":326,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["create/subscription.entity",{"_index":329,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":1941,"title":{},"body":{"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["create/subscription.entity.ts:25",{"_index":1951,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":1956,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":1950,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":1958,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":1967,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":1965,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":1955,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":1970,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":1953,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":1949,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":1946,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":1968,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":1947,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createlog",{"_index":127,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":135,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogdto",{"_index":136,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["createlogdto.apiname",{"_index":1207,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apitype",{"_index":1211,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1208,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.body",{"_index":1260,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1217,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1258,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1269,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1209,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1213,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1268,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1271,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1266,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1264,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1215,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1272,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1262,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createtimestamp",{"_index":1977,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1047,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":2033,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":2060,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":2037,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":919,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(createuserdto",{"_index":2205,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":926,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":261,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":435,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":440,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":433,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":995,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["createusereventhandler",{"_index":1007,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserresponse",{"_index":951,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertest",{"_index":254,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":279,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":260,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":1934,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["credentials",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["cron",{"_index":2443,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1228,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1231,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1230,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":1484,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":1890,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["current_timestamp",{"_index":1983,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1326,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":1398,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":112,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":1183,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":1186,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:2",{"_index":1187,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":1962,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1031,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":257,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":203,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1150,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1236,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":1989,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":1759,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":1776,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":2394,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decimal",{"_index":1506,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":1515,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"entities/NotificationEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1917,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":2051,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":2070,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@useguards(jwtrefreshguard",{"_index":2046,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletetimestamp",{"_index":1978,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1110,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["deleteusercommand(id",{"_index":2224,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1115,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deleteuserevent",{"_index":1121,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["deleteuserevent(command.userid",{"_index":1127,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1132,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deletion",{"_index":1936,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1095,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1254,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":2383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1176,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1144,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":401,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1147,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1136,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":299,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["discountcodeentity.subscriptions",{"_index":1948,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":345,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":1942,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":1703,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":1697,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1137,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":1437,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":1417,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":2405,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2250,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:serveapplication",{"_index":2416,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":142,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/update",{"_index":2003,"title":{},"body":{"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/entities/user.entity",{"_index":939,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["domain/enum/user",{"_index":954,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["domain/response/create",{"_index":952,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1044,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/user",{"_index":1310,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["domain/response/user.response",{"_index":1308,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":2439,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate_category_name",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":2340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":2339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicateemailexception",{"_index":945,"title":{"classes/DuplicateEmailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":940,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["duration",{"_index":1698,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e2e",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":286,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":252,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:13",{"_index":258,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:19",{"_index":263,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":285,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":269,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":336,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:105",{"_index":364,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":361,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":363,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":708,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":1765,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":434,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["email.exception",{"_index":946,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["email.exception.ts",{"_index":1166,"title":{},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["email.exception.ts:3",{"_index":1168,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["email.query",{"_index":1281,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["email.query.ts",{"_index":1275,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"coverage.html":{}}}],["email.query.ts:1",{"_index":1277,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1278,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":671,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":2357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":293,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":786,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"coverage.html":{}}}],["employee.entity.ts:27",{"_index":791,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":795,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":788,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":793,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":789,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":796,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":790,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":798,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":2322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":808,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":2436,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1149,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1138,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":1030,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":192,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"coverage.html":{}}}],["entity('company_employee",{"_index":799,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":1523,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":1695,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":1782,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":950,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":1453,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":1456,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":1976,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":1981,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":1985,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":1987,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":1986,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":1980,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":1984,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1084,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":1975,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":1072,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":744,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":916,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":918,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":1678,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":797,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["enum/transferable",{"_index":775,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":766,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":993,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":761,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":2313,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":272,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":1533,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":1540,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":250,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["err",{"_index":958,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":960,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["error",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["error('error",{"_index":979,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["error('node_env",{"_index":1109,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":2209,"title":{},"body":{"injectables/UserService.html":{}}}],["error('response",{"_index":520,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.constraints",{"_index":1464,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.message",{"_index":981,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["error.message.split(':')[0",{"_index":2062,"title":{},"body":{"controllers/UserController.html":{}}}],["error.message.split(':')[1",{"_index":2063,"title":{},"body":{"controllers/UserController.html":{}}}],["error.status",{"_index":2064,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1123,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["errorcustomevent('auth",{"_index":1824,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["errorcustomevent('user",{"_index":1128,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":109,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":2315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1220,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errorloggingmiddleware",{"_index":223,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":1457,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":1462,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":1865,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1541,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1015,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["event.entity",{"_index":327,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":1937,"title":{},"body":{"entities/StripEventEntity.html":{},"coverage.html":{}}}],["event.entity.ts:16",{"_index":1938,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1218,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1216,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.localisation",{"_index":1214,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.userid",{"_index":1800,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["event/create",{"_index":1017,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1122,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1343,"title":{},"body":{"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":1796,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":1860,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/set",{"_index":1901,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/update",{"_index":2014,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["eventbus",{"_index":1117,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["eventshandler",{"_index":1016,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1018,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1134,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1199,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":1609,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":1797,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":1861,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":1902,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":2030,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["example",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":1439,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1227,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":1222,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":1226,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1232,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":943,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":948,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/no",{"_index":1650,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":1995,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":2162,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":1223,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":2095,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":931,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["execute(command",{"_index":934,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["execute(query",{"_index":1284,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["executing",{"_index":980,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["executioncontext",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":1171,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":2362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":1750,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1167,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoUserTraceException.html":{},"interfaces/RequestUser.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1069,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":1572,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":1578,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":2364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":716,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":1762,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":2082,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":1774,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["features",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filename",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":2034,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":2035,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":2066,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":2042,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":672,"title":{},"body":{"entities/CardEntity.html":{}}}],["flag",{"_index":1959,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["float",{"_index":1704,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1293,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception.ts",{"_index":2163,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":2164,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":1531,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["function",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":2387,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":2211,"title":{},"body":{"injectables/UserService.html":{}}}],["generatecode",{"_index":2174,"title":{},"body":{"injectables/UserService.html":{}}}],["generatecode(length",{"_index":2185,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":2175,"title":{},"body":{"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":1393,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/api/test/clear",{"_index":276,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/refresh",{"_index":545,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":2043,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":151,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined",{"_index":2040,"title":{},"body":{"controllers/UserController.html":{}}}],["get(key",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcookieforlogout",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":2225,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuserbyemailquery",{"_index":1273,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"coverage.html":{}}}],["getuserbyemailqueryhandler",{"_index":1279,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserbyreferralcode",{"_index":2176,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":2188,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyreferralcodequery(referralcode",{"_index":2208,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyusernamequery",{"_index":1294,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"coverage.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1299,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserfromauthtoken",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserhandler",{"_index":1303,"title":{"classes/GetUserHandler.html":{}},"body":{"classes/GetUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatches",{"_index":2177,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":2190,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatcheshandler",{"_index":1318,"title":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1321,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":2219,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserloginhandler",{"_index":576,"title":{"classes/GetUserLoginHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserloginquery",{"_index":633,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"coverage.html":{}}}],["getuserloginquery(username",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery",{"_index":630,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserHandler.html":{},"classes/GetUserQuery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserquery(id",{"_index":2222,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["given",{"_index":2214,"title":{},"body":{"injectables/UserService.html":{}}}],["google",{"_index":2094,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":2425,"title":{},"body":{"modules.html":{}}}],["group",{"_index":403,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["group.bannerpicture",{"_index":1627,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":875,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":1629,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":405,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":1614,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":302,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"coverage.html":{}}}],["groupentity.conversations",{"_index":865,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":1382,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":711,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":712,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":1368,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":304,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["groupmembershiprepository",{"_index":347,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":673,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":1615,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":346,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1011,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handle(event",{"_index":1013,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler",{"_index":113,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEvent.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":929,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":1194,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["handler.ts:11",{"_index":1196,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:12",{"_index":1118,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:13",{"_index":1418,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:14",{"_index":932,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["handler.ts:15",{"_index":2006,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1846,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["handler.ts:17",{"_index":933,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["handler.ts:20",{"_index":935,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:21",{"_index":1419,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:23",{"_index":2008,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:7",{"_index":1012,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler.ts:8",{"_index":1283,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/RegisterEventHandler.html":{}}}],["handler.ts:9",{"_index":1014,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler/error",{"_index":111,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["handler/register.event",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["handlers",{"_index":2160,"title":{},"body":{"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1340,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["headers",{"_index":882,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["health",{"_index":1034,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheck",{"_index":1396,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":1390,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckmodule",{"_index":193,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1040,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckqueryhandler",{"_index":1408,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckresponse",{"_index":1043,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["healthcheckresult",{"_index":1450,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":1414,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":1421,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":1429,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":1448,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":2395,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1060,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1229,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":942,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204",{"_index":533,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":1544,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('wrong",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["httponly",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["httpstatus.forbidden",{"_index":1545,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":1233,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":2166,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["httpstatus.unauthorized",{"_index":1999,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":930,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["icon",{"_index":1919,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2251,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":1010,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["ignore",{"_index":168,"title":{},"body":{"controllers/AppController.html":{}}}],["implement",{"_index":2207,"title":{},"body":{"injectables/UserService.html":{}}}],["implemented",{"_index":2210,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["in.dto.ts",{"_index":1905,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":1907,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":1908,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":2369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1960,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":765,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":2335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":1527,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":141,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["injectable",{"_index":123,"title":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":365,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":388,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":368,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":370,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":369,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":371,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":372,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":373,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":374,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":375,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":376,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":377,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":378,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":379,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":386,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":380,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(planentity",{"_index":381,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":382,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(referralcodeentity",{"_index":387,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":383,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(stripevententity",{"_index":384,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":385,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":367,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["inserteduser",{"_index":1831,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":2411,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2412,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":978,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{}}}],["int",{"_index":1163,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1145,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":727,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":2438,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":1874,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["interface/request",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":1875,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"overview.html":{}}}],["invalid",{"_index":1461,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":2010,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":2018,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidparameterentityexception",{"_index":947,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["invalidparameterentityexception(err",{"_index":961,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1467,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["inversejoincolumn",{"_index":1732,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":2324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":1510,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":1485,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":407,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1177,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":307,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["invoicesentity.subscription",{"_index":1952,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":348,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":883,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1282,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":2372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":1667,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":2371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1160,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":1781,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isduplicatedemail",{"_index":1804,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedemail(email",{"_index":1809,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedusername",{"_index":1805,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedusername(username",{"_index":1811,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isemail",{"_index":767,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["isemail()@column({unique",{"_index":2085,"title":{},"body":{"entities/UserEntity.html":{}}}],["isemail()@isnotempty",{"_index":1912,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemailconfirmed",{"_index":2074,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":1526,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":1906,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1161,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":992,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":674,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":1658,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1327,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["isregisteredwithgoogle",{"_index":2075,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":270,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":256,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":262,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":768,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidpassword",{"_index":1806,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isvalidpassword(password",{"_index":1813,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["jest",{"_index":2408,"title":{},"body":{"index.html":{}}}],["join",{"_index":1051,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1071,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":2351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":856,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":876,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["joined_conversation",{"_index":409,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":309,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["joinedconversation.conversation",{"_index":868,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":1726,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":349,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":1714,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":858,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":755,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":899,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":1575,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwt_access_token_expiration_time",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthenticationguard",{"_index":1559,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1577,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":565,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":583,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":487,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":555,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":556,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":2076,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":1616,"title":{},"body":{"entities/MediaEntity.html":{},"miscellaneous/variables.html":{}}}],["la",{"_index":1530,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["lastname",{"_index":675,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["length(5",{"_index":994,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["length(6",{"_index":1784,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":1475,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":2401,"title":{},"body":{"index.html":{}}}],["license",{"_index":2420,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":1659,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list.response",{"_index":1311,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["list.response.ts",{"_index":2117,"title":{},"body":{"classes/UserListResponse.html":{},"coverage.html":{}}}],["list.response.ts:4",{"_index":2120,"title":{},"body":{"classes/UserListResponse.html":{}}}],["literal",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":1597,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":1591,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["local.strategy.ts:14",{"_index":1596,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":1593,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":482,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["localisation",{"_index":1184,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["localstrategy",{"_index":557,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":138,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"changelog.html":{}}}],["log.dto",{"_index":143,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":880,"title":{},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:10",{"_index":907,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:13",{"_index":897,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:16",{"_index":896,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:19",{"_index":908,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:22",{"_index":913,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:25",{"_index":903,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:28",{"_index":900,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:31",{"_index":915,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:34",{"_index":912,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:37",{"_index":911,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:40",{"_index":902,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:43",{"_index":909,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:46",{"_index":910,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:49",{"_index":914,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:52",{"_index":905,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:7",{"_index":893,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.enum.ts",{"_index":2326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":101,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":105,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":125,"title":{},"body":{"injectables/ApiLogService.html":{},"coverage.html":{}}}],["log.service.ts:6",{"_index":131,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":137,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":100,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log/domain/dto/create",{"_index":879,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/api",{"_index":1198,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1197,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/status",{"_index":2366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger",{"_index":1052,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('deleteusercommandhandler",{"_index":1119,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["logger('registereventhandler",{"_index":1794,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger('updateuser",{"_index":2007,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["logger.config",{"_index":1054,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":2272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1105,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1104,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":1798,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1058,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":1793,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1075,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1239,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["logging.middleware.ts:10",{"_index":1880,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1245,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":1247,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:13",{"_index":1246,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:14",{"_index":1863,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:15",{"_index":1241,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:22",{"_index":1244,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:23",{"_index":1879,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["loggingtype",{"_index":884,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":906,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["loggingtypeenum.error",{"_index":1210,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":1870,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":2124,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:10",{"_index":2127,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":2128,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":2126,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.handler",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["login.handler.ts",{"_index":1335,"title":{},"body":{"classes/GetUserLoginHandler.html":{},"coverage.html":{}}}],["login.handler.ts:13",{"_index":1337,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.handler.ts:20",{"_index":1338,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.handler.ts:54",{"_index":1341,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.query",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["login.query.ts",{"_index":1350,"title":{},"body":{"classes/GetUserLoginQuery.html":{},"coverage.html":{}}}],["login.query.ts:1",{"_index":1351,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1352,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":2131,"title":{},"body":{"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["login.response.ts:11",{"_index":2135,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":2140,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":2134,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":2133,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":2139,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":2138,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":2137,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":2136,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":2132,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["loginofuserevent",{"_index":1342,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["loginofuserevent(userusername.id",{"_index":1348,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["loginofusereventhandler",{"_index":1607,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["logout",{"_index":446,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":536,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":1476,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":2397,"title":{},"body":{"index.html":{}}}],["mail",{"_index":2441,"title":{},"body":{"todo.html":{}}}],["mail_api",{"_index":2337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":756,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":731,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1292,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["matches.handler",{"_index":2148,"title":{},"body":{"modules/UserModule.html":{}}}],["matches.handler.ts",{"_index":1319,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"coverage.html":{}}}],["matches.handler.ts:10",{"_index":1320,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.handler.ts:17",{"_index":1322,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.query",{"_index":1323,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":1330,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"coverage.html":{}}}],["matches.query.ts:1",{"_index":1333,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1334,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":769,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":1910,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":778,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":411,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":720,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":773,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.groupbannerpicture",{"_index":1360,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":1372,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":818,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":835,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":312,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["mediarepository",{"_index":350,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":1884,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":1931,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":1358,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":306,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":1376,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["membership.entity.ts:17",{"_index":1384,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":1386,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":1379,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":1383,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":1380,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":1387,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":1381,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":1388,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":1882,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["membership.enum.ts:2",{"_index":1886,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":1885,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":1887,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":1427,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":1416,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":413,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/MessageEntity.html":{}}}],["message.author",{"_index":722,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":870,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":774,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":314,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["messagepatern",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":351,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":676,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":1538,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":885,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["methods",{"_index":126,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":2442,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":1754,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":1909,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":2312,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":522,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockedconfigservice",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":2276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":89,"title":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"modules/HealthCheckModule.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/UpdateUserEvent.html":{},"modules/UserModule.html":{}}}],["module:entities",{"_index":1932,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1425,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1175,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":2246,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":103,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":1654,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":2011,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":108,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"entities/ReferralCodeEntity.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1397,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1248,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1918,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":324,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":1916,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["network.entity.ts:34",{"_index":1926,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":1927,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":1929,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":1925,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":1922,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":1923,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":1928,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":1924,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":1537,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":519,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":2353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":2352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":2350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newuser",{"_index":956,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1243,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":2381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":2402,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":2407,"title":{},"body":{"index.html":{}}}],["not_diffusible",{"_index":2384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":677,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":427,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":872,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":877,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["notification.profile",{"_index":1728,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":2097,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":330,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["notificationrepository",{"_index":358,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":859,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":1673,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":1679,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nousertraceexception",{"_index":1649,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":2403,"title":{},"body":{"index.html":{}}}],["null",{"_index":699,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":1361,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":733,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":1731,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":725,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"injectables/UserService.html":{}}}],["number(process.env.port_api_log",{"_index":120,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":593,"title":{},"body":{"modules/AuthModule.html":{}}}],["numberofshares",{"_index":678,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":521,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogDto.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":802,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":1465,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":415,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ProfileEntity.html":{}}}],["occupation.cards",{"_index":732,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":770,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["occupation.profiles",{"_index":1730,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":1748,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":316,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["occupationentity.companies",{"_index":842,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":830,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationrepository",{"_index":352,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["occupations",{"_index":679,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["occurred",{"_index":1106,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":1473,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":757,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":695,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":758,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":719,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":2386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":2385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":2380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":2382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":1982,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":133,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":118,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":2399,"title":{},"body":{"index.html":{}}}],["os",{"_index":886,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2426,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":680,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["ownercompanies",{"_index":1715,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":809,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":2279,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":2052,"title":{},"body":{"controllers/UserController.html":{}}}],["parameter",{"_index":949,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":132,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1098,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1080,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1063,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1089,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":801,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":1574,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1571,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1576,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1582,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":436,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["password.exception",{"_index":1816,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["password.exception.ts",{"_index":1468,"title":{},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":1469,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["path",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":1993,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":1940,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":2359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":1716,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":810,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":681,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":1359,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipetransform",{"_index":1534,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{}}}],["plan",{"_index":417,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1178,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":318,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["planentity.subscriptions",{"_index":1954,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":353,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":887,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["port",{"_index":119,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/UserModule.html":{}}}],["post",{"_index":265,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":278,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/create",{"_index":2038,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/login",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":535,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1059,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":2318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":2404,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1529,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1077,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":2410,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":2090,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":1699,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":145,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"injectables/UserService.html":{}}}],["process",{"_index":582,"title":{},"body":{"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/UserService.html":{}}}],["process.env.api_name",{"_index":1201,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.api_version",{"_index":1203,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":585,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1056,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1101,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1083,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1067,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1092,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1096,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1078,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1061,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1087,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1102,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1086,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1076,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1094,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1100,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1082,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1066,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1091,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1097,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1079,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1062,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1088,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1103,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1085,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1074,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1093,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1099,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1081,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1065,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1090,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1864,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1206,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["prod",{"_index":1057,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":419,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["profile.companies",{"_index":792,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.entity",{"_index":759,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{}}}],["profile.personalcards",{"_index":735,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.savedcard",{"_index":738,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.user",{"_index":2100,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile_id",{"_index":1746,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profileentity",{"_index":320,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["profileentity.bannerpicture",{"_index":1633,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":1557,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":1553,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":1670,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":1692,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":832,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":1635,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":1617,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":1618,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profilepicture",{"_index":811,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":354,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["profiles",{"_index":1683,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profileswhosavedcard",{"_index":682,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":2247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":259,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":1933,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2053,"title":{},"body":{"controllers/UserController.html":{}}}],["put('')@useguards(jwtrefreshguard",{"_index":2049,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":1285,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"modules/UserModule.html":{}}}],["query.email",{"_index":1290,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.userid",{"_index":1313,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["query.username",{"_index":1302,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["query/get",{"_index":1286,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["query/health",{"_index":1420,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybus",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":1287,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1288,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1301,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1324,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1344,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["queryhandler(getuserquery",{"_index":1312,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":1422,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":2212,"title":{},"body":{"injectables/UserService.html":{}}}],["readme.md",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":170,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":1459,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["referal",{"_index":1180,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":429,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":2102,"title":{},"body":{"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["referralcode.owner",{"_index":2103,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":2109,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":332,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["referralcoderepository",{"_index":359,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":2077,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["refresh(@req",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1331,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":526,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":528,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":2363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":1819,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["regexvalidatepassword",{"_index":1803,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["register",{"_index":1825,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registercommand",{"_index":628,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registercommand(signupdto.username",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":1799,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":1788,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registerevent(inserteduser.id",{"_index":1832,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":579,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["registerhandler",{"_index":569,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["rejected",{"_index":2365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1070,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":780,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2036,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":2071,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":2045,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removerefreshtoken",{"_index":2178,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":2193,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":1838,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["removerefreshtokencommand(userid",{"_index":2220,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":1843,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["removerefreshtokenevent",{"_index":1850,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["removerefreshtokeneventhandler",{"_index":1857,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["repository",{"_index":339,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["req",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1257,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1261,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1259,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":1867,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":1871,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1270,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1256,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":1872,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":1996,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":1997,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":517,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":523,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1237,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":1579,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":218,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["requestuser",{"_index":452,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["required",{"_index":1761,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["res",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1265,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1267,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1263,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":532,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":540,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":538,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1234,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["responsebody",{"_index":888,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":889,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":221,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["rest",{"_index":2398,"title":{},"body":{"index.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":139,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1377,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["role.enum",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["role.enum.ts",{"_index":2332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum",{"_index":794,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":803,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":1385,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["rolegroupmembershipenum.member",{"_index":1389,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":439,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["roles.some(role",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":890,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["routes",{"_index":2417,"title":{},"body":{"index.html":{}}}],["rss",{"_index":1432,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":2413,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":1652,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":1740,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":1717,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["saveduser",{"_index":971,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.email",{"_index":975,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":973,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":976,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":974,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":2419,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":891,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":584,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1581,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":764,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1291,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2435,"title":{},"body":{"todo.html":{}}}],["serialize",{"_index":2434,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":2437,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1181,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":698,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["setcurrentrefreshtoken",{"_index":2179,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":2195,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":1888,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":2221,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":1891,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["setcurrentrefreshtokenevent",{"_index":1896,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":1899,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["share",{"_index":762,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["sign",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":1903,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":586,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":466,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signupdto.email",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":812,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":1868,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":1869,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":776,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":421,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":683,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":684,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":741,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":322,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["socialnetworkrepository",{"_index":355,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["socketid",{"_index":1547,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":1442,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":2314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.service.mock.ts",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errorenum.ts",{"_index":2316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":2446,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../jwt.service.mock.ts",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":2317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":2319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":2323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":2328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":2330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":2333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":99,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/api/auth/auth.controller.ts:23",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:30",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:49",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:58",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:64",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:78",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":558,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/api/auth/auth.service.ts:13",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:16",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:20",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:28",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:40",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:53",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:57",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":1785,"title":{},"body":{"classes/RegisterCommand.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":1786,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":1787,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":1792,"title":{},"body":{"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":1789,"title":{},"body":{"classes/RegisterEvent.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":1790,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":1791,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":1802,"title":{},"body":{"classes/RegisterHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:17",{"_index":1807,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:27",{"_index":1808,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:56",{"_index":1812,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:62",{"_index":1810,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:68",{"_index":1814,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":2354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":1904,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":1588,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/jwt",{"_index":1560,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":2260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":1876,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["src/api/auth/interface/token",{"_index":1992,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt",{"_index":1565,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":1584,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":1585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":1587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":1590,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1032,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/create",{"_index":920,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1111,"title":{},"body":{"classes/DeleteUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":1839,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/set",{"_index":1889,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/update",{"_index":2001,"title":{},"body":{"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/create",{"_index":996,"title":{},"body":{"classes/CreateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1129,"title":{},"body":{"classes/DeleteUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/login",{"_index":1605,"title":{},"body":{"classes/LoginOfUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":1851,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/set",{"_index":1897,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/update",{"_index":2027,"title":{},"body":{"classes/UpdateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":927,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1116,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":1844,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":1892,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":2005,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1008,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1133,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":1608,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":1858,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":1900,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":2029,"title":{},"body":{"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1280,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1274,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/create",{"_index":273,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/update",{"_index":2022,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/user",{"_index":2123,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":275,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":2073,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts:100",{"_index":2098,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:105",{"_index":2080,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:111",{"_index":2081,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:114",{"_index":2108,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:117",{"_index":2084,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:34",{"_index":2087,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:38",{"_index":2086,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:43",{"_index":2113,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:51",{"_index":2099,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:59",{"_index":2088,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:66",{"_index":2083,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:69",{"_index":2096,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:76",{"_index":2093,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:79",{"_index":2105,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:86",{"_index":2101,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:89",{"_index":2107,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:92",{"_index":2104,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:95",{"_index":2110,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":2376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1021,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user",{"_index":2116,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":2167,"title":{},"body":{"classes/UserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":2170,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":2171,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":2172,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":2169,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":2168,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.controller.ts",{"_index":2032,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/api/user/user.controller.ts:19",{"_index":2039,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:35",{"_index":2041,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:40",{"_index":2044,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:46",{"_index":2050,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:53",{"_index":2047,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.module.ts",{"_index":2144,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":2173,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/api/user/user.service.ts:18",{"_index":2181,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:21",{"_index":2182,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:26",{"_index":2189,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:32",{"_index":2186,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:42",{"_index":2187,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:50",{"_index":2191,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:54",{"_index":2194,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:58",{"_index":2196,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:62",{"_index":2183,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:66",{"_index":2184,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:70",{"_index":2198,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:74",{"_index":2192,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app.controller.ts",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:31",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":287,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:40",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":246,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":247,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":2269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1238,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/request",{"_index":1862,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/response",{"_index":1878,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1046,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1048,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":2271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1165,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1182,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":2338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1221,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":1974,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/mocks/config.service.mock.ts",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/jwt.service.mock.ts",{"_index":2275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/pipe/is",{"_index":271,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":1068,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1153,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1139,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":2226,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":2414,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["statements",{"_index":2252,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1601,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1235,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":1524,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":1525,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":2325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":1971,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":1972,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":1438,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":1573,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":575,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strip",{"_index":1179,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":423,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":1943,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":1961,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":325,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["stripeventrepository",{"_index":356,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":425,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1162,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":2327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":2106,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":328,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["subscriptionentity.discountcodes",{"_index":1164,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1155,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":1532,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":1512,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":1710,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":357,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1140,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":180,"title":{},"body":{"controllers/AppController.html":{}}}],["super",{"_index":1460,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('email",{"_index":1169,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["super('unauthorized",{"_index":1998,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":2165,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1174,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":1655,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":2377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":2409,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":1528,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":2422,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2423,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1073,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":2278,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["tax_rate",{"_index":1514,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":1486,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":1406,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":251,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{},"coverage.html":{}}}],["test/test",{"_index":249,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["testapi",{"_index":2415,"title":{},"body":{"index.html":{}}}],["text",{"_index":901,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["text/html",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["thibaud",{"_index":2392,"title":{},"body":{"index.html":{}}}],["this.addressrepository.query('delete",{"_index":430,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1200,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.api_type",{"_index":1212,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.api_version",{"_index":1202,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1219,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.appservice.cleardatabasetest",{"_index":277,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":280,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticationservice.login(login",{"_index":1599,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":539,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":550,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":391,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit",{"_index":1019,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["this.client.emit('create",{"_index":146,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["this.commandbus.execute(new",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":394,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":393,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":396,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":398,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":1988,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":1402,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":1991,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":400,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":1443,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1126,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":2217,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuserbyreferralcode(code",{"_index":2218,"title":{},"body":{"injectables/UserService.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":404,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":402,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":1423,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":406,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.email",{"_index":1826,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":1823,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":1827,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":408,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error('invalid",{"_index":2017,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.logger_console.log('new",{"_index":1801,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":2129,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":410,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1428,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1434,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":412,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":426,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.query('delete",{"_index":414,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.password",{"_index":2130,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":416,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.query('delete",{"_index":418,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.querybus.execute(new",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":428,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1818,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1837,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":420,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.stripeventrepository.query('delete",{"_index":422,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":424,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1424,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":1990,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":2121,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1125,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find().then(userlist",{"_index":1314,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1833,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.userrepository.findby",{"_index":965,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":1325,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1289,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":390,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save",{"_index":431,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":972,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":1849,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2061,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":2065,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":2067,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(user.id",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":1583,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":2072,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":537,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(user.id",{"_index":2069,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1205,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1346,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["thresholdpercent",{"_index":1444,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":518,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":1973,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["timestamps",{"_index":785,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":1660,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["todo",{"_index":2206,"title":{"todo.html":{}},"body":{"injectables/UserService.html":{}}}],["token",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command",{"_index":1845,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command.ts",{"_index":1840,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:1",{"_index":1841,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":1842,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":1859,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["token.event.ts",{"_index":1852,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["token.event.ts:1",{"_index":1853,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":1856,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":1855,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:5",{"_index":1854,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:6",{"_index":1898,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["token.guard.ts",{"_index":1564,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["token.strategy",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":1566,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:12",{"_index":1568,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":1570,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":625,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["total_amount",{"_index":1517,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":1519,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":1487,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":1488,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":1656,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":1651,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":1653,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":685,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":779,"title":{},"body":{"entities/CardEntity.html":{}}}],["transform",{"_index":1535,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":1536,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":2114,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":107,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":117,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":1963,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":1966,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":1944,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":1945,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":1964,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":1507,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":1763,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":1757,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":850,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":693,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["trying",{"_index":1107,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":917,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":1600,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":1603,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":1604,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":1602,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":2444,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":686,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":781,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":1415,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":335,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":595,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1049,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1050,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":1866,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1250,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1255,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1253,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":1994,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/UserEntity.html":{}}}],["undefined})@isemail",{"_index":707,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":747,"title":{},"body":{"entities/CardEntity.html":{}}}],["unique",{"_index":963,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":2355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":2433,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":1542,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":1911,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:14",{"_index":1914,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":1915,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":1913,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":1935,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(@req",{"_index":2068,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":2197,"title":{},"body":{"injectables/UserService.html":{}}}],["update(request",{"_index":2048,"title":{},"body":{"controllers/UserController.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatetimestamp",{"_index":1979,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":2000,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercommand(id",{"_index":2223,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":2004,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":2002,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserevent",{"_index":2013,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["updateuserevent(command.userid",{"_index":2021,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":2028,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["uppercase",{"_index":1474,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":1920,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":687,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1158,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1141,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1240,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1242,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1436,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":1751,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":2078,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":534,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":266,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":255,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.command",{"_index":928,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.command.ts",{"_index":921,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:1",{"_index":1113,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1114,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":923,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":924,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.controller",{"_index":2145,"title":{},"body":{"modules/UserModule.html":{}}}],["user.currenthashedrefreshtoken",{"_index":527,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":274,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":982,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":2026,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":2024,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:13",{"_index":991,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":987,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":983,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":2023,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":985,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1836,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["user.event",{"_index":1009,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user.event.ts",{"_index":997,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{},"coverage.html":{}}}],["user.event.ts:1",{"_index":1130,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:2",{"_index":1606,"title":{},"body":{"classes/LoginOfUserEvent.html":{}}}],["user.event.ts:3",{"_index":1000,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1131,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1005,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1003,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:7",{"_index":1006,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:8",{"_index":1004,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.handler",{"_index":2149,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":1304,"title":{},"body":{"classes/GetUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":1305,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["user.handler.ts:16",{"_index":1306,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["user.id",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["user.interface.ts",{"_index":1877,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user.jwttoken",{"_index":529,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.password",{"_index":531,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.profiles",{"_index":1743,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.query",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserHandler.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":1353,"title":{},"body":{"classes/GetUserQuery.html":{},"coverage.html":{}}}],["user.query.ts:1",{"_index":1354,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":1355,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":1772,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":953,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1022,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["user.response.ts:11",{"_index":1027,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1029,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1026,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1025,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:15",{"_index":1028,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:4",{"_index":1023,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":2054,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":1779,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1835,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":577,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/domain/response/user",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.service",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1329,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["user_not_found",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1249,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1251,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":2031,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":1676,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":1969,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":1771,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":1778,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userfromdb",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userfromdb?.roles.includes(role",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{},"injectables/UserService.html":{}}}],["userlist",{"_index":2118,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":1315,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse",{"_index":1309,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UserListResponse.html":{},"coverage.html":{}}}],["userlistresponse.userlist",{"_index":1317,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":1316,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlogindto",{"_index":2122,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userloginresponse",{"_index":498,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":194,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":432,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":944,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["username.exception.ts",{"_index":1172,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":1173,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["username.query",{"_index":1300,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["username.query.ts",{"_index":1295,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"coverage.html":{}}}],["username.query.ts:1",{"_index":1297,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1298,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":1598,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1718,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["usernotfoundexception",{"_index":2161,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["userrepository",{"_index":362,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["userresponse",{"_index":1307,"title":{"classes/UserResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userroleenum",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":977,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["users",{"_index":2091,"title":{},"body":{"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1834,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["usersenderid",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":490,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["useruniqueemail",{"_index":964,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueemail.length",{"_index":967,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername",{"_index":968,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername.length",{"_index":970,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["userusername",{"_index":1345,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["userusername.password",{"_index":1347,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["util/config/database.configuration",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":1795,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":941,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["util/exception/error",{"_index":110,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AuthModule.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["v_0.0.4",{"_index":2418,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":2375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validate",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(login",{"_index":1595,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newuser",{"_index":959,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":1586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":1569,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updateusercommand",{"_index":2016,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validated",{"_index":2360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":1522,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":1455,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["value",{"_index":1001,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variable",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2447,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1543,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1191,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["verify",{"_index":962,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1336,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1339,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["version",{"_index":1204,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"properties.html":{}}}],["void",{"_index":140,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["wallet",{"_index":2389,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":2374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":2336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":1394,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":2400,"title":{},"body":{"index.html":{}}}],["warning",{"_index":2349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["website",{"_index":813,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":751,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":784,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":749,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":783,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":688,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":689,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":753,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":782,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":690,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1053,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":772,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":2334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1024,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z])(?=.*[a",{"_index":1820,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":1822,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["za",{"_index":1821,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\n\nApiLogService\n\nApiLogService\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3001 } },\n    ]),\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLog\n                        \n                    \n                \n            \n            \n                \ncreateLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(@Inject('API_LOG') private client: ClientProxy) {}\n  createLog(log: CreateLogDto): void {\n    this.client.emit('create-log', log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    // ________ Module ________\n    HealthCheckModule,\n    UserModule,\n    ApiLogModule,\n    AuthModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      email: createUserDto.email,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    return await this.authService.signup(signUpDto);\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    return await this.authService.getUserFromAuthToken(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginHandler } from '../user/cqrs/handler/query/get-user-login.handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto) {\n    return this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.email, signUpDto.password));\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateEmailException } from '../../../../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      const newUser: UserEntity = new UserEntity({ ...command.createUserDto });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      // verify that email is unique\n      const userUniqueEmail = await this.userRepository.findBy({ email: command.createUserDto.email });\n      if (userUniqueEmail.length > 0) {\n        throw new DuplicateEmailException();\n      }\n\n      // verify that username is unique\n      const userUniqueUsername = await this.userRepository.findBy({ username: command.createUserDto.username });\n      if (userUniqueUsername.length > 0) {\n        throw new DuplicateUsernameException();\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        email: savedUser.email,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n      });\n    } catch (error) {\n      if (\n        error instanceof InvalidParameterEntityException ||\n        error instanceof DuplicateEmailException ||\n        error instanceof DuplicateUsernameException\n      ) {\n        throw error;\n      }\n      throw new Error('Error executing CreateUserCommand: ' + error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(5, 20)\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: string, action: string, userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  constructor(\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n    public readonly userId: string,\n    public readonly createUserDto: CreateUserDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: CreateUserEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\nimport { UserEntity } from '../entities/user.entity';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly email: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('DeleteUserCommandHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  logger = new Logger('DeleteUserCommandHandler');\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'DeleteUserCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, action: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: DeleteUserEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateEmailException.html":{"url":"classes/DuplicateEmailException.html","title":"class - DuplicateEmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateEmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-email.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-email.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateEmailException extends HttpException {\n  constructor() {\n    super('Email already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localisation: string, handler: string, error: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localisation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(public readonly localisation: string, public readonly handler: string, public readonly error: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto();\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto();\n      createLogDto.apiName = this.API_NAME;\n      createLogDto.apiVersion = this.API_VERSION;\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.apiType = this.API_TYPE;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ email: query.email }],\n        select: ['id', 'email', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserHandler.html":{"url":"classes/GetUserHandler.html","title":"class - GetUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesHandler.html","title":"class - GetUserIfRefreshTokenMatchesHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'email', 'currentHashedRefreshToken'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'GetUserIfRefreshTokenMatchesHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginHandler.html":{"url":"classes/GetUserLoginHandler.html","title":"class - GetUserLoginHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'email', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ email: query.username }],\n          select: ['id', 'username', 'password', 'email', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: LoginOfUserEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from './profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from './profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CardEntity } from './card.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { MediaEntity } from './media.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport CompanyEntity from './company.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 10})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 10 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly email: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): any {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateEmailException } from '../../../../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Username already exists'));\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.email)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Email already exists'));\n      throw new DuplicateEmailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Invalid password'));\n      throw new InvalidPasswordException();\n    }\n    const newUser = new UserEntity({\n      email: command.email,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Invalid parameters :' + err));\n      throw new InvalidParameterEntityException(err);\n    }\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return newUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.email === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'RemoveRefreshTokenCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, action: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE === 'true';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto();\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n    createLogDto.body = this.VERBOSE ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE === 'true';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto();\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'SetCurrentRefreshTokenCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: string, action: string, refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  constructor(\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n    public readonly refreshToken: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('UpdateUser')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  logger = new Logger('UpdateUser');\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      const err = await validate(UpdateUserCommand);\n      if (err.length > 0) {\n        this.logger.error('Invalid parameters');\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'UpdateUserCommandHandler', error));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, action: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(@Inject('API_LOG') private readonly client: ClientProxy) {}\n  handle(event: UpdateUserEvent): void {\n    this.client.emit(\n      {\n        cmd: 'add-log',\n      },\n      event,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtRefreshGuard)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(request: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('')@UseGuards(JwtRefreshGuard)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpException, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport JwtRefreshGuard from '../auth/guards/jwt-refresh-token.guard';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from './domain/response/user.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/create')\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get()\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  findAll(): Promise {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.userService.findOne(id);\n  }\n\n  @Put('')\n  @UseGuards(JwtRefreshGuard)\n  update(@Req() request: RequestUser, @Body() updateUserDto: UpdateUserDto): Promise {\n    const { user } = request;\n    return this.userService.update(user.id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtRefreshGuard)\n  remove(@Param('id') id: string): Promise {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:59\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:76\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:51\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Length(5, 20)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsEmail, Length } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../entities-to-create/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsEmail()\n  @Column({ unique: true })\n  email?: string;\n\n  @Column()\n  @Length(5, 20)\n  @Column({ unique: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginHandler } from './cqrs/handler/query/get-user-login.handler';\nimport { GetUserIfRefreshTokenMatchesHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.handler';\nimport { GetUserHandler } from './cqrs/handler/query/get-user.handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    ApiLogService,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginHandler,\n    GetUserIfRefreshTokenMatchesHandler,\n    GetUserHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { UserEntity } from './domain/entities/user.entity';\nimport * as process from 'process';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  //TODO: Implement this\n  async getUserByReferralCode(referralCode: string): Promise {\n    // return this.queryBus.execute(new GetUserByReferralCodeQuery(referralCode));\n    throw new Error('Not implemented');\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string) {\n    return this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string) {\n    return this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string) {\n    return this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    return this.queryBus.execute(new GetUserQuery(id));\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return this.commandBus.execute(new UpdateUserCommand(id, updateUserDto));\n  }\n\n  async remove(id: string): Promise {\n    return this.commandBus.execute(new DeleteUserCommand(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api-log/api-log.service.ts\n            \n            injectable\n            ApiLogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/enum/logging-type.enum.ts\n            \n            class\n            LoggingTypeEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/command/register.command.ts\n            \n            class\n            RegisterCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event-handler/register.event-handler.ts\n            \n            class\n            RegisterEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event/register.event.ts\n            \n            class\n            RegisterEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/handler/command/register.handler.ts\n            \n            class\n            RegisterHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/guards/auth.guard.ts\n            \n            injectable\n            LocalAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-refresh-token.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/role.guard.ts\n            \n            variable\n            RoleGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/interface/request-user.interface.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/interface/token-payload.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt-refresh-token.strategy.ts\n            \n            injectable\n            JwtRefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/passport-local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/address.entity.ts\n            \n            entity\n            AddressEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/card.entity.ts\n            \n            entity\n            CardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company-employee.entity.ts\n            \n            entity\n            CompanyEmployeeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company.entity.ts\n            \n            entity\n            CompanyEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/connected-card.entity.ts\n            \n            entity\n            ConnectedCardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/conversation.entity.ts\n            \n            entity\n            ConversationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/discount-code.entity.ts\n            \n            entity\n            DiscountCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/enum/role-group-membership.enum.ts\n            \n            class\n            RoleGroupMembershipEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group-membership.entity.ts\n            \n            entity\n            GroupMembershipEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group.entity.ts\n            \n            entity\n            GroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/invoices.entity.ts\n            \n            entity\n            InvoicesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/joined-conversation.entity.ts\n            \n            entity\n            JoinedConversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/media.entity.ts\n            \n            entity\n            MediaEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/notification.entity.ts\n            \n            entity\n            NotificationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/occupation.entity.ts\n            \n            entity\n            OccupationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/plan.entity.ts\n            \n            entity\n            PlanEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/profile.entity.ts\n            \n            entity\n            ProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/referal-code.entity.ts\n            \n            entity\n            ReferralCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/social-network.entity.ts\n            \n            entity\n            SocialNetworkEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/strip-event.entity.ts\n            \n            entity\n            StripEventEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/subscription.entity.ts\n            \n            entity\n            SubscriptionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n            \n            class\n            HealthCheckQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/query/health-check.query.ts\n            \n            class\n            HealthCheckQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/custom-health-check.service.ts\n            \n            injectable\n            CustomHealthCheckService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/domain/response/health-check.response.ts\n            \n            class\n            HealthCheckResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/delete-user.command.ts\n            \n            class\n            DeleteUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/remove-refresh-token.command.ts\n            \n            class\n            RemoveRefreshTokenCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/set-current-refresh-token.command.ts\n            \n            class\n            SetCurrentRefreshTokenCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user.command.ts\n            \n            class\n            UpdateUserCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/create-user.event.ts\n            \n            class\n            CreateUserEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/delete-user.event.ts\n            \n            class\n            DeleteUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/login-of-user.event.ts\n            \n            class\n            LoginOfUserEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/remove-refresh-token.event.ts\n            \n            class\n            RemoveRefreshTokenEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/set-current-refresh-token.event.ts\n            \n            class\n            SetCurrentRefreshTokenEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/update-user.event.ts\n            \n            class\n            UpdateUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/create-user.command-handler.ts\n            \n            class\n            CreateUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n            \n            class\n            DeleteUserCommandHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n            \n            class\n            RemoveRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n            \n            class\n            SetCurrentRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/update-user.command-handler.ts\n            \n            class\n            UpdateUserCommandHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/create-user.event-handler.ts\n            \n            class\n            CreateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n            \n            class\n            DeleteUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n            \n            class\n            LoginOfUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n            \n            class\n            RemoveRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n            \n            class\n            SetCurrentRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/update-user.event-handler.ts\n            \n            class\n            UpdateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n            \n            class\n            GetUserByEmailQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n            \n            class\n            GetUserByUsernameQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-login.handler.ts\n            \n            class\n            GetUserLoginHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user.handler.ts\n            \n            class\n            GetUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-email.query.ts\n            \n            class\n            GetUserByEmailQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-username.query.ts\n            \n            class\n            GetUserByUsernameQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-login.query.ts\n            \n            class\n            GetUserLoginQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user.query.ts\n            \n            class\n            GetUserQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/create-user.response.ts\n            \n            class\n            CreateUserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-list.response.ts\n            \n            class\n            UserListResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-login.response.ts\n            \n            class\n            UserLoginResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user.response.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/error-logging.middleware.ts\n            \n            injectable\n            ErrorLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/middleware/request-logging.middleware.ts\n            \n            injectable\n            RequestLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/middleware/response-logging.middleware.ts\n            \n            injectable\n            ResponseLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-email.exception.ts\n            \n            class\n            DuplicateEmailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/mocks/config.service.mock.ts\n            \n            variable\n            mockedConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/jwt.service.mock.ts\n            \n            variable\n            mockedJwtService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nApiLogService\n\nApiLogService\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    63 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.5\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-email-address\n add database migrations and cron typeorm-migrations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.mock.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.mock.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/config.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_ACCESS_TOKEN_EXPIRATION_TIME':\n        return '3600';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/jwt.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => '',\n}\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      const userFromDb = await this.userService.findOne(user.id);\n      return roles.some(role => userFromDb?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
