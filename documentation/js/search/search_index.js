var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/ApiLogModule.html",[0,1.648,1,2.714]],["body/modules/ApiLogModule.html",[0,2.606,1,5.194,2,2.697,3,3.402,4,4.418,5,4.418,6,4.118,7,0.014,8,4.019,9,3.187,10,3.187,11,0.248,12,0.269,13,0.248,14,3.187,15,3.002,16,5.077,17,4.019,18,0.489,19,1.194,20,3.661,21,3.402,22,4.418,23,6.103,24,3.402,25,3.187,26,4.418,27,0.966,28,4.418,29,5.572,30,4.418,31,2.451,32,0.269,33,0.157,34,0.011,35,0.011]],["title/injectables/ApiLogService.html",[6,2.152,36,1.412]],["body/injectables/ApiLogService.html",[6,3.342,7,0.014,11,0.242,12,0.262,13,0.242,14,4.345,15,4.094,18,0.483,19,1.161,24,3.309,27,0.949,32,0.262,33,0.153,34,0.01,35,0.01,36,2.194,37,2.498,38,4.297,39,0.456,40,2.038,41,6.29,42,1.542,43,4.297,44,6.343,45,0.494,46,4.937,47,1.965,48,0.772,49,1.587,50,5.474,51,6.29,52,4.31,53,4.937,54,6.025,55,1.542,56,3.72,57,4.297,58,3.309,59,3.56,60,4.937,61,2.92,62,4.937]],["title/controllers/AppController.html",[63,2.152,64,2.92]],["body/controllers/AppController.html",[7,0.014,11,0.212,12,0.229,13,0.212,18,0.453,19,1.018,20,3.122,31,2.091,32,0.229,33,0.134,34,0.01,35,0.01,39,0.4,40,1.871,45,0.34,55,1.353,63,3.068,64,4.164,65,3.768,66,6.283,67,1.132,68,4.33,69,6.031,70,2.921,71,6.702,72,6.702,73,4.164,74,2.191,75,4.33,76,5.774,77,5.774,78,1.474,79,3.768,80,3.842,81,3.768,82,5.025,83,3.768,84,3.122,85,4.33,86,4.33,87,2.301,88,1.629,89,3.399,90,3.768,91,4.33,92,3.399,93,3.122,94,3.768,95,4.33,96,5.654,97,4.33,98,4.33,99,2.718,100,3.768,101,2.423,102,3.768,103,1.694,104,4.33]],["title/modules/AppModule.html",[0,1.648,105,2.714]],["body/modules/AppModule.html",[0,2.516,1,4.58,2,1.767,3,2.554,6,3.632,7,0.014,8,3.017,9,2.087,10,2.087,11,0.163,12,0.176,13,0.163,15,2.842,17,3.017,18,0.546,19,0.782,21,2.228,22,2.894,23,4.912,24,2.228,25,3.017,26,2.894,27,0.852,28,2.894,29,4.183,30,2.894,31,2.32,32,0.176,33,0.103,34,0.008,35,0.008,40,1.077,45,0.261,47,1.039,48,0.59,49,0.839,55,1.039,56,1.966,64,4.069,80,4.042,81,2.894,103,1.301,105,5.276,106,2.894,107,2.894,108,2.894,109,4.58,110,4.58,111,4.58,112,3.325,113,3.325,114,4.806,115,6.183,116,3.325,117,3.325,118,4.806,119,3.325,120,3.465,121,3.325,122,2.398,123,1.966,124,3.325,125,2.894,126,3.325,127,2.398,128,3.325,129,2.894,130,2.894,131,3.325,132,3.325,133,3.465,134,3.325,135,2.398,136,3.325,137,5.644,138,3.465,139,3.325,140,2.398,141,3.325,142,3.325,143,3.325,144,1.251,145,3.325,146,3.325,147,3.325,148,2.894,149,3.325,150,3.772,151,1.605,152,2.087,153,2.228,154,2.228,155,2.228,156,2.228,157,3.772,158,2.61,159,2.61,160,2.228,161,3.325,162,3.325]],["title/injectables/AppService.html",[36,1.412,80,2.395]],["body/injectables/AppService.html",[7,0.014,11,0.279,12,0.302,13,0.279,18,0.398,19,1.341,32,0.302,33,0.177,34,0.011,35,0.011,36,2.399,37,2.885,39,0.527,40,2.228,45,0.448,55,1.781,66,6.674,71,4.963,72,4.963,78,1.561,80,4.067,103,2.23,163,4.963,164,5.703]],["title/controllers/AppTestE2eController.html",[63,2.152,165,2.92]],["body/controllers/AppTestE2eController.html",[7,0.014,11,0.248,12,0.268,13,0.248,18,0.489,19,1.19,31,2.443,32,0.268,33,0.157,34,0.011,35,0.011,39,0.468,40,2.07,45,0.398,55,1.581,63,3.395,67,1.323,80,2.993,87,2.689,88,1.904,103,1.98,165,4.607,166,4.607,167,4.607,168,4.861,169,4.404,170,6.401,171,6.39,172,5.061,173,5.561,174,5.061,175,3.233,176,5.061,177,4.011,178,4.404,179,4.404,180,4.607,181,3.972,182,5.061,183,5.061,184,5.061]],["title/modules/AppTestE2eModule.html",[0,1.648,185,2.92]],["body/modules/AppTestE2eModule.html",[0,2.555,2,2.615,3,3.336,7,0.014,8,3.941,9,3.09,10,3.09,11,0.241,12,0.261,13,0.241,17,3.941,18,0.525,19,1.157,25,3.941,31,3.031,32,0.261,33,0.153,34,0.01,35,0.01,105,5.153,122,3.549,123,2.911,165,4.984,166,3.549,167,3.549,168,4.339,177,4.827,178,5.464,179,4.284,185,5.705,186,4.284,187,4.922,188,4.284,189,4.922,190,4.922,191,4.922,192,4.284]],["title/injectables/AppTestE2eService.html",[36,1.412,177,2.542]],["body/injectables/AppTestE2eService.html",[7,0.013,11,0.272,12,0.295,13,0.272,18,0.388,19,1.309,32,0.295,33,0.173,34,0.011,35,0.011,36,2.363,37,2.816,39,0.515,40,2.195,45,0.437,55,1.739,103,2.177,166,4.887,167,4.887,168,4.254,170,6.619,175,3.429,177,4.254,193,4.843,194,3.883,195,5.565]],["title/entities/CardEntity.html",[196,0.661,197,1.87]],["body/entities/CardEntity.html",[7,0.014,11,0.071,12,0.077,13,0.071,18,0.446,27,0.219,32,0.077,33,0.077,34,0.004,35,0.004,39,0.134,45,0.584,48,0.92,49,1.713,67,1.943,74,2.395,78,1.574,101,0.81,144,2.873,196,0.405,197,1.146,198,0.436,199,2.332,200,1.261,201,0.64,202,3.256,203,2.834,204,3.256,205,3.256,206,1.094,207,1.136,208,3.256,209,3.256,210,3.256,211,1.055,212,3.256,213,3.256,214,2.908,215,2.834,216,3.256,217,3.256,218,3.777,219,2.556,220,2.556,221,3.256,222,3.256,223,3.256,224,4.34,225,4.12,226,4.647,227,1.136,228,3.256,229,3.256,230,3.256,231,3.256,232,1.794,233,3.715,234,1.448,235,4.34,236,1.448,237,2.993,238,2.05,239,3.358,240,2.482,241,3.236,242,3.576,243,4.282,244,4.197,245,1.448,246,2.482,247,1.448,248,1.179,249,1.448,250,1.179,251,1.448,252,4.764,253,4.608,254,2.685,255,1.448,256,3.859,257,1.448,258,1.448,259,2.282,260,2.16,261,2.482,262,1.448,263,0.899,264,1.448,265,1.663,266,1.261,267,1.663,268,1.448,269,1.448,270,2.05,271,0.857,272,2.482,273,1.448,274,2.282,275,1.663,276,2.482,277,1.448,278,2.988,279,1.448,280,1.468,281,2.16,282,2.482,283,1.948,284,1.448,285,1.448,286,2.159,287,1.558,288,2.482,289,1.448,290,1.448,291,2.337,292,1.256,293,2.586,294,2.482,295,1.448,296,1.448,297,2.482,298,1.448,299,1.448,300,2.422,301,2.482,302,1.448,303,1.448,304,3.129,305,1.448,306,1.179,307,1.448,308,1.448,309,1.448,310,2.834,311,1.448,312,2.834,313,1.448,314,2.834,315,1.448,316,2.176,317,1.79,318,2.044,319,1.647,320,2.306,321,1.468,322,0.505,323,0.452,324,0.857,325,1.137,326,0.699,327,3.256,328,1.137,329,3.256,330,1.261,331,1.79,332,1.448,333,1.448,334,1.948,335,2.482,336,1.448,337,0.733,338,1.044,339,1.261,340,1.448,341,0.971,342,0.81,343,1.044,344,1.137,345,1.448,346,1.137,347,1.137,348,1.862,349,4.34,350,1.448,351,0.545,352,1.448,353,1.448,354,1.448,355,1.448,356,0.524]],["title/entities/CompanyEmployeeEntity.html",[196,0.661,357,2.395]],["body/entities/CompanyEmployeeEntity.html",[7,0.014,11,0.176,12,0.191,13,0.176,18,0.447,32,0.191,33,0.112,34,0.008,35,0.008,39,0.333,45,0.567,48,0.885,67,1.886,74,1.821,78,1.154,144,1.913,196,0.587,198,1.084,199,2.302,201,1.159,206,1.982,207,2.057,211,1.91,227,2.057,232,2.358,248,2.135,250,2.135,252,3.667,253,3.667,254,1.989,263,1.841,291,2.959,292,2.573,293,4.53,306,2.135,316,1.354,319,2.983,322,1.255,323,1.124,324,2.128,348,2.447,351,1.354,356,1.303,357,3.007,358,5.783,359,3.132,360,4.703,361,5.132,362,3.405,363,5.085,364,3.599,365,3.599,366,3.599,367,3.599,368,5.085,369,3.599,370,5.132,371,3.599,372,3.599,373,2.411,374,3.132,375,3.599,376,3.599,377,2.259,378,3.702,379,2.259,380,3.599]],["title/entities/CompanyEntity.html",[196,0.661,362,2.152]],["body/entities/CompanyEntity.html",[7,0.014,11,0.106,12,0.115,13,0.106,18,0.378,27,0.747,32,0.115,33,0.067,34,0.006,35,0.006,39,0.2,45,0.592,48,0.924,49,1.961,67,1.97,70,2.193,78,1.748,144,2.923,196,0.566,198,0.653,199,2.369,201,0.852,206,1.456,207,1.512,211,1.404,214,3.319,219,3.402,227,1.512,232,1.942,233,5.344,238,1.152,241,2.772,242,2.772,243,3.319,244,3.319,248,1.569,250,1.569,254,0.848,263,1.256,270,3.223,271,2.051,278,3.81,286,3.233,287,1.361,291,2.667,292,1.097,306,1.569,316,2.608,317,2.501,318,2.177,319,1.754,320,1.843,321,2.563,322,0.756,323,0.677,324,1.282,338,1.563,341,1.453,348,2.015,351,0.816,356,0.785,357,3.417,360,2.324,362,1.843,377,1.361,378,2.721,379,1.361,381,1.887,382,3.772,383,4.334,384,3.402,385,4.334,386,4.334,387,2.721,388,4.334,389,4.334,390,4.334,391,3.772,392,4.334,393,3.772,394,4.334,395,2.168,396,2.168,397,3.018,398,2.168,399,2.168,400,2.168,401,2.168,402,2.168,403,2.168,404,2.168,405,3.468,406,2.168,407,2.168,408,2.168,409,2.168,410,2.168,411,3.468,412,2.168,413,2.168,414,3.018,415,2.168,416,2.168,417,2.168,418,2.168,419,2.168,420,1.563,421,2.168]],["title/entities/ConnectedCardEntity.html",[196,0.661,237,2.395]],["body/entities/ConnectedCardEntity.html",[7,0.014,11,0.17,12,0.184,13,0.17,18,0.404,27,0.524,32,0.184,33,0.108,34,0.008,35,0.008,39,0.321,45,0.561,48,0.876,67,1.867,78,1.126,144,1.307,196,0.809,197,3.522,198,1.047,199,2.281,201,1.137,206,1.944,207,2.017,211,1.874,227,2.017,232,2.331,237,2.933,241,3.882,242,3.53,248,2.095,250,2.095,263,1.796,271,2.055,292,2.51,306,2.095,319,2.927,321,2.933,322,1.212,323,1.086,326,1.678,348,2.419,351,1.307,356,1.258,377,2.181,378,3.631,379,2.181,422,5.731,423,3.024,424,5.785,425,5.785,426,4.785,427,4.961,428,3.475,429,4.961,430,3.475,431,3.352,432,3.024,433,3.475,434,3.475,435,3.475,436,3.475,437,3.475,438,3.577,439,1.945,440,3.475]],["title/entities/ConversationEntity.html",[196,0.661,431,2.152]],["body/entities/ConversationEntity.html",[7,0.014,11,0.165,12,0.179,13,0.165,18,0.46,27,0.509,32,0.179,33,0.105,34,0.008,35,0.008,39,0.312,45,0.58,48,0.905,67,1.929,73,4.103,78,1.413,196,0.792,198,1.017,199,2.34,201,1.119,206,1.912,207,1.984,211,1.843,215,4.952,227,1.984,232,2.308,237,4.062,238,3.023,239,4.952,248,2.06,250,2.06,263,1.758,271,1.995,274,3.681,275,3.254,306,2.06,316,2.141,320,3.307,321,2.872,322,1.177,323,1.054,325,2.648,326,1.629,342,3.184,344,2.648,348,2.395,351,1.269,356,1.222,426,2.261,431,2.58,439,1.888,441,2.936,442,5.69,443,4.856,444,3.374,445,3.374,446,3.374,447,3.374,448,3.844,449,4.856,450,3.374,451,3.374,452,4.062,453,4.856,454,3.374,455,4.856,456,3.374,457,3.374,458,2.433,459,2.648]],["title/classes/CreateLogDto.html",[33,0.126,52,2.395]],["body/classes/CreateLogDto.html",[7,0.014,11,0.131,12,0.142,13,0.131,14,4.805,18,0.346,32,0.142,33,0.083,34,0.007,35,0.007,39,0.247,45,0.597,48,0.96,49,1.966,52,2.415,67,1.987,78,1.749,84,1.927,89,3.892,92,3.892,101,2.774,144,2.931,201,0.803,278,4.218,280,2.415,304,1.927,460,0.75,461,5.129,462,2.326,463,4.958,464,4.315,465,2.774,466,4.958,467,4.958,468,4.958,469,4.958,470,3.575,471,4.958,472,4.958,473,4.958,474,4.958,475,3.892,476,7.863,477,2.672,478,4.008,479,2.672,480,2.672,481,2.672,482,6.767,483,5.982,484,6.767,485,2.672,486,4.085,487,2.672,488,2.672,489,5.982,490,2.672,491,3.112,492,2.672,493,2.672,494,2.672,495,2.672,496,2.672,497,2.672,498,2.672,499,2.672,500,2.672,501,2.672,502,2.945,503,2.672]],["title/classes/CreateUserCommand.html",[33,0.126,504,2.714]],["body/classes/CreateUserCommand.html",[7,0.013,11,0.264,12,0.286,13,0.264,18,0.377,27,0.815,32,0.286,33,0.167,34,0.011,35,0.011,39,0.499,42,1.686,45,0.523,47,1.686,48,0.816,49,1.362,58,3.617,88,2.713,201,1.308,460,1.515,504,4.458,505,6.275,506,4.698,507,2.941,508,4.801,509,5.398,510,5.398,511,5.398,512,3.892,513,4.237]],["title/classes/CreateUserCommandHandler.html",[33,0.126,514,2.92]],["body/classes/CreateUserCommandHandler.html",[7,0.014,11,0.155,12,0.168,13,0.155,18,0.515,27,0.7,32,0.168,33,0.144,34,0.008,35,0.008,39,0.293,40,1.503,42,1.45,45,0.432,47,1.45,48,0.673,49,1.171,55,0.99,67,0.829,88,2.066,103,1.24,123,1.874,151,2.241,175,2.348,194,2.917,201,0.912,211,1.027,283,4.309,323,0.99,337,1.603,387,3.446,460,0.889,465,3.6,504,4.311,507,2.427,514,3.346,515,5.26,516,4.639,517,2.124,518,5.491,519,6.044,520,4.039,521,3.169,522,6.433,523,3.169,524,4.641,525,3.169,526,4.641,527,3.169,528,2.758,529,3.169,530,1.684,531,3.169,532,3.058,533,2.758,534,3.169,535,3.169,536,3.679,537,4.779,538,2.651,539,3.11,540,2.758,541,3.679,542,2.758,543,3.11,544,1.989,545,1.989,546,2.758,547,2.913,548,2.487,549,2.487,550,3.169,551,2.285,552,3.804,553,3.169,554,2.972,555,3.169,556,3.169,557,3.574,558,3.169,559,3.169,560,4.639,561,3.169,562,4.641,563,3.11,564,3.169,565,4.641,566,3.169,567,3.169,568,3.446,569,3.169,570,3.169,571,3.169,572,3.169,573,3.169,574,3.169,575,3.169,576,3.169,577,2.758,578,3.169,579,2.124,580,4.779,581,3.169,582,3.169,583,2.758]],["title/classes/CreateUserDto.html",[33,0.126,508,2.395]],["body/classes/CreateUserDto.html",[7,0.014,11,0.236,12,0.255,13,0.236,18,0.336,27,0.727,32,0.255,33,0.192,34,0.01,35,0.01,39,0.446,42,1.506,45,0.568,47,1.506,48,0.886,49,1.216,67,1.789,78,1.736,201,1.218,334,5.372,337,2.438,377,3.888,378,4.69,379,3.025,387,4.296,460,1.352,508,3.663,568,4.296,584,6.503,585,4.195,586,4.586,587,6.194,588,4.82,589,5.67,590,4.82,591,5.391,592,4.82,593,3.23,594,3.783]],["title/classes/CreateUserEvent.html",[33,0.126,595,2.92]],["body/classes/CreateUserEvent.html",[0,2.815,7,0.014,11,0.211,12,0.228,13,0.211,18,0.301,27,0.65,32,0.228,33,0.134,34,0.01,35,0.01,39,0.398,42,1.797,45,0.566,47,1.345,48,0.884,49,1.087,58,2.886,78,1.814,88,3.006,201,1.131,254,2.251,460,1.209,507,3.533,508,4.653,512,3.106,595,4.149,596,6.453,597,3.748,598,7.206,599,7.206,600,4.307,601,4.307,602,3.057,603,5.008,604,3.87,605,4.307,606,4.307,607,4.307,608,4.307]],["title/classes/CreateUserEventHandler.html",[33,0.126,609,3.179]],["body/classes/CreateUserEventHandler.html",[7,0.014,11,0.23,12,0.249,13,0.23,18,0.5,19,1.107,24,3.155,27,0.921,32,0.249,33,0.146,34,0.01,35,0.01,39,0.435,40,1.976,42,1.906,43,4.097,44,6.231,45,0.48,47,1.906,48,0.748,49,1.54,50,5.309,54,4.097,55,1.471,56,3.608,57,4.097,61,2.784,88,1.771,151,2.945,460,1.321,517,3.155,530,2.501,595,5.163,609,4.788,610,5.89,611,6.231,612,5.89,613,5.309,614,4.708,615,5.309,616,4.708,617,4.788,618,4.097,619,4.708,620,4.708,621,4.708,622,4.708,623,4.708,624,4.708]],["title/classes/CreateUserResponse.html",[33,0.126,547,2.542]],["body/classes/CreateUserResponse.html",[7,0.014,11,0.209,12,0.226,13,0.209,18,0.399,27,0.645,32,0.226,33,0.133,34,0.009,35,0.009,39,0.395,42,1.335,45,0.581,47,1.335,48,0.907,49,1.078,78,1.679,88,3.051,198,1.288,201,1.125,206,2.169,211,2.091,232,1.923,361,5.616,377,3.592,378,4.643,379,2.682,387,4.051,460,1.199,507,3.585,532,2.162,547,3.592,568,4.051,625,6.575,626,3.719,627,4.273,628,4.273,629,4.273,630,4.273,631,4.273,632,5.065,633,4.273,634,4.273,635,3.354,636,3.719,637,4.273]],["title/injectables/CustomHealthCheckService.html",[36,1.412,638,2.542]],["body/injectables/CustomHealthCheckService.html",[7,0.014,11,0.239,12,0.259,13,0.239,18,0.507,19,1.15,27,0.738,32,0.259,33,0.152,34,0.01,35,0.01,36,2.181,37,2.475,39,0.452,40,2.026,42,1.528,45,0.492,47,1.528,48,0.6,49,1.235,55,1.528,87,2.6,88,1.841,103,1.914,175,3.164,194,3.662,530,2.6,557,2.893,638,3.925,639,4.076,640,5.999,641,4.619,642,4.258,643,7.264,644,4.893,645,6.682,646,4.893,647,4.893,648,4.191,649,4.893,650,3.528,651,3.071,652,3.84,653,3.84,654,4.893]],["title/injectables/DatabaseConfiguration.html",[36,1.412,120,2.92]],["body/injectables/DatabaseConfiguration.html",[7,0.014,11,0.125,12,0.136,13,0.125,18,0.55,19,0.602,32,0.136,33,0.079,34,0.007,35,0.007,36,1.378,37,1.294,39,0.237,40,1.28,45,0.201,48,0.666,55,0.799,103,2.294,120,2.848,123,1.513,129,6.658,144,2.631,148,4.723,151,1.235,168,2.479,173,5.104,197,1.824,198,1.635,237,2.336,243,2.647,259,2.336,267,2.647,270,2.099,274,2.336,286,2.21,291,1.824,300,2.479,326,1.235,343,1.845,347,2.008,357,2.336,358,2.008,362,2.099,420,1.845,422,2.008,431,2.099,439,1.431,448,2.21,452,2.336,465,2.7,532,1.998,551,1.845,554,1.131,560,1.845,568,3.406,579,1.714,586,3.636,655,2.226,656,5.426,657,2.558,658,4.825,659,3.95,660,2.558,661,2.008,662,3.1,663,1.845,664,2.226,665,2.226,666,2.558,667,2.558,668,2.558,669,2.479,670,2.008,671,2.008,672,2.558,673,2.008,674,2.479,675,2.558,676,2.008,677,2.558,678,2.558,679,2.558,680,2.479,681,2.558,682,2.226,683,2.008,684,2.647,685,2.008,686,2.226,687,2.099,688,2.226,689,2.558,690,4.723,691,3.95,692,5.426,693,5.426,694,4.723,695,2.558,696,2.558,697,2.558,698,5.426,699,2.558,700,2.558,701,2.558,702,5.426,703,3.95,704,3.95,705,4.825,706,3.95,707,5.426,708,2.558,709,4.723,710,2.558,711,3.95,712,2.558,713,2.558,714,2.558,715,2.558,716,2.558,717,2.558,718,2.558,719,2.558,720,2.558,721,2.558,722,2.558,723,2.558,724,2.558,725,2.558,726,2.558,727,2.558,728,2.558,729,3.95,730,2.558,731,2.558,732,2.558,733,2.558,734,2.558,735,2.558,736,2.558,737,2.558,738,2.558,739,2.558,740,2.558,741,2.558,742,2.226,743,2.558]],["title/entities/DiscountCodeEntity.html",[196,0.661,669,2.542]],["body/entities/DiscountCodeEntity.html",[7,0.014,11,0.153,12,0.165,13,0.153,18,0.38,27,1.009,32,0.165,33,0.142,34,0.008,35,0.008,39,0.288,45,0.578,48,0.976,67,1.923,78,1.041,196,0.749,198,0.94,199,2.33,201,1.07,206,1.828,207,1.898,211,1.763,227,1.898,232,2.536,248,1.97,250,1.97,263,1.661,280,3.953,287,1.958,306,1.97,316,2.515,317,3.308,318,2.88,322,1.088,323,0.975,337,1.579,348,2.331,351,1.174,356,1.13,589,4.709,669,2.88,670,5.855,687,3.552,744,2.716,745,4.736,746,5.441,747,4.736,748,4.736,749,4.271,750,5.441,751,3.12,752,3.12,753,4.609,754,3.993,755,4.736,756,3.12,757,4.588,758,3.12,759,3.993,760,3.993,761,3.12,762,3.12,763,3.993,764,3.12,765,3.12,766,3.12,767,3.12,768,4.588,769,3.12,770,4.736,771,5.221,772,2.25,773,3.12,774,4.271,775,3.12]],["title/classes/DuplicateEmailException.html",[33,0.126,541,2.714]],["body/classes/DuplicateEmailException.html",[7,0.013,11,0.276,12,0.299,13,0.276,18,0.394,19,1.327,32,0.299,33,0.175,34,0.011,35,0.011,42,2.297,45,0.444,460,1.583,538,3.3,539,4.58,541,4.58,776,3.631,777,4.911,778,3.458,779,3.906,780,5.643,781,3.158,782,5.643,783,4.429,784,4.429,785,4.069]],["title/classes/DuplicateUsernameException.html",[33,0.126,536,2.714]],["body/classes/DuplicateUsernameException.html",[7,0.013,11,0.276,12,0.299,13,0.276,18,0.394,19,1.327,32,0.299,33,0.175,34,0.011,35,0.011,42,2.297,45,0.444,460,1.583,536,4.58,538,3.3,539,4.58,776,3.631,778,3.458,779,3.906,781,3.158,783,4.429,784,4.429,785,4.069,786,4.911,787,5.643,788,5.643]],["title/modules/EntitiesToMoveModule.html",[0,1.648,109,2.714]],["body/modules/EntitiesToMoveModule.html",[0,2.22,2,2.114,7,0.014,11,0.195,12,0.211,13,0.195,17,2.497,18,0.572,19,0.936,25,2.497,31,1.921,32,0.211,33,0.123,34,0.009,35,0.009,109,3.654,122,2.869,123,2.353,130,3.463,150,5.254,192,3.463,196,0.649,197,2.518,199,1.243,237,3.225,259,3.225,270,2.898,274,3.225,286,3.052,291,2.518,300,3.423,324,2.353,325,3.123,326,2.633,338,2.869,341,2.666,342,2.226,343,2.869,344,3.123,346,3.123,347,3.123,357,3.225,360,2.666,362,2.898,373,2.666,420,2.869,431,2.898,439,3.052,448,3.052,452,3.225,458,2.869,459,3.123,532,2.013,669,3.423,671,3.123,674,3.423,680,3.423,684,3.654,686,3.463,687,2.898,772,2.869,789,3.979,790,3.463,791,3.463,792,3.463,793,3.979,794,3.123,795,3.463]],["title/classes/ErrorCustomEvent.html",[33,0.126,796,2.92]],["body/classes/ErrorCustomEvent.html",[7,0.013,11,0.249,12,0.27,13,0.249,27,0.769,32,0.27,33,0.158,34,0.011,35,0.011,39,0.471,42,1.591,45,0.552,47,1.591,48,0.861,49,1.285,78,1.808,88,2.918,201,1.261,460,1.429,465,4.252,507,3.359,513,3.997,796,4.625,797,5.786,798,5.786,799,4.432,800,7.372,801,5.093,802,5.093,803,6.415]],["title/classes/ErrorCustomEventHandler.html",[33,0.126,804,3.179]],["body/classes/ErrorCustomEventHandler.html",[7,0.014,11,0.244,12,0.264,13,0.244,18,0.51,19,1.172,27,0.752,32,0.264,33,0.155,34,0.01,35,0.01,39,0.461,40,2.05,45,0.392,47,1.557,48,0.611,49,1.258,55,1.557,56,3.742,151,3.055,460,1.398,465,2.788,517,3.339,530,2.648,552,2.947,554,2.203,612,6.051,613,5.507,615,5.507,617,3.911,618,4.337,663,4.562,665,4.337,796,5.273,797,4.966,798,4.966,804,4.966,805,6.051,806,4.983,807,4.983,808,4.983,809,4.983,810,4.983,811,4.983,812,4.983]],["title/classes/ErrorExceptionFilter.html",[33,0.126,813,3.179]],["body/classes/ErrorExceptionFilter.html",[7,0.014,11,0.232,12,0.252,13,0.232,18,0.428,19,1.117,27,0.717,32,0.252,33,0.147,34,0.01,35,0.01,39,0.439,40,1.987,45,0.373,47,1.484,48,0.583,49,1.199,55,1.484,56,3.628,99,3.851,151,2.962,460,1.333,552,4.248,554,2.1,579,4.814,580,4.133,661,3.727,694,5.915,779,3.26,781,3.803,813,4.815,814,5.34,815,4.133,816,6.797,817,6.135,818,7.184,819,4.749,820,6.135,821,3.851,822,3.182,823,4.133,824,4.749,825,4.749,826,4.749,827,4.749,828,4.749,829,4.749,830,4.749,831,4.749,832,4.133,833,4.749,834,4.749]],["title/injectables/ErrorLoggingMiddleware.html",[36,1.412,140,2.92]],["body/injectables/ErrorLoggingMiddleware.html",[0,1.192,6,3.09,7,0.014,11,0.143,12,0.155,13,0.143,15,1.732,18,0.472,19,0.689,21,1.962,27,0.791,32,0.155,33,0.091,34,0.007,35,0.007,36,1.526,37,1.481,39,0.271,40,1.418,42,0.915,45,0.513,47,1.367,48,0.83,49,1.105,52,3.1,55,0.915,59,2.111,61,4.405,74,2.652,78,1.32,87,1.556,88,2.833,99,3.651,103,1.145,133,4.194,140,3.156,144,1.102,151,1.414,152,1.838,153,1.962,154,4.172,155,1.962,156,1.962,157,3.436,158,2.298,159,2.298,160,1.962,194,2.785,201,0.861,254,1.145,265,2.933,461,1.962,465,2.449,470,3.156,478,3.513,491,1.838,502,3.156,551,2.111,552,3.439,554,1.295,557,1.732,560,2.111,579,1.962,583,2.549,602,1.556,821,3.651,822,1.962,835,5.892,836,2.111,837,4.114,838,4.114,839,4.114,840,4.114,841,3.156,842,2.298,843,4.377,844,3.436,845,3.436,846,4.114,847,5.816,848,2.549,849,2.298,850,2.298,851,3.436,852,2.549,853,2.298,854,3.436,855,2.111,856,2.111,857,3.156,858,3.436,859,2.298,860,3.436,861,2.298,862,2.111,863,4.114,864,2.928,865,2.298,866,2.298,867,2.298,868,2.298,869,3.436,870,2.298,871,2.298,872,2.298,873,2.549,874,2.928,875,2.298,876,2.549,877,2.298,878,2.298,879,2.298,880,2.298,881,2.298,882,2.298,883,2.298,884,2.549,885,2.549,886,2.549,887,2.549,888,2.549,889,2.549,890,2.549,891,2.549,892,2.298,893,2.298,894,2.298,895,2.298,896,2.298,897,2.298]],["title/entities/GroupEntity.html",[196,0.661,448,2.266]],["body/entities/GroupEntity.html",[7,0.014,11,0.148,12,0.16,13,0.148,18,0.44,27,0.892,32,0.16,33,0.139,34,0.007,35,0.007,39,0.28,45,0.564,48,0.881,67,1.877,78,1.342,144,2.851,196,0.732,198,0.912,199,2.282,201,1.051,206,1.796,207,1.864,211,1.732,214,3.961,227,1.864,232,2.222,238,2.384,241,3.933,242,3.308,243,3.961,244,3.006,248,1.936,250,1.936,259,3.496,260,3.905,263,1.625,267,3.961,270,3.636,271,2.653,278,3.829,306,1.936,316,1.688,320,2.84,321,3.161,322,1.056,323,0.946,337,1.531,341,2.028,342,2.51,343,2.183,348,2.062,356,1.096,384,4.196,426,3.006,431,3.141,432,2.634,438,4.263,439,1.694,448,2.51,563,3.006,593,2.028,594,3.521,898,2.634,899,5.346,900,5.346,901,5.346,902,4.486,903,4.486,904,3.027,905,4.486,906,3.027,907,3.027,908,3.027,909,3.027,910,4.486,911,3.027,912,3.027,913,3.027,914,4.486,915,3.027,916,3.027,917,3.027]],["title/entities/GroupMembershipEntity.html",[196,0.661,259,2.395]],["body/entities/GroupMembershipEntity.html",[7,0.014,11,0.173,12,0.187,13,0.173,18,0.444,27,0.534,32,0.187,33,0.11,34,0.008,35,0.008,39,0.327,45,0.564,48,0.88,67,1.876,74,1.789,78,1.14,144,1.889,196,0.819,197,3.221,198,1.066,199,2.291,201,1.148,206,1.963,207,2.037,211,1.892,227,2.037,232,2.345,241,3.558,242,3.558,248,2.115,250,2.115,252,3.621,253,3.621,254,1.964,259,2.97,263,1.818,292,2.541,306,2.115,316,1.33,319,2.955,322,1.233,323,1.105,326,1.707,331,4.211,342,3.558,348,2.433,351,1.33,356,1.28,374,3.077,448,3.904,458,2.55,673,5.757,918,3.077,919,5.841,920,5.022,921,3.536,922,3.536,923,3.536,924,5.022,925,3.536,926,3.536,927,4.211,928,3.536,929,3.536,930,3.536,931,3.536,932,3.536]],["title/controllers/HealthCheckController.html",[63,2.152,933,2.92]],["body/controllers/HealthCheckController.html",[7,0.014,11,0.21,12,0.227,13,0.21,18,0.502,19,1.007,20,5.187,31,2.068,32,0.227,33,0.133,34,0.009,35,0.009,39,0.396,40,1.857,45,0.337,55,1.338,63,2.276,67,1.12,69,4.99,70,2.901,73,4.134,74,2.167,79,3.729,82,4.99,83,3.729,84,3.089,87,2.276,89,3.363,90,3.729,92,3.363,93,3.089,94,3.729,96,3.729,100,3.729,101,2.397,102,3.729,103,1.676,127,4.134,175,2.901,638,4.056,639,3.39,641,5.148,651,2.689,652,3.363,653,3.363,933,4.134,934,3.729,935,3.729,936,7.984,937,4.284,938,6.901,939,4.284,940,6.901,941,3.363,942,2.871,943,3.729,944,3.729,945,4.284,946,4.284,947,4.284]],["title/modules/HealthCheckModule.html",[0,1.648,110,2.714]],["body/modules/HealthCheckModule.html",[0,2.516,2,2.553,3,3.285,7,0.014,8,3.88,9,3.016,10,3.016,11,0.235,12,0.255,13,0.235,17,3.88,18,0.533,19,1.13,25,3.016,31,2.985,32,0.255,33,0.149,34,0.01,35,0.01,110,5.121,127,3.465,150,5.663,254,1.88,530,2.553,638,4.796,639,2.842,641,4.143,650,3.465,795,4.182,933,4.928,942,3.22,943,4.182,944,4.182,948,4.182,949,4.182,950,4.806,951,6.182,952,4.806,953,5.38,954,4.458,955,4.806,956,5.38]],["title/classes/HealthCheckQuery.html",[33,0.126,648,2.714]],["body/classes/HealthCheckQuery.html",[7,0.013,11,0.304,12,0.329,13,0.304,32,0.329,33,0.192,34,0.012,35,0.012,460,1.741,639,3.669,648,4.846,957,5.4,958,5.4]],["title/classes/HealthCheckQueryHandler.html",[33,0.126,954,2.92]],["body/classes/HealthCheckQueryHandler.html",[7,0.014,11,0.184,12,0.2,13,0.184,18,0.456,27,0.568,32,0.2,33,0.117,34,0.009,35,0.009,39,0.348,40,1.701,42,1.64,45,0.413,47,1.176,48,0.462,49,0.95,55,1.176,61,4.066,103,1.473,151,2.535,175,3.602,194,3.211,460,1.057,517,2.524,520,5.69,530,2.001,554,1.665,557,2.227,639,3.574,641,2.524,648,2.524,650,4.714,651,3.295,652,2.956,653,2.956,661,2.956,662,4.121,841,2.716,941,2.956,942,2.524,954,3.786,959,5.26,960,6.044,961,3.766,962,7.121,963,7.307,964,7.307,965,7.307,966,7.307,967,3.766,968,3.766,969,3.766,970,3.766,971,3.766,972,3.766,973,3.766,974,3.766,975,5.25,976,5.25,977,5.25,978,3.766,979,3.766,980,3.766,981,6.538,982,5.25,983,3.766,984,3.766,985,3.766,986,3.278,987,3.766,988,3.766,989,3.766,990,3.278,991,3.278,992,3.766,993,3.766,994,3.766,995,3.766]],["title/classes/HealthCheckResponse.html",[33,0.126,651,2.542]],["body/classes/HealthCheckResponse.html",[7,0.013,11,0.262,12,0.284,13,0.262,18,0.374,27,0.809,32,0.284,33,0.166,34,0.011,35,0.011,39,0.496,42,1.675,45,0.521,47,1.675,48,0.813,49,1.353,88,2.704,201,1.302,460,1.505,507,2.929,513,4.209,639,4.251,651,4.158,941,6.055,942,3.593,996,6.256,997,4.667,998,7.509,999,5.363,1000,5.363,1001,5.363]],["title/classes/InvalidParameterEntityException.html",[33,0.126,543,2.714]],["body/classes/InvalidParameterEntityException.html",[7,0.014,11,0.237,12,0.256,13,0.237,18,0.433,19,1.137,27,0.729,32,0.256,33,0.193,34,0.01,35,0.01,42,1.51,45,0.38,47,1.939,48,0.761,49,1.22,101,2.705,103,2.427,275,3.239,337,2.446,460,1.357,538,2.996,543,4.159,544,3.895,545,3.895,552,2.859,776,3.297,778,3.14,779,3.642,781,2.705,785,4.475,1002,3.794,1003,6.206,1004,7.479,1005,4.834,1006,4.834,1007,5.401,1008,4.207,1009,3.794,1010,3.794,1011,4.834,1012,4.834,1013,4.834,1014,4.834,1015,4.834]],["title/classes/InvalidPasswordException.html",[33,0.126,1016,3.179]],["body/classes/InvalidPasswordException.html",[7,0.013,11,0.264,12,0.286,13,0.264,18,0.377,19,1.269,32,0.286,33,0.167,34,0.011,35,0.011,42,2.252,45,0.424,280,3.192,460,1.515,538,3.212,544,4.175,586,4.458,776,3.534,778,3.365,779,3.831,781,3.021,785,3.892,1009,4.237,1010,4.237,1016,5.221,1017,4.698,1018,5.398,1019,4.698,1020,4.698,1021,5.398,1022,6.275,1023,5.398,1024,5.789,1025,5.398]],["title/entities/InvoicesEntity.html",[196,0.661,674,2.542]],["body/entities/InvoicesEntity.html",[7,0.014,11,0.101,12,0.109,13,0.101,18,0.293,27,1.065,32,0.109,33,0.103,34,0.006,35,0.006,39,0.191,45,0.583,48,0.996,49,0.842,67,1.939,70,2.674,78,1.696,101,1.156,144,0.777,196,0.337,198,0.622,199,2.334,201,0.825,203,3.652,206,1.41,207,1.463,211,1.359,227,1.463,232,1.9,248,1.519,250,1.519,254,0.808,263,1.208,278,1.867,280,3.883,292,1.045,304,2.405,306,1.519,316,2.717,319,1.688,322,0.72,323,0.645,337,1.045,348,1.972,351,0.777,356,0.748,589,5.537,593,4.931,674,2.094,687,3.004,745,3.652,753,5.087,754,2.903,755,1.798,771,4.921,772,1.489,774,1.621,1026,1.798,1027,5.286,1028,4.196,1029,4.196,1030,4.196,1031,4.196,1032,4.196,1033,5.286,1034,4.196,1035,3.293,1036,4.196,1037,4.196,1038,4.196,1039,2.065,1040,3.336,1041,6.404,1042,6.394,1043,2.065,1044,3.336,1045,2.065,1046,3.336,1047,2.065,1048,3.336,1049,2.065,1050,3.336,1051,2.065,1052,3.336,1053,2.065,1054,2.065,1055,2.065,1056,2.065,1057,2.065,1058,5.286,1059,2.065,1060,2.065,1061,2.065,1062,3.336,1063,2.065,1064,2.065,1065,2.065,1066,3.336,1067,4.196,1068,2.065,1069,3.336,1070,2.065,1071,3.336,1072,2.065,1073,2.065,1074,6.566,1075,3.336,1076,2.065,1077,5.565,1078,2.903,1079,2.065,1080,2.065,1081,2.065,1082,2.065,1083,2.065,1084,2.065,1085,2.065,1086,2.065]],["title/classes/IsTestEnvironmentPipe.html",[33,0.126,180,2.92]],["body/classes/IsTestEnvironmentPipe.html",[7,0.014,11,0.243,12,0.263,13,0.243,18,0.347,19,1.168,27,0.75,32,0.263,33,0.154,34,0.01,35,0.01,39,0.459,40,2.046,45,0.39,47,1.552,48,0.609,49,1.254,55,1.552,103,1.943,151,3.049,152,3.118,153,3.329,154,3.329,155,3.329,156,3.329,168,4.358,180,4.553,181,4.956,460,1.394,554,2.196,560,3.582,602,3.355,690,4.323,779,2.639,781,2.78,1087,4.323,1088,6.942,1089,6.315,1090,6.315,1091,7.542,1092,6.042,1093,7.305,1094,4.968,1095,4.968,1096,4.968,1097,4.968,1098,4.968,1099,4.968]],["title/entities/JoinedConversation.html",[196,0.661,452,2.395]],["body/entities/JoinedConversation.html",[7,0.014,11,0.183,12,0.199,13,0.183,18,0.421,27,0.566,32,0.199,33,0.116,34,0.009,35,0.009,39,0.347,45,0.574,48,0.895,67,1.908,78,1.481,196,0.854,198,1.13,199,2.325,201,1.185,206,2.026,207,2.102,211,1.953,227,2.102,232,2.389,248,2.183,250,2.183,263,1.895,291,3.282,292,2.647,293,4.04,306,2.183,316,2.268,319,3.05,322,1.307,323,1.171,324,2.217,348,2.48,351,1.41,356,1.357,426,4.6,431,3.467,438,4.347,439,2.098,452,3.095,676,5.843,1100,3.262,1101,6.029,1102,3.749,1103,3.749,1104,3.749,1105,3.749,1106,3.749,1107,3.749,1108,3.749,1109,3.749,1110,3.749,1111,3.749,1112,3.749,1113,3.749]],["title/classes/LoggingTypeEnum.html",[33,0.126,491,2.542]],["body/classes/LoggingTypeEnum.html",[7,0.014,11,0.239,12,0.259,13,0.239,14,4.56,32,0.259,33,0.152,34,0.01,35,0.01,39,0.452,45,0.542,48,0.846,78,1.564,88,3.002,99,4.712,201,1.23,254,2.696,460,1.373,465,4.201,491,3.925,602,3.662,821,4.712,856,5.238,1114,3.84,1115,6.946,1116,4.893,1117,4.893,1118,4.893]],["title/entities/MediaEntity.html",[196,0.661,270,2.152]],["body/entities/MediaEntity.html",[7,0.014,11,0.136,12,0.147,13,0.136,18,0.424,27,0.418,32,0.147,33,0.086,34,0.007,35,0.007,39,0.256,45,0.579,48,0.903,67,1.924,78,1.284,196,0.685,197,2.954,198,0.836,199,2.326,201,0.997,206,1.704,207,1.769,211,1.643,214,1.858,227,1.769,232,2.15,241,4.209,242,4.209,248,1.837,250,1.837,263,1.521,270,2.232,271,3.931,291,3.352,306,1.837,316,1.908,321,4.048,322,0.967,323,0.866,324,1.64,326,1.339,342,3.166,348,2.231,351,1.043,356,1.004,362,3.858,373,1.858,448,3.719,458,1.999,507,2.242,1119,2.413,1120,5.072,1121,5.072,1122,5.072,1123,5.072,1124,5.072,1125,5.072,1126,5.072,1127,5.072,1128,4.201,1129,2.773,1130,4.201,1131,2.773,1132,4.201,1133,2.773,1134,2.773,1135,2.773,1136,4.201,1137,2.773,1138,4.201,1139,2.773,1140,2.773,1141,2.773,1142,4.201,1143,2.773,1144,4.201,1145,2.773,1146,2.773]],["title/entities/MessageEntity.html",[196,0.661,274,2.395]],["body/entities/MessageEntity.html",[7,0.014,11,0.183,12,0.198,13,0.183,18,0.42,27,0.564,32,0.198,33,0.116,34,0.009,35,0.009,39,0.346,45,0.573,48,0.895,67,1.907,73,4.342,78,1.479,196,0.852,197,3.28,198,1.127,199,2.324,201,1.184,206,2.023,207,2.1,211,1.951,227,2.1,232,2.388,241,2.924,242,2.924,248,2.18,250,2.18,263,1.892,274,3.09,275,2.506,292,2.643,306,2.18,316,2.265,319,3.046,322,1.304,323,1.168,326,1.806,348,2.478,351,1.407,356,1.354,426,4.596,431,3.463,439,2.093,507,3.141,1147,3.255,1148,5.241,1149,5.225,1150,3.74,1151,3.74,1152,5.225,1153,3.74,1154,3.74,1155,3.74,1156,3.74,1157,3.74]],["title/classes/NoUserTraceException.html",[33,0.126,1158,3.179]],["body/classes/NoUserTraceException.html",[7,0.013,11,0.274,12,0.297,13,0.274,18,0.391,32,0.297,33,0.174,34,0.011,35,0.011,42,2.29,45,0.44,460,1.572,538,3.286,545,3.517,604,4.102,776,3.616,778,3.443,1158,5.342,1159,5.923,1160,4.877,1161,7.33,1162,5.604,1163,5.604,1164,5.604,1165,5.604,1166,5.604]],["title/entities/OccupationEntity.html",[196,0.661,286,2.266]],["body/entities/OccupationEntity.html",[7,0.014,11,0.176,12,0.19,13,0.176,18,0.447,27,0.889,32,0.19,33,0.111,34,0.008,35,0.008,39,0.332,45,0.579,48,0.903,67,1.925,78,1.453,144,1.91,196,0.586,197,3.237,198,1.082,199,2.339,201,1.158,206,1.979,207,2.054,211,1.908,227,2.054,232,2.356,233,2.818,248,2.133,250,2.133,263,1.838,267,3.402,278,2.009,286,2.841,287,3.697,291,3.237,306,2.133,316,1.91,318,4.019,322,1.252,323,1.122,324,2.123,326,1.734,348,2.446,351,1.351,356,1.3,362,3.726,373,2.406,563,3.402,1167,3.125,1168,5.126,1169,5.126,1170,5.126,1171,5.077,1172,3.591,1173,5.077,1174,3.591,1175,3.591,1176,3.591,1177,3.591,1178,3.591,1179,5.077,1180,3.591,1181,3.591,1182,3.591]],["title/entities/PlanEntity.html",[196,0.661,680,2.542]],["body/entities/PlanEntity.html",[7,0.014,11,0.159,12,0.172,13,0.159,18,0.33,27,1.136,32,0.172,33,0.101,34,0.008,35,0.008,39,0.301,45,0.584,48,0.981,67,1.942,70,3.289,78,1.539,196,0.771,198,0.98,199,2.351,201,1.096,206,1.873,207,1.943,211,1.805,227,1.943,232,2.279,238,1.728,248,2.018,250,2.018,263,1.712,280,4.011,306,2.018,316,2.552,320,2.513,322,1.134,323,1.016,348,2.365,351,1.223,356,1.177,593,4.1,680,2.968,687,3.604,749,4.374,753,4.687,772,2.345,774,3.711,1041,5.325,1077,5.325,1183,2.83,1184,5.573,1185,6.5,1186,6.5,1187,3.252,1188,3.252,1189,3.252,1190,4.729,1191,6.118,1192,3.252,1193,3.252,1194,3.252,1195,3.252,1196,3.252,1197,4.729,1198,3.252,1199,3.252,1200,2.83]],["title/entities/ProfileEntity.html",[196,0.661,291,1.87]],["body/entities/ProfileEntity.html",[7,0.014,11,0.107,12,0.116,13,0.107,18,0.441,27,0.918,32,0.116,33,0.068,34,0.006,35,0.006,39,0.202,45,0.555,48,0.865,49,1.877,67,1.845,74,2.517,78,0.792,144,2.69,196,0.569,197,2.81,198,0.659,199,2.234,201,0.857,206,1.464,207,1.52,211,1.412,214,3.334,218,4.331,219,3.42,227,1.52,232,1.949,238,2.644,241,4.001,242,4.09,243,4.898,244,4.791,248,1.578,250,1.578,263,1.264,270,3.234,271,2.064,286,2.784,287,2.191,291,1.611,292,1.106,293,2.92,306,1.578,317,3.142,318,2.735,319,1.766,320,2.89,321,2.577,322,0.762,323,0.683,326,1.055,331,4.181,338,1.576,341,1.464,348,2.022,351,0.822,356,0.791,357,2.943,360,1.464,362,3.081,373,1.464,384,3.42,391,3.793,397,3.038,414,3.038,420,1.576,438,3.588,439,1.223,452,3.429,459,1.715,532,2.517,604,3.044,794,1.715,1169,3.793,1201,1.902,1202,4.358,1203,4.358,1204,4.358,1205,4.358,1206,2.185,1207,3.49,1208,3.49,1209,2.185,1210,2.185,1211,2.185,1212,2.185,1213,3.49,1214,2.185,1215,3.49,1216,3.49,1217,4.976,1218,2.185,1219,3.49,1220,2.185,1221,3.49,1222,2.185,1223,2.185,1224,3.49,1225,3.49,1226,2.185,1227,2.185,1228,3.49,1229,2.185,1230,3.49,1231,2.185,1232,2.185]],["title/injectables/RequestLoggingMiddleware.html",[36,1.412,135,2.92]],["body/injectables/RequestLoggingMiddleware.html",[6,3.113,7,0.014,11,0.145,12,0.157,13,0.145,15,1.757,18,0.475,19,0.699,21,1.991,27,0.798,32,0.157,33,0.092,34,0.007,35,0.007,36,1.543,37,1.503,39,0.275,40,1.433,42,0.928,45,0.516,47,1.382,48,0.806,49,1.117,52,3.127,55,0.928,56,2.617,59,2.142,61,4.418,74,3.169,78,1.33,87,1.579,88,2.841,99,3.677,133,4.224,135,3.191,144,1.118,151,1.435,152,1.865,153,1.991,154,4.197,155,1.991,156,1.991,160,3.543,201,0.87,254,1.162,265,2.965,461,1.991,470,3.191,475,3.473,478,3.543,491,1.865,502,3.191,552,3.704,554,1.314,602,1.579,821,3.677,822,1.991,836,2.142,837,4.15,838,4.15,839,4.15,840,4.15,841,3.191,842,2.332,844,3.473,845,3.473,846,4.15,848,2.586,849,2.332,850,2.332,851,4.15,852,2.586,853,2.332,854,3.473,855,2.142,856,2.142,857,3.191,858,3.473,859,2.332,860,3.473,861,2.332,862,2.142,863,4.15,865,2.332,866,2.332,867,3.473,868,2.332,869,3.473,870,2.332,871,2.332,872,2.332,873,2.586,875,2.332,877,2.332,878,2.332,879,2.332,880,2.332,881,2.332,882,2.332,883,2.332,884,2.586,892,2.332,893,2.332,894,2.332,895,3.473,896,2.332,897,2.332,1233,5.92,1234,3.851,1235,2.586,1236,2.586,1237,2.971,1238,3.851,1239,2.586,1240,2.586,1241,2.971,1242,4.425,1243,2.971,1244,2.971]],["title/injectables/ResponseLoggingMiddleware.html",[36,1.412,138,2.92]],["body/injectables/ResponseLoggingMiddleware.html",[0,1.214,6,3.118,7,0.014,11,0.146,12,0.158,13,0.146,15,1.764,18,0.459,19,0.701,21,1.998,27,0.8,32,0.158,33,0.093,34,0.007,35,0.007,36,1.547,37,1.509,39,0.276,40,1.437,42,0.932,45,0.517,47,1.386,48,0.835,49,1.12,52,3.134,55,0.932,59,2.15,61,4.422,74,3.174,78,1.332,87,1.585,88,2.843,99,3.684,103,1.166,133,3.821,138,3.199,144,1.122,151,1.44,152,1.872,153,1.998,154,4.204,155,1.998,156,1.998,157,3.483,158,2.341,159,3.483,160,3.933,194,2.815,201,0.872,254,1.166,265,2.973,461,1.998,470,3.199,475,3.483,478,3.551,502,2.15,552,3.71,554,1.318,557,1.764,602,1.585,821,3.684,822,1.998,836,2.15,837,4.159,838,4.159,839,4.159,840,4.159,841,3.199,842,2.341,844,3.483,845,3.483,846,4.159,849,2.341,850,2.341,851,3.483,853,2.341,854,3.483,855,2.15,857,3.199,858,3.483,859,2.341,860,3.483,861,2.341,862,2.15,863,3.483,865,2.341,866,2.341,867,2.341,868,2.341,869,3.483,870,2.341,871,2.341,872,2.341,875,2.341,876,2.595,877,2.341,878,2.341,879,2.341,880,2.341,881,2.341,882,2.341,883,2.341,885,2.595,886,2.595,887,2.595,888,2.595,889,2.595,890,2.595,891,2.595,892,2.341,893,2.341,894,2.341,895,2.341,896,2.341,897,2.341,1234,3.862,1235,2.595,1236,2.595,1238,3.862,1239,2.595,1240,2.595,1245,5.927,1246,2.982,1247,2.982]],["title/classes/RoleGroupMembershipEnum.html",[33,0.126,927,2.92]],["body/classes/RoleGroupMembershipEnum.html",[7,0.014,11,0.237,12,0.256,13,0.237,32,0.256,33,0.15,34,0.01,35,0.01,39,0.447,45,0.539,48,0.841,78,1.556,88,2.996,199,2.259,201,1.22,220,5.87,254,2.681,342,4.047,460,1.357,602,3.642,927,4.475,1115,6.93,1248,5.676,1249,4.207,1250,6.509,1251,7.479,1252,4.834,1253,4.834,1254,4.834]],["title/entities/SocialNetworkEntity.html",[196,0.661,300,2.542]],["body/entities/SocialNetworkEntity.html",[7,0.014,11,0.155,12,0.168,13,0.155,18,0.324,27,1.048,32,0.168,33,0.144,34,0.008,35,0.008,39,0.293,45,0.56,48,0.873,67,1.862,70,2.348,78,1.718,196,1.05,197,3.103,198,0.955,199,2.269,201,1.079,206,2.031,207,2.108,211,2.084,227,2.108,232,2.544,238,1.684,248,1.988,250,1.988,263,1.68,300,3.446,306,1.988,316,2.612,320,2.466,322,1.105,323,0.99,326,1.53,346,5.795,348,2.344,351,1.192,356,1.147,683,5.702,1168,4.779,1255,2.758,1256,5.491,1257,7.384,1258,6.433,1259,6.433,1260,4.641,1261,3.169,1262,3.169,1263,3.169,1264,3.169,1265,3.169,1266,3.169,1267,3.169,1268,3.169,1269,3.169,1270,2.758,1271,3.169,1272,6.944,1273,3.169,1274,3.169,1275,3.169,1276,2.758]],["title/entities/StripEventEntity.html",[196,0.661,684,2.714]],["body/entities/StripEventEntity.html",[7,0.014,11,0.252,12,0.273,13,0.252,18,0.36,27,0.976,32,0.273,33,0.201,34,0.011,35,0.011,39,0.477,45,0.405,48,0.633,67,1.348,78,1.468,196,1.055,198,1.554,199,2.02,201,1.389,211,2.288,254,2.017,322,2.463,323,1.611,348,2.255,507,3.123,684,4.962,685,5.075,778,2.609,1270,4.489,1277,4.489,1278,5.158,1279,4.048,1280,5.158,1281,5.158]],["title/entities/SubscriptionEntity.html",[196,0.661,687,2.152]],["body/entities/SubscriptionEntity.html",[7,0.014,11,0.123,12,0.133,13,0.123,18,0.429,27,0.877,32,0.133,33,0.121,34,0.006,35,0.006,39,0.232,45,0.573,48,0.956,49,1.551,67,1.905,70,1.268,78,1.218,101,1.403,144,2.313,196,0.634,198,0.755,199,2.303,201,0.937,206,1.601,207,1.661,211,1.882,227,1.661,232,2.593,238,1.332,248,1.725,250,1.725,254,0.98,263,1.408,278,3.44,287,1.573,292,1.967,304,2.804,306,1.725,316,2.413,318,2.441,319,2.41,320,2.066,322,0.874,323,0.783,337,1.268,348,2.144,351,0.943,356,0.908,507,3.392,532,3.11,563,1.68,604,3.251,669,3.859,671,1.967,674,3.859,680,3.859,687,2.066,747,4.146,748,4.146,753,3.871,759,3.384,760,3.384,763,3.384,770,5.056,790,2.182,791,2.182,792,2.182,794,1.967,1035,1.967,1200,4.146,1282,2.182,1283,4.764,1284,4.764,1285,4.764,1286,4.764,1287,4.764,1288,2.507,1289,2.507,1290,3.889,1291,2.507,1292,2.507,1293,2.507,1294,3.889,1295,2.507,1296,3.889,1297,2.507,1298,2.507,1299,2.182,1300,2.507,1301,3.384,1302,3.384,1303,3.889,1304,3.889,1305,3.889,1306,3.889,1307,2.507,1308,3.889,1309,2.507,1310,2.507,1311,3.889,1312,2.507,1313,3.384,1314,2.507]],["title/classes/TimestampEntityExtendEntity.html",[33,0.126,1315,3.179]],["body/classes/TimestampEntityExtendEntity.html",[7,0.014,11,0.182,12,0.197,13,0.182,18,0.259,27,1.07,32,0.197,33,0.115,34,0.009,35,0.009,39,0.343,40,1.684,45,0.557,48,0.87,55,1.874,56,4.192,67,1.568,201,1.022,206,2.016,207,2.092,227,2.092,232,2.382,244,4.355,281,5.221,316,2.445,323,1.16,460,1.042,507,3.566,554,2.873,778,2.63,832,6.17,1279,4.709,1315,4.081,1316,6.335,1317,6.335,1318,3.233,1319,6.499,1320,6.499,1321,6.499,1322,5.2,1323,3.714,1324,5.2,1325,3.714,1326,5.2,1327,5.2,1328,5.2,1329,3.714,1330,3.714,1331,3.714,1332,3.714,1333,3.714,1334,6.499,1335,5.2,1336,5.999]],["title/classes/UnauthorizedRequestException.html",[33,0.126,1337,3.179]],["body/classes/UnauthorizedRequestException.html",[7,0.013,11,0.277,12,0.3,13,0.277,18,0.395,19,1.332,32,0.3,33,0.176,34,0.011,35,0.011,42,2.3,45,0.445,460,1.589,538,3.307,776,3.639,778,3.465,779,3.912,781,3.169,821,3.554,1337,5.376,1338,5.961,1339,4.928,1340,5.663,1341,5.663,1342,5.663]],["title/controllers/UserController.html",[63,2.152,1343,2.92]],["body/controllers/UserController.html",[7,0.014,11,0.211,12,0.229,13,0.211,18,0.537,19,1.015,27,0.652,31,2.085,32,0.229,33,0.134,34,0.01,35,0.01,39,0.399,40,1.867,45,0.339,47,1.349,48,0.707,49,1.09,55,1.349,58,2.894,63,2.295,67,1.129,87,2.295,88,1.625,103,2.255,175,2.916,194,3.447,464,3.758,465,3.225,508,4.388,512,3.114,536,2.894,537,5.646,538,3.132,539,3.862,540,3.758,541,2.894,542,3.758,543,2.894,544,2.711,545,2.711,546,3.758,547,2.711,548,3.389,549,3.389,551,3.114,554,1.909,557,2.554,579,2.894,604,2.416,662,4.524,779,3.063,935,3.758,1343,4.156,1344,3.758,1345,5.016,1346,3.758,1347,5.764,1348,4.319,1349,4.319,1350,4.072,1351,3.758,1352,4.319,1353,4.319,1354,4.319,1355,4.319,1356,4.319,1357,4.319]],["title/entities/UserEntity.html",[196,0.661,532,2.049]],["body/entities/UserEntity.html",[7,0.014,11,0.114,12,0.123,13,0.114,18,0.435,27,0.351,32,0.123,33,0.141,34,0.006,35,0.006,39,0.215,45,0.563,48,0.878,49,1.503,67,1.872,70,2.295,74,1.175,78,1.575,144,2.43,175,1.175,194,1.234,196,0.598,198,1.552,201,0.892,206,1.525,207,1.582,211,1.47,227,1.582,232,2.001,238,1.947,248,1.643,250,1.643,252,2.642,253,2.642,254,2.014,263,1.327,265,3.451,266,3.189,267,4.177,275,2.455,278,2.882,280,2.167,291,2.378,293,2.455,306,1.643,316,2.345,320,2.411,322,0.81,323,0.726,334,2.876,337,1.175,348,1.796,351,0.874,356,0.841,377,1.458,378,2.848,379,1.458,382,4.482,387,3.913,507,2.633,532,1.854,557,1.374,563,3.04,568,2.848,577,3.948,586,4.177,591,2.022,593,1.557,594,1.823,604,3.488,632,3.561,635,1.823,636,2.022,682,2.022,687,2.736,688,2.022,709,3.189,742,3.189,749,3.561,778,1.175,986,3.189,1009,1.823,1019,3.189,1022,5.183,1024,3.189,1035,2.876,1170,3.948,1279,2.876,1299,2.022,1301,4.482,1302,4.482,1358,2.022,1359,4.537,1360,4.537,1361,4.537,1362,2.323,1363,2.323,1364,2.323,1365,2.323,1366,2.323,1367,2.323,1368,5.15,1369,3.664,1370,3.664,1371,3.664,1372,2.323,1373,3.664,1374,5.15,1375,5.15,1376,2.323,1377,3.664,1378,2.323,1379,3.664,1380,3.664,1381,3.664,1382,3.664,1383,3.664,1384,3.664,1385,2.323,1386,3.664,1387,2.323,1388,3.664,1389,2.323,1390,2.323,1391,2.323,1392,2.323,1393,2.323,1394,2.323,1395,3.664,1396,2.323,1397,2.022,1398,3.189,1399,2.323,1400,2.323,1401,3.664,1402,2.323,1403,3.664,1404,2.323,1405,2.323]],["title/modules/UserModule.html",[0,1.648,111,2.714]],["body/modules/UserModule.html",[0,2.516,2,2.553,3,3.285,7,0.014,8,3.88,9,3.016,10,3.016,11,0.235,12,0.255,13,0.235,17,3.88,18,0.542,19,1.13,25,3.016,31,2.985,32,0.255,33,0.149,34,0.01,35,0.01,111,5.121,122,3.465,123,2.842,514,4.458,516,3.465,528,4.182,530,2.553,532,2.431,533,4.182,617,3.772,953,5.38,956,4.182,1343,4.928,1350,4.796,1351,4.182,1406,4.182,1407,4.182,1408,4.806,1409,4.806,1410,4.806,1411,4.806,1412,6.835,1413,4.806]],["title/classes/UserNotFoundException.html",[33,0.126,1414,3.179]],["body/classes/UserNotFoundException.html",[7,0.013,11,0.277,12,0.3,13,0.277,18,0.395,19,1.332,32,0.3,33,0.176,34,0.011,35,0.011,42,2.3,45,0.445,460,1.589,538,3.307,776,3.639,778,3.465,779,3.912,781,3.169,1414,5.376,1415,5.961,1416,4.928,1417,5.663,1418,5.663,1419,4.928,1420,5.663]],["title/injectables/UserService.html",[36,1.412,1350,2.542]],["body/injectables/UserService.html",[7,0.014,11,0.23,12,0.249,13,0.23,18,0.517,19,1.104,27,0.919,32,0.249,33,0.146,34,0.01,35,0.01,36,2.123,37,2.375,39,0.434,40,1.972,42,1.466,45,0.479,47,1.902,48,0.747,49,1.537,55,1.466,58,3.146,61,2.776,87,2.494,88,2.291,103,1.836,175,3.081,194,3.591,504,3.146,508,4.382,512,3.385,516,3.385,530,2.494,547,2.946,548,3.684,549,3.684,645,6.728,1345,5.299,1346,5.299,1350,3.822,1421,4.085,1422,4.694,1423,7.594,1424,4.694,1425,4.694,1426,4.694,1427,4.694,1428,4.694]],["title/changelog.html",[1429,2.269,1430,2.269,1431,3.386]],["body/changelog.html",[7,0.012,34,0.012,35,0.012,93,4.407,198,1.842,603,5.319,1432,6.111,1433,7.167,1434,7.167,1435,6.111,1436,7.167,1437,6.111,1438,6.111,1439,6.111,1440,6.111,1441,5.319]],["title/contributing.html",[1429,2.269,1430,2.269,1442,2.947]],["body/contributing.html",[7,0.012,34,0.012,35,0.012,1442,5.638]],["title/coverage.html",[1443,4.804]],["body/coverage.html",[6,1.224,7,0.014,13,0.113,14,2.832,15,1.362,33,0.241,34,0.006,35,0.006,36,2.312,38,2.005,48,0.283,52,1.362,63,2.723,64,1.661,65,2.005,80,1.362,120,1.661,127,1.661,135,1.661,138,1.661,140,1.661,160,1.544,163,2.005,165,1.661,166,2.624,167,2.624,168,2.832,169,2.005,177,1.446,180,1.661,181,1.808,193,2.005,196,1.234,197,1.063,199,2.363,200,2.005,237,1.362,259,1.362,270,1.224,274,1.362,283,6.481,286,1.289,291,1.063,300,1.446,342,1.289,357,1.362,358,1.808,359,2.005,362,1.224,381,2.005,422,1.808,423,2.005,431,1.224,441,2.005,448,1.289,452,1.362,461,1.544,462,2.005,491,1.446,504,1.544,505,2.005,506,2.005,508,1.362,514,1.661,515,2.005,516,1.661,517,3.435,532,1.165,536,1.544,538,3,539,2.439,541,1.544,543,1.544,544,2.284,545,1.446,547,1.446,554,1.018,584,2.005,585,2.005,595,1.661,596,2.005,597,2.005,604,1.289,609,1.808,610,2.005,611,2.005,625,2.005,626,2.005,638,1.446,639,3.301,640,2.005,641,1.544,642,2.005,648,1.544,650,1.661,651,1.446,655,2.005,663,1.661,669,1.446,670,1.808,673,1.808,674,1.446,676,1.808,680,1.446,683,1.808,684,1.544,685,1.808,687,1.224,744,2.005,776,3.301,777,2.005,786,2.005,796,1.661,797,2.856,798,2.856,799,2.005,804,1.808,805,2.005,813,1.808,814,2.005,815,2.005,835,2.005,836,3.253,856,1.661,898,2.005,918,2.005,927,1.661,933,1.661,934,2.005,954,1.661,957,2.005,958,2.005,959,2.005,990,2.005,996,2.005,997,2.005,1002,1.808,1016,1.808,1017,2.005,1026,2.005,1087,2.005,1100,2.005,1114,1.808,1119,2.005,1147,2.005,1158,1.808,1159,2.005,1160,2.005,1167,2.005,1183,2.005,1201,2.005,1233,2.005,1245,2.005,1248,1.808,1249,2.005,1255,2.005,1277,2.005,1282,2.005,1315,1.808,1316,2.005,1317,2.005,1318,2.005,1337,1.808,1338,2.005,1339,2.005,1343,1.661,1344,2.005,1350,1.446,1358,2.005,1414,1.808,1415,2.005,1416,2.005,1421,2.005,1443,2.005,1444,2.005,1445,2.303,1446,2.303,1447,6.213,1448,2.303,1449,5.126,1450,7.657,1451,2.303,1452,2.303,1453,7.389,1454,2.303,1455,2.303,1456,5.582,1457,2.303,1458,2.005,1459,2.005,1460,2.005,1461,2.005,1462,2.303,1463,2.303,1464,2.303]],["title/dependencies.html",[3,2.587,1465,2.947]],["body/dependencies.html",[3,2.723,7,0.014,19,1.205,24,3.434,33,0.2,34,0.011,35,0.011,84,3.695,123,3.031,125,4.46,323,1.601,337,2.593,530,2.723,664,4.46,822,4.316,857,3.695,942,3.434,1092,4.46,1397,4.46,1398,4.46,1466,7.043,1467,6.44,1468,5.125,1469,5.125,1470,5.125,1471,5.125,1472,5.125,1473,5.125,1474,5.125,1475,5.125,1476,5.125,1477,5.125,1478,5.125,1479,5.125,1480,5.125,1481,5.125,1482,5.125,1483,5.125,1484,5.125,1485,5.125,1486,5.125,1487,5.125,1488,5.125,1489,5.125,1490,5.125]],["title/miscellaneous/enumerations.html",[1491,1.895,1492,4.238]],["body/miscellaneous/enumerations.html",[7,0.014,14,2.88,27,0.471,34,0.008,35,0.008,39,0.288,47,0.975,101,2.567,199,2.26,220,2.449,225,3.993,226,3.993,310,3.993,312,3.993,314,3.993,328,3.601,330,3.993,331,3.308,339,3.993,360,3.074,370,3.993,387,1.958,393,3.993,478,3.074,507,2.028,568,1.958,586,2.091,602,4.412,604,1.746,632,3.601,635,2.449,783,4.271,784,4.271,823,3.993,855,2.25,1010,3.601,1078,3.993,1114,3.601,1248,2.449,1250,4.736,1276,3.993,1313,3.993,1419,3.993,1491,1.746,1492,2.716,1493,3.12,1494,4.588,1495,3.12,1496,3.12,1497,4.588,1498,5.441,1499,4.588,1500,4.588,1501,4.588,1502,4.588,1503,3.12,1504,6.685,1505,3.12,1506,3.12,1507,4.588,1508,5.441,1509,4.588,1510,4.588,1511,4.588,1512,4.588,1513,3.12,1514,3.12,1515,3.12,1516,3.12,1517,3.12,1518,3.12,1519,3.12,1520,3.12,1521,3.12,1522,3.12,1523,3.12,1524,4.588,1525,5.999,1526,4.588,1527,5.999,1528,4.588,1529,4.588,1530,4.588,1531,4.588,1532,3.12,1533,4.588,1534,4.588,1535,4.588,1536,3.12,1537,4.588,1538,4.588,1539,3.12,1540,4.588,1541,4.588,1542,4.588,1543,5.441,1544,5.999,1545,4.588,1546,4.588,1547,4.588,1548,4.588,1549,4.588,1550,4.588]],["title/miscellaneous/functions.html",[1491,1.895,1551,4.238]],["body/miscellaneous/functions.html",[7,0.013,34,0.012,35,0.012,39,0.576,55,1.946,175,3.151,1458,5.421,1459,6.671,1491,3.486,1551,5.421,1552,6.229]],["title/index.html",[39,0.313,1429,2.269,1430,2.269]],["body/index.html",[3,3.586,7,0.011,20,4.866,34,0.011,35,0.011,70,2.796,152,3.469,328,4.338,1441,4.81,1444,4.81,1553,5.527,1554,5.527,1555,5.527,1556,5.527,1557,5.527,1558,5.527,1559,5.527,1560,5.527,1561,5.527,1562,5.527,1563,5.527,1564,5.527,1565,5.527,1566,5.527,1567,7.781,1568,5.527,1569,6.749,1570,5.527,1571,5.527,1572,5.527,1573,5.527,1574,5.527,1575,5.527,1576,5.527,1577,7.286,1578,5.527,1579,5.527,1580,5.527]],["title/license.html",[1429,2.269,1430,2.269,1581,2.947]],["body/license.html",[7,0.012,34,0.012,35,0.012]],["title/modules.html",[2,2.933]],["body/modules.html",[1,3.89,2,3.084,7,0.011,34,0.011,35,0.011,105,3.89,109,3.89,110,3.89,111,3.89,185,4.185,991,5.052,1582,7.887,1583,7.887,1584,7.887,1585,8.007,1586,5.805]],["title/overview.html",[1587,4.804]],["body/overview.html",[1,4.975,2,2.509,3,3.248,4,4.109,5,4.109,6,3.808,7,0.013,8,3.837,9,2.964,10,2.964,31,2.28,34,0.01,35,0.01,37,2.389,80,4.008,105,5.5,106,4.109,107,4.109,108,4.109,109,4.542,110,4.975,111,4.975,177,4.254,185,5.484,186,4.109,188,4.109,198,1.423,460,1.325,638,4.254,948,4.109,949,4.109,1020,4.109,1350,4.254,1406,4.109,1407,4.109,1587,4.109,1588,4.721,1589,4.721,1590,4.721,1591,4.721]],["title/properties.html",[201,0.957,1465,2.947]],["body/properties.html",[7,0.013,34,0.012,35,0.012,70,3.151,93,4.491,201,1.225,862,4.491,1148,5.421,1581,5.421,1592,6.229]],["title/todo.html",[1429,2.269,1430,2.269,1593,3.386]],["body/todo.html",[7,0.012,34,0.012,35,0.012]],["title/miscellaneous/typealiases.html",[1491,1.895,1594,4.869]],["body/miscellaneous/typealiases.html",[7,0.012,34,0.012,35,0.012,39,0.567,48,0.752,538,2.962,544,3.851,545,4.509,776,3.259,1002,5.638,1007,6.252,1008,5.339,1491,3.433,1595,6.135,1596,6.135]],["title/miscellaneous/variables.html",[1491,1.895,1597,4.238]],["body/miscellaneous/variables.html",[7,0.014,11,0.27,34,0.011,35,0.011,39,0.509,254,2.155,554,2.435,602,2.927,663,4.856,1460,4.794,1461,5.862,1491,3.082,1597,4.794,1598,5.509,1599,5.509,1600,6.735,1601,5.509,1602,5.509,1603,5.509,1604,5.509,1605,5.509,1606,5.509,1607,5.509,1608,5.509,1609,5.509,1610,5.509,1611,5.509,1612,5.509,1613,5.509,1614,5.509,1615,5.509,1616,5.509,1617,5.509,1618,5.509,1619,5.509]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":283,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"coverage.html":{}}}],["0.0.1",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":995,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1244,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["1/1",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1405,"title":{},"body":{"entities/UserEntity.html":{}}}],["100",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":981,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["19",{"_index":1589,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":591,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/UserEntity.html":{}}}],["20)@column({unique",{"_index":1392,"title":{},"body":{"entities/UserEntity.html":{}}}],["200",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["2023",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1591,"title":{},"body":{"overview.html":{}}}],["255",{"_index":1077,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":1042,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["3.8.2",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":917,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":912,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":985,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":980,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["300mb",{"_index":976,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3201",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":1020,"title":{},"body":{"classes/InvalidPasswordException.html":{},"overview.html":{}}}],["4.6.2",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":990,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["500000",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":698,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1588,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1590,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":348,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":1401,"title":{},"body":{"entities/UserEntity.html":{}}}],["action",{"_index":598,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["active",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":624,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["address",{"_index":382,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["admin",{"_index":1250,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["agent",{"_index":867,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent'].split('(')[1].split(')')[0].split",{"_index":1243,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":1595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":983,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["already",{"_index":783,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":1027,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":1560,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":20,"title":{},"body":{"modules/ApiLogModule.html":{},"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"index.html":{}}}],["api.log",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/entities",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":689,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["api_log",{"_index":28,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["api_mail",{"_index":30,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["api_name",{"_index":837,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api_type",{"_index":838,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api_version",{"_index":839,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apidescription",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apigroup",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apiloggerservice",{"_index":844,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":1,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":6,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{},"overview.html":{}}}],["apiname",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["apiproperty",{"_index":476,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiproperty({enum",{"_index":479,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiproperty({nullable",{"_index":489,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":483,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apiresponse",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apisuccess",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apitags('healthcheck",{"_index":946,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["apitype",{"_index":463,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":478,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":851,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apiversion",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["app",{"_index":178,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":64,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":105,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":80,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":165,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":185,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":177,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":1093,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":818,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":1557,"title":{},"body":{"index.html":{}}}],["array",{"_index":253,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":194,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["author",{"_index":1148,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["available",{"_index":991,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":557,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{}}}],["banner_url",{"_index":383,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":384,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":1279,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":1398,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["bcrypt.hash(password",{"_index":1404,"title":{},"body":{"entities/UserEntity.html":{}}}],["before",{"_index":1371,"title":{},"body":{"entities/UserEntity.html":{}}}],["beforeinsert",{"_index":1395,"title":{},"body":{"entities/UserEntity.html":{}}}],["birthday",{"_index":202,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":464,"title":{},"body":{"classes/CreateLogDto.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":265,"title":{},"body":{"entities/CardEntity.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":1459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":1555,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1585,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1582,"title":{},"body":{"modules.html":{}}}],["canceled",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":331,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":326,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":423,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"coverage.html":{}}}],["card.entity.ts:27",{"_index":436,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":433,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":428,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":430,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":434,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":437,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":435,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":329,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":1504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":1221,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":1224,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":1231,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":197,"title":{"entities/CardEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["cardentity.connectedcardone",{"_index":427,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":429,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":920,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":1128,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":1149,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":1171,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":1260,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":424,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":425,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":1120,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cards",{"_index":1168,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":241,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["catch",{"_index":579,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["catch(exception",{"_index":817,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["category",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":1431,"title":{"changelog.html":{}},"body":{}}],["character",{"_index":1384,"title":{},"body":{"entities/UserEntity.html":{}}}],["characters",{"_index":1021,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["check",{"_index":936,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":952,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":934,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:27",{"_index":939,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":950,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":650,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check.query.ts",{"_index":958,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check.response",{"_index":653,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":997,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check.response.ts:3",{"_index":1000,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":1001,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":944,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":642,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":647,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":646,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":959,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check/cqrs/query/health",{"_index":957,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check/custom",{"_index":640,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check/domain/response/health",{"_index":996,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check/health",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["checkhealth",{"_index":643,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":385,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["class",{"_index":33,"title":{"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/NoUserTraceException.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdesc",{"_index":1269,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":460,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/NoUserTraceException.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"overview.html":{}}}],["cleardatabasetest",{"_index":170,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":50,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{}}}],["client_address",{"_index":1040,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":1044,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":1046,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":1028,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":1029,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":44,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{}}}],["clientsmodule",{"_index":22,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["clientsmodule.register",{"_index":26,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["clientvatnumber",{"_index":1030,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilogmodule",{"_index":4,"title":{},"body":{"modules/ApiLogModule.html":{},"overview.html":{}}}],["cluster_apilogmodule_providers",{"_index":5,"title":{},"body":{"modules/ApiLogModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":186,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":187,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":188,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":948,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":949,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1406,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1407,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":623,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["code.entity",{"_index":671,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["code.entity.ts",{"_index":744,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["code.entity.ts:21",{"_index":762,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":758,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":756,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":764,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":761,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":769,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":766,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":751,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":767,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":752,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["column",{"_index":316,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":252,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@length(5",{"_index":1391,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":266,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":753,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":233,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{}}}],["column({type",{"_index":281,"title":{},"body":{"entities/CardEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":1299,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":528,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createuserdto",{"_index":555,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.email",{"_index":566,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":570,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command/create",{"_index":531,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandbus",{"_index":1423,"title":{},"body":{"injectables/UserService.html":{}}}],["commandhandler",{"_index":529,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":550,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["communicate",{"_index":339,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":1169,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":360,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":363,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":373,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company_account",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":1048,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_name",{"_index":1050,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":1052,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":1031,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":1207,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":1208,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":357,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyemployeeentity.company",{"_index":405,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyentity",{"_index":362,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyentity.bannerpicture",{"_index":1130,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":1173,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":1219,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":1132,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":1121,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":203,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":1122,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyvatnumber",{"_index":1032,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":1570,"title":{},"body":{"index.html":{}}}],["config/winston",{"_index":807,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["configmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":1368,"title":{},"body":{"entities/UserEntity.html":{}}}],["connect",{"_index":742,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":325,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":440,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":239,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":240,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":246,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":237,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"coverage.html":{}}}],["connectedcardentity.conversation",{"_index":443,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":204,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardtwo",{"_index":205,"title":{},"body":{"entities/CardEntity.html":{}}}],["const",{"_index":552,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constraintmap",{"_index":1007,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":1012,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":1015,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":60,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["constructor(apiloggerservice",{"_index":842,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(client",{"_index":43,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{}}}],["constructor(commandbus",{"_index":1422,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":509,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(errors",{"_index":1003,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(healthcheckservice",{"_index":961,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":999,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(localisation",{"_index":801,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["constructor(module",{"_index":600,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["constructor(partial",{"_index":377,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":513,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/HealthCheckResponse.html":{}}}],["constructor(querybus",{"_index":644,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(userrepository",{"_index":521,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["consumer",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":1019,"title":{},"body":{"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{}}}],["content",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{}}}],["contributing",{"_index":1442,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":1554,"title":{},"body":{"index.html":{}}}],["controller",{"_index":63,"title":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('health",{"_index":945,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('user",{"_index":1352,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":31,"title":{},"body":{"modules/ApiLogModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":426,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{}}}],["conversation.entity",{"_index":439,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":1100,"title":{},"body":{"entities/JoinedConversation.html":{},"coverage.html":{}}}],["conversation.entity.ts:21",{"_index":1106,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":1109,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":1108,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":1103,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":1104,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":1110,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":1105,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":905,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":1113,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":1102,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":1152,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":431,"title":{"entities/ConversationEntity.html":{}},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["conversations",{"_index":899,"title":{},"body":{"entities/GroupEntity.html":{}}}],["country",{"_index":386,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["coverage",{"_index":1443,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs/command/create",{"_index":1426,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/handler/command/create",{"_index":1410,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":955,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/health",{"_index":649,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":953,"title":{},"body":{"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":603,"title":{},"body":{"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/card.entity",{"_index":666,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/card.entity.ts",{"_index":200,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["create/card.entity.ts:100",{"_index":247,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":298,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":290,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":262,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":273,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":277,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":302,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":305,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":315,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":311,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":313,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":249,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":307,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":251,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":264,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":299,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":268,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":258,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":269,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":236,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":296,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":257,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":309,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":234,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":279,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":285,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":284,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":303,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":295,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":245,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":358,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/company.entity",{"_index":667,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/company.entity.ts",{"_index":381,"title":{},"body":{"entities/CompanyEntity.html":{},"coverage.html":{}}}],["create/company.entity.ts:100",{"_index":417,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:103",{"_index":402,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:32",{"_index":407,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:35",{"_index":408,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:38",{"_index":416,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:41",{"_index":396,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:44",{"_index":403,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:47",{"_index":418,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:50",{"_index":395,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:53",{"_index":419,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:56",{"_index":399,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:59",{"_index":400,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:62",{"_index":413,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:65",{"_index":404,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:72",{"_index":406,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:76",{"_index":410,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:79",{"_index":412,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:85",{"_index":415,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:91",{"_index":398,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":401,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":422,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/conversation.entity",{"_index":668,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":441,"title":{},"body":{"entities/ConversationEntity.html":{},"coverage.html":{}}}],["create/conversation.entity.ts:23",{"_index":451,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:26",{"_index":445,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:32",{"_index":444,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:35",{"_index":450,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:38",{"_index":456,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:41",{"_index":454,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:48",{"_index":446,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:51",{"_index":457,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:54",{"_index":447,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":670,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["create/entities",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/role",{"_index":1248,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/user",{"_index":635,"title":{},"body":{"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":673,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["create/group.entity",{"_index":672,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":898,"title":{},"body":{"entities/GroupEntity.html":{},"coverage.html":{}}}],["create/group.entity.ts:24",{"_index":909,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":913,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":911,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":906,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":915,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":904,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":907,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":916,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":908,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":675,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":1026,"title":{},"body":{"entities/InvoicesEntity.html":{},"coverage.html":{}}}],["create/invoices.entity.ts:103",{"_index":1065,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":1054,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":1073,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":1056,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":1061,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":1039,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":1055,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":1063,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":1051,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":1049,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":1053,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":1045,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":1043,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":1047,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":1057,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":1068,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":1072,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":1070,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":1060,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":676,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"coverage.html":{}}}],["create/media.entity",{"_index":677,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/media.entity.ts",{"_index":1119,"title":{},"body":{"entities/MediaEntity.html":{},"coverage.html":{}}}],["create/media.entity.ts:22",{"_index":1140,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":1141,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":1139,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":1137,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":1145,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":1143,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":1129,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":1133,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":1131,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":1134,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":1146,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":1135,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":678,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":1147,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["create/message.entity.ts:20",{"_index":1156,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":1151,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":1150,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":1153,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":1154,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":1157,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":1155,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/occupation.entity",{"_index":679,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/occupation.entity.ts",{"_index":1167,"title":{},"body":{"entities/OccupationEntity.html":{},"coverage.html":{}}}],["create/occupation.entity.ts:21",{"_index":1177,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":1178,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":1180,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":1174,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":1172,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":1175,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":1181,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":1176,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":681,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":1183,"title":{},"body":{"entities/PlanEntity.html":{},"coverage.html":{}}}],["create/plan.entity.ts:19",{"_index":1194,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":1195,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":1189,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":1196,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":1193,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":1192,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":1198,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":1187,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":1199,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":1188,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/profile.entity",{"_index":682,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/profile.entity.ts",{"_index":1201,"title":{},"body":{"entities/ProfileEntity.html":{},"coverage.html":{}}}],["create/profile.entity.ts:100",{"_index":1220,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:107",{"_index":1210,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:110",{"_index":1227,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:113",{"_index":1211,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:28",{"_index":1212,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:35",{"_index":1229,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:41",{"_index":1222,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:56",{"_index":1226,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:70",{"_index":1218,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:76",{"_index":1209,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:82",{"_index":1223,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:88",{"_index":1206,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:94",{"_index":1214,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/social",{"_index":683,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["create/strip",{"_index":685,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["create/subscription.entity",{"_index":688,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":1282,"title":{},"body":{"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["create/subscription.entity.ts:25",{"_index":1293,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":1298,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":1292,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":1300,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":1309,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":1307,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":1297,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":1312,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":1295,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":1291,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":1288,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":1310,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":1289,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created_at",{"_index":1322,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":206,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":248,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createlog",{"_index":41,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":51,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogdto",{"_index":52,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["createlogdto.apiname",{"_index":871,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apitype",{"_index":875,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":872,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.body",{"_index":883,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":891,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":881,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":893,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":873,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":877,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":892,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":895,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":889,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":887,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":879,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":896,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":885,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createtimestamp",{"_index":1319,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":656,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1345,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":1353,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":1346,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":504,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(createuserdto",{"_index":1428,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":514,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":508,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserevent",{"_index":595,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["createusereventhandler",{"_index":609,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["createuserresponse",{"_index":547,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1273,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["ctx",{"_index":824,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":827,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":826,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":1033,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current_timestamp",{"_index":1328,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["custom",{"_index":943,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":805,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":799,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":802,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:2",{"_index":803,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":1304,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":638,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":173,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{}}}],["databaseconfiguration",{"_index":120,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":232,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["date'})@isdate",{"_index":760,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":833,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":1334,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["david",{"_index":1558,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decimal",{"_index":1058,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":1067,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":254,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1256,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":45,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["deleted_at",{"_index":1324,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":207,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":250,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletetimestamp",{"_index":1320,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletion",{"_index":1275,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":729,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":869,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":790,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":754,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":773,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":757,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":745,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":669,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["discountcodeentity.subscriptions",{"_index":1290,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcodes",{"_index":1283,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":1190,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":1184,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":746,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":987,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":965,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":1569,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1444,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:serveapplication",{"_index":1580,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":58,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/entities/user.entity",{"_index":533,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["domain/response/create",{"_index":548,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":652,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["duplicate_category_name",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicateemailexception",{"_index":541,"title":{"classes/DuplicateEmailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":536,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["duration",{"_index":1185,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e2e.controller",{"_index":190,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":169,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:11",{"_index":174,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":189,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":179,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":193,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:5",{"_index":195,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":256,"title":{},"body":{"entities/CardEntity.html":{}}}],["email",{"_index":387,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["email.exception",{"_index":542,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["email.exception.ts",{"_index":777,"title":{},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["email.exception.ts:3",{"_index":780,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["emails",{"_index":208,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":420,"title":{},"body":{"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":359,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"coverage.html":{}}}],["employee.entity.ts:27",{"_index":367,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":371,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":364,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":369,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":365,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":372,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":366,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":375,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":388,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["end_date",{"_index":759,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":747,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":198,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":637,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["entitiestomovemodule",{"_index":109,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":196,"title":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('company_employee",{"_index":376,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":1076,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":1182,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity.exception",{"_index":546,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["entity.exception.ts",{"_index":1002,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":1005,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":1318,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":1325,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":1330,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":1332,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":1331,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":1323,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":1329,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":718,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":1317,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":706,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":304,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":501,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":503,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/role",{"_index":374,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["enum/transferable",{"_index":345,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":333,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/who",{"_index":327,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":1492,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":182,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":1087,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":1094,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":167,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["err",{"_index":556,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["err.length",{"_index":559,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["error",{"_index":465,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"controllers/UserController.html":{}}}],["error('error",{"_index":581,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["error('node_env",{"_index":743,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error.constraints",{"_index":1013,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.message",{"_index":583,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["error.message.split(':')[0",{"_index":1355,"title":{},"body":{"controllers/UserController.html":{}}}],["error.message.split(':')[1",{"_index":1356,"title":{},"body":{"controllers/UserController.html":{}}}],["error.status",{"_index":1357,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":796,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorcustomeventhandler",{"_index":804,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":813,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errorloggingmiddleware",{"_index":140,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":1006,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":1011,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":1236,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1095,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":617,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"modules/UserModule.html":{}}}],["event.entity",{"_index":686,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":1277,"title":{},"body":{"entities/StripEventEntity.html":{},"coverage.html":{}}}],["event.entity.ts:16",{"_index":1278,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event/create",{"_index":619,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventbus",{"_index":966,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["eventshandler",{"_index":618,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":620,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":808,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["example",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["exceed",{"_index":989,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":820,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":815,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":819,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":828,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":539,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":544,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/no",{"_index":1159,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":1338,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":1415,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":816,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":1375,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":520,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["execute(command",{"_index":526,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["executing",{"_index":582,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["exists",{"_index":784,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":32,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["express",{"_index":822,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":778,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["extra",{"_index":703,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["failed",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":267,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["false})@exclude()@matches(/^(?=.*\\d)(?=.*[a",{"_index":1378,"title":{},"body":{"entities/UserEntity.html":{}}}],["features",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filename",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":209,"title":{},"body":{"entities/CardEntity.html":{}}}],["flag",{"_index":1301,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["float",{"_index":1191,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1419,"title":{},"body":{"classes/UserNotFoundException.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception.ts",{"_index":1416,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":1417,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":1085,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["function",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":1551,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":937,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/api/test/clear",{"_index":183,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1429,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["google",{"_index":1374,"title":{},"body":{"entities/UserEntity.html":{}}}],["graph",{"_index":1586,"title":{},"body":{"modules.html":{}}}],["group",{"_index":342,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["group.bannerpicture",{"_index":1136,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":458,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":1138,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":931,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":1123,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":448,"title":{"entities/GroupEntity.html":{}},"body":{"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"coverage.html":{}}}],["groupentity.conversations",{"_index":449,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":924,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":260,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":261,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":910,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":259,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["groupmemberships",{"_index":210,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":1124,"title":{},"body":{"entities/MediaEntity.html":{}}}],["handle",{"_index":613,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handle(event",{"_index":615,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler",{"_index":956,"title":{},"body":{"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":517,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["handler.ts:12",{"_index":616,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["handler.ts:13",{"_index":523,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":967,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:16",{"_index":525,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:19",{"_index":527,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:22",{"_index":968,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:7",{"_index":614,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["handler.ts:8",{"_index":806,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler/error",{"_index":798,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["handlers",{"_index":1412,"title":{},"body":{"modules/UserModule.html":{}}}],["headers",{"_index":466,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["health",{"_index":641,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheck",{"_index":940,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":933,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckmodule",{"_index":110,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":648,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckqueryhandler",{"_index":954,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckresponse",{"_index":651,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["healthcheckresult",{"_index":941,"title":{},"body":{"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":962,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":971,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":979,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":998,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":1559,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":694,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":825,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":538,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["httpexception",{"_index":779,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":1098,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus",{"_index":781,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":785,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["httpstatus.forbidden",{"_index":1099,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":829,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":1420,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["httpstatus.unauthorized",{"_index":1342,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":518,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["icon",{"_index":1258,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":211,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":612,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["ignore",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["inactive",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1302,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":332,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":1081,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":57,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{}}}],["inject('api_log_service",{"_index":621,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["injectable",{"_index":36,"title":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":37,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":534,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["injectrepository(userentity",{"_index":524,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["installation",{"_index":1575,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1576,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":580,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{}}}],["int",{"_index":774,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":755,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":282,"title":{},"body":{"entities/CardEntity.html":{}}}],["invalid",{"_index":1010,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidparameterentityexception",{"_index":543,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["invalidparameterentityexception(err",{"_index":561,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["invalidpasswordexception",{"_index":1016,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["inversejoincolumn",{"_index":1217,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":1062,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":1034,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":1284,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":791,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":674,"title":{"entities/InvoicesEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["invoicesentity.subscription",{"_index":1294,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["ip",{"_index":467,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":960,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["is_not_transferable",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_transferable",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isdate",{"_index":770,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isemail",{"_index":334,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"entities/UserEntity.html":{}}}],["isemail()@column({unique",{"_index":1364,"title":{},"body":{"entities/UserEntity.html":{}}}],["isemailconfirmed",{"_index":1359,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":1080,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":589,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isnotempty()@length(5",{"_index":590,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":771,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isownerpro",{"_index":212,"title":{},"body":{"entities/CardEntity.html":{}}}],["isregisteredwithgoogle",{"_index":1360,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":1074,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["istestenvironmentpipe",{"_index":180,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":172,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":335,"title":{},"body":{"entities/CardEntity.html":{}}}],["jest",{"_index":1572,"title":{},"body":{"index.html":{}}}],["join",{"_index":660,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":705,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["joincolumn",{"_index":438,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":459,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["joined_conversation",{"_index":1111,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":452,"title":{"entities/JoinedConversation.html":{}},"body":{"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["joinedconversation.conversation",{"_index":453,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":1213,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversations",{"_index":1202,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":442,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":317,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":484,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwttoken",{"_index":1361,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":1125,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":1084,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["lastname",{"_index":213,"title":{},"body":{"entities/CardEntity.html":{}}}],["length",{"_index":593,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["length(5",{"_index":594,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/UserEntity.html":{}}}],["letter",{"_index":1024,"title":{},"body":{"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{}}}],["libraries",{"_index":1565,"title":{},"body":{"index.html":{}}}],["license",{"_index":1581,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["localisation",{"_index":800,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["log",{"_index":54,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{}}}],["log.dto",{"_index":59,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":462,"title":{},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:10",{"_index":492,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:13",{"_index":481,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:16",{"_index":480,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:19",{"_index":493,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:22",{"_index":498,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:25",{"_index":488,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:28",{"_index":485,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:31",{"_index":500,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:34",{"_index":497,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:37",{"_index":496,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:40",{"_index":487,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:43",{"_index":494,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:46",{"_index":495,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:49",{"_index":499,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:52",{"_index":490,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:7",{"_index":477,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.enum.ts",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["log.module.ts",{"_index":16,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":21,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.service.ts",{"_index":38,"title":{},"body":{"injectables/ApiLogService.html":{},"coverage.html":{}}}],["log.service.ts:6",{"_index":46,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":53,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":15,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/dto/create",{"_index":461,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/api",{"_index":855,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":856,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/status",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger",{"_index":663,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger(event.localisation",{"_index":810,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.config",{"_index":665,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["logger.config.ts",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":739,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":738,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error(event",{"_index":812,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.info('node_env",{"_index":692,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":809,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger_console.error(event.error",{"_index":811,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logging",{"_index":709,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":836,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["logging.middleware.ts:10",{"_index":1247,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":850,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":853,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:13",{"_index":852,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:14",{"_index":1234,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:15",{"_index":843,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:22",{"_index":848,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:23",{"_index":1246,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["loggingtype",{"_index":468,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":491,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["loggingtypeenum.error",{"_index":874,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":1241,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logs",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowercase",{"_index":1025,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":1561,"title":{},"body":{"index.html":{}}}],["mail_api",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":318,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":287,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":319,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":292,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["matches",{"_index":1396,"title":{},"body":{"entities/UserEntity.html":{}}}],["matches(/^(?=.*\\d)(?=.*[a",{"_index":1399,"title":{},"body":{"entities/UserEntity.html":{}}}],["matching",{"_index":35,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":336,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxlength(255",{"_index":349,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":214,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":272,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":341,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.groupbannerpicture",{"_index":902,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":914,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":397,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":414,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":270,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["member",{"_index":1251,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":1270,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":900,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":343,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":918,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["membership.entity.ts:17",{"_index":926,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":928,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":921,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":925,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":922,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":929,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":923,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":930,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":1249,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["membership.enum.ts:2",{"_index":1253,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":1252,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":1254,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":977,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":964,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":275,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/MessageEntity.html":{},"entities/UserEntity.html":{}}}],["message.author",{"_index":276,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":455,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":344,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":274,"title":{"entities/MessageEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["messages",{"_index":215,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":1092,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":469,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["methods",{"_index":40,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1491,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"classes/CreateUserEvent.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"modules/HealthCheckModule.html":{},"injectables/ResponseLoggingMiddleware.html":{},"modules/UserModule.html":{}}}],["module:entities",{"_index":1271,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":975,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":789,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":1163,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/cqrs",{"_index":530,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEventHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":24,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"classes/CreateUserEventHandler.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":942,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":854,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1257,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":347,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":1255,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["network.entity.ts:34",{"_index":1265,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":1266,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":1268,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":1264,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":1261,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":1262,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":1267,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":1263,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":1091,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":554,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":553,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["next",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":847,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":1566,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1571,"title":{},"body":{"index.html":{}}}],["not_diffusible",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":216,"title":{},"body":{"entities/CardEntity.html":{}}}],["nousertraceexception",{"_index":1158,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":1567,"title":{},"body":{"index.html":{}}}],["null",{"_index":244,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["null'})@joincolumn",{"_index":903,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":289,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":1216,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":278,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/OccupationEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":280,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["numberofshares",{"_index":217,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":482,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["object.assign(this",{"_index":379,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{}}}],["object.keys(constraints).map(key",{"_index":1014,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":218,"title":{},"body":{"entities/CardEntity.html":{},"entities/ProfileEntity.html":{}}}],["occupation.cards",{"_index":288,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":338,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["occupation.profiles",{"_index":1215,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":1232,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":286,"title":{"entities/OccupationEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["occupationentity.companies",{"_index":421,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":409,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupations",{"_index":219,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["occurred",{"_index":740,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["ondelete",{"_index":242,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":1022,"title":{},"body":{"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{}}}],["onetomany",{"_index":320,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":238,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":321,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["onetoone(undefined",{"_index":271,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":1327,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":49,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/SubscriptionEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["options",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["organisation",{"_index":1563,"title":{},"body":{"index.html":{}}}],["os",{"_index":470,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1587,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":220,"title":{},"body":{"entities/CardEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["ownercompanies",{"_index":1203,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":389,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":1465,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["parameter",{"_index":545,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":732,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":714,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":697,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":723,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":378,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{}}}],["password",{"_index":586,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["password.exception.ts",{"_index":1017,"title":{},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":1018,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["path",{"_index":661,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["paymententity",{"_index":1280,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":1204,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":390,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":221,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":901,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipetransform",{"_index":1088,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plan",{"_index":1200,"title":{},"body":{"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":792,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":680,"title":{"entities/PlanEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["planentity.subscriptions",{"_index":1296,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["platform",{"_index":471,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["port",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["post",{"_index":1349,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/create",{"_index":1347,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":693,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgresql",{"_index":1568,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1083,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":711,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":935,"title":{},"body":{"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":1574,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":1369,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":1186,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":322,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":263,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":61,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}}}],["process",{"_index":662,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{},"controllers/UserController.html":{}}}],["process.env.api_name",{"_index":859,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.api_version",{"_index":861,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.node_env",{"_index":690,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":735,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":717,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":701,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":726,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":730,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":712,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":695,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":721,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":736,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":720,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":710,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":728,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":734,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":716,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":700,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":725,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":731,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":713,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":696,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":722,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":737,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":719,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":708,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":727,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":733,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":715,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":699,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":724,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1235,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":864,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["prod",{"_index":691,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":293,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["profile.companies",{"_index":368,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.entity",{"_index":324,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{}}}],["profile.personalcards",{"_index":294,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.savedcard",{"_index":297,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.user",{"_index":1386,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile_id",{"_index":1230,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profileentity",{"_index":291,"title":{"entities/ProfileEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["profileentity.bannerpicture",{"_index":1142,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":1112,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":1107,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.occupations",{"_index":1179,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":411,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":1144,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":1126,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":1127,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profilepicture",{"_index":391,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profiles",{"_index":1170,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profileswhosavedcard",{"_index":222,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":1441,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":175,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":201,"title":{"properties.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["property",{"_index":1272,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":1166,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["providers",{"_index":17,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":507,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/ErrorCustomEvent.html":{},"classes/HealthCheckResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":1413,"title":{},"body":{"modules/UserModule.html":{}}}],["query/health",{"_index":970,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybus",{"_index":645,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":969,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":972,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckResponse.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":1008,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["reflect",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["refunded",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["registered",{"_index":1373,"title":{},"body":{"entities/UserEntity.html":{}}}],["rejected",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":704,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":351,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["repository",{"_index":522,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["req",{"_index":849,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.baseurl",{"_index":880,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":884,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":882,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":1238,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":1242,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":894,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":878,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["request",{"_index":821,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts",{"_index":1339,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":1340,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.url",{"_index":834,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["requestloggingmiddleware",{"_index":135,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["res",{"_index":846,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":888,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":890,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":886,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["response.status(httpstatus).json",{"_index":830,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["responsebody",{"_index":472,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":473,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":138,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["rest",{"_index":1562,"title":{},"body":{"index.html":{}}}],["results",{"_index":34,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":919,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["role.enum",{"_index":636,"title":{},"body":{"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{}}}],["role.enum.ts",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum",{"_index":370,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":380,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":927,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["rolegroupmembershipenum.member",{"_index":932,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roles",{"_index":361,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserResponse.html":{}}}],["route",{"_index":474,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["rss",{"_index":982,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":1577,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":1161,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":1225,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":1205,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["saveduser",{"_index":572,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.email",{"_index":576,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":574,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":575,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.userroles",{"_index":578,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["screensize",{"_index":475,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["see",{"_index":330,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1377,"title":{},"body":{"entities/UserEntity.html":{}}}],["service",{"_index":795,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":243,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["setpassword(password",{"_index":1402,"title":{},"body":{"entities/UserEntity.html":{}}}],["share",{"_index":328,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["siret",{"_index":392,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":1239,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":1240,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":346,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":1276,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":223,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":224,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":301,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":300,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["socketid",{"_index":1101,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["space",{"_index":992,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["special",{"_index":1383,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/.../api",{"_index":1493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../errorenum.ts",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":1596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":1503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":14,"title":{},"body":{"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/entities",{"_index":199,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":639,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/create",{"_index":505,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/create",{"_index":596,"title":{},"body":{"classes/CreateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":515,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":610,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/create",{"_index":584,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":1358,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts:33",{"_index":1366,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:37",{"_index":1365,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:42",{"_index":1393,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:53",{"_index":1385,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:61",{"_index":1367,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:64",{"_index":1376,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:71",{"_index":1372,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:74",{"_index":1394,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:81",{"_index":1387,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:84",{"_index":1389,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:90",{"_index":1362,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:93",{"_index":1390,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:96",{"_index":1363,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/response/create",{"_index":625,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["src/api/user/user.controller.ts",{"_index":1344,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/api/user/user.controller.ts:15",{"_index":1348,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.module.ts",{"_index":1408,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":1421,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/api/user/user.service.ts:11",{"_index":1425,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:8",{"_index":1424,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app.controller.ts",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:31",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":191,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:38",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":164,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":835,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/request",{"_index":1233,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/response",{"_index":1245,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts",{"_index":655,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:28",{"_index":657,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":776,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":797,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":814,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":1316,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/pipe/is",{"_index":181,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":702,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":763,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":748,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":1430,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":1578,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1115,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":831,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":1078,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":1079,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":1313,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":1314,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":988,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["string",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["strip",{"_index":793,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":1281,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":1285,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":1303,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":684,"title":{"entities/StripEventEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["subscription",{"_index":1035,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":772,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["subscription.enum.ts",{"_index":1502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":1388,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":687,"title":{"entities/SubscriptionEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["subscriptionentity.discountcodes",{"_index":775,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":765,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":1086,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":1064,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":1197,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptions",{"_index":749,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["super",{"_index":1009,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{}}}],["super('email",{"_index":782,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["super('unauthorized",{"_index":1341,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":1418,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":788,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":1164,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super_admin",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":1573,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":1082,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":1583,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1584,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":707,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["tax_rate",{"_index":1066,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":1036,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["terminusmodule",{"_index":951,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":168,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["test/test",{"_index":166,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["testapi",{"_index":1579,"title":{},"body":{"index.html":{}}}],["text",{"_index":486,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["text/html",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["thibaud",{"_index":1556,"title":{},"body":{"index.html":{}}}],["this.api_name",{"_index":858,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.api_type",{"_index":876,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.api_version",{"_index":860,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":897,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.appservice.cleardatabasetest",{"_index":184,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["this.client.emit",{"_index":622,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["this.client.emit('create",{"_index":62,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["this.commandbus.execute(new",{"_index":1427,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createdat",{"_index":1333,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":947,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":1336,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":993,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.healthcheckservice.check",{"_index":973,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":978,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":984,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.password",{"_index":1403,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.querybus.execute(new",{"_index":654,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":974,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":1335,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userrepository.findby",{"_index":565,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.userrepository.save(newuser",{"_index":573,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":1354,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":863,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["thresholdpercent",{"_index":994,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":560,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["timestamp",{"_index":832,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":1315,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["timestamps",{"_index":356,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["todo",{"_index":1593,"title":{"todo.html":{}},"body":{}}],["total_amount",{"_index":1069,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":1071,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":1037,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":1038,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":1165,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":1160,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":1162,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":225,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":350,"title":{},"body":{"entities/CardEntity.html":{}}}],["transform",{"_index":1089,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":1090,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":1397,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":23,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["transport.tcp",{"_index":29,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{}}}],["transports",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":1305,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":1308,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":1286,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":1287,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":1306,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":1059,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@joincolumn",{"_index":432,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":235,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":551,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["trying",{"_index":741,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":48,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":502,"title":{},"body":{"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":1114,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":1117,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":1118,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":1116,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":1594,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":226,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":352,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":323,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":963,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":192,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":1411,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":658,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":659,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":1237,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/useragent",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":865,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":870,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":868,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":1337,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/ProfileEntity.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"entities/UserEntity.html":{}}}],["undefined})@isemail",{"_index":255,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":308,"title":{},"body":{"entities/CardEntity.html":{}}}],["unique",{"_index":563,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["unknown",{"_index":823,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":1592,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":1096,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["update",{"_index":1274,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["updated_at",{"_index":1326,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":227,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn",{"_index":306,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatetimestamp",{"_index":1321,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["uppercase",{"_index":1023,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":1259,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":228,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":768,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":750,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":841,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":845,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":986,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usepipes",{"_index":176,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":171,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":604,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/NoUserTraceException.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.command",{"_index":516,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.command.ts",{"_index":506,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:3",{"_index":510,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["user.command.ts:4",{"_index":511,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["user.controller",{"_index":1409,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":512,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":585,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":587,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":588,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":592,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":611,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["user.event.ts",{"_index":597,"title":{},"body":{"classes/CreateUserEvent.html":{},"coverage.html":{}}}],["user.event.ts:3",{"_index":601,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:5",{"_index":607,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":605,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:7",{"_index":608,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:8",{"_index":606,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.profiles",{"_index":1228,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.response",{"_index":549,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":626,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["user.response.ts:11",{"_index":631,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":634,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":630,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":629,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:15",{"_index":633,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:4",{"_index":627,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":1351,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/domain/entities/user.entity",{"_index":794,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["user_not_found",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":857,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":866,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":1343,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":532,"title":{"entities/UserEntity.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity.subscriptions",{"_index":1311,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userid",{"_index":599,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["usermodule",{"_index":111,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":568,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":540,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["username.exception.ts",{"_index":786,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":787,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["usernotfoundexception",{"_index":1414,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["userrepository",{"_index":519,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["userroleenum",{"_index":632,"title":{},"body":{"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["userroleenum.public",{"_index":1400,"title":{},"body":{"entities/UserEntity.html":{}}}],["userroles",{"_index":577,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["users",{"_index":1370,"title":{},"body":{"entities/UserEntity.html":{}}}],["usersenderid",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":1350,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useruniqueemail",{"_index":564,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueemail.length",{"_index":567,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername",{"_index":569,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername.length",{"_index":571,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["util/config/database.configuration",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["util/exception/custom",{"_index":537,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["validate",{"_index":535,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["validate(newuser",{"_index":558,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["validated",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":1075,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validationerror",{"_index":1004,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":337,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["value",{"_index":602,"title":{},"body":{"classes/CreateUserEvent.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1041,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["variable",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1597,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1097,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":840,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verify",{"_index":562,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["version",{"_index":862,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"properties.html":{}}}],["void",{"_index":56,"title":{},"body":{"injectables/ApiLogService.html":{},"modules/AppModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["wallet",{"_index":1553,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":938,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":1564,"title":{},"body":{"index.html":{}}}],["website",{"_index":393,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":312,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":355,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":310,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":354,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":229,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":230,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":314,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":353,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":231,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":664,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":340,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":628,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["z\\d!@#$%^&*]{5,16",{"_index":1382,"title":{},"body":{"entities/UserEntity.html":{}}}],["z])(?=.*[!@#$%^&*])[a",{"_index":1380,"title":{},"body":{"entities/UserEntity.html":{}}}],["z])(?=.*[a",{"_index":1379,"title":{},"body":{"entities/UserEntity.html":{}}}],["za",{"_index":1381,"title":{},"body":{"entities/UserEntity.html":{}}}],["zip_code",{"_index":394,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\n\nApiLogService\n\nApiLogService\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP },\n      { name: 'API_MAIL', transport: Transport.TCP },\n    ]),\n  ],\n  controllers: [],\n  providers: [ApiLogService],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLog\n                        \n                    \n                \n            \n            \n                \ncreateLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(@Inject('API_LOG') private client: ClientProxy) {}\n  createLog(log: CreateLogDto): void {\n    this.client.emit('create-log', log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from \"./api/api-log/api-log.service\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 }},\n      { name: 'API_MAIL', transport: Transport.TCP },\n    ]),\n    // ________ Module ________\n    HealthCheckModule,\n    UserModule,\n    ApiLogModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\n\n@Module({\n  imports: [AppModule, TypeOrmModule.forFeature([])],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppTestE2eService {\n  async clearDatabaseTest(): Promise {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { MediaEntity } from './media.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from \"../enum/logging-type.enum\";\n\nexport class CreateLogDto {\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateEmailException } from '../../../../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      const newUser: UserEntity = new UserEntity({ ...command.createUserDto });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      // verify that email is unique\n      const userUniqueEmail = await this.userRepository.findBy({ email: command.createUserDto.email });\n      if (userUniqueEmail.length > 0) {\n        throw new DuplicateEmailException();\n      }\n\n      // verify that username is unique\n      const userUniqueUsername = await this.userRepository.findBy({ username: command.createUserDto.username });\n      if (userUniqueUsername.length > 0) {\n        throw new DuplicateUsernameException();\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        email: savedUser.email,\n        userRoles: savedUser.userRoles,\n      });\n    } catch (error) {\n      if (\n        error instanceof InvalidParameterEntityException ||\n        error instanceof DuplicateEmailException ||\n        error instanceof DuplicateUsernameException\n      ) {\n        throw error;\n      }\n      throw new Error('Error executing CreateUserCommand: ' + error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @Length(5, 20)\n  username: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                action\n                            \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: string, action: string, userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  constructor(\n    public readonly module: string = 'user',\n    public readonly action: string = 'create-user',\n    public readonly userId: string,\n    public readonly createUserDto: CreateUserDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from \"@nestjs/cqrs\";\nimport { CreateUserEvent } from \"../../event/create-user.event\";\nimport { Inject } from \"@nestjs/common\";\nimport { ClientProxy } from \"@nestjs/microservices\";\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(\n    @Inject('API_LOG_SERVICE') private readonly client: ClientProxy,\n  ) {\n  }\n  handle(event: CreateUserEvent): void {\n    this.client.emit({\n      cmd: 'add-log',\n    }, event)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../../entities-to-create/enum/user-role.enum';\nimport { UserEntity } from '../entities/user.entity';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly email: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateEmailException.html":{"url":"classes/DuplicateEmailException.html","title":"class - DuplicateEmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateEmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-email.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-email.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateEmailException extends HttpException {\n  constructor() {\n    super('Email already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localisation: string, error: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localisation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(public readonly localisation: string, public readonly error: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { logger } from '../../config/winston-logger.config';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  handle(event: ErrorCustomEvent): void {\n    const logger_console = new Logger(event.localisation);\n    logger_console.error(event.error);\n\n    logger.error(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto();\n      createLogDto.apiName = this.API_NAME;\n      createLogDto.apiVersion = this.API_VERSION;\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.apiType = this.API_TYPE;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck, HealthCheckResult } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from './profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from './profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CardEntity } from './card.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { MediaEntity } from './media.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE === 'true';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto();\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n    createLogDto.body = this.VERBOSE ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req.headers['user-agent'].split('(')[1].split(')')[0].split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE === 'true';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto();\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = this.VERBOSE ? req.headers : undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpException, Post } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { DuplicateEmailException } from '../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as process from 'process';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { InvalidParameterEntityException } from '../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/create')\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                userRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:61\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:71\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()@Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z\\d!@#$%^&*]{5,16}$/, {message: 'The password must contain at least one number, one special character and one letter'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:53\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Length(5, 20)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsEmail, Length, Matches } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../entities-to-create/profile.entity';\nimport * as bcrypt from 'bcrypt';\nimport { UserRoleEnum } from '../../../entities-to-create/enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsEmail()\n  @Column({ unique: true })\n  email?: string;\n\n  @Column()\n  @Length(5, 20)\n  @Column({ unique: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  @Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z\\d!@#$%^&*]{5,16}$/, {\n    message: 'The password must contain at least one number, one special character and one letter',\n  })\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  userRoles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  @BeforeInsert()\n  async setPassword(password: string): Promise {\n    this.password = await bcrypt.hash(password || this.password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity]), CqrsModule],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // Command handlers\n    CreateUserCommandHandler,\n    // Query handlers\n    // Event handlers\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api-log/api-log.service.ts\n            \n            injectable\n            ApiLogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/enum/logging-type.enum.ts\n            \n            class\n            LoggingTypeEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/card.entity.ts\n            \n            entity\n            CardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company-employee.entity.ts\n            \n            entity\n            CompanyEmployeeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company.entity.ts\n            \n            entity\n            CompanyEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/connected-card.entity.ts\n            \n            entity\n            ConnectedCardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/conversation.entity.ts\n            \n            entity\n            ConversationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/discount-code.entity.ts\n            \n            entity\n            DiscountCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/enum/role-group-membership.enum.ts\n            \n            class\n            RoleGroupMembershipEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group-membership.entity.ts\n            \n            entity\n            GroupMembershipEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group.entity.ts\n            \n            entity\n            GroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/invoices.entity.ts\n            \n            entity\n            InvoicesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/joined-conversation.entity.ts\n            \n            entity\n            JoinedConversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/media.entity.ts\n            \n            entity\n            MediaEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/occupation.entity.ts\n            \n            entity\n            OccupationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/plan.entity.ts\n            \n            entity\n            PlanEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/profile.entity.ts\n            \n            entity\n            ProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/social-network.entity.ts\n            \n            entity\n            SocialNetworkEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/strip-event.entity.ts\n            \n            entity\n            StripEventEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/subscription.entity.ts\n            \n            entity\n            SubscriptionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n            \n            class\n            HealthCheckQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/query/health-check.query.ts\n            \n            class\n            HealthCheckQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/custom-health-check.service.ts\n            \n            injectable\n            CustomHealthCheckService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/domain/response/health-check.response.ts\n            \n            class\n            HealthCheckResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/create-user.event.ts\n            \n            class\n            CreateUserEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/create-user.command-handler.ts\n            \n            class\n            CreateUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/create-user.event-handler.ts\n            \n            class\n            CreateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/domain/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/create-user.response.ts\n            \n            class\n            CreateUserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/error-logging.middleware.ts\n            \n            injectable\n            ErrorLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/middleware/request-logging.middleware.ts\n            \n            injectable\n            RequestLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/middleware/response-logging.middleware.ts\n            \n            injectable\n            ResponseLoggingMiddleware\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-email.exception.ts\n            \n            class\n            DuplicateEmailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiLogService\n\nApiLogService\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
